{
    "id": "C-55",
    "original_text": "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments. First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given. We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction. Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications. H.1.2 [Models and Principles]: User/Machine Systems - human factors. H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction. General Terms Design, Experimentation 1. INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices. Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere. New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations. This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together. Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS). It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation. In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction. A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS. Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail. Chapter 5 gives a final summary of our work. 1.1 What is Context Computing? According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs. Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments. Most definitions of context are done by enumerating examples or by choosing synonyms for context. The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects. In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time. Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity. An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others. These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types). For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address). According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval. Figure 1. Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging). In order to do this, there are a few layers between (see Figure 1). First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized. Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information. In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2). First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs. The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity. It does this by communicating work context, agenda and workspace information to the users. The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents. Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places. Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities. With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support. Group interaction includes all means that enable group members to communicate freely with all the other members. At this point, the question how context information can be used for supporting group interaction comes up. We believe that information about the current situation of a person provides a surplus value to existing group interaction systems. Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around. Figure 2. Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3]. We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity. Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity. This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4. When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself. We believe, that for the support of group interaction, the status of the group itself has also be taken into account. Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts. Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications. This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer. This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario. Entities express their functionality by the use of so-called attributes, which can be loaded into the entity. These attributes are complex pieces of software, which are implemented as Java classes. Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users. Each entity can contain a collection of such attributes, where an entity itself is an attribute. The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network. In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport. XML configuration files specify which initial set of entities should be loaded and which attributes these entities own. The communication between entities and attributes is based on context events. Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running. Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself. Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system. Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions. These rules are referenced by the entitys XML configuration. A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically. To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer. Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2. ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf. Figure 1). A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level. We do not only sense the current location of users, but also determine spatial proximities between them. Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum. Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation). These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server. We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand. All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction). This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored. The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities. Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3. Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application. Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core. Figure 3. Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user. It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups. Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services. The client-side part of the application is kept as simple as possible. Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture. Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute. The currently implemented user interface is split up in two parts, which are also represented by two attributes. The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on. As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 . We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use. As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger. For example, the contexts activity and identity are derived from the messenger network as it is described later. The Instant Messenger Encapsulation is also responsible for supporting group communication. Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status. The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer. The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example. Furthermore, this visualisation is used to show the artefacts for asynchronous communication. Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them. In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3. LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail. Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location. In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates. We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data. Instead, abstract symbols are more convenient for human interaction at application level. Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms. We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room). We introduce a fifth type of location, which we refer to as semantic. These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation. Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms. Figure 4. Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users. As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too. While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor. Such notifications are performed every time the sensor acquired new information. Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g. RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server. The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location. This requires certain tables for each sensor, which map physical positions to symbolic locations. One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms. If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined. We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification). We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1). The most accurate one is an RFID sensor, which is based on an active RFID-reader. As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations. We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest. Due to this high accuracy, RFID is used for locating users within rooms. The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location. A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive. The second one is an 802.11 WLAN sensor. Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure. The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms. A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each. Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor. Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e. Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations. Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers. This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range. Table 1. Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor. Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs. We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand. The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor. The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this. The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation. Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users. The range can be restricted to any level of the location containment hierarchy, for example to room granularity. A currently unresolved issue is the incomparable granularity of different proximity sensors. For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion. It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate. According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand. The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf. Figure 3). This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user). The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed. An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval. This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user. This is quite difficult, because different sensors may differ in accuracy and sample rate as well. The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes. These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined. If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event). If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with. However, this information is not very useful on its own if a certain user is associated with several locations. As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations. Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy). To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location). In a first step, each symbolic location is associated with its number of occurrences. A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations. Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy. For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3. In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences. A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences. If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located. Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location. If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations. The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes. These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected. If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event). If not, this change in proximity is written to the context repository with current timestamp. Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not. Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4. CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs. In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user. Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members. For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3). The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A). As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification. Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T). Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4. The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2. Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in. A critical issue for the user acceptance of such a system is the usability of its interface. We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now. Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms. The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2). The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases. Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 . The implementation of this messenger is carried out as a project at Sourceforge4 . SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 . It also supports connections to multiple accounts at the same time. Furthermore, full support for SMS-notification (where provided from the used protocol) is given. SIM is based on a plug-in concept. All protocols as well as parts of the user-interface are implemented as plug-ins. Its architecture is also used to extend the applications abilities to communicate with external applications. For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection. This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages. The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network). The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to. This provides location awareness without taking too much space or requesting the users full attention. A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too. Local time as a very important context dimension can be easily retrieved from the real time clock of the users system. Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system. Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list. Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself. Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor. The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.). Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services. Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group. Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on. Therefore, some additional information like a list of members for each group is needed. These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically. The context of a group is secondary context and is aggregated from the available contexts of the group members. Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated. With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities. A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively. As already described in chapter 2, we use two different forms of visualisation. The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment). Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept. As we use a hierarchical location model, we are able to determine the most accurate common location of two users. In the contact list, the current symbolic location one level below the previously calculated common location is then displayed. If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in. For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A. If both people reside on the same floor or even in the same room, the room would be taken. Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name. On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS. Figure 5. GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus). The second possible form of visualisation is a graphical one. We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf. Figure 6). Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf. Figure 4). Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided. In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person. The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name. Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4). Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside). The location of the client, on which the map is displayed, is visualized by a green circle. Down to the right, two virtual post-its can be seen. Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users. As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time. When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups. As groups can have different purposes, we distinguish two types of groups. So-called static groups are groups, which are built up manually by people joining and leaving them. Static groups can be further divided into two subtypes. In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group. Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time. Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily. In contrast to that, we also support the creation of dynamic groups. They are formed among persons, who are at the same location at the same time. The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor. It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered. For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not. Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department. As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet. This has also motivated the decision to build GISS upon an instant messaging system. In todays messenger systems, peer-to-peer-communication is extensively supported. However, when it comes to communication in groups, the support is rather poor most of the time. Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients. Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group). Our approach does not have the mentioned restrictions. We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group. Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user. These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time. Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea. The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized. In out work, we aim at the combination of asynchronous communication with location awareness. For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations. These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only. Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore. Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread. Virtual post-its are displayed automatically, whenever a user (available) passes by the first time. Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown. All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user. Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system. To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context. These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3. The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes). The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule. As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled. Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases. Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups. These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs. A reminder will only pop up the first time the actual context meets the defined criterion. On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group. The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work. In a first approach, we use the location- and activity-context of the group members to determine a meeting. Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place. During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants. When members are joining or leaving the meeting, this is automatically added as a note to the list of comments. Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work. If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5. CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information. First, we introduced the notions of context and context computing and motivated their value for supporting group interaction. An architecture is presented to support context-aware group interaction in mobile, distributed environments. It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation. We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself. Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation. To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms. A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6. REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules. In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003). Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace. IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research. Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A. Providing Architectural Support for Building Context-Aware Applications. Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva. Location Modeling: State of the Art and Challenges. In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams. In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000). IEEE Computer Society Press, 272-277. [7] Ferscha, A. Coordination in Pervasive Computing Environments. In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003). IEEE Computer Society Press, 3-9. [8] Leonhard, U. Supporting Location Awareness in Open Distributed Systems. Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant. Gaffney, V., Van Leusen, M., Exxon, S. (eds.) Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts. IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N. A System Architecture for Context-Aware Mobile Computing. Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S. Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service. In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004). IEEE Computer Society Press, 287-296. [13] Pascoe, J. The Stick-e Note Architecture: Extending the Interface Beyond the User. Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders. Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97",
    "original_translation": "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil. Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la interacción en grupo. A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la interacción en grupo. Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos. H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica. Términos generales de diseño, Experimentación 1. INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica. Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar. Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones. Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real. Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS). Apoya la interacción grupal en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás. En los siguientes subcapítulos, daremos una breve descripción sobre la computación consciente del contexto y motivaremos sus beneficios para apoyar la interacción en grupo. Se presenta un marco de software para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS. El capítulo 2 presenta la arquitectura de GISS, y los capítulos 3 y 4 discuten los conceptos de localización y de interacción en grupo de GISS con más detalle. El capítulo 5 ofrece un resumen final de nuestro trabajo. 1.1 ¿Qué es la Computación Contextual? Según el Diccionario en línea de Merriam-Webster, el contexto se define como las condiciones interrelacionadas en las que algo existe o ocurre. Dado que esta definición es muy general, se han realizado muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos. La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para contexto. El término consciente del contexto fue introducido por primera vez en [10], donde el contexto se refiere a la ubicación, identidades de personas y objetos cercanos, y cambios en esos objetos. En [2], el contexto también se define mediante una enumeración de ejemplos, como la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación del usuario, el entorno, la identidad y el tiempo. Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información que se pueda utilizar para caracterizar la situación de una entidad. Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluyendo al usuario y a las propias aplicaciones. [4] identifica cuatro tipos principales de información de contexto (a veces referidos como dimensiones de contexto), que son - con respecto a la caracterización de la situación de una entidad - más importantes que otros. Estos son la ubicación, la identidad, el tiempo y la actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundarios). Por ejemplo, si conocemos la identidad de una persona, podemos derivar fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico). Según esta definición, [4] define un sistema como consciente del contexto si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación. Figura 1. Las capas de un sistema consciente del contexto. La computación del contexto se basa en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y utilizar el contexto obtenido (ejecución automática, presentación, etiquetado). Para hacer esto, hay algunas capas intermedias (ver Figura 1). Primero, la información de contexto de bajo nivel obtenida debe ser transformada, agregada e interpretada (transformación de contexto) y representada en un modelo abstracto del mundo de contexto (representación de contexto), ya sea centralizado o descentralizado. Finalmente, la información de contexto almacenada se utiliza para activar ciertos eventos de contexto (activación de contexto). Después de estas definiciones abstractas y formales sobre qué es el contexto y la computación de contexto, nos centraremos ahora en el objetivo principal de este trabajo, es decir, cómo la interacción de los miembros de un grupo móvil puede ser apoyada mediante el uso de información de contexto. En [6] hemos identificado que los sistemas organizativos son cruciales para apoyar a los grupos móviles (ver Figura 2). Primero, tiene que haber un Sistema de Gestión de Información y Conocimiento, que sea capaz de apoyar a un equipo con sus necesidades de procesamiento de información y recopilación de conocimiento. La siguiente parte es el Sistema de Conciencia, que se dedica a la percepción de los efectos de la actividad en equipo. Esto se logra comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios. Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea de forma sincrónica o asincrónica, y para el acceso compartido a artefactos, como documentos. Los sistemas de movilidad despliegan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como la captura y entrega de información de conciencia desde y hacia cualquier lugar. Finalmente, pero no menos importante, el sistema de innovación organizacional integra aspectos del equipo en sí mismo, como roles, liderazgo e instalaciones compartidas. Con respecto a estos cinco aspectos de apoyo al equipo, nos enfocamos en la interacción y cubrimos parcialmente el apoyo a la movilidad y la conciencia. La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros. En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para apoyar la interacción grupal. Creemos que la información sobre la situación actual de una persona aporta un valor añadido a los sistemas de interacción grupal existentes. La información de contexto facilita la interacción grupal al permitir que cada miembro esté al tanto del estado de disponibilidad o la ubicación actual de los demás miembros del grupo, lo que a su vez hace posible formar grupos de manera dinámica, colocar notas virtuales en el mundo real o determinar qué personas están cerca. Figura 2. Apoyo para Grupos Móviles [6]. La mayoría de las aplicaciones de hoy en día que son conscientes del contexto utilizan únicamente la ubicación y el tiempo, y la ubicación se considera un tipo crucial de información de contexto [3]. También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo se centra en la utilización de la información de ubicación y la información sobre los usuarios en proximidad espacial. Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizada, no es suficiente para respaldar la interacción grupal, por lo cual también aprovechamos los otros tres tipos principales, a saber, identidad, tiempo y actividad. Esto proporciona una descripción completa de la situación actual de un usuario y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen detalladamente en el capítulo 4.4. Cuando observamos los tipos de información de contexto mencionados anteriormente, podemos ver que todos ellos están centrados en el usuario individual, teniendo en cuenta únicamente el contexto del propio usuario. Creemos que, para apoyar la interacción grupal, también se debe tener en cuenta el estatus del propio grupo. Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el contexto de grupo, que abarca más que la suma de los contextos individuales de los miembros. El contexto de grupo incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un grupo en particular se reúne en este momento. Middleware de contexto 1.3 El Sistema de Soporte de Interacción de Grupo (GISS) utiliza el marco de software presentado en [1], que sirve como middleware para desarrollar aplicaciones sensibles al contexto. Este llamado Marco de Contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes. Una característica principal del marco es la abstracción de la recuperación de información de contexto a través de varios sensores y su entrega a un nivel donde no se percibe ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes mecanismos de recuperación de contexto; la recuperación de información está oculta para el desarrollador de aplicaciones. Esto se logra mediante entidades llamadas, que describen objetos, por ejemplo, un usuario humano, que son importantes para un determinado escenario de contexto. Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, los cuales pueden ser cargados en la entidad. Estos atributos son piezas complejas de software, que se implementan como clases de Java. Los atributos típicos son encapsulaciones de sensores, pero también pueden ser utilizados para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre cambios de ubicación de los usuarios. Cada entidad puede contener una colección de tales atributos, donde una entidad en sí misma es un atributo. El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos desde el almacenamiento local o a través de la red. Para cargar e implementar nuevos atributos, una entidad debe hacer referencia a un cargador de clases y una capa de transporte y búsqueda, que gestiona el mecanismo de búsqueda para descubrir otras entidades y el transporte. Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atributos poseen estas entidades. La comunicación entre entidades y atributos se basa en eventos de contexto. Cada atributo es capaz de desencadenar eventos, los cuales están dirigidos a otros atributos y entidades respectivamente, independientemente de en qué computadora física estén ejecutándose. Entre otras cosas, un evento contiene el nombre del evento y una lista de parámetros que proporcionan información sobre el propio evento. Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (Evento-Condición-Acción) para definir el comportamiento del sistema de contexto. Por lo tanto, cada entidad tiene un intérprete de reglas, que captura eventos desencadenados, verifica las condiciones asociadas a ellos y provoca ciertas acciones. Estas reglas son referenciadas por la configuración XML de la entidad. Una regla en sí misma incluso puede desencadenar la inserción de nuevas reglas o la descarga de reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto. En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar los datos del sensor de bajo nivel de las aplicaciones de alto nivel y oculta los detalles de comunicación externa al desarrollador de la aplicación. Además, es capaz de adaptar su comportamiento dinámicamente cargando atributos, entidades o reglas ECA en tiempo de ejecución. VISIÓN GENERAL DE LA ARQUITECTURA Dado que GISS utiliza el Marco de Contexto descrito en el capítulo 1.3 como middleware, cada usuario está representado por una entidad, al igual que el servidor central, que es responsable de la transformación de contexto, la representación de contexto y la activación de contexto (cf. Figura 1). Una parte principal de nuestro trabajo se centra en la adquisición automatizada de información de posición y su provisión independiente de sensores a nivel de aplicación. No solo percibimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos. Al desarrollar la arquitectura, nos enfocamos en mantener el cliente lo más simple posible y reducir al mínimo la comunicación entre el cliente y el servidor. Cada cliente puede tener varios sensores de ubicación y/o proximidad adjuntos, los cuales están encapsulados por los atributos respectivos del Marco de Contexto (Encapsulación de Sensores). Estos atributos son responsables de integrar implementaciones de sensores nativos en el Marco de Contexto y enviar información de posición dependiente del sensor al servidor. Consideramos muy importante apoyar diferentes tipos de sensores al mismo tiempo, con el fin de mejorar la precisión de la ubicación por un lado, y proporcionar un entorno de detección de ubicación ubicuo con transiciones fluidas entre diferentes técnicas de detección de ubicación por otro lado. Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstraen la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor). Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas a ubicaciones estandarizadas. La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de Fusión de Sensores, uno para ubicaciones simbólicas y otro para proximidades espaciales. Su trabajo consiste en fusionar la información de ubicación y proximidad de los clientes, respectivamente, la cual se describe detalladamente en el Capítulo 3.3. Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de Fusión de Sensores notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación. Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede ser fácilmente ampliado con sensores adicionales, simplemente implementando los (generalmente dos) atributos para encapsular los sensores (algunos sensores pueden no necesitar una parte del lado del cliente), abstrayendo las posiciones físicas y observando la interfaz con el Núcleo de GISS. Figura 3. La arquitectura del Sistema de Soporte de Interacción de Grupo (GISS). El atributo central del núcleo de GISS es el coordinador principal de la aplicación tal como se muestra al usuario. No solo sirve como una interfaz al subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad). Cada vez que se detecta un cambio en el contexto de uno o más usuarios, el núcleo de GISS evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y en los demás miembros de estos grupos. Cuando sea necesario, se lanzan eventos a los clientes afectados para activar actividades contextualmente conscientes, como cambiar la presentación de la información de conciencia o la ejecución de servicios. La parte del cliente de la aplicación se mantiene lo más simple posible. Además, el diseño modular no solo fue un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario. Por lo tanto, la interfaz de usuario completa puede intercambiarse fácilmente si se tienen en cuenta y se comprenden todos los eventos definidos por el nuevo atributo de la interfaz. La interfaz de usuario actualmente implementada está dividida en dos partes, las cuales también están representadas por dos atributos. El atributo central en el lado del cliente es la llamada Encapsulación de Mensajería Instantánea, que por un lado interactúa con el servidor a través de eventos y por otro lado sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario. Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente, el Simple Instant Messenger (SIM)3 compatible con ICQ2. Hemos elegido un mensajero instantáneo como interfaz porque proporciona una interfaz conocida para la mayoría de los usuarios y facilita una integración fluida del soporte de interacción grupal, aumentando así la aceptación y facilidad de uso. Dado que la funcionalidad básica del mensajero instantáneo, que es servir como cliente en una red de mensajería instantánea, sigue completamente operativa, nuestra aplicación puede utilizar las funciones ya proporcionadas por el mensajero. Por ejemplo, los contextos de actividad e identidad se derivan de la red de mensajería tal como se describe más adelante. La Encapsulación de Mensajería Instantánea también es responsable de admitir la comunicación en grupo. A través de la interfaz del mensajero, proporciona medios de comunicación síncrona y asíncrona, así como un sistema de recordatorio contextual y herramientas para gestionar grupos y el propio estado de disponibilidad. La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, la cual está implementada en el Visor de atributos. La implementación actual proporciona un mapa bidimensional del campus, pero puede ser fácilmente reemplazada por otras visualizaciones, como un modelo VRML tridimensional. Además, esta visualización se utiliza para mostrar los artefactos de la comunicación asincrónica. Basado en una vista del plano de la zona geográfica en la que se encuentra actualmente el usuario, ofrece una rápida visión general de las personas cercanas, su estado y proporciona medios para interactuar con ellas. En los siguientes capítulos 3 y 4, describimos con más detalle el backend de detección de ubicación y el frontend de la aplicación para apoyar la interacción grupal. SENSADO DE UBICACIÓN En el siguiente capítulo, presentaremos un modelo de ubicación que se utiliza para representar ubicaciones; posteriormente, describiremos la integración de sensores de ubicación y proximidad en más detalle. Finalmente, echaremos un vistazo más de cerca a la fusión de la información de ubicación y proximidad, adquirida por varios sensores. Modelo de Ubicación Un modelo de ubicación (es decir, una representación de contexto para la información de contexto de ubicación) es necesario para representar las ubicaciones de los usuarios, con el fin de poder facilitar consultas relacionadas con la ubicación, como por ejemplo, dada una ubicación, devolver una lista de todos los objetos allí o dado un objeto, devolver su ubicación actual. En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representa la ubicación como coordenadas. Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como Sala P111 o Edificio de Física, porque no necesitamos datos de ubicación geométrica. En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación. Además, utilizamos una jerarquía de contención de ubicaciones simbólicas similar a la introducida en [11], que consta de regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos a su vez contienen habitaciones. También distinguimos cuatro tipos, a saber, región (por ejemplo, un campus completo), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, un piso específico en un edificio) y área (por ejemplo, una habitación específica). Introducimos un quinto tipo de ubicación, al que nos referimos como semántico. Estas llamadas ubicaciones semánticas pueden aparecer en cualquier nivel de la jerarquía y pueden estar anidadas, pero no necesariamente tienen una representación geográfica. Ejemplos de tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones. Figura 4. Jerarquía de Contención de Ubicaciones Simbólicas La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto. 3.2 Sensores Nuestra arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación, y sensores de proximidad, que detectan proximidades espaciales entre usuarios. Como se describe arriba, cada sensor tiene una implementación del lado del servidor y, en la mayoría de los casos, también una implementación correspondiente del lado del cliente. Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular. Tales notificaciones se realizan cada vez que el sensor adquiere nueva información. Por lo tanto, los atributos de abstracción del sensor son responsables de detectar cuándo un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si ha sido desconectado por el usuario) o cuando la posición o proximidad no se pueden determinar más (por ejemplo, si). El lector de RFID no puede detectar etiquetas y notificará a la fusión de sensores correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor. Los atributos de abstracción de sensores de ubicación correspondientes recopilan estas posiciones físicas proporcionadas por los sensores de todos los usuarios, y realizan una búsqueda en el repositorio para obtener la ubicación simbólica asociada. Esto requiere ciertas tablas para cada sensor, las cuales asignan posiciones físicas a ubicaciones simbólicas. Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones. Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular. Hemos implementado prototípicamente tres tipos de sensores de ubicación, basados en WLAN (IEEE 802.11), Bluetooth y RFID (Identificación por Radiofrecuencia). Hemos elegido estos tres sensores completamente diferentes debido a sus diferencias en cuanto a precisión, cobertura y esfuerzo administrativo, con el fin de evaluar la flexibilidad de nuestro sistema (ver Tabla 1). El más preciso es un sensor de RFID, que se basa en un lector de RFID activo. Tan pronto como el lector se conecta al cliente, escanea las etiquetas RFID activas en rango y transmite sus números de serie al servidor, donde se asignan a ubicaciones simbólicas. También tenemos en cuenta el RSSI (Radio Signal Strength Information), que proporciona una precisión de posición de unos pocos centímetros y nos permite determinar cuál etiqueta RFID está más cercana. Debido a esta alta precisión, el RFID se utiliza para localizar usuarios dentro de habitaciones. La administración es bastante simple; una vez que se coloca una nueva etiqueta RFID, su número de serie simplemente debe asignarse a una única ubicación simbólica. Una desventaja es la baja disponibilidad, que se puede atribuir al hecho de que los lectores de RFID siguen siendo muy costosos. El segundo es un sensor WLAN 802.11. Por lo tanto, integramos un sistema de posicionamiento WLAN comercial puramente basado en software para rastrear clientes en la infraestructura WLAN del campus universitario. La precisión de la posición alcanzada se encuentra en el rango de unos pocos metros y, por lo tanto, es adecuada para la detección de ubicación a nivel de habitaciones. Una gran desventaja es que un mapa de toda el área debe ser calibrado con puntos de medición a una distancia de 5 metros cada uno. Debido a que la mayoría de las computadoras móviles están equipadas con tecnología WLAN y el sistema de posicionamiento es una solución solo de software, casi todos pueden usar este tipo de sensor. Finalmente, hemos implementado un sensor de Bluetooth, que detecta etiquetas de Bluetooth (es decir, Módulos Bluetooth con posición conocida) en rango y los transmite al servidor que los mapea a ubicaciones simbólicas. Debido al hecho de que no utilizamos información de la fuerza de la señal en la implementación actual, la precisión es superior a 10 metros y, por lo tanto, una única dirección MAC de Bluetooth está asociada con varios lugares simbólicos, de acuerdo a las ubicaciones físicas que cubre dicho módulo de Bluetooth. Esto conlleva la desventaja de que el alcance de cada etiqueta Bluetooth debe ser determinado y mapeado a ubicaciones simbólicas dentro de este alcance. Tabla 1. Comparación de sensores implementados Precisión del sensor Cobertura Administración RFID < 10 cm pobre fácil WLAN 1-4 m muy buena muy lenta Bluetooth ~ 10 m buena lenta 3.2.2 Sensores de proximidad Cualquier sensor capaz de detectar si dos usuarios están en proximidad espacial se denomina sensor de proximidad. Similar a los sensores de ubicación, los atributos de abstracción del sensor de proximidad recopilan información de proximidad física de todos los usuarios y los transforman en asignaciones de identificaciones de usuario. Hemos implementado dos tipos de sensores de proximidad, uno basado en Bluetooth y otro en ubicaciones simbólicas fusionadas (ver capítulo 3.3.1). La implementación de Bluetooth va de la mano con la implementación del sensor de ubicación basado en Bluetooth. Las direcciones MAC de Bluetooth ya determinadas en el rango de un cliente específico se están comparando con las de todos los demás clientes, y cada vez que el atributo Abstracción del Sensor de Bluetooth detecta congruencia, notifica al sensor de fusión de proximidad al respecto. El segundo sensor se basa en ubicaciones simbólicas procesadas por la Fusión de Sensores de Ubicación, por lo tanto no necesita una implementación del lado del cliente. Cada vez que la ubicación simbólica fusionada de un usuario específico cambia, verifica si se encuentra en la misma ubicación simbólica que otro usuario y notifica nuevamente a la fusión del sensor de proximidad sobre la cercanía entre estos dos usuarios. El rango puede ser restringido a cualquier nivel de la jerarquía de contención de ubicación, por ejemplo, a nivel de habitación. Un problema actualmente sin resolver es la granularidad incomparable de diferentes sensores de proximidad. Por ejemplo, las ubicaciones simbólicas en el mismo nivel en la jerarquía de ubicaciones generalmente no cubren la misma área geográfica. 3.3 El núcleo de fusión de sensores del subsistema de detección de ubicación es la fusión de sensores. Combina datos de varios sensores, al mismo tiempo que lidia con diferencias en cuanto a precisión, cobertura y frecuencia de muestreo. Según los dos tipos de sensores descritos en el capítulo 3.2, distinguimos entre la fusión de sensores de ubicación por un lado, y la fusión de sensores de proximidad por otro lado. La fusión de ubicaciones simbólicas, así como la fusión de proximidades espaciales, opera en información estandarizada (cf. Figura 3). Esto tiene la ventaja de que sensores adicionales de posición y proximidad pueden ser añadidos fácilmente o los algoritmos de fusión pueden ser reemplazados por otros más sofisticados. La fusión se realiza para cada usuario por separado y solo tiene en cuenta las mediciones en un punto en el tiempo (es decir, no se utiliza información histórica para determinar la ubicación actual de un usuario específico). El algoritmo recopila todos los eventos generados por los atributos de Abstracción del Sensor, realiza la fusión y activa el atributo del Núcleo GISS si la ubicación simbólica de un usuario específico o la proximidad espacial entre usuarios cambia. Una característica importante es el almacenamiento persistente del historial de ubicación y proximidad en una base de datos para permitir su recuperación en el futuro. Esto permite a las aplicaciones visualizar el movimiento de los usuarios, por ejemplo. 3.3.1 Fusión de Sensores de Ubicación El objetivo de la fusión de información de ubicación es mejorar la precisión y exactitud al combinar el conjunto de ubicaciones simbólicas proporcionadas por varios sensores de ubicación, con el fin de reducir el número de estas ubicaciones al mínimo, idealmente a una única ubicación simbólica por usuario. Esto es bastante difícil, ya que diferentes sensores pueden variar en precisión y frecuencia de muestreo también. El atributo de fusión de sensor de ubicación se activa por eventos, que son lanzados por los atributos de abstracción de sensor de ubicación. Estos eventos contienen información sobre la identidad del usuario en cuestión, su ubicación actual y el sensor mediante el cual se ha determinado la ubicación. Si el atributo Location Sensor Fusion recibe dicho evento, verifica si la cantidad de ubicaciones simbólicas del usuario en cuestión ha cambiado (en comparación con el último evento). Si este es el caso, notifica al atributo principal del GISS sobre todas las ubicaciones simbólicas con las que este usuario está actualmente asociado. Sin embargo, esta información no es muy útil por sí sola si un usuario en particular está asociado con varias ubicaciones. Como se describe en el capítulo 3.2.1, un sensor de ubicación único puede proporcionar múltiples ubicaciones simbólicas. Además, un cierto usuario puede tener varios sensores de ubicación, los cuales proporcionan ubicaciones simbólicas que difieren en precisión (es decir, diferentes niveles en la jerarquía de contención de ubicación). Para hacer frente a este desafío, implementamos un algoritmo de fusión con el fin de reducir el número de ubicaciones simbólicas al mínimo (idealmente a una sola ubicación). En un primer paso, cada ubicación simbólica se asocia con su número de ocurrencias. Una ubicación simbólica puede ocurrir varias veces si es referida por más de un sensor o si un solo sensor detecta múltiples etiquetas, las cuales a su vez hacen referencia a varias ubicaciones. Además, este número se suma al número de ocurrencias previamente calculado de cada ubicación simbólica, que es una ubicación secundaria de la considerada en la jerarquía de contención de ubicaciones. Por ejemplo, si - en la Figura 4 - room2 ocurre dos veces y desk ocurre una sola vez, el valor 2 de room2 se suma al valor 1 de desk, por lo que desk finalmente obtiene el valor 3. En un paso final, solo quedan aquellas ubicaciones simbólicas que están asignadas con el mayor número de ocurrencias. Una reducción adicional se puede lograr asignando prioridades a los sensores (basadas en precisión y confianza) y acumulando estas prioridades para cada ubicación simbólica en lugar de simplemente contar el número de ocurrencias. Si las ubicaciones fusionadas restantes han cambiado (es decir, si difieren de las ubicaciones fusionadas con las que el usuario considerado está actualmente asociado), se les proporciona la marca de tiempo actual, se escribe en la base de datos y se notifica al atributo GISS sobre dónde se encuentra probablemente el usuario. Finalmente, se calcula la ubicación más precisa y común en la jerarquía de ubicaciones (es decir, el límite superior mínimo de estas ubicaciones simbólicas) para obtener una única ubicación simbólica. Si cambia, el atributo principal de GISS se activa nuevamente. 3.3.2 Fusión de Sensores de Proximidad La fusión de sensores de proximidad es mucho más simple que la fusión de ubicaciones simbólicas. El atributo de fusión del sensor de proximidad correspondiente se activa por eventos, que son lanzados por los atributos de abstracción del sensor de proximidad. Estos eventos especiales contienen información sobre la identidad de los dos usuarios involucrados, si actualmente se encuentran en proximidad espacial o si la proximidad ya no persiste, y mediante qué sensor de proximidad se ha detectado esto. Si el atributo de fusión de sensores es notificado por un cierto atributo de abstracción de sensor de proximidad sobre una proximidad espacial existente, primero verifica si estos dos usuarios ya se sabe que están en proximidad (detectado ya sea por otro usuario o por otro sensor de proximidad del usuario, que causó el evento). Si no, este cambio en la proximidad se escribe en el repositorio de contexto con la marca de tiempo actual. De manera similar, si el atributo Fusión de Proximidad es notificado sobre una proximidad finalizada, verifica si los usuarios aún se sabe que están en proximidad, y escribe este cambio en el repositorio si no lo están. Finalmente, si la proximidad espacial entre los dos usuarios realmente cambia, se lanza un evento para notificar al atributo central de GISS sobre esto. 4. INTERACCIÓN CONTEXTUALMENTE SENSIBLE 4.1 Resumen En la mayoría de los sistemas actuales que admiten la interacción en grupos, los medios proporcionados carecen de conciencia del contexto actual del usuario, por lo tanto, no pueden adaptarse a sus necesidades. En nuestro enfoque, utilizamos información de contexto para mejorar la interacción y ofrecer servicios adicionales, lo cual brinda nuevas posibilidades al usuario. Además, creemos que la interacción en grupos también debe tener en cuenta el contexto actual del grupo en sí y no solo el contexto de los miembros individuales del grupo. Por esta razón, también recuperamos información sobre el contexto actual del grupo, derivada de los contextos de los miembros del grupo junto con algún tipo de meta-información (ver capítulo 4.3). Las fuentes de contexto utilizadas para nuestra aplicación corresponden con los cuatro tipos de contexto principales dados en el capítulo 1.1 - identidad (I), ubicación (L), tiempo (T) y actividad (A). Como se mencionó anteriormente, también tenemos en cuenta el contexto del grupo con el que el usuario está interactuando, de modo que podríamos agregar un quinto tipo de información de contexto: la conciencia del grupo (G) - a la clasificación. Usando esta información de contexto, podemos activar actividades sensibles al contexto en las tres categorías descritas en el capítulo 1.1: presentación de información (P), ejecución automática de servicios (A) y etiquetado de contexto a la información para su posterior recuperación (T). La Tabla 2 proporciona una visión general de las actividades que ya hemos implementado; están descritas de manera exhaustiva en el capítulo 4.4. La tabla también muestra qué tipos de información de contexto se utilizan para cada actividad y la categoría en la que podría clasificarse la actividad. 93 Tabla 2. La clasificación de las actividades implementadas con conciencia del contexto es la siguiente: Visualización de la ubicación, Soporte para la construcción de grupos, Soporte para la comunicación sincrónica, Soporte para la comunicación asincrónica, Gestión de disponibilidad, Soporte para la gestión de tareas y Soporte para reuniones. Las razones para implementar estas características son aprovechar los cuatro tipos de información de contexto para apoyar la interacción grupal mediante el uso de un conocimiento integral sobre la situación en la que se encuentra un usuario individual o todo un grupo. Un problema crítico para la aceptación del usuario de un sistema así es la usabilidad de su interfaz. Hemos evaluado varias formas de presentar medios de interacción conscientes del contexto al usuario, hasta llegar a la solución que utilizamos actualmente. Aunque creemos que la interfaz de usuario que se ha implementado actualmente ofrece el mejor equilibrio entre la integración perfecta de funciones y la facilidad de uso, no habría problema en ampliar la arquitectura con otras interfaces de usuario, incluso en diferentes plataformas. La solución elegida se basa en un mensajero instantáneo existente, que ofrece varias posibilidades para integrar nuestro sistema (ver capítulo 4.2). La mayor ventaja de este enfoque es que el usuario se enfrenta a una interfaz gráfica de usuario con la que ya está familiarizado en la mayoría de los casos. Además, nuestro sistema utiliza una cuenta de mensajería instantánea como identificador, de modo que el usuario no tenga que registrarse en ningún otro lugar (por ejemplo, el usuario puede utilizar su cuenta de ICQ2 ya existente). 4.2 Integración de Mensajería Instantánea Nuestro sistema se basa en un mensajero instantáneo existente, el llamado Simple Instant Messenger (SIM). La implementación de este mensajero se lleva a cabo como un proyecto en Sourceforge4. SIM admite múltiples protocolos de mensajería como AIM5, ICQ2 y MSN6. También admite conexiones a múltiples cuentas al mismo tiempo. Además, se brinda soporte completo para la notificación por SMS (cuando esté disponible en el protocolo utilizado). SIM se basa en un concepto de plug-in. Todos los protocolos, así como partes de la interfaz de usuario, están implementados como complementos. Su arquitectura también se utiliza para ampliar las capacidades de las aplicaciones para comunicarse con aplicaciones externas. Con este propósito, se proporciona un complemento de control remoto, mediante el cual se puede controlar el SIM desde aplicaciones externas a través de una conexión de socket. Esta interfaz de control remoto es ampliamente utilizada por GISS para recuperar la lista de contactos, establecer el estado de disponibilidad de los usuarios o enviar mensajes. La funcionalidad del complemento se amplió de varias maneras, por ejemplo, para aceptar mensajes para una cuenta (como si hubieran sido enviados a través de la red de mensajería). El mensajero, más exactamente la lista de contactos (es decir, una lista de perfiles de todas las personas registradas en el mensajero instantáneo, que se visualiza enumerando sus nombres como se puede ver en la Figura 5), también se utiliza para mostrar las ubicaciones de otros miembros de los grupos a los que pertenece un usuario. Esto proporciona conciencia de ubicación sin ocupar demasiado espacio o requerir la atención completa de los usuarios. Una descripción más detallada de estas características se proporciona en el capítulo 4.4. 4.3 Fuentes de Información de Contexto Mientras que el contexto de ubicación de un usuario se obtiene de nuestro subsistema de detección de ubicación descrito en el capítulo 3, también consideramos otros tipos de contexto además de la ubicación relevantes para el apoyo de la interacción grupal. El tiempo local, como dimensión de contexto muy importante, se puede recuperar fácilmente del reloj en tiempo real del sistema del usuario. Además de la ubicación y el tiempo, también utilizamos la información de contexto de la actividad e identidad de los usuarios, donde explotamos la funcionalidad proporcionada por el sistema de mensajería instantánea subyacente. La identidad (o más exactamente, la asignación de IDs a nombres, así como información adicional del perfil de los usuarios) se puede extraer de los contenidos de la lista de contactos de los usuarios. La información sobre la actividad o un usuario en particular solo está disponible en un área muy restringida, específicamente la actividad en la computadora misma. Otras actividades como hacer una llamada telefónica o algo similar, no pueden ser reconocidas con la implementación actual del sensor de actividad. La única información de contexto utilizada es el estado de disponibilidad de los mensajeros instantáneos, por lo tanto, solo proporciona una clasificación muy general de la actividad de los usuarios (en línea, fuera de línea, ausente, ocupado, etc.). Aunque esto pueda no parecer mucha información, seguramente es relevante y puede ser utilizada para mejorar o incluso habilitar varios servicios. Habiendo recopilado la información de contexto de todos los usuarios disponibles, ahora es posible destilar cierta información sobre el contexto de un grupo específico. La información sobre el contexto de un grupo incluye cuántos miembros tiene actualmente el grupo, si el grupo se reúne en este momento, qué miembros participan en una reunión, cuántos miembros han leído cuáles de las publicaciones disponibles de otros miembros del equipo, y así sucesivamente. Por lo tanto, se necesita información adicional como una lista de miembros para cada grupo. Estas listas pueden ser ensambladas manualmente (por usuarios que se unen y salen de grupos) o recuperadas automáticamente. El contexto de un grupo es un contexto secundario y se obtiene de los contextos disponibles de los miembros del grupo. Cada vez que cambia el contexto de un miembro del grupo, el contexto de todo el grupo cambia y debe ser recalculado. Con conocimiento sobre el contexto del usuario y el contexto de los grupos a los que pertenece, podemos ofrecer varios servicios sensibles al contexto al usuario, los cuales mejoran sus habilidades de interacción. Una breve descripción de estos servicios se da en el capítulo 4.4. 4.4 Soporte de Interacción en Grupo 4.4.1 Visualización de Información de Ubicación Una característica importante es la visualización de información de ubicación, permitiendo a los usuarios estar al tanto de la ubicación de otros usuarios y miembros de los grupos a los que se unió, respectivamente. Como ya se describió en el capítulo 2, utilizamos dos formas diferentes de visualización. Quizás el más importante sea mostrar la información de ubicación en la lista de contactos del mensajero instantáneo, justo al lado del nombre, de manera que siempre sea visible sin llamar la atención de los usuarios (en comparación con una vista bidimensional, por ejemplo, que requiere una ventana propia para mostrar un mapa del entorno). Debido al espacio limitado en la lista de contactos, ha sido necesario implementar algún tipo de concepto de nivel de detalle. Al utilizar un modelo de ubicación jerárquico, podemos determinar la ubicación común más precisa de dos usuarios. En la lista de contactos, se muestra la ubicación simbólica actual un nivel por debajo de la ubicación común previamente calculada. Si, por ejemplo, el usuario A actualmente reside en la habitación P121 en el primer piso de un edificio y el usuario B, que debe aparecer en la lista de contactos del usuario A, está en la habitación P304 en el tercer piso, la ubicación común más precisa de estos dos usuarios es el edificio en el que se encuentran. Por esa razón, el piso (es decir, un nivel más allá de la ubicación común, es decir, el edificio) del usuario B se muestra en la lista de contactos del usuario A. Si ambas personas residen en el mismo piso o incluso en la misma habitación, la habitación estaría ocupada. La Figura 5 muestra una captura de pantalla del Simple Instant Messenger3, donde la ubicación actual de aquellas personas cuya ubicación es conocida por GISS, se muestra entre paréntesis justo al lado de su nombre. Encima de la imagen, se muestra la barra de herramientas GISS integrada y mejorada, que actualmente contiene la siguiente funcionalidad implementada (de izquierda a derecha): Comunicación asincrónica para grupos (ver capítulo 4.4.4), recordatorios contextuales (ver capítulo 4.4.6), visualización bidimensional de información de ubicación, formación y gestión de grupos (ver capítulo 4.4.2), gestión de disponibilidad contextual (ver capítulo 4.4.5) y finalmente un botón para terminar GISS. Figura 5. La integración de GISS en Simple Instant Messenger3. Dado que mostrar solo esta forma abreviada de la ubicación puede no ser suficiente para el usuario, ya que puede querer ver la posición más precisa disponible, se muestra una posición completamente calificada si se hace clic en un nombre de la lista de contactos (por ejemplo, en la forma de escritorio@habitación2@departamento1@primerpiso@edificio 1@campus). La segunda forma posible de visualización es una gráfica. Hemos evaluado una vista tridimensional, la cual se basaba en un modelo VRML del área respectiva (cf. Figura 6). Debido a deficiencias en la navegación y problemas de usabilidad, decidimos utilizar una vista bidimensional del piso (se le denomina nivel en la jerarquía de ubicación, cf. Figura 4). Otros niveles de granularidad como sección (por ejemplo, edificio) y región (por ejemplo, campus) también se proporcionan. En esta vista basada en el plano del piso, las ubicaciones actuales se muestran al estilo de los contactos de ICQ2, que se colocan en la ubicación actualmente detectada de la persona respectiva. El estado de disponibilidad de un usuario, por ejemplo, ausente si no está en la computadora en este momento, o ocupado si no desea ser molestado, se visualiza mediante la codificación de colores de la flor ICQ2 a la izquierda del nombre. Además, la vista del plano del piso muestra los llamados post-its virtuales, que son contrapartes virtuales de los post-its de la vida real y sirven como nuestro medio de comunicación asincrónica (más información sobre los post-its virtuales se puede encontrar en el capítulo 4.4.4). Figura 6. Vista en 3D del piso (VRML). La Figura 7 muestra el mapa bidimensional de un cierto piso, donde varios usuarios se encuentran actualmente ubicados (visualizados por su nombre y la flor a la izquierda). La ubicación del cliente, en la que se muestra en el mapa, se visualiza mediante un círculo verde. Hacia abajo a la derecha, se pueden ver dos notas adhesivas virtuales. Figura 7. Vista en 2D del suelo. Otra característica de la vista en 2D es la visualización del historial de ubicaciones de los usuarios. Al almacenar el historial completo de las ubicaciones de un usuario junto con una marca de tiempo, podemos proporcionar información sobre los lugares donde ha estado en el pasado. Cuando el ratón se mueve sobre el nombre de un usuario en la vista 2D, las huellas de un usuario, colocadas en los lugares donde ha estado, se desvanecen más intensamente cuanto más antigua sea la información de ubicación. 95 4.4.2 Formación y Gestión de Grupos Para apoyar la interacción en grupos, primero es necesario formar grupos. Como los grupos pueden tener diferentes propósitos, distinguimos dos tipos de grupos. Los llamados grupos estáticos son grupos que se crean manualmente con personas que se unen y abandonan. Los grupos estáticos se pueden dividir aún más en dos subtipos. En grupos estáticos abiertos, cualquiera puede unirse y salir en cualquier momento, útil por ejemplo para formar un grupo de asistentes a conferencias de algún tipo de grupo de interés. Los grupos estáticos cerrados tienen un propietario, quien decide qué personas pueden unirse, aunque todos podrían irse en cualquier momento. Los grupos cerrados permiten a los usuarios, por ejemplo, crear un grupo con sus amigos, pudiendo así comunicarse fácilmente con ellos. En contraste con eso, también apoyamos la creación de grupos dinámicos. Se forman entre personas que se encuentran en el mismo lugar al mismo tiempo. La creación de grupos dinámicos solo se realiza en lugares donde tiene sentido formar grupos, por ejemplo en aulas o salas de reuniones, pero no en pasillos o exteriores. Tampoco tendría mucho sentido formar un grupo solo con las personas que residen en el sector frontal izquierdo de un salón; en cambio, se debería considerar todo el salón. Por estas razones, todas las ubicaciones definidas en la jerarquía están etiquetadas, ya sea que permitan la formación de grupos o no. Los grupos dinámicos no solo se forman en función de la granularidad de las habitaciones, sino también en niveles superiores de la jerarquía, por ejemplo, con las personas que actualmente residen en el área de un departamento. Dado que los miembros de los grupos dinámicos cambian constantemente, es posible crear un grupo estático abierto a partir de ellos. 4.4.3 Comunicación Sincrónica para Grupos La forma más importante de comunicación sincrónica en las computadoras hoy en día es la mensajería instantánea; algunas personas incluso consideran que la mensajería instantánea es la verdadera aplicación estrella en Internet. Esto también ha motivado la decisión de construir GISS sobre un sistema de mensajería instantánea. En los sistemas de mensajería de hoy en día, se brinda un amplio soporte a la comunicación de igual a igual. Sin embargo, cuando se trata de comunicación en grupos, el apoyo suele ser bastante deficiente la mayor parte del tiempo. A menudo, solo se admite enviar un mensaje a múltiples destinatarios, sin contar con medios para tener en cuenta el estado actual de los destinatarios. Además, los grupos solo pueden formarse con miembros de la lista de contactos, por lo tanto, no es posible enviar mensajes a un grupo donde no se conocen a todos sus miembros (lo cual puede ser el caso en entornos donde los participantes de una conferencia forman un grupo). Nuestro enfoque no tiene las restricciones mencionadas. Introducimos entradas de grupo en la lista de contactos de los usuarios; le permitimos a él o a ella enviar mensajes a este grupo fácilmente, sin saber quién exactamente es actualmente miembro de este grupo. Además, los mensajes de grupo solo se entregan a personas que no están ocupadas en ese momento, evitando así una interrupción por un mensaje que posiblemente no sea importante para el usuario. Estas funciones no pueden llevarse a cabo en la red del mensajero en sí misma, por lo que cada vez que se envía un mensaje a una cuenta de grupo, lo interceptamos y lo dirigimos a través de nuestro sistema a todos los destinatarios, que están disponibles en un momento determinado. La comunicación a través de una cuenta de grupo también se almacena de forma centralizada, lo que permite a las personas consultar los mensajes perdidos o simplemente ver el historial de mensajes. 4.4.4 Comunicación Asincrónica para Grupos La comunicación asincrónica en grupos no es una idea nueva. El objetivo de este enfoque no es reinventar la rueda, ya que el correo electrónico es quizás la forma más ampliamente utilizada de comunicación asincrónica en computadoras y está ampliamente aceptado y estandarizado. En nuestro trabajo, buscamos la combinación de comunicación asincrónica con conciencia de ubicación. Por esta razón, introducimos el concepto de los llamados post-its virtuales (cp. [13]), que son mensajes que están vinculados a ubicaciones físicas. Estos post-its virtuales pueden ser visibles para todos los usuarios que pasen por allí o pueden estar restringidos para ser visibles solo para ciertos grupos de personas. Además, un post-it virtual también puede tener una fecha de caducidad después de la cual se elimina y ya no se muestra. Los post-its virtuales también pueden ser comentados por otros, proporcionando así algún tipo de interacción similar a un foro, donde cada post-it forma un hilo. Las notas adhesivas virtuales se muestran automáticamente cada vez que un usuario (disponible) pasa por primera vez. Posteriormente, los post-its se pueden acceder a través del visor 2D, donde se muestran todos los post-its visibles. Todos los lectores de una nota adhesiva quedan registrados y se muestran al verla, lo que proporciona cierto nivel de conciencia sobre las actividades de los miembros del grupo en el pasado. 4.4.5 Gestión de disponibilidad consciente del contexto Los mensajeros instantáneos en general proporcionan algún tipo de información sobre la disponibilidad de un usuario. Aunque esta información solo puede definirse de forma muy general, hemos decidido utilizar estos medios para recopilar el contexto de la actividad, ya que la introducción de uno adicional disminuiría considerablemente la usabilidad del sistema. Para apoyar al usuario en la gestión de su disponibilidad, proporcionamos una interfaz que le permite definir reglas para adaptar su disponibilidad al contexto actual. Estas reglas siguen la forma de evento (E) si condición (C) entonces acción (A), lo cual está directamente respaldado por las reglas ECA del Marco de Contexto descritas en el capítulo 1.3. La prueba de condiciones se desencadena periódicamente mediante eventos de lanzamiento (cada vez que cambia el contexto de un usuario). La condición en sí misma es definida por el usuario, quien puede solicitar el cambio de su estado de disponibilidad como la acción en la regla. Como condición, el usuario puede definir su ubicación, un momento específico (también activando recordatorios diarios, semanales o mensuales) o cualquier combinación lógica de estos criterios. Los recordatorios contextuales [14] se utilizan para dar al usuario la oportunidad de definir tareas y ser recordado de ellas cuando se cumplen ciertos criterios. Por lo tanto, un recordatorio puede ser visto como un post-it para uno mismo, el cual solo es visible en ciertos casos. Los recordatorios pueden estar vinculados a un lugar o tiempo específico, pero también a la proximidad espacial de usuarios o grupos. Estos criterios se pueden combinar con operadores booleanos, proporcionando así un medio poderoso para recordar al usuario las tareas que desea realizar cuando ocurre un cierto contexto. Un recordatorio solo aparecerá la primera vez que el contexto real cumpla con el criterio definido. Al mostrar el recordatorio, el usuario tiene la oportunidad de volver a enviarlo para ser recordado nuevamente, por ejemplo, cinco minutos después o la próxima vez que cierto usuario esté en proximidad espacial. 96 4.4.7 Reconocimiento y Notificación Contextual de Reuniones de Grupo Con la información de contexto disponible, intentamos reconocer las reuniones de un grupo. La determinación de los criterios, cuando el sistema reconoce que un grupo está teniendo una reunión, es parte del trabajo en curso. En un primer enfoque, utilizamos la ubicación y el contexto de actividad de los miembros del grupo para determinar una reunión. Siempre que más del 50 % de los miembros de un grupo estén disponibles en un lugar donde se considere que tiene sentido realizar una reunión (por ejemplo, no en un pasillo), se crea una nota de reunión en un post-it en ese lugar y se notifica a todos los miembros ausentes del grupo sobre la reunión y el lugar donde se llevará a cabo. Durante la reunión, la función de comentarios de las notas adhesivas virtuales proporciona un medio para tomar notas para todos los participantes. Cuando los miembros se unen o abandonan la reunión, esto se añade automáticamente como una nota a la lista de comentarios. Al igual que el reconocimiento del inicio de una reunión, el reconocimiento de su final sigue siendo parte del trabajo en curso. Si se reconoce el final de la reunión, todos los miembros del grupo reciben la lista completa de comentarios como un protocolo de reunión al final de la reunión. CONCLUSIONES Este artículo discutió el potencial del apoyo para la interacción grupal mediante el uso de información de contexto. Primero, introdujimos las nociones de contexto y computación de contexto y motivamos su valor para apoyar la interacción grupal. Se presenta una arquitectura para apoyar la interacción grupal consciente del contexto en entornos móviles y distribuidos. Está construido sobre un marco flexible y extensible, lo que permite una fácil adaptación a las fuentes de contexto disponibles (por ejemplo, agregando sensores adicionales) así como la forma de representación requerida. Hemos desarrollado prototípicamente un conjunto de servicios que mejoran la interacción grupal teniendo en cuenta el contexto actual de los usuarios y el contexto de los propios grupos. Las características importantes son la formación dinámica de grupos, la visualización de la ubicación en un mapa bidimensional, así como la integración discreta en un mensajero instantáneo, la comunicación asincrónica a través de notas virtuales, que están vinculadas a ciertas ubicaciones, y un sistema de gestión de disponibilidad consciente del contexto, que adapta el estado de disponibilidad de un usuario a su situación actual. Para proporcionar información de ubicación, hemos implementado un subsistema para la adquisición automatizada de información de ubicación y proximidad proporcionada por varios sensores, que ofrece una presentación independiente de la tecnología de ubicaciones y proximidades espaciales entre usuarios y fusiona esta información utilizando algoritmos de fusión independientes de los sensores. Un historial de ubicaciones, así como de proximidades espaciales, se almacena en una base de datos, lo que permite habilitar servicios basados en el historial de contexto. REFERENCIAS [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modelado del comportamiento consciente del contexto mediante reglas ECA interpretadas. En Actas de la Conferencia Internacional sobre Computación Paralela y Distribuida (EUROPAR03). (Klagenfurt, Austria, 26-29 de agosto de 2003). Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Aplicaciones Conscientes del Contexto: Del Laboratorio al Mercado. IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. Una encuesta de la investigación en computación móvil consciente del contexto. Informe técnico TR2000-381, Departamento de Ciencias de la Computación, Dartmouth College, Hanover, New Hampshire, noviembre de 2000. [4] Dey, A. Proporcionando Soporte Arquitectónico para Aplicaciones Conscientes del Contexto del Edificio. Tesis de doctorado, Departamento de Ciencias de la Computación, Instituto de Tecnología de Georgia, Atlanta, noviembre de 2000. [5] Svetlana Domnitcheva. Modelado de ubicación: Estado del arte y desafíos. En Actas del Taller sobre Modelado de Ubicación para la Computación Ubicua. (Atlanta, Georgia, Estados Unidos, 30 de septiembre de 2001). 13-19. [6] Ferscha, A. Conciencia del Espacio de Trabajo en Equipos Virtuales Móviles. En Actas del 9º Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE00). (Gaithersburg, Maryland, 14-16 de marzo de 2000). IEEE Computer Society Press, 272-277. [7] Ferscha, A. \n\nIEEE Computer Society Press, 272-277. [7] Ferscha, A. Coordinación en entornos de computación ubicua. En Actas del Duodécimo Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE-2003). (9-11 de junio de 2003). IEEE Computer Society Press, 3-9. [8] Leonhard, U. \n\nIEEE Computer Society Press, 3-9. [8] Leonhard, U. Apoyando la Conciencia de Ubicación en Sistemas Distribuidos Abiertos. Tesis de doctorado, Departamento de Computación, Imperial College, Londres, mayo de 1998. [9] Ryan, N., Pascoe, J., Morse, D. Trabajo de campo de realidad aumentada: el asistente arqueológico consciente del contexto. Gaffney, V., Van Leusen, M., Exxon, S. (eds.) -> Gaffney, V., Van Leusen, M., Exxon, S. (eds.) Aplicaciones informáticas en Arqueología (1997) [10] Schilit, B.N., Theimer, M. Difusión de información de mapas activos a dispositivos móviles. IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N. \n\nRed de IEEE, 8(5) (1994), 22-32. [11] Schilit, B.N. Una arquitectura de sistema para la computación móvil consciente del contexto. Tesis de doctorado, Universidad de Columbia, Departamento de Ciencias de la Computación, mayo de 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S. Apoyando grupos sociales persistentes en entornos de computación ubicua utilizando un servicio de grupo efímero consciente del contexto. En Actas de la Segunda Conferencia Internacional de IEEE sobre Computación y Comunicaciones Pervasivas (PerCom04). (14-17 de marzo de 2004). IEEE Computer Society Press, 287-296. [13] Pascoe, J. \n\nIEEE Computer Society Press, 287-296. [13] Pascoe, J. La arquitectura de Stick-e Note: Extendiendo la interfaz más allá del usuario. Actas de la 2ª Conferencia Internacional de Interfaces de Usuario Inteligentes (IUI97). (Orlando, EE. UU., 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: Un Sistema Consciente del Contexto para Apoyar Recordatorios. Actas del 2º Simposio Internacional sobre Computación Portátil y Ubicua (HUC00). (Bristol, Reino Unido, 2000), 172-186. 97",
    "original_sentences": [
        "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
        "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
        "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
        "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
        "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
        "General Terms Design, Experimentation 1.",
        "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
        "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
        "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
        "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
        "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
        "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
        "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
        "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
        "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
        "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
        "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
        "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
        "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
        "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
        "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
        "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
        "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
        "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
        "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
        "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
        "Figure 1.",
        "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
        "In order to do this, there are a few layers between (see Figure 1).",
        "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
        "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
        "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
        "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
        "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
        "It does this by communicating work context, agenda and workspace information to the users.",
        "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
        "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
        "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
        "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
        "Group interaction includes all means that enable group members to communicate freely with all the other members.",
        "At this point, the question how context information can be used for supporting group interaction comes up.",
        "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
        "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
        "Figure 2.",
        "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
        "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
        "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
        "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
        "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
        "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
        "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
        "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
        "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
        "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
        "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
        "These attributes are complex pieces of software, which are implemented as Java classes.",
        "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
        "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
        "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
        "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
        "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
        "The communication between entities and attributes is based on context events.",
        "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
        "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
        "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
        "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
        "These rules are referenced by the entitys XML configuration.",
        "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
        "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
        "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
        "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
        "Figure 1).",
        "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
        "We do not only sense the current location of users, but also determine spatial proximities between them.",
        "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
        "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
        "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
        "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
        "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
        "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
        "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
        "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
        "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
        "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
        "Figure 3.",
        "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
        "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
        "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
        "The client-side part of the application is kept as simple as possible.",
        "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
        "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
        "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
        "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
        "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
        "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
        "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
        "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
        "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
        "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
        "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
        "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
        "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
        "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
        "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
        "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
        "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
        "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
        "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
        "Instead, abstract symbols are more convenient for human interaction at application level.",
        "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
        "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
        "We introduce a fifth type of location, which we refer to as semantic.",
        "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
        "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
        "Figure 4.",
        "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
        "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
        "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
        "Such notifications are performed every time the sensor acquired new information.",
        "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
        "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
        "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
        "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
        "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
        "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
        "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
        "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
        "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
        "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
        "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
        "Due to this high accuracy, RFID is used for locating users within rooms.",
        "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
        "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
        "The second one is an 802.11 WLAN sensor.",
        "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
        "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
        "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
        "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
        "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
        "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
        "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
        "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
        "Table 1.",
        "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
        "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
        "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
        "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
        "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
        "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
        "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
        "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
        "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
        "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
        "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
        "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
        "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
        "Figure 3).",
        "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
        "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
        "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
        "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
        "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
        "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
        "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
        "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
        "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
        "However, this information is not very useful on its own if a certain user is associated with several locations.",
        "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
        "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
        "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
        "In a first step, each symbolic location is associated with its number of occurrences.",
        "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
        "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
        "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
        "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
        "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
        "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
        "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
        "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
        "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
        "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
        "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
        "If not, this change in proximity is written to the context repository with current timestamp.",
        "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
        "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
        "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
        "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
        "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
        "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
        "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
        "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
        "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
        "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
        "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
        "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
        "A critical issue for the user acceptance of such a system is the usability of its interface.",
        "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
        "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
        "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
        "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
        "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
        "The implementation of this messenger is carried out as a project at Sourceforge4 .",
        "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
        "It also supports connections to multiple accounts at the same time.",
        "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
        "SIM is based on a plug-in concept.",
        "All protocols as well as parts of the user-interface are implemented as plug-ins.",
        "Its architecture is also used to extend the applications abilities to communicate with external applications.",
        "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
        "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
        "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
        "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
        "This provides location awareness without taking too much space or requesting the users full attention.",
        "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
        "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
        "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
        "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
        "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
        "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
        "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
        "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
        "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
        "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
        "Therefore, some additional information like a list of members for each group is needed.",
        "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
        "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
        "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
        "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
        "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
        "As already described in chapter 2, we use two different forms of visualisation.",
        "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
        "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
        "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
        "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
        "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
        "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
        "If both people reside on the same floor or even in the same room, the room would be taken.",
        "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
        "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
        "Figure 5.",
        "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
        "The second possible form of visualisation is a graphical one.",
        "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
        "Figure 6).",
        "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
        "Figure 4).",
        "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
        "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
        "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
        "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
        "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
        "The location of the client, on which the map is displayed, is visualized by a green circle.",
        "Down to the right, two virtual post-its can be seen.",
        "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
        "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
        "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
        "As groups can have different purposes, we distinguish two types of groups.",
        "So-called static groups are groups, which are built up manually by people joining and leaving them.",
        "Static groups can be further divided into two subtypes.",
        "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
        "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
        "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
        "In contrast to that, we also support the creation of dynamic groups.",
        "They are formed among persons, who are at the same location at the same time.",
        "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
        "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
        "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
        "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
        "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
        "This has also motivated the decision to build GISS upon an instant messaging system.",
        "In todays messenger systems, peer-to-peer-communication is extensively supported.",
        "However, when it comes to communication in groups, the support is rather poor most of the time.",
        "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
        "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
        "Our approach does not have the mentioned restrictions.",
        "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
        "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
        "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
        "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
        "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
        "In out work, we aim at the combination of asynchronous communication with location awareness.",
        "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
        "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
        "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
        "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
        "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
        "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
        "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
        "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
        "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
        "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
        "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
        "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
        "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
        "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
        "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
        "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
        "A reminder will only pop up the first time the actual context meets the defined criterion.",
        "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
        "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
        "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
        "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
        "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
        "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
        "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
        "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
        "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
        "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
        "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
        "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
        "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
        "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
        "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
        "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
        "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
        "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
        "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
        "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
        "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
        "Providing Architectural Support for Building Context-Aware Applications.",
        "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
        "Location Modeling: State of the Art and Challenges.",
        "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
        "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
        "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
        "Coordination in Pervasive Computing Environments.",
        "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
        "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
        "Supporting Location Awareness in Open Distributed Systems.",
        "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
        "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
        "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
        "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
        "A System Architecture for Context-Aware Mobile Computing.",
        "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
        "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
        "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
        "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
        "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
        "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
        "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
    ],
    "translated_text_sentences": [
        "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil.",
        "Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la interacción en grupo.",
        "A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la interacción en grupo.",
        "Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas.",
        "H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos.",
        "H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica.",
        "Términos generales de diseño, Experimentación 1.",
        "INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica.",
        "Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar.",
        "Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones.",
        "Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real.",
        "Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS).",
        "Apoya la interacción grupal en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás.",
        "En los siguientes subcapítulos, daremos una breve descripción sobre la computación consciente del contexto y motivaremos sus beneficios para apoyar la interacción en grupo.",
        "Se presenta un marco de software para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS.",
        "El capítulo 2 presenta la arquitectura de GISS, y los capítulos 3 y 4 discuten los conceptos de localización y de interacción en grupo de GISS con más detalle.",
        "El capítulo 5 ofrece un resumen final de nuestro trabajo. 1.1 ¿Qué es la Computación Contextual?",
        "Según el Diccionario en línea de Merriam-Webster, el contexto se define como las condiciones interrelacionadas en las que algo existe o ocurre.",
        "Dado que esta definición es muy general, se han realizado muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos.",
        "La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para contexto.",
        "El término consciente del contexto fue introducido por primera vez en [10], donde el contexto se refiere a la ubicación, identidades de personas y objetos cercanos, y cambios en esos objetos.",
        "En [2], el contexto también se define mediante una enumeración de ejemplos, como la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación del usuario, el entorno, la identidad y el tiempo.",
        "Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información que se pueda utilizar para caracterizar la situación de una entidad.",
        "Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluyendo al usuario y a las propias aplicaciones. [4] identifica cuatro tipos principales de información de contexto (a veces referidos como dimensiones de contexto), que son - con respecto a la caracterización de la situación de una entidad - más importantes que otros.",
        "Estos son la ubicación, la identidad, el tiempo y la actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundarios).",
        "Por ejemplo, si conocemos la identidad de una persona, podemos derivar fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico).",
        "Según esta definición, [4] define un sistema como consciente del contexto si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación.",
        "Figura 1.",
        "Las capas de un sistema consciente del contexto. La computación del contexto se basa en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y utilizar el contexto obtenido (ejecución automática, presentación, etiquetado).",
        "Para hacer esto, hay algunas capas intermedias (ver Figura 1).",
        "Primero, la información de contexto de bajo nivel obtenida debe ser transformada, agregada e interpretada (transformación de contexto) y representada en un modelo abstracto del mundo de contexto (representación de contexto), ya sea centralizado o descentralizado.",
        "Finalmente, la información de contexto almacenada se utiliza para activar ciertos eventos de contexto (activación de contexto). Después de estas definiciones abstractas y formales sobre qué es el contexto y la computación de contexto, nos centraremos ahora en el objetivo principal de este trabajo, es decir, cómo la interacción de los miembros de un grupo móvil puede ser apoyada mediante el uso de información de contexto.",
        "En [6] hemos identificado que los sistemas organizativos son cruciales para apoyar a los grupos móviles (ver Figura 2).",
        "Primero, tiene que haber un Sistema de Gestión de Información y Conocimiento, que sea capaz de apoyar a un equipo con sus necesidades de procesamiento de información y recopilación de conocimiento.",
        "La siguiente parte es el Sistema de Conciencia, que se dedica a la percepción de los efectos de la actividad en equipo.",
        "Esto se logra comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios.",
        "Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea de forma sincrónica o asincrónica, y para el acceso compartido a artefactos, como documentos.",
        "Los sistemas de movilidad despliegan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como la captura y entrega de información de conciencia desde y hacia cualquier lugar.",
        "Finalmente, pero no menos importante, el sistema de innovación organizacional integra aspectos del equipo en sí mismo, como roles, liderazgo e instalaciones compartidas.",
        "Con respecto a estos cinco aspectos de apoyo al equipo, nos enfocamos en la interacción y cubrimos parcialmente el apoyo a la movilidad y la conciencia.",
        "La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros.",
        "En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para apoyar la interacción grupal.",
        "Creemos que la información sobre la situación actual de una persona aporta un valor añadido a los sistemas de interacción grupal existentes.",
        "La información de contexto facilita la interacción grupal al permitir que cada miembro esté al tanto del estado de disponibilidad o la ubicación actual de los demás miembros del grupo, lo que a su vez hace posible formar grupos de manera dinámica, colocar notas virtuales en el mundo real o determinar qué personas están cerca.",
        "Figura 2.",
        "Apoyo para Grupos Móviles [6]. La mayoría de las aplicaciones de hoy en día que son conscientes del contexto utilizan únicamente la ubicación y el tiempo, y la ubicación se considera un tipo crucial de información de contexto [3].",
        "También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo se centra en la utilización de la información de ubicación y la información sobre los usuarios en proximidad espacial.",
        "Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizada, no es suficiente para respaldar la interacción grupal, por lo cual también aprovechamos los otros tres tipos principales, a saber, identidad, tiempo y actividad.",
        "Esto proporciona una descripción completa de la situación actual de un usuario y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen detalladamente en el capítulo 4.4.",
        "Cuando observamos los tipos de información de contexto mencionados anteriormente, podemos ver que todos ellos están centrados en el usuario individual, teniendo en cuenta únicamente el contexto del propio usuario.",
        "Creemos que, para apoyar la interacción grupal, también se debe tener en cuenta el estatus del propio grupo.",
        "Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el contexto de grupo, que abarca más que la suma de los contextos individuales de los miembros.",
        "El contexto de grupo incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un grupo en particular se reúne en este momento. Middleware de contexto 1.3 El Sistema de Soporte de Interacción de Grupo (GISS) utiliza el marco de software presentado en [1], que sirve como middleware para desarrollar aplicaciones sensibles al contexto.",
        "Este llamado Marco de Contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes. Una característica principal del marco es la abstracción de la recuperación de información de contexto a través de varios sensores y su entrega a un nivel donde no se percibe ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes mecanismos de recuperación de contexto; la recuperación de información está oculta para el desarrollador de aplicaciones.",
        "Esto se logra mediante entidades llamadas, que describen objetos, por ejemplo, un usuario humano, que son importantes para un determinado escenario de contexto.",
        "Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, los cuales pueden ser cargados en la entidad.",
        "Estos atributos son piezas complejas de software, que se implementan como clases de Java.",
        "Los atributos típicos son encapsulaciones de sensores, pero también pueden ser utilizados para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre cambios de ubicación de los usuarios.",
        "Cada entidad puede contener una colección de tales atributos, donde una entidad en sí misma es un atributo.",
        "El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos desde el almacenamiento local o a través de la red.",
        "Para cargar e implementar nuevos atributos, una entidad debe hacer referencia a un cargador de clases y una capa de transporte y búsqueda, que gestiona el mecanismo de búsqueda para descubrir otras entidades y el transporte.",
        "Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atributos poseen estas entidades.",
        "La comunicación entre entidades y atributos se basa en eventos de contexto.",
        "Cada atributo es capaz de desencadenar eventos, los cuales están dirigidos a otros atributos y entidades respectivamente, independientemente de en qué computadora física estén ejecutándose.",
        "Entre otras cosas, un evento contiene el nombre del evento y una lista de parámetros que proporcionan información sobre el propio evento.",
        "Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (Evento-Condición-Acción) para definir el comportamiento del sistema de contexto.",
        "Por lo tanto, cada entidad tiene un intérprete de reglas, que captura eventos desencadenados, verifica las condiciones asociadas a ellos y provoca ciertas acciones.",
        "Estas reglas son referenciadas por la configuración XML de la entidad.",
        "Una regla en sí misma incluso puede desencadenar la inserción de nuevas reglas o la descarga de reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto.",
        "En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar los datos del sensor de bajo nivel de las aplicaciones de alto nivel y oculta los detalles de comunicación externa al desarrollador de la aplicación.",
        "Además, es capaz de adaptar su comportamiento dinámicamente cargando atributos, entidades o reglas ECA en tiempo de ejecución.",
        "VISIÓN GENERAL DE LA ARQUITECTURA Dado que GISS utiliza el Marco de Contexto descrito en el capítulo 1.3 como middleware, cada usuario está representado por una entidad, al igual que el servidor central, que es responsable de la transformación de contexto, la representación de contexto y la activación de contexto (cf.",
        "Figura 1).",
        "Una parte principal de nuestro trabajo se centra en la adquisición automatizada de información de posición y su provisión independiente de sensores a nivel de aplicación.",
        "No solo percibimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos.",
        "Al desarrollar la arquitectura, nos enfocamos en mantener el cliente lo más simple posible y reducir al mínimo la comunicación entre el cliente y el servidor.",
        "Cada cliente puede tener varios sensores de ubicación y/o proximidad adjuntos, los cuales están encapsulados por los atributos respectivos del Marco de Contexto (Encapsulación de Sensores).",
        "Estos atributos son responsables de integrar implementaciones de sensores nativos en el Marco de Contexto y enviar información de posición dependiente del sensor al servidor.",
        "Consideramos muy importante apoyar diferentes tipos de sensores al mismo tiempo, con el fin de mejorar la precisión de la ubicación por un lado, y proporcionar un entorno de detección de ubicación ubicuo con transiciones fluidas entre diferentes técnicas de detección de ubicación por otro lado.",
        "Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstraen la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor).",
        "Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas a ubicaciones estandarizadas.",
        "La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de Fusión de Sensores, uno para ubicaciones simbólicas y otro para proximidades espaciales.",
        "Su trabajo consiste en fusionar la información de ubicación y proximidad de los clientes, respectivamente, la cual se describe detalladamente en el Capítulo 3.3.",
        "Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de Fusión de Sensores notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación.",
        "Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede ser fácilmente ampliado con sensores adicionales, simplemente implementando los (generalmente dos) atributos para encapsular los sensores (algunos sensores pueden no necesitar una parte del lado del cliente), abstrayendo las posiciones físicas y observando la interfaz con el Núcleo de GISS.",
        "Figura 3.",
        "La arquitectura del Sistema de Soporte de Interacción de Grupo (GISS). El atributo central del núcleo de GISS es el coordinador principal de la aplicación tal como se muestra al usuario.",
        "No solo sirve como una interfaz al subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad). Cada vez que se detecta un cambio en el contexto de uno o más usuarios, el núcleo de GISS evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y en los demás miembros de estos grupos.",
        "Cuando sea necesario, se lanzan eventos a los clientes afectados para activar actividades contextualmente conscientes, como cambiar la presentación de la información de conciencia o la ejecución de servicios.",
        "La parte del cliente de la aplicación se mantiene lo más simple posible.",
        "Además, el diseño modular no solo fue un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario.",
        "Por lo tanto, la interfaz de usuario completa puede intercambiarse fácilmente si se tienen en cuenta y se comprenden todos los eventos definidos por el nuevo atributo de la interfaz.",
        "La interfaz de usuario actualmente implementada está dividida en dos partes, las cuales también están representadas por dos atributos.",
        "El atributo central en el lado del cliente es la llamada Encapsulación de Mensajería Instantánea, que por un lado interactúa con el servidor a través de eventos y por otro lado sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario.",
        "Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente, el Simple Instant Messenger (SIM)3 compatible con ICQ2.",
        "Hemos elegido un mensajero instantáneo como interfaz porque proporciona una interfaz conocida para la mayoría de los usuarios y facilita una integración fluida del soporte de interacción grupal, aumentando así la aceptación y facilidad de uso.",
        "Dado que la funcionalidad básica del mensajero instantáneo, que es servir como cliente en una red de mensajería instantánea, sigue completamente operativa, nuestra aplicación puede utilizar las funciones ya proporcionadas por el mensajero.",
        "Por ejemplo, los contextos de actividad e identidad se derivan de la red de mensajería tal como se describe más adelante.",
        "La Encapsulación de Mensajería Instantánea también es responsable de admitir la comunicación en grupo.",
        "A través de la interfaz del mensajero, proporciona medios de comunicación síncrona y asíncrona, así como un sistema de recordatorio contextual y herramientas para gestionar grupos y el propio estado de disponibilidad.",
        "La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, la cual está implementada en el Visor de atributos.",
        "La implementación actual proporciona un mapa bidimensional del campus, pero puede ser fácilmente reemplazada por otras visualizaciones, como un modelo VRML tridimensional.",
        "Además, esta visualización se utiliza para mostrar los artefactos de la comunicación asincrónica.",
        "Basado en una vista del plano de la zona geográfica en la que se encuentra actualmente el usuario, ofrece una rápida visión general de las personas cercanas, su estado y proporciona medios para interactuar con ellas.",
        "En los siguientes capítulos 3 y 4, describimos con más detalle el backend de detección de ubicación y el frontend de la aplicación para apoyar la interacción grupal.",
        "SENSADO DE UBICACIÓN En el siguiente capítulo, presentaremos un modelo de ubicación que se utiliza para representar ubicaciones; posteriormente, describiremos la integración de sensores de ubicación y proximidad en más detalle.",
        "Finalmente, echaremos un vistazo más de cerca a la fusión de la información de ubicación y proximidad, adquirida por varios sensores. Modelo de Ubicación Un modelo de ubicación (es decir, una representación de contexto para la información de contexto de ubicación) es necesario para representar las ubicaciones de los usuarios, con el fin de poder facilitar consultas relacionadas con la ubicación, como por ejemplo, dada una ubicación, devolver una lista de todos los objetos allí o dado un objeto, devolver su ubicación actual.",
        "En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representa la ubicación como coordenadas.",
        "Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como Sala P111 o Edificio de Física, porque no necesitamos datos de ubicación geométrica.",
        "En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación.",
        "Además, utilizamos una jerarquía de contención de ubicaciones simbólicas similar a la introducida en [11], que consta de regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos a su vez contienen habitaciones.",
        "También distinguimos cuatro tipos, a saber, región (por ejemplo, un campus completo), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, un piso específico en un edificio) y área (por ejemplo, una habitación específica).",
        "Introducimos un quinto tipo de ubicación, al que nos referimos como semántico.",
        "Estas llamadas ubicaciones semánticas pueden aparecer en cualquier nivel de la jerarquía y pueden estar anidadas, pero no necesariamente tienen una representación geográfica.",
        "Ejemplos de tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones.",
        "Figura 4.",
        "Jerarquía de Contención de Ubicaciones Simbólicas La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto. 3.2 Sensores Nuestra arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación, y sensores de proximidad, que detectan proximidades espaciales entre usuarios.",
        "Como se describe arriba, cada sensor tiene una implementación del lado del servidor y, en la mayoría de los casos, también una implementación correspondiente del lado del cliente.",
        "Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular.",
        "Tales notificaciones se realizan cada vez que el sensor adquiere nueva información.",
        "Por lo tanto, los atributos de abstracción del sensor son responsables de detectar cuándo un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si ha sido desconectado por el usuario) o cuando la posición o proximidad no se pueden determinar más (por ejemplo, si).",
        "El lector de RFID no puede detectar etiquetas y notificará a la fusión de sensores correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor.",
        "Los atributos de abstracción de sensores de ubicación correspondientes recopilan estas posiciones físicas proporcionadas por los sensores de todos los usuarios, y realizan una búsqueda en el repositorio para obtener la ubicación simbólica asociada.",
        "Esto requiere ciertas tablas para cada sensor, las cuales asignan posiciones físicas a ubicaciones simbólicas.",
        "Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones.",
        "Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular.",
        "Hemos implementado prototípicamente tres tipos de sensores de ubicación, basados en WLAN (IEEE 802.11), Bluetooth y RFID (Identificación por Radiofrecuencia).",
        "Hemos elegido estos tres sensores completamente diferentes debido a sus diferencias en cuanto a precisión, cobertura y esfuerzo administrativo, con el fin de evaluar la flexibilidad de nuestro sistema (ver Tabla 1).",
        "El más preciso es un sensor de RFID, que se basa en un lector de RFID activo.",
        "Tan pronto como el lector se conecta al cliente, escanea las etiquetas RFID activas en rango y transmite sus números de serie al servidor, donde se asignan a ubicaciones simbólicas.",
        "También tenemos en cuenta el RSSI (Radio Signal Strength Information), que proporciona una precisión de posición de unos pocos centímetros y nos permite determinar cuál etiqueta RFID está más cercana.",
        "Debido a esta alta precisión, el RFID se utiliza para localizar usuarios dentro de habitaciones.",
        "La administración es bastante simple; una vez que se coloca una nueva etiqueta RFID, su número de serie simplemente debe asignarse a una única ubicación simbólica.",
        "Una desventaja es la baja disponibilidad, que se puede atribuir al hecho de que los lectores de RFID siguen siendo muy costosos.",
        "El segundo es un sensor WLAN 802.11.",
        "Por lo tanto, integramos un sistema de posicionamiento WLAN comercial puramente basado en software para rastrear clientes en la infraestructura WLAN del campus universitario.",
        "La precisión de la posición alcanzada se encuentra en el rango de unos pocos metros y, por lo tanto, es adecuada para la detección de ubicación a nivel de habitaciones.",
        "Una gran desventaja es que un mapa de toda el área debe ser calibrado con puntos de medición a una distancia de 5 metros cada uno.",
        "Debido a que la mayoría de las computadoras móviles están equipadas con tecnología WLAN y el sistema de posicionamiento es una solución solo de software, casi todos pueden usar este tipo de sensor.",
        "Finalmente, hemos implementado un sensor de Bluetooth, que detecta etiquetas de Bluetooth (es decir,",
        "Módulos Bluetooth con posición conocida) en rango y los transmite al servidor que los mapea a ubicaciones simbólicas.",
        "Debido al hecho de que no utilizamos información de la fuerza de la señal en la implementación actual, la precisión es superior a 10 metros y, por lo tanto, una única dirección MAC de Bluetooth está asociada con varios lugares simbólicos, de acuerdo a las ubicaciones físicas que cubre dicho módulo de Bluetooth.",
        "Esto conlleva la desventaja de que el alcance de cada etiqueta Bluetooth debe ser determinado y mapeado a ubicaciones simbólicas dentro de este alcance.",
        "Tabla 1.",
        "Comparación de sensores implementados Precisión del sensor Cobertura Administración RFID < 10 cm pobre fácil WLAN 1-4 m muy buena muy lenta Bluetooth ~ 10 m buena lenta 3.2.2 Sensores de proximidad Cualquier sensor capaz de detectar si dos usuarios están en proximidad espacial se denomina sensor de proximidad.",
        "Similar a los sensores de ubicación, los atributos de abstracción del sensor de proximidad recopilan información de proximidad física de todos los usuarios y los transforman en asignaciones de identificaciones de usuario.",
        "Hemos implementado dos tipos de sensores de proximidad, uno basado en Bluetooth y otro en ubicaciones simbólicas fusionadas (ver capítulo 3.3.1).",
        "La implementación de Bluetooth va de la mano con la implementación del sensor de ubicación basado en Bluetooth.",
        "Las direcciones MAC de Bluetooth ya determinadas en el rango de un cliente específico se están comparando con las de todos los demás clientes, y cada vez que el atributo Abstracción del Sensor de Bluetooth detecta congruencia, notifica al sensor de fusión de proximidad al respecto.",
        "El segundo sensor se basa en ubicaciones simbólicas procesadas por la Fusión de Sensores de Ubicación, por lo tanto no necesita una implementación del lado del cliente.",
        "Cada vez que la ubicación simbólica fusionada de un usuario específico cambia, verifica si se encuentra en la misma ubicación simbólica que otro usuario y notifica nuevamente a la fusión del sensor de proximidad sobre la cercanía entre estos dos usuarios.",
        "El rango puede ser restringido a cualquier nivel de la jerarquía de contención de ubicación, por ejemplo, a nivel de habitación.",
        "Un problema actualmente sin resolver es la granularidad incomparable de diferentes sensores de proximidad.",
        "Por ejemplo, las ubicaciones simbólicas en el mismo nivel en la jerarquía de ubicaciones generalmente no cubren la misma área geográfica. 3.3 El núcleo de fusión de sensores del subsistema de detección de ubicación es la fusión de sensores.",
        "Combina datos de varios sensores, al mismo tiempo que lidia con diferencias en cuanto a precisión, cobertura y frecuencia de muestreo.",
        "Según los dos tipos de sensores descritos en el capítulo 3.2, distinguimos entre la fusión de sensores de ubicación por un lado, y la fusión de sensores de proximidad por otro lado.",
        "La fusión de ubicaciones simbólicas, así como la fusión de proximidades espaciales, opera en información estandarizada (cf.",
        "Figura 3).",
        "Esto tiene la ventaja de que sensores adicionales de posición y proximidad pueden ser añadidos fácilmente o los algoritmos de fusión pueden ser reemplazados por otros más sofisticados. La fusión se realiza para cada usuario por separado y solo tiene en cuenta las mediciones en un punto en el tiempo (es decir, no se utiliza información histórica para determinar la ubicación actual de un usuario específico).",
        "El algoritmo recopila todos los eventos generados por los atributos de Abstracción del Sensor, realiza la fusión y activa el atributo del Núcleo GISS si la ubicación simbólica de un usuario específico o la proximidad espacial entre usuarios cambia.",
        "Una característica importante es el almacenamiento persistente del historial de ubicación y proximidad en una base de datos para permitir su recuperación en el futuro.",
        "Esto permite a las aplicaciones visualizar el movimiento de los usuarios, por ejemplo. 3.3.1 Fusión de Sensores de Ubicación El objetivo de la fusión de información de ubicación es mejorar la precisión y exactitud al combinar el conjunto de ubicaciones simbólicas proporcionadas por varios sensores de ubicación, con el fin de reducir el número de estas ubicaciones al mínimo, idealmente a una única ubicación simbólica por usuario.",
        "Esto es bastante difícil, ya que diferentes sensores pueden variar en precisión y frecuencia de muestreo también.",
        "El atributo de fusión de sensor de ubicación se activa por eventos, que son lanzados por los atributos de abstracción de sensor de ubicación.",
        "Estos eventos contienen información sobre la identidad del usuario en cuestión, su ubicación actual y el sensor mediante el cual se ha determinado la ubicación.",
        "Si el atributo Location Sensor Fusion recibe dicho evento, verifica si la cantidad de ubicaciones simbólicas del usuario en cuestión ha cambiado (en comparación con el último evento).",
        "Si este es el caso, notifica al atributo principal del GISS sobre todas las ubicaciones simbólicas con las que este usuario está actualmente asociado.",
        "Sin embargo, esta información no es muy útil por sí sola si un usuario en particular está asociado con varias ubicaciones.",
        "Como se describe en el capítulo 3.2.1, un sensor de ubicación único puede proporcionar múltiples ubicaciones simbólicas.",
        "Además, un cierto usuario puede tener varios sensores de ubicación, los cuales proporcionan ubicaciones simbólicas que difieren en precisión (es decir, diferentes niveles en la jerarquía de contención de ubicación).",
        "Para hacer frente a este desafío, implementamos un algoritmo de fusión con el fin de reducir el número de ubicaciones simbólicas al mínimo (idealmente a una sola ubicación).",
        "En un primer paso, cada ubicación simbólica se asocia con su número de ocurrencias.",
        "Una ubicación simbólica puede ocurrir varias veces si es referida por más de un sensor o si un solo sensor detecta múltiples etiquetas, las cuales a su vez hacen referencia a varias ubicaciones.",
        "Además, este número se suma al número de ocurrencias previamente calculado de cada ubicación simbólica, que es una ubicación secundaria de la considerada en la jerarquía de contención de ubicaciones.",
        "Por ejemplo, si - en la Figura 4 - room2 ocurre dos veces y desk ocurre una sola vez, el valor 2 de room2 se suma al valor 1 de desk, por lo que desk finalmente obtiene el valor 3.",
        "En un paso final, solo quedan aquellas ubicaciones simbólicas que están asignadas con el mayor número de ocurrencias.",
        "Una reducción adicional se puede lograr asignando prioridades a los sensores (basadas en precisión y confianza) y acumulando estas prioridades para cada ubicación simbólica en lugar de simplemente contar el número de ocurrencias.",
        "Si las ubicaciones fusionadas restantes han cambiado (es decir, si difieren de las ubicaciones fusionadas con las que el usuario considerado está actualmente asociado), se les proporciona la marca de tiempo actual, se escribe en la base de datos y se notifica al atributo GISS sobre dónde se encuentra probablemente el usuario.",
        "Finalmente, se calcula la ubicación más precisa y común en la jerarquía de ubicaciones (es decir, el límite superior mínimo de estas ubicaciones simbólicas) para obtener una única ubicación simbólica.",
        "Si cambia, el atributo principal de GISS se activa nuevamente. 3.3.2 Fusión de Sensores de Proximidad La fusión de sensores de proximidad es mucho más simple que la fusión de ubicaciones simbólicas.",
        "El atributo de fusión del sensor de proximidad correspondiente se activa por eventos, que son lanzados por los atributos de abstracción del sensor de proximidad.",
        "Estos eventos especiales contienen información sobre la identidad de los dos usuarios involucrados, si actualmente se encuentran en proximidad espacial o si la proximidad ya no persiste, y mediante qué sensor de proximidad se ha detectado esto.",
        "Si el atributo de fusión de sensores es notificado por un cierto atributo de abstracción de sensor de proximidad sobre una proximidad espacial existente, primero verifica si estos dos usuarios ya se sabe que están en proximidad (detectado ya sea por otro usuario o por otro sensor de proximidad del usuario, que causó el evento).",
        "Si no, este cambio en la proximidad se escribe en el repositorio de contexto con la marca de tiempo actual.",
        "De manera similar, si el atributo Fusión de Proximidad es notificado sobre una proximidad finalizada, verifica si los usuarios aún se sabe que están en proximidad, y escribe este cambio en el repositorio si no lo están.",
        "Finalmente, si la proximidad espacial entre los dos usuarios realmente cambia, se lanza un evento para notificar al atributo central de GISS sobre esto. 4.",
        "INTERACCIÓN CONTEXTUALMENTE SENSIBLE 4.1 Resumen En la mayoría de los sistemas actuales que admiten la interacción en grupos, los medios proporcionados carecen de conciencia del contexto actual del usuario, por lo tanto, no pueden adaptarse a sus necesidades.",
        "En nuestro enfoque, utilizamos información de contexto para mejorar la interacción y ofrecer servicios adicionales, lo cual brinda nuevas posibilidades al usuario.",
        "Además, creemos que la interacción en grupos también debe tener en cuenta el contexto actual del grupo en sí y no solo el contexto de los miembros individuales del grupo.",
        "Por esta razón, también recuperamos información sobre el contexto actual del grupo, derivada de los contextos de los miembros del grupo junto con algún tipo de meta-información (ver capítulo 4.3).",
        "Las fuentes de contexto utilizadas para nuestra aplicación corresponden con los cuatro tipos de contexto principales dados en el capítulo 1.1 - identidad (I), ubicación (L), tiempo (T) y actividad (A).",
        "Como se mencionó anteriormente, también tenemos en cuenta el contexto del grupo con el que el usuario está interactuando, de modo que podríamos agregar un quinto tipo de información de contexto: la conciencia del grupo (G) - a la clasificación.",
        "Usando esta información de contexto, podemos activar actividades sensibles al contexto en las tres categorías descritas en el capítulo 1.1: presentación de información (P), ejecución automática de servicios (A) y etiquetado de contexto a la información para su posterior recuperación (T).",
        "La Tabla 2 proporciona una visión general de las actividades que ya hemos implementado; están descritas de manera exhaustiva en el capítulo 4.4.",
        "La tabla también muestra qué tipos de información de contexto se utilizan para cada actividad y la categoría en la que podría clasificarse la actividad. 93 Tabla 2.",
        "La clasificación de las actividades implementadas con conciencia del contexto es la siguiente: Visualización de la ubicación, Soporte para la construcción de grupos, Soporte para la comunicación sincrónica, Soporte para la comunicación asincrónica, Gestión de disponibilidad, Soporte para la gestión de tareas y Soporte para reuniones. Las razones para implementar estas características son aprovechar los cuatro tipos de información de contexto para apoyar la interacción grupal mediante el uso de un conocimiento integral sobre la situación en la que se encuentra un usuario individual o todo un grupo.",
        "Un problema crítico para la aceptación del usuario de un sistema así es la usabilidad de su interfaz.",
        "Hemos evaluado varias formas de presentar medios de interacción conscientes del contexto al usuario, hasta llegar a la solución que utilizamos actualmente.",
        "Aunque creemos que la interfaz de usuario que se ha implementado actualmente ofrece el mejor equilibrio entre la integración perfecta de funciones y la facilidad de uso, no habría problema en ampliar la arquitectura con otras interfaces de usuario, incluso en diferentes plataformas.",
        "La solución elegida se basa en un mensajero instantáneo existente, que ofrece varias posibilidades para integrar nuestro sistema (ver capítulo 4.2).",
        "La mayor ventaja de este enfoque es que el usuario se enfrenta a una interfaz gráfica de usuario con la que ya está familiarizado en la mayoría de los casos.",
        "Además, nuestro sistema utiliza una cuenta de mensajería instantánea como identificador, de modo que el usuario no tenga que registrarse en ningún otro lugar (por ejemplo, el usuario puede utilizar su cuenta de ICQ2 ya existente). 4.2 Integración de Mensajería Instantánea Nuestro sistema se basa en un mensajero instantáneo existente, el llamado Simple Instant Messenger (SIM).",
        "La implementación de este mensajero se lleva a cabo como un proyecto en Sourceforge4.",
        "SIM admite múltiples protocolos de mensajería como AIM5, ICQ2 y MSN6.",
        "También admite conexiones a múltiples cuentas al mismo tiempo.",
        "Además, se brinda soporte completo para la notificación por SMS (cuando esté disponible en el protocolo utilizado).",
        "SIM se basa en un concepto de plug-in.",
        "Todos los protocolos, así como partes de la interfaz de usuario, están implementados como complementos.",
        "Su arquitectura también se utiliza para ampliar las capacidades de las aplicaciones para comunicarse con aplicaciones externas.",
        "Con este propósito, se proporciona un complemento de control remoto, mediante el cual se puede controlar el SIM desde aplicaciones externas a través de una conexión de socket.",
        "Esta interfaz de control remoto es ampliamente utilizada por GISS para recuperar la lista de contactos, establecer el estado de disponibilidad de los usuarios o enviar mensajes.",
        "La funcionalidad del complemento se amplió de varias maneras, por ejemplo, para aceptar mensajes para una cuenta (como si hubieran sido enviados a través de la red de mensajería).",
        "El mensajero, más exactamente la lista de contactos (es decir, una lista de perfiles de todas las personas registradas en el mensajero instantáneo, que se visualiza enumerando sus nombres como se puede ver en la Figura 5), también se utiliza para mostrar las ubicaciones de otros miembros de los grupos a los que pertenece un usuario.",
        "Esto proporciona conciencia de ubicación sin ocupar demasiado espacio o requerir la atención completa de los usuarios.",
        "Una descripción más detallada de estas características se proporciona en el capítulo 4.4. 4.3 Fuentes de Información de Contexto Mientras que el contexto de ubicación de un usuario se obtiene de nuestro subsistema de detección de ubicación descrito en el capítulo 3, también consideramos otros tipos de contexto además de la ubicación relevantes para el apoyo de la interacción grupal.",
        "El tiempo local, como dimensión de contexto muy importante, se puede recuperar fácilmente del reloj en tiempo real del sistema del usuario.",
        "Además de la ubicación y el tiempo, también utilizamos la información de contexto de la actividad e identidad de los usuarios, donde explotamos la funcionalidad proporcionada por el sistema de mensajería instantánea subyacente.",
        "La identidad (o más exactamente, la asignación de IDs a nombres, así como información adicional del perfil de los usuarios) se puede extraer de los contenidos de la lista de contactos de los usuarios.",
        "La información sobre la actividad o un usuario en particular solo está disponible en un área muy restringida, específicamente la actividad en la computadora misma.",
        "Otras actividades como hacer una llamada telefónica o algo similar, no pueden ser reconocidas con la implementación actual del sensor de actividad.",
        "La única información de contexto utilizada es el estado de disponibilidad de los mensajeros instantáneos, por lo tanto, solo proporciona una clasificación muy general de la actividad de los usuarios (en línea, fuera de línea, ausente, ocupado, etc.).",
        "Aunque esto pueda no parecer mucha información, seguramente es relevante y puede ser utilizada para mejorar o incluso habilitar varios servicios.",
        "Habiendo recopilado la información de contexto de todos los usuarios disponibles, ahora es posible destilar cierta información sobre el contexto de un grupo específico.",
        "La información sobre el contexto de un grupo incluye cuántos miembros tiene actualmente el grupo, si el grupo se reúne en este momento, qué miembros participan en una reunión, cuántos miembros han leído cuáles de las publicaciones disponibles de otros miembros del equipo, y así sucesivamente.",
        "Por lo tanto, se necesita información adicional como una lista de miembros para cada grupo.",
        "Estas listas pueden ser ensambladas manualmente (por usuarios que se unen y salen de grupos) o recuperadas automáticamente.",
        "El contexto de un grupo es un contexto secundario y se obtiene de los contextos disponibles de los miembros del grupo.",
        "Cada vez que cambia el contexto de un miembro del grupo, el contexto de todo el grupo cambia y debe ser recalculado.",
        "Con conocimiento sobre el contexto del usuario y el contexto de los grupos a los que pertenece, podemos ofrecer varios servicios sensibles al contexto al usuario, los cuales mejoran sus habilidades de interacción.",
        "Una breve descripción de estos servicios se da en el capítulo 4.4. 4.4 Soporte de Interacción en Grupo 4.4.1 Visualización de Información de Ubicación Una característica importante es la visualización de información de ubicación, permitiendo a los usuarios estar al tanto de la ubicación de otros usuarios y miembros de los grupos a los que se unió, respectivamente.",
        "Como ya se describió en el capítulo 2, utilizamos dos formas diferentes de visualización.",
        "Quizás el más importante sea mostrar la información de ubicación en la lista de contactos del mensajero instantáneo, justo al lado del nombre, de manera que siempre sea visible sin llamar la atención de los usuarios (en comparación con una vista bidimensional, por ejemplo, que requiere una ventana propia para mostrar un mapa del entorno).",
        "Debido al espacio limitado en la lista de contactos, ha sido necesario implementar algún tipo de concepto de nivel de detalle.",
        "Al utilizar un modelo de ubicación jerárquico, podemos determinar la ubicación común más precisa de dos usuarios.",
        "En la lista de contactos, se muestra la ubicación simbólica actual un nivel por debajo de la ubicación común previamente calculada.",
        "Si, por ejemplo, el usuario A actualmente reside en la habitación P121 en el primer piso de un edificio y el usuario B, que debe aparecer en la lista de contactos del usuario A, está en la habitación P304 en el tercer piso, la ubicación común más precisa de estos dos usuarios es el edificio en el que se encuentran.",
        "Por esa razón, el piso (es decir, un nivel más allá de la ubicación común, es decir, el edificio) del usuario B se muestra en la lista de contactos del usuario A.",
        "Si ambas personas residen en el mismo piso o incluso en la misma habitación, la habitación estaría ocupada.",
        "La Figura 5 muestra una captura de pantalla del Simple Instant Messenger3, donde la ubicación actual de aquellas personas cuya ubicación es conocida por GISS, se muestra entre paréntesis justo al lado de su nombre.",
        "Encima de la imagen, se muestra la barra de herramientas GISS integrada y mejorada, que actualmente contiene la siguiente funcionalidad implementada (de izquierda a derecha): Comunicación asincrónica para grupos (ver capítulo 4.4.4), recordatorios contextuales (ver capítulo 4.4.6), visualización bidimensional de información de ubicación, formación y gestión de grupos (ver capítulo 4.4.2), gestión de disponibilidad contextual (ver capítulo 4.4.5) y finalmente un botón para terminar GISS.",
        "Figura 5.",
        "La integración de GISS en Simple Instant Messenger3. Dado que mostrar solo esta forma abreviada de la ubicación puede no ser suficiente para el usuario, ya que puede querer ver la posición más precisa disponible, se muestra una posición completamente calificada si se hace clic en un nombre de la lista de contactos (por ejemplo, en la forma de escritorio@habitación2@departamento1@primerpiso@edificio 1@campus).",
        "La segunda forma posible de visualización es una gráfica.",
        "Hemos evaluado una vista tridimensional, la cual se basaba en un modelo VRML del área respectiva (cf.",
        "Figura 6).",
        "Debido a deficiencias en la navegación y problemas de usabilidad, decidimos utilizar una vista bidimensional del piso (se le denomina nivel en la jerarquía de ubicación, cf.",
        "Figura 4).",
        "Otros niveles de granularidad como sección (por ejemplo, edificio) y región (por ejemplo, campus) también se proporcionan.",
        "En esta vista basada en el plano del piso, las ubicaciones actuales se muestran al estilo de los contactos de ICQ2, que se colocan en la ubicación actualmente detectada de la persona respectiva.",
        "El estado de disponibilidad de un usuario, por ejemplo, ausente si no está en la computadora en este momento, o ocupado si no desea ser molestado, se visualiza mediante la codificación de colores de la flor ICQ2 a la izquierda del nombre.",
        "Además, la vista del plano del piso muestra los llamados post-its virtuales, que son contrapartes virtuales de los post-its de la vida real y sirven como nuestro medio de comunicación asincrónica (más información sobre los post-its virtuales se puede encontrar en el capítulo 4.4.4).",
        "Figura 6. Vista en 3D del piso (VRML). La Figura 7 muestra el mapa bidimensional de un cierto piso, donde varios usuarios se encuentran actualmente ubicados (visualizados por su nombre y la flor a la izquierda).",
        "La ubicación del cliente, en la que se muestra en el mapa, se visualiza mediante un círculo verde.",
        "Hacia abajo a la derecha, se pueden ver dos notas adhesivas virtuales.",
        "Figura 7. Vista en 2D del suelo. Otra característica de la vista en 2D es la visualización del historial de ubicaciones de los usuarios.",
        "Al almacenar el historial completo de las ubicaciones de un usuario junto con una marca de tiempo, podemos proporcionar información sobre los lugares donde ha estado en el pasado.",
        "Cuando el ratón se mueve sobre el nombre de un usuario en la vista 2D, las huellas de un usuario, colocadas en los lugares donde ha estado, se desvanecen más intensamente cuanto más antigua sea la información de ubicación. 95 4.4.2 Formación y Gestión de Grupos Para apoyar la interacción en grupos, primero es necesario formar grupos.",
        "Como los grupos pueden tener diferentes propósitos, distinguimos dos tipos de grupos.",
        "Los llamados grupos estáticos son grupos que se crean manualmente con personas que se unen y abandonan.",
        "Los grupos estáticos se pueden dividir aún más en dos subtipos.",
        "En grupos estáticos abiertos, cualquiera puede unirse y salir en cualquier momento, útil por ejemplo para formar un grupo de asistentes a conferencias de algún tipo de grupo de interés.",
        "Los grupos estáticos cerrados tienen un propietario, quien decide qué personas pueden unirse, aunque todos podrían irse en cualquier momento.",
        "Los grupos cerrados permiten a los usuarios, por ejemplo, crear un grupo con sus amigos, pudiendo así comunicarse fácilmente con ellos.",
        "En contraste con eso, también apoyamos la creación de grupos dinámicos.",
        "Se forman entre personas que se encuentran en el mismo lugar al mismo tiempo.",
        "La creación de grupos dinámicos solo se realiza en lugares donde tiene sentido formar grupos, por ejemplo en aulas o salas de reuniones, pero no en pasillos o exteriores.",
        "Tampoco tendría mucho sentido formar un grupo solo con las personas que residen en el sector frontal izquierdo de un salón; en cambio, se debería considerar todo el salón.",
        "Por estas razones, todas las ubicaciones definidas en la jerarquía están etiquetadas, ya sea que permitan la formación de grupos o no.",
        "Los grupos dinámicos no solo se forman en función de la granularidad de las habitaciones, sino también en niveles superiores de la jerarquía, por ejemplo, con las personas que actualmente residen en el área de un departamento.",
        "Dado que los miembros de los grupos dinámicos cambian constantemente, es posible crear un grupo estático abierto a partir de ellos. 4.4.3 Comunicación Sincrónica para Grupos La forma más importante de comunicación sincrónica en las computadoras hoy en día es la mensajería instantánea; algunas personas incluso consideran que la mensajería instantánea es la verdadera aplicación estrella en Internet.",
        "Esto también ha motivado la decisión de construir GISS sobre un sistema de mensajería instantánea.",
        "En los sistemas de mensajería de hoy en día, se brinda un amplio soporte a la comunicación de igual a igual.",
        "Sin embargo, cuando se trata de comunicación en grupos, el apoyo suele ser bastante deficiente la mayor parte del tiempo.",
        "A menudo, solo se admite enviar un mensaje a múltiples destinatarios, sin contar con medios para tener en cuenta el estado actual de los destinatarios.",
        "Además, los grupos solo pueden formarse con miembros de la lista de contactos, por lo tanto, no es posible enviar mensajes a un grupo donde no se conocen a todos sus miembros (lo cual puede ser el caso en entornos donde los participantes de una conferencia forman un grupo).",
        "Nuestro enfoque no tiene las restricciones mencionadas.",
        "Introducimos entradas de grupo en la lista de contactos de los usuarios; le permitimos a él o a ella enviar mensajes a este grupo fácilmente, sin saber quién exactamente es actualmente miembro de este grupo.",
        "Además, los mensajes de grupo solo se entregan a personas que no están ocupadas en ese momento, evitando así una interrupción por un mensaje que posiblemente no sea importante para el usuario.",
        "Estas funciones no pueden llevarse a cabo en la red del mensajero en sí misma, por lo que cada vez que se envía un mensaje a una cuenta de grupo, lo interceptamos y lo dirigimos a través de nuestro sistema a todos los destinatarios, que están disponibles en un momento determinado.",
        "La comunicación a través de una cuenta de grupo también se almacena de forma centralizada, lo que permite a las personas consultar los mensajes perdidos o simplemente ver el historial de mensajes. 4.4.4 Comunicación Asincrónica para Grupos La comunicación asincrónica en grupos no es una idea nueva.",
        "El objetivo de este enfoque no es reinventar la rueda, ya que el correo electrónico es quizás la forma más ampliamente utilizada de comunicación asincrónica en computadoras y está ampliamente aceptado y estandarizado.",
        "En nuestro trabajo, buscamos la combinación de comunicación asincrónica con conciencia de ubicación.",
        "Por esta razón, introducimos el concepto de los llamados post-its virtuales (cp. [13]), que son mensajes que están vinculados a ubicaciones físicas.",
        "Estos post-its virtuales pueden ser visibles para todos los usuarios que pasen por allí o pueden estar restringidos para ser visibles solo para ciertos grupos de personas.",
        "Además, un post-it virtual también puede tener una fecha de caducidad después de la cual se elimina y ya no se muestra.",
        "Los post-its virtuales también pueden ser comentados por otros, proporcionando así algún tipo de interacción similar a un foro, donde cada post-it forma un hilo.",
        "Las notas adhesivas virtuales se muestran automáticamente cada vez que un usuario (disponible) pasa por primera vez.",
        "Posteriormente, los post-its se pueden acceder a través del visor 2D, donde se muestran todos los post-its visibles.",
        "Todos los lectores de una nota adhesiva quedan registrados y se muestran al verla, lo que proporciona cierto nivel de conciencia sobre las actividades de los miembros del grupo en el pasado. 4.4.5 Gestión de disponibilidad consciente del contexto Los mensajeros instantáneos en general proporcionan algún tipo de información sobre la disponibilidad de un usuario.",
        "Aunque esta información solo puede definirse de forma muy general, hemos decidido utilizar estos medios para recopilar el contexto de la actividad, ya que la introducción de uno adicional disminuiría considerablemente la usabilidad del sistema.",
        "Para apoyar al usuario en la gestión de su disponibilidad, proporcionamos una interfaz que le permite definir reglas para adaptar su disponibilidad al contexto actual.",
        "Estas reglas siguen la forma de evento (E) si condición (C) entonces acción (A), lo cual está directamente respaldado por las reglas ECA del Marco de Contexto descritas en el capítulo 1.3.",
        "La prueba de condiciones se desencadena periódicamente mediante eventos de lanzamiento (cada vez que cambia el contexto de un usuario).",
        "La condición en sí misma es definida por el usuario, quien puede solicitar el cambio de su estado de disponibilidad como la acción en la regla.",
        "Como condición, el usuario puede definir su ubicación, un momento específico (también activando recordatorios diarios, semanales o mensuales) o cualquier combinación lógica de estos criterios. Los recordatorios contextuales [14] se utilizan para dar al usuario la oportunidad de definir tareas y ser recordado de ellas cuando se cumplen ciertos criterios.",
        "Por lo tanto, un recordatorio puede ser visto como un post-it para uno mismo, el cual solo es visible en ciertos casos.",
        "Los recordatorios pueden estar vinculados a un lugar o tiempo específico, pero también a la proximidad espacial de usuarios o grupos.",
        "Estos criterios se pueden combinar con operadores booleanos, proporcionando así un medio poderoso para recordar al usuario las tareas que desea realizar cuando ocurre un cierto contexto.",
        "Un recordatorio solo aparecerá la primera vez que el contexto real cumpla con el criterio definido.",
        "Al mostrar el recordatorio, el usuario tiene la oportunidad de volver a enviarlo para ser recordado nuevamente, por ejemplo, cinco minutos después o la próxima vez que cierto usuario esté en proximidad espacial. 96 4.4.7 Reconocimiento y Notificación Contextual de Reuniones de Grupo Con la información de contexto disponible, intentamos reconocer las reuniones de un grupo.",
        "La determinación de los criterios, cuando el sistema reconoce que un grupo está teniendo una reunión, es parte del trabajo en curso.",
        "En un primer enfoque, utilizamos la ubicación y el contexto de actividad de los miembros del grupo para determinar una reunión.",
        "Siempre que más del 50 % de los miembros de un grupo estén disponibles en un lugar donde se considere que tiene sentido realizar una reunión (por ejemplo, no en un pasillo), se crea una nota de reunión en un post-it en ese lugar y se notifica a todos los miembros ausentes del grupo sobre la reunión y el lugar donde se llevará a cabo.",
        "Durante la reunión, la función de comentarios de las notas adhesivas virtuales proporciona un medio para tomar notas para todos los participantes.",
        "Cuando los miembros se unen o abandonan la reunión, esto se añade automáticamente como una nota a la lista de comentarios.",
        "Al igual que el reconocimiento del inicio de una reunión, el reconocimiento de su final sigue siendo parte del trabajo en curso.",
        "Si se reconoce el final de la reunión, todos los miembros del grupo reciben la lista completa de comentarios como un protocolo de reunión al final de la reunión.",
        "CONCLUSIONES Este artículo discutió el potencial del apoyo para la interacción grupal mediante el uso de información de contexto.",
        "Primero, introdujimos las nociones de contexto y computación de contexto y motivamos su valor para apoyar la interacción grupal.",
        "Se presenta una arquitectura para apoyar la interacción grupal consciente del contexto en entornos móviles y distribuidos.",
        "Está construido sobre un marco flexible y extensible, lo que permite una fácil adaptación a las fuentes de contexto disponibles (por ejemplo, agregando sensores adicionales) así como la forma de representación requerida.",
        "Hemos desarrollado prototípicamente un conjunto de servicios que mejoran la interacción grupal teniendo en cuenta el contexto actual de los usuarios y el contexto de los propios grupos.",
        "Las características importantes son la formación dinámica de grupos, la visualización de la ubicación en un mapa bidimensional, así como la integración discreta en un mensajero instantáneo, la comunicación asincrónica a través de notas virtuales, que están vinculadas a ciertas ubicaciones, y un sistema de gestión de disponibilidad consciente del contexto, que adapta el estado de disponibilidad de un usuario a su situación actual.",
        "Para proporcionar información de ubicación, hemos implementado un subsistema para la adquisición automatizada de información de ubicación y proximidad proporcionada por varios sensores, que ofrece una presentación independiente de la tecnología de ubicaciones y proximidades espaciales entre usuarios y fusiona esta información utilizando algoritmos de fusión independientes de los sensores.",
        "Un historial de ubicaciones, así como de proximidades espaciales, se almacena en una base de datos, lo que permite habilitar servicios basados en el historial de contexto.",
        "REFERENCIAS [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modelado del comportamiento consciente del contexto mediante reglas ECA interpretadas.",
        "En Actas de la Conferencia Internacional sobre Computación Paralela y Distribuida (EUROPAR03). (Klagenfurt, Austria, 26-29 de agosto de 2003).",
        "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Aplicaciones Conscientes del Contexto: Del Laboratorio al Mercado.",
        "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. Una encuesta de la investigación en computación móvil consciente del contexto.",
        "Informe técnico TR2000-381, Departamento de Ciencias de la Computación, Dartmouth College, Hanover, New Hampshire, noviembre de 2000. [4] Dey, A.",
        "Proporcionando Soporte Arquitectónico para Aplicaciones Conscientes del Contexto del Edificio.",
        "Tesis de doctorado, Departamento de Ciencias de la Computación, Instituto de Tecnología de Georgia, Atlanta, noviembre de 2000. [5] Svetlana Domnitcheva.",
        "Modelado de ubicación: Estado del arte y desafíos.",
        "En Actas del Taller sobre Modelado de Ubicación para la Computación Ubicua. (Atlanta, Georgia, Estados Unidos, 30 de septiembre de 2001). 13-19. [6] Ferscha, A. Conciencia del Espacio de Trabajo en Equipos Virtuales Móviles.",
        "En Actas del 9º Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE00). (Gaithersburg, Maryland, 14-16 de marzo de 2000).",
        "IEEE Computer Society Press, 272-277. [7] Ferscha, A. \n\nIEEE Computer Society Press, 272-277. [7] Ferscha, A.",
        "Coordinación en entornos de computación ubicua.",
        "En Actas del Duodécimo Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE-2003). (9-11 de junio de 2003).",
        "IEEE Computer Society Press, 3-9. [8] Leonhard, U. \n\nIEEE Computer Society Press, 3-9. [8] Leonhard, U.",
        "Apoyando la Conciencia de Ubicación en Sistemas Distribuidos Abiertos.",
        "Tesis de doctorado, Departamento de Computación, Imperial College, Londres, mayo de 1998. [9] Ryan, N., Pascoe, J., Morse, D. Trabajo de campo de realidad aumentada: el asistente arqueológico consciente del contexto.",
        "Gaffney, V., Van Leusen, M., Exxon, S. (eds.) -> Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
        "Aplicaciones informáticas en Arqueología (1997) [10] Schilit, B.N., Theimer, M. Difusión de información de mapas activos a dispositivos móviles.",
        "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N. \n\nRed de IEEE, 8(5) (1994), 22-32. [11] Schilit, B.N.",
        "Una arquitectura de sistema para la computación móvil consciente del contexto.",
        "Tesis de doctorado, Universidad de Columbia, Departamento de Ciencias de la Computación, mayo de 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
        "Apoyando grupos sociales persistentes en entornos de computación ubicua utilizando un servicio de grupo efímero consciente del contexto.",
        "En Actas de la Segunda Conferencia Internacional de IEEE sobre Computación y Comunicaciones Pervasivas (PerCom04). (14-17 de marzo de 2004).",
        "IEEE Computer Society Press, 287-296. [13] Pascoe, J. \n\nIEEE Computer Society Press, 287-296. [13] Pascoe, J.",
        "La arquitectura de Stick-e Note: Extendiendo la interfaz más allá del usuario.",
        "Actas de la 2ª Conferencia Internacional de Interfaces de Usuario Inteligentes (IUI97). (Orlando, EE. UU., 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: Un Sistema Consciente del Contexto para Apoyar Recordatorios.",
        "Actas del 2º Simposio Internacional sobre Computación Portátil y Ubicua (HUC00). (Bristol, Reino Unido, 2000), 172-186. 97"
    ],
    "error_count": 3,
    "keys": {
        "context awareness": {
            "translated_key": "conciencia del contexto",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>context awareness</br> for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [
                "<br>context awareness</br> for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments."
            ],
            "translated_annotated_samples": [
                "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil."
            ],
            "translated_text": "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil. Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la interacción en grupo. A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la interacción en grupo. Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos. H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica. Términos generales de diseño, Experimentación 1. INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica. Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar. Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones. Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real. Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS). Apoya la interacción grupal en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás. En los siguientes subcapítulos, daremos una breve descripción sobre la computación consciente del contexto y motivaremos sus beneficios para apoyar la interacción en grupo. Se presenta un marco de software para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS. El capítulo 2 presenta la arquitectura de GISS, y los capítulos 3 y 4 discuten los conceptos de localización y de interacción en grupo de GISS con más detalle. El capítulo 5 ofrece un resumen final de nuestro trabajo. 1.1 ¿Qué es la Computación Contextual? Según el Diccionario en línea de Merriam-Webster, el contexto se define como las condiciones interrelacionadas en las que algo existe o ocurre. Dado que esta definición es muy general, se han realizado muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos. La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para contexto. El término consciente del contexto fue introducido por primera vez en [10], donde el contexto se refiere a la ubicación, identidades de personas y objetos cercanos, y cambios en esos objetos. En [2], el contexto también se define mediante una enumeración de ejemplos, como la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación del usuario, el entorno, la identidad y el tiempo. Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información que se pueda utilizar para caracterizar la situación de una entidad. Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluyendo al usuario y a las propias aplicaciones. [4] identifica cuatro tipos principales de información de contexto (a veces referidos como dimensiones de contexto), que son - con respecto a la caracterización de la situación de una entidad - más importantes que otros. Estos son la ubicación, la identidad, el tiempo y la actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundarios). Por ejemplo, si conocemos la identidad de una persona, podemos derivar fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico). Según esta definición, [4] define un sistema como consciente del contexto si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación. Figura 1. Las capas de un sistema consciente del contexto. La computación del contexto se basa en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y utilizar el contexto obtenido (ejecución automática, presentación, etiquetado). Para hacer esto, hay algunas capas intermedias (ver Figura 1). Primero, la información de contexto de bajo nivel obtenida debe ser transformada, agregada e interpretada (transformación de contexto) y representada en un modelo abstracto del mundo de contexto (representación de contexto), ya sea centralizado o descentralizado. Finalmente, la información de contexto almacenada se utiliza para activar ciertos eventos de contexto (activación de contexto). Después de estas definiciones abstractas y formales sobre qué es el contexto y la computación de contexto, nos centraremos ahora en el objetivo principal de este trabajo, es decir, cómo la interacción de los miembros de un grupo móvil puede ser apoyada mediante el uso de información de contexto. En [6] hemos identificado que los sistemas organizativos son cruciales para apoyar a los grupos móviles (ver Figura 2). Primero, tiene que haber un Sistema de Gestión de Información y Conocimiento, que sea capaz de apoyar a un equipo con sus necesidades de procesamiento de información y recopilación de conocimiento. La siguiente parte es el Sistema de Conciencia, que se dedica a la percepción de los efectos de la actividad en equipo. Esto se logra comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios. Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea de forma sincrónica o asincrónica, y para el acceso compartido a artefactos, como documentos. Los sistemas de movilidad despliegan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como la captura y entrega de información de conciencia desde y hacia cualquier lugar. Finalmente, pero no menos importante, el sistema de innovación organizacional integra aspectos del equipo en sí mismo, como roles, liderazgo e instalaciones compartidas. Con respecto a estos cinco aspectos de apoyo al equipo, nos enfocamos en la interacción y cubrimos parcialmente el apoyo a la movilidad y la conciencia. La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros. En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para apoyar la interacción grupal. Creemos que la información sobre la situación actual de una persona aporta un valor añadido a los sistemas de interacción grupal existentes. La información de contexto facilita la interacción grupal al permitir que cada miembro esté al tanto del estado de disponibilidad o la ubicación actual de los demás miembros del grupo, lo que a su vez hace posible formar grupos de manera dinámica, colocar notas virtuales en el mundo real o determinar qué personas están cerca. Figura 2. Apoyo para Grupos Móviles [6]. La mayoría de las aplicaciones de hoy en día que son conscientes del contexto utilizan únicamente la ubicación y el tiempo, y la ubicación se considera un tipo crucial de información de contexto [3]. También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo se centra en la utilización de la información de ubicación y la información sobre los usuarios en proximidad espacial. Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizada, no es suficiente para respaldar la interacción grupal, por lo cual también aprovechamos los otros tres tipos principales, a saber, identidad, tiempo y actividad. Esto proporciona una descripción completa de la situación actual de un usuario y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen detalladamente en el capítulo 4.4. Cuando observamos los tipos de información de contexto mencionados anteriormente, podemos ver que todos ellos están centrados en el usuario individual, teniendo en cuenta únicamente el contexto del propio usuario. Creemos que, para apoyar la interacción grupal, también se debe tener en cuenta el estatus del propio grupo. Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el contexto de grupo, que abarca más que la suma de los contextos individuales de los miembros. El contexto de grupo incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un grupo en particular se reúne en este momento. Middleware de contexto 1.3 El Sistema de Soporte de Interacción de Grupo (GISS) utiliza el marco de software presentado en [1], que sirve como middleware para desarrollar aplicaciones sensibles al contexto. Este llamado Marco de Contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes. Una característica principal del marco es la abstracción de la recuperación de información de contexto a través de varios sensores y su entrega a un nivel donde no se percibe ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes mecanismos de recuperación de contexto; la recuperación de información está oculta para el desarrollador de aplicaciones. Esto se logra mediante entidades llamadas, que describen objetos, por ejemplo, un usuario humano, que son importantes para un determinado escenario de contexto. Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, los cuales pueden ser cargados en la entidad. Estos atributos son piezas complejas de software, que se implementan como clases de Java. Los atributos típicos son encapsulaciones de sensores, pero también pueden ser utilizados para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre cambios de ubicación de los usuarios. Cada entidad puede contener una colección de tales atributos, donde una entidad en sí misma es un atributo. El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos desde el almacenamiento local o a través de la red. Para cargar e implementar nuevos atributos, una entidad debe hacer referencia a un cargador de clases y una capa de transporte y búsqueda, que gestiona el mecanismo de búsqueda para descubrir otras entidades y el transporte. Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atributos poseen estas entidades. La comunicación entre entidades y atributos se basa en eventos de contexto. Cada atributo es capaz de desencadenar eventos, los cuales están dirigidos a otros atributos y entidades respectivamente, independientemente de en qué computadora física estén ejecutándose. Entre otras cosas, un evento contiene el nombre del evento y una lista de parámetros que proporcionan información sobre el propio evento. Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (Evento-Condición-Acción) para definir el comportamiento del sistema de contexto. Por lo tanto, cada entidad tiene un intérprete de reglas, que captura eventos desencadenados, verifica las condiciones asociadas a ellos y provoca ciertas acciones. Estas reglas son referenciadas por la configuración XML de la entidad. Una regla en sí misma incluso puede desencadenar la inserción de nuevas reglas o la descarga de reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto. En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar los datos del sensor de bajo nivel de las aplicaciones de alto nivel y oculta los detalles de comunicación externa al desarrollador de la aplicación. Además, es capaz de adaptar su comportamiento dinámicamente cargando atributos, entidades o reglas ECA en tiempo de ejecución. VISIÓN GENERAL DE LA ARQUITECTURA Dado que GISS utiliza el Marco de Contexto descrito en el capítulo 1.3 como middleware, cada usuario está representado por una entidad, al igual que el servidor central, que es responsable de la transformación de contexto, la representación de contexto y la activación de contexto (cf. Figura 1). Una parte principal de nuestro trabajo se centra en la adquisición automatizada de información de posición y su provisión independiente de sensores a nivel de aplicación. No solo percibimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos. Al desarrollar la arquitectura, nos enfocamos en mantener el cliente lo más simple posible y reducir al mínimo la comunicación entre el cliente y el servidor. Cada cliente puede tener varios sensores de ubicación y/o proximidad adjuntos, los cuales están encapsulados por los atributos respectivos del Marco de Contexto (Encapsulación de Sensores). Estos atributos son responsables de integrar implementaciones de sensores nativos en el Marco de Contexto y enviar información de posición dependiente del sensor al servidor. Consideramos muy importante apoyar diferentes tipos de sensores al mismo tiempo, con el fin de mejorar la precisión de la ubicación por un lado, y proporcionar un entorno de detección de ubicación ubicuo con transiciones fluidas entre diferentes técnicas de detección de ubicación por otro lado. Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstraen la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor). Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas a ubicaciones estandarizadas. La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de Fusión de Sensores, uno para ubicaciones simbólicas y otro para proximidades espaciales. Su trabajo consiste en fusionar la información de ubicación y proximidad de los clientes, respectivamente, la cual se describe detalladamente en el Capítulo 3.3. Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de Fusión de Sensores notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación. Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede ser fácilmente ampliado con sensores adicionales, simplemente implementando los (generalmente dos) atributos para encapsular los sensores (algunos sensores pueden no necesitar una parte del lado del cliente), abstrayendo las posiciones físicas y observando la interfaz con el Núcleo de GISS. Figura 3. La arquitectura del Sistema de Soporte de Interacción de Grupo (GISS). El atributo central del núcleo de GISS es el coordinador principal de la aplicación tal como se muestra al usuario. No solo sirve como una interfaz al subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad). Cada vez que se detecta un cambio en el contexto de uno o más usuarios, el núcleo de GISS evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y en los demás miembros de estos grupos. Cuando sea necesario, se lanzan eventos a los clientes afectados para activar actividades contextualmente conscientes, como cambiar la presentación de la información de conciencia o la ejecución de servicios. La parte del cliente de la aplicación se mantiene lo más simple posible. Además, el diseño modular no solo fue un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario. Por lo tanto, la interfaz de usuario completa puede intercambiarse fácilmente si se tienen en cuenta y se comprenden todos los eventos definidos por el nuevo atributo de la interfaz. La interfaz de usuario actualmente implementada está dividida en dos partes, las cuales también están representadas por dos atributos. El atributo central en el lado del cliente es la llamada Encapsulación de Mensajería Instantánea, que por un lado interactúa con el servidor a través de eventos y por otro lado sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario. Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente, el Simple Instant Messenger (SIM)3 compatible con ICQ2. Hemos elegido un mensajero instantáneo como interfaz porque proporciona una interfaz conocida para la mayoría de los usuarios y facilita una integración fluida del soporte de interacción grupal, aumentando así la aceptación y facilidad de uso. Dado que la funcionalidad básica del mensajero instantáneo, que es servir como cliente en una red de mensajería instantánea, sigue completamente operativa, nuestra aplicación puede utilizar las funciones ya proporcionadas por el mensajero. Por ejemplo, los contextos de actividad e identidad se derivan de la red de mensajería tal como se describe más adelante. La Encapsulación de Mensajería Instantánea también es responsable de admitir la comunicación en grupo. A través de la interfaz del mensajero, proporciona medios de comunicación síncrona y asíncrona, así como un sistema de recordatorio contextual y herramientas para gestionar grupos y el propio estado de disponibilidad. La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, la cual está implementada en el Visor de atributos. La implementación actual proporciona un mapa bidimensional del campus, pero puede ser fácilmente reemplazada por otras visualizaciones, como un modelo VRML tridimensional. Además, esta visualización se utiliza para mostrar los artefactos de la comunicación asincrónica. Basado en una vista del plano de la zona geográfica en la que se encuentra actualmente el usuario, ofrece una rápida visión general de las personas cercanas, su estado y proporciona medios para interactuar con ellas. En los siguientes capítulos 3 y 4, describimos con más detalle el backend de detección de ubicación y el frontend de la aplicación para apoyar la interacción grupal. SENSADO DE UBICACIÓN En el siguiente capítulo, presentaremos un modelo de ubicación que se utiliza para representar ubicaciones; posteriormente, describiremos la integración de sensores de ubicación y proximidad en más detalle. Finalmente, echaremos un vistazo más de cerca a la fusión de la información de ubicación y proximidad, adquirida por varios sensores. Modelo de Ubicación Un modelo de ubicación (es decir, una representación de contexto para la información de contexto de ubicación) es necesario para representar las ubicaciones de los usuarios, con el fin de poder facilitar consultas relacionadas con la ubicación, como por ejemplo, dada una ubicación, devolver una lista de todos los objetos allí o dado un objeto, devolver su ubicación actual. En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representa la ubicación como coordenadas. Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como Sala P111 o Edificio de Física, porque no necesitamos datos de ubicación geométrica. En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación. Además, utilizamos una jerarquía de contención de ubicaciones simbólicas similar a la introducida en [11], que consta de regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos a su vez contienen habitaciones. También distinguimos cuatro tipos, a saber, región (por ejemplo, un campus completo), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, un piso específico en un edificio) y área (por ejemplo, una habitación específica). Introducimos un quinto tipo de ubicación, al que nos referimos como semántico. Estas llamadas ubicaciones semánticas pueden aparecer en cualquier nivel de la jerarquía y pueden estar anidadas, pero no necesariamente tienen una representación geográfica. Ejemplos de tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones. Figura 4. Jerarquía de Contención de Ubicaciones Simbólicas La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto. 3.2 Sensores Nuestra arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación, y sensores de proximidad, que detectan proximidades espaciales entre usuarios. Como se describe arriba, cada sensor tiene una implementación del lado del servidor y, en la mayoría de los casos, también una implementación correspondiente del lado del cliente. Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular. Tales notificaciones se realizan cada vez que el sensor adquiere nueva información. Por lo tanto, los atributos de abstracción del sensor son responsables de detectar cuándo un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si ha sido desconectado por el usuario) o cuando la posición o proximidad no se pueden determinar más (por ejemplo, si). El lector de RFID no puede detectar etiquetas y notificará a la fusión de sensores correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor. Los atributos de abstracción de sensores de ubicación correspondientes recopilan estas posiciones físicas proporcionadas por los sensores de todos los usuarios, y realizan una búsqueda en el repositorio para obtener la ubicación simbólica asociada. Esto requiere ciertas tablas para cada sensor, las cuales asignan posiciones físicas a ubicaciones simbólicas. Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones. Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular. Hemos implementado prototípicamente tres tipos de sensores de ubicación, basados en WLAN (IEEE 802.11), Bluetooth y RFID (Identificación por Radiofrecuencia). Hemos elegido estos tres sensores completamente diferentes debido a sus diferencias en cuanto a precisión, cobertura y esfuerzo administrativo, con el fin de evaluar la flexibilidad de nuestro sistema (ver Tabla 1). El más preciso es un sensor de RFID, que se basa en un lector de RFID activo. Tan pronto como el lector se conecta al cliente, escanea las etiquetas RFID activas en rango y transmite sus números de serie al servidor, donde se asignan a ubicaciones simbólicas. También tenemos en cuenta el RSSI (Radio Signal Strength Information), que proporciona una precisión de posición de unos pocos centímetros y nos permite determinar cuál etiqueta RFID está más cercana. Debido a esta alta precisión, el RFID se utiliza para localizar usuarios dentro de habitaciones. La administración es bastante simple; una vez que se coloca una nueva etiqueta RFID, su número de serie simplemente debe asignarse a una única ubicación simbólica. Una desventaja es la baja disponibilidad, que se puede atribuir al hecho de que los lectores de RFID siguen siendo muy costosos. El segundo es un sensor WLAN 802.11. Por lo tanto, integramos un sistema de posicionamiento WLAN comercial puramente basado en software para rastrear clientes en la infraestructura WLAN del campus universitario. La precisión de la posición alcanzada se encuentra en el rango de unos pocos metros y, por lo tanto, es adecuada para la detección de ubicación a nivel de habitaciones. Una gran desventaja es que un mapa de toda el área debe ser calibrado con puntos de medición a una distancia de 5 metros cada uno. Debido a que la mayoría de las computadoras móviles están equipadas con tecnología WLAN y el sistema de posicionamiento es una solución solo de software, casi todos pueden usar este tipo de sensor. Finalmente, hemos implementado un sensor de Bluetooth, que detecta etiquetas de Bluetooth (es decir, Módulos Bluetooth con posición conocida) en rango y los transmite al servidor que los mapea a ubicaciones simbólicas. Debido al hecho de que no utilizamos información de la fuerza de la señal en la implementación actual, la precisión es superior a 10 metros y, por lo tanto, una única dirección MAC de Bluetooth está asociada con varios lugares simbólicos, de acuerdo a las ubicaciones físicas que cubre dicho módulo de Bluetooth. Esto conlleva la desventaja de que el alcance de cada etiqueta Bluetooth debe ser determinado y mapeado a ubicaciones simbólicas dentro de este alcance. Tabla 1. Comparación de sensores implementados Precisión del sensor Cobertura Administración RFID < 10 cm pobre fácil WLAN 1-4 m muy buena muy lenta Bluetooth ~ 10 m buena lenta 3.2.2 Sensores de proximidad Cualquier sensor capaz de detectar si dos usuarios están en proximidad espacial se denomina sensor de proximidad. Similar a los sensores de ubicación, los atributos de abstracción del sensor de proximidad recopilan información de proximidad física de todos los usuarios y los transforman en asignaciones de identificaciones de usuario. Hemos implementado dos tipos de sensores de proximidad, uno basado en Bluetooth y otro en ubicaciones simbólicas fusionadas (ver capítulo 3.3.1). La implementación de Bluetooth va de la mano con la implementación del sensor de ubicación basado en Bluetooth. Las direcciones MAC de Bluetooth ya determinadas en el rango de un cliente específico se están comparando con las de todos los demás clientes, y cada vez que el atributo Abstracción del Sensor de Bluetooth detecta congruencia, notifica al sensor de fusión de proximidad al respecto. El segundo sensor se basa en ubicaciones simbólicas procesadas por la Fusión de Sensores de Ubicación, por lo tanto no necesita una implementación del lado del cliente. Cada vez que la ubicación simbólica fusionada de un usuario específico cambia, verifica si se encuentra en la misma ubicación simbólica que otro usuario y notifica nuevamente a la fusión del sensor de proximidad sobre la cercanía entre estos dos usuarios. El rango puede ser restringido a cualquier nivel de la jerarquía de contención de ubicación, por ejemplo, a nivel de habitación. Un problema actualmente sin resolver es la granularidad incomparable de diferentes sensores de proximidad. Por ejemplo, las ubicaciones simbólicas en el mismo nivel en la jerarquía de ubicaciones generalmente no cubren la misma área geográfica. 3.3 El núcleo de fusión de sensores del subsistema de detección de ubicación es la fusión de sensores. Combina datos de varios sensores, al mismo tiempo que lidia con diferencias en cuanto a precisión, cobertura y frecuencia de muestreo. Según los dos tipos de sensores descritos en el capítulo 3.2, distinguimos entre la fusión de sensores de ubicación por un lado, y la fusión de sensores de proximidad por otro lado. La fusión de ubicaciones simbólicas, así como la fusión de proximidades espaciales, opera en información estandarizada (cf. Figura 3). Esto tiene la ventaja de que sensores adicionales de posición y proximidad pueden ser añadidos fácilmente o los algoritmos de fusión pueden ser reemplazados por otros más sofisticados. La fusión se realiza para cada usuario por separado y solo tiene en cuenta las mediciones en un punto en el tiempo (es decir, no se utiliza información histórica para determinar la ubicación actual de un usuario específico). El algoritmo recopila todos los eventos generados por los atributos de Abstracción del Sensor, realiza la fusión y activa el atributo del Núcleo GISS si la ubicación simbólica de un usuario específico o la proximidad espacial entre usuarios cambia. Una característica importante es el almacenamiento persistente del historial de ubicación y proximidad en una base de datos para permitir su recuperación en el futuro. Esto permite a las aplicaciones visualizar el movimiento de los usuarios, por ejemplo. 3.3.1 Fusión de Sensores de Ubicación El objetivo de la fusión de información de ubicación es mejorar la precisión y exactitud al combinar el conjunto de ubicaciones simbólicas proporcionadas por varios sensores de ubicación, con el fin de reducir el número de estas ubicaciones al mínimo, idealmente a una única ubicación simbólica por usuario. Esto es bastante difícil, ya que diferentes sensores pueden variar en precisión y frecuencia de muestreo también. El atributo de fusión de sensor de ubicación se activa por eventos, que son lanzados por los atributos de abstracción de sensor de ubicación. Estos eventos contienen información sobre la identidad del usuario en cuestión, su ubicación actual y el sensor mediante el cual se ha determinado la ubicación. Si el atributo Location Sensor Fusion recibe dicho evento, verifica si la cantidad de ubicaciones simbólicas del usuario en cuestión ha cambiado (en comparación con el último evento). Si este es el caso, notifica al atributo principal del GISS sobre todas las ubicaciones simbólicas con las que este usuario está actualmente asociado. Sin embargo, esta información no es muy útil por sí sola si un usuario en particular está asociado con varias ubicaciones. Como se describe en el capítulo 3.2.1, un sensor de ubicación único puede proporcionar múltiples ubicaciones simbólicas. Además, un cierto usuario puede tener varios sensores de ubicación, los cuales proporcionan ubicaciones simbólicas que difieren en precisión (es decir, diferentes niveles en la jerarquía de contención de ubicación). Para hacer frente a este desafío, implementamos un algoritmo de fusión con el fin de reducir el número de ubicaciones simbólicas al mínimo (idealmente a una sola ubicación). En un primer paso, cada ubicación simbólica se asocia con su número de ocurrencias. Una ubicación simbólica puede ocurrir varias veces si es referida por más de un sensor o si un solo sensor detecta múltiples etiquetas, las cuales a su vez hacen referencia a varias ubicaciones. Además, este número se suma al número de ocurrencias previamente calculado de cada ubicación simbólica, que es una ubicación secundaria de la considerada en la jerarquía de contención de ubicaciones. Por ejemplo, si - en la Figura 4 - room2 ocurre dos veces y desk ocurre una sola vez, el valor 2 de room2 se suma al valor 1 de desk, por lo que desk finalmente obtiene el valor 3. En un paso final, solo quedan aquellas ubicaciones simbólicas que están asignadas con el mayor número de ocurrencias. Una reducción adicional se puede lograr asignando prioridades a los sensores (basadas en precisión y confianza) y acumulando estas prioridades para cada ubicación simbólica en lugar de simplemente contar el número de ocurrencias. Si las ubicaciones fusionadas restantes han cambiado (es decir, si difieren de las ubicaciones fusionadas con las que el usuario considerado está actualmente asociado), se les proporciona la marca de tiempo actual, se escribe en la base de datos y se notifica al atributo GISS sobre dónde se encuentra probablemente el usuario. Finalmente, se calcula la ubicación más precisa y común en la jerarquía de ubicaciones (es decir, el límite superior mínimo de estas ubicaciones simbólicas) para obtener una única ubicación simbólica. Si cambia, el atributo principal de GISS se activa nuevamente. 3.3.2 Fusión de Sensores de Proximidad La fusión de sensores de proximidad es mucho más simple que la fusión de ubicaciones simbólicas. El atributo de fusión del sensor de proximidad correspondiente se activa por eventos, que son lanzados por los atributos de abstracción del sensor de proximidad. Estos eventos especiales contienen información sobre la identidad de los dos usuarios involucrados, si actualmente se encuentran en proximidad espacial o si la proximidad ya no persiste, y mediante qué sensor de proximidad se ha detectado esto. Si el atributo de fusión de sensores es notificado por un cierto atributo de abstracción de sensor de proximidad sobre una proximidad espacial existente, primero verifica si estos dos usuarios ya se sabe que están en proximidad (detectado ya sea por otro usuario o por otro sensor de proximidad del usuario, que causó el evento). Si no, este cambio en la proximidad se escribe en el repositorio de contexto con la marca de tiempo actual. De manera similar, si el atributo Fusión de Proximidad es notificado sobre una proximidad finalizada, verifica si los usuarios aún se sabe que están en proximidad, y escribe este cambio en el repositorio si no lo están. Finalmente, si la proximidad espacial entre los dos usuarios realmente cambia, se lanza un evento para notificar al atributo central de GISS sobre esto. 4. INTERACCIÓN CONTEXTUALMENTE SENSIBLE 4.1 Resumen En la mayoría de los sistemas actuales que admiten la interacción en grupos, los medios proporcionados carecen de conciencia del contexto actual del usuario, por lo tanto, no pueden adaptarse a sus necesidades. En nuestro enfoque, utilizamos información de contexto para mejorar la interacción y ofrecer servicios adicionales, lo cual brinda nuevas posibilidades al usuario. Además, creemos que la interacción en grupos también debe tener en cuenta el contexto actual del grupo en sí y no solo el contexto de los miembros individuales del grupo. Por esta razón, también recuperamos información sobre el contexto actual del grupo, derivada de los contextos de los miembros del grupo junto con algún tipo de meta-información (ver capítulo 4.3). Las fuentes de contexto utilizadas para nuestra aplicación corresponden con los cuatro tipos de contexto principales dados en el capítulo 1.1 - identidad (I), ubicación (L), tiempo (T) y actividad (A). Como se mencionó anteriormente, también tenemos en cuenta el contexto del grupo con el que el usuario está interactuando, de modo que podríamos agregar un quinto tipo de información de contexto: la conciencia del grupo (G) - a la clasificación. Usando esta información de contexto, podemos activar actividades sensibles al contexto en las tres categorías descritas en el capítulo 1.1: presentación de información (P), ejecución automática de servicios (A) y etiquetado de contexto a la información para su posterior recuperación (T). La Tabla 2 proporciona una visión general de las actividades que ya hemos implementado; están descritas de manera exhaustiva en el capítulo 4.4. La tabla también muestra qué tipos de información de contexto se utilizan para cada actividad y la categoría en la que podría clasificarse la actividad. 93 Tabla 2. La clasificación de las actividades implementadas con conciencia del contexto es la siguiente: Visualización de la ubicación, Soporte para la construcción de grupos, Soporte para la comunicación sincrónica, Soporte para la comunicación asincrónica, Gestión de disponibilidad, Soporte para la gestión de tareas y Soporte para reuniones. Las razones para implementar estas características son aprovechar los cuatro tipos de información de contexto para apoyar la interacción grupal mediante el uso de un conocimiento integral sobre la situación en la que se encuentra un usuario individual o todo un grupo. Un problema crítico para la aceptación del usuario de un sistema así es la usabilidad de su interfaz. Hemos evaluado varias formas de presentar medios de interacción conscientes del contexto al usuario, hasta llegar a la solución que utilizamos actualmente. Aunque creemos que la interfaz de usuario que se ha implementado actualmente ofrece el mejor equilibrio entre la integración perfecta de funciones y la facilidad de uso, no habría problema en ampliar la arquitectura con otras interfaces de usuario, incluso en diferentes plataformas. La solución elegida se basa en un mensajero instantáneo existente, que ofrece varias posibilidades para integrar nuestro sistema (ver capítulo 4.2). La mayor ventaja de este enfoque es que el usuario se enfrenta a una interfaz gráfica de usuario con la que ya está familiarizado en la mayoría de los casos. Además, nuestro sistema utiliza una cuenta de mensajería instantánea como identificador, de modo que el usuario no tenga que registrarse en ningún otro lugar (por ejemplo, el usuario puede utilizar su cuenta de ICQ2 ya existente). 4.2 Integración de Mensajería Instantánea Nuestro sistema se basa en un mensajero instantáneo existente, el llamado Simple Instant Messenger (SIM). La implementación de este mensajero se lleva a cabo como un proyecto en Sourceforge4. SIM admite múltiples protocolos de mensajería como AIM5, ICQ2 y MSN6. También admite conexiones a múltiples cuentas al mismo tiempo. Además, se brinda soporte completo para la notificación por SMS (cuando esté disponible en el protocolo utilizado). SIM se basa en un concepto de plug-in. Todos los protocolos, así como partes de la interfaz de usuario, están implementados como complementos. Su arquitectura también se utiliza para ampliar las capacidades de las aplicaciones para comunicarse con aplicaciones externas. Con este propósito, se proporciona un complemento de control remoto, mediante el cual se puede controlar el SIM desde aplicaciones externas a través de una conexión de socket. Esta interfaz de control remoto es ampliamente utilizada por GISS para recuperar la lista de contactos, establecer el estado de disponibilidad de los usuarios o enviar mensajes. La funcionalidad del complemento se amplió de varias maneras, por ejemplo, para aceptar mensajes para una cuenta (como si hubieran sido enviados a través de la red de mensajería). El mensajero, más exactamente la lista de contactos (es decir, una lista de perfiles de todas las personas registradas en el mensajero instantáneo, que se visualiza enumerando sus nombres como se puede ver en la Figura 5), también se utiliza para mostrar las ubicaciones de otros miembros de los grupos a los que pertenece un usuario. Esto proporciona conciencia de ubicación sin ocupar demasiado espacio o requerir la atención completa de los usuarios. Una descripción más detallada de estas características se proporciona en el capítulo 4.4. 4.3 Fuentes de Información de Contexto Mientras que el contexto de ubicación de un usuario se obtiene de nuestro subsistema de detección de ubicación descrito en el capítulo 3, también consideramos otros tipos de contexto además de la ubicación relevantes para el apoyo de la interacción grupal. El tiempo local, como dimensión de contexto muy importante, se puede recuperar fácilmente del reloj en tiempo real del sistema del usuario. Además de la ubicación y el tiempo, también utilizamos la información de contexto de la actividad e identidad de los usuarios, donde explotamos la funcionalidad proporcionada por el sistema de mensajería instantánea subyacente. La identidad (o más exactamente, la asignación de IDs a nombres, así como información adicional del perfil de los usuarios) se puede extraer de los contenidos de la lista de contactos de los usuarios. La información sobre la actividad o un usuario en particular solo está disponible en un área muy restringida, específicamente la actividad en la computadora misma. Otras actividades como hacer una llamada telefónica o algo similar, no pueden ser reconocidas con la implementación actual del sensor de actividad. La única información de contexto utilizada es el estado de disponibilidad de los mensajeros instantáneos, por lo tanto, solo proporciona una clasificación muy general de la actividad de los usuarios (en línea, fuera de línea, ausente, ocupado, etc.). Aunque esto pueda no parecer mucha información, seguramente es relevante y puede ser utilizada para mejorar o incluso habilitar varios servicios. Habiendo recopilado la información de contexto de todos los usuarios disponibles, ahora es posible destilar cierta información sobre el contexto de un grupo específico. La información sobre el contexto de un grupo incluye cuántos miembros tiene actualmente el grupo, si el grupo se reúne en este momento, qué miembros participan en una reunión, cuántos miembros han leído cuáles de las publicaciones disponibles de otros miembros del equipo, y así sucesivamente. Por lo tanto, se necesita información adicional como una lista de miembros para cada grupo. Estas listas pueden ser ensambladas manualmente (por usuarios que se unen y salen de grupos) o recuperadas automáticamente. El contexto de un grupo es un contexto secundario y se obtiene de los contextos disponibles de los miembros del grupo. Cada vez que cambia el contexto de un miembro del grupo, el contexto de todo el grupo cambia y debe ser recalculado. Con conocimiento sobre el contexto del usuario y el contexto de los grupos a los que pertenece, podemos ofrecer varios servicios sensibles al contexto al usuario, los cuales mejoran sus habilidades de interacción. Una breve descripción de estos servicios se da en el capítulo 4.4. 4.4 Soporte de Interacción en Grupo 4.4.1 Visualización de Información de Ubicación Una característica importante es la visualización de información de ubicación, permitiendo a los usuarios estar al tanto de la ubicación de otros usuarios y miembros de los grupos a los que se unió, respectivamente. Como ya se describió en el capítulo 2, utilizamos dos formas diferentes de visualización. Quizás el más importante sea mostrar la información de ubicación en la lista de contactos del mensajero instantáneo, justo al lado del nombre, de manera que siempre sea visible sin llamar la atención de los usuarios (en comparación con una vista bidimensional, por ejemplo, que requiere una ventana propia para mostrar un mapa del entorno). Debido al espacio limitado en la lista de contactos, ha sido necesario implementar algún tipo de concepto de nivel de detalle. Al utilizar un modelo de ubicación jerárquico, podemos determinar la ubicación común más precisa de dos usuarios. En la lista de contactos, se muestra la ubicación simbólica actual un nivel por debajo de la ubicación común previamente calculada. Si, por ejemplo, el usuario A actualmente reside en la habitación P121 en el primer piso de un edificio y el usuario B, que debe aparecer en la lista de contactos del usuario A, está en la habitación P304 en el tercer piso, la ubicación común más precisa de estos dos usuarios es el edificio en el que se encuentran. Por esa razón, el piso (es decir, un nivel más allá de la ubicación común, es decir, el edificio) del usuario B se muestra en la lista de contactos del usuario A. Si ambas personas residen en el mismo piso o incluso en la misma habitación, la habitación estaría ocupada. La Figura 5 muestra una captura de pantalla del Simple Instant Messenger3, donde la ubicación actual de aquellas personas cuya ubicación es conocida por GISS, se muestra entre paréntesis justo al lado de su nombre. Encima de la imagen, se muestra la barra de herramientas GISS integrada y mejorada, que actualmente contiene la siguiente funcionalidad implementada (de izquierda a derecha): Comunicación asincrónica para grupos (ver capítulo 4.4.4), recordatorios contextuales (ver capítulo 4.4.6), visualización bidimensional de información de ubicación, formación y gestión de grupos (ver capítulo 4.4.2), gestión de disponibilidad contextual (ver capítulo 4.4.5) y finalmente un botón para terminar GISS. Figura 5. La integración de GISS en Simple Instant Messenger3. Dado que mostrar solo esta forma abreviada de la ubicación puede no ser suficiente para el usuario, ya que puede querer ver la posición más precisa disponible, se muestra una posición completamente calificada si se hace clic en un nombre de la lista de contactos (por ejemplo, en la forma de escritorio@habitación2@departamento1@primerpiso@edificio 1@campus). La segunda forma posible de visualización es una gráfica. Hemos evaluado una vista tridimensional, la cual se basaba en un modelo VRML del área respectiva (cf. Figura 6). Debido a deficiencias en la navegación y problemas de usabilidad, decidimos utilizar una vista bidimensional del piso (se le denomina nivel en la jerarquía de ubicación, cf. Figura 4). Otros niveles de granularidad como sección (por ejemplo, edificio) y región (por ejemplo, campus) también se proporcionan. En esta vista basada en el plano del piso, las ubicaciones actuales se muestran al estilo de los contactos de ICQ2, que se colocan en la ubicación actualmente detectada de la persona respectiva. El estado de disponibilidad de un usuario, por ejemplo, ausente si no está en la computadora en este momento, o ocupado si no desea ser molestado, se visualiza mediante la codificación de colores de la flor ICQ2 a la izquierda del nombre. Además, la vista del plano del piso muestra los llamados post-its virtuales, que son contrapartes virtuales de los post-its de la vida real y sirven como nuestro medio de comunicación asincrónica (más información sobre los post-its virtuales se puede encontrar en el capítulo 4.4.4). Figura 6. Vista en 3D del piso (VRML). La Figura 7 muestra el mapa bidimensional de un cierto piso, donde varios usuarios se encuentran actualmente ubicados (visualizados por su nombre y la flor a la izquierda). La ubicación del cliente, en la que se muestra en el mapa, se visualiza mediante un círculo verde. Hacia abajo a la derecha, se pueden ver dos notas adhesivas virtuales. Figura 7. Vista en 2D del suelo. Otra característica de la vista en 2D es la visualización del historial de ubicaciones de los usuarios. Al almacenar el historial completo de las ubicaciones de un usuario junto con una marca de tiempo, podemos proporcionar información sobre los lugares donde ha estado en el pasado. Cuando el ratón se mueve sobre el nombre de un usuario en la vista 2D, las huellas de un usuario, colocadas en los lugares donde ha estado, se desvanecen más intensamente cuanto más antigua sea la información de ubicación. 95 4.4.2 Formación y Gestión de Grupos Para apoyar la interacción en grupos, primero es necesario formar grupos. Como los grupos pueden tener diferentes propósitos, distinguimos dos tipos de grupos. Los llamados grupos estáticos son grupos que se crean manualmente con personas que se unen y abandonan. Los grupos estáticos se pueden dividir aún más en dos subtipos. En grupos estáticos abiertos, cualquiera puede unirse y salir en cualquier momento, útil por ejemplo para formar un grupo de asistentes a conferencias de algún tipo de grupo de interés. Los grupos estáticos cerrados tienen un propietario, quien decide qué personas pueden unirse, aunque todos podrían irse en cualquier momento. Los grupos cerrados permiten a los usuarios, por ejemplo, crear un grupo con sus amigos, pudiendo así comunicarse fácilmente con ellos. En contraste con eso, también apoyamos la creación de grupos dinámicos. Se forman entre personas que se encuentran en el mismo lugar al mismo tiempo. La creación de grupos dinámicos solo se realiza en lugares donde tiene sentido formar grupos, por ejemplo en aulas o salas de reuniones, pero no en pasillos o exteriores. Tampoco tendría mucho sentido formar un grupo solo con las personas que residen en el sector frontal izquierdo de un salón; en cambio, se debería considerar todo el salón. Por estas razones, todas las ubicaciones definidas en la jerarquía están etiquetadas, ya sea que permitan la formación de grupos o no. Los grupos dinámicos no solo se forman en función de la granularidad de las habitaciones, sino también en niveles superiores de la jerarquía, por ejemplo, con las personas que actualmente residen en el área de un departamento. Dado que los miembros de los grupos dinámicos cambian constantemente, es posible crear un grupo estático abierto a partir de ellos. 4.4.3 Comunicación Sincrónica para Grupos La forma más importante de comunicación sincrónica en las computadoras hoy en día es la mensajería instantánea; algunas personas incluso consideran que la mensajería instantánea es la verdadera aplicación estrella en Internet. Esto también ha motivado la decisión de construir GISS sobre un sistema de mensajería instantánea. En los sistemas de mensajería de hoy en día, se brinda un amplio soporte a la comunicación de igual a igual. Sin embargo, cuando se trata de comunicación en grupos, el apoyo suele ser bastante deficiente la mayor parte del tiempo. A menudo, solo se admite enviar un mensaje a múltiples destinatarios, sin contar con medios para tener en cuenta el estado actual de los destinatarios. Además, los grupos solo pueden formarse con miembros de la lista de contactos, por lo tanto, no es posible enviar mensajes a un grupo donde no se conocen a todos sus miembros (lo cual puede ser el caso en entornos donde los participantes de una conferencia forman un grupo). Nuestro enfoque no tiene las restricciones mencionadas. Introducimos entradas de grupo en la lista de contactos de los usuarios; le permitimos a él o a ella enviar mensajes a este grupo fácilmente, sin saber quién exactamente es actualmente miembro de este grupo. Además, los mensajes de grupo solo se entregan a personas que no están ocupadas en ese momento, evitando así una interrupción por un mensaje que posiblemente no sea importante para el usuario. Estas funciones no pueden llevarse a cabo en la red del mensajero en sí misma, por lo que cada vez que se envía un mensaje a una cuenta de grupo, lo interceptamos y lo dirigimos a través de nuestro sistema a todos los destinatarios, que están disponibles en un momento determinado. La comunicación a través de una cuenta de grupo también se almacena de forma centralizada, lo que permite a las personas consultar los mensajes perdidos o simplemente ver el historial de mensajes. 4.4.4 Comunicación Asincrónica para Grupos La comunicación asincrónica en grupos no es una idea nueva. El objetivo de este enfoque no es reinventar la rueda, ya que el correo electrónico es quizás la forma más ampliamente utilizada de comunicación asincrónica en computadoras y está ampliamente aceptado y estandarizado. En nuestro trabajo, buscamos la combinación de comunicación asincrónica con conciencia de ubicación. Por esta razón, introducimos el concepto de los llamados post-its virtuales (cp. [13]), que son mensajes que están vinculados a ubicaciones físicas. Estos post-its virtuales pueden ser visibles para todos los usuarios que pasen por allí o pueden estar restringidos para ser visibles solo para ciertos grupos de personas. Además, un post-it virtual también puede tener una fecha de caducidad después de la cual se elimina y ya no se muestra. Los post-its virtuales también pueden ser comentados por otros, proporcionando así algún tipo de interacción similar a un foro, donde cada post-it forma un hilo. Las notas adhesivas virtuales se muestran automáticamente cada vez que un usuario (disponible) pasa por primera vez. Posteriormente, los post-its se pueden acceder a través del visor 2D, donde se muestran todos los post-its visibles. Todos los lectores de una nota adhesiva quedan registrados y se muestran al verla, lo que proporciona cierto nivel de conciencia sobre las actividades de los miembros del grupo en el pasado. 4.4.5 Gestión de disponibilidad consciente del contexto Los mensajeros instantáneos en general proporcionan algún tipo de información sobre la disponibilidad de un usuario. Aunque esta información solo puede definirse de forma muy general, hemos decidido utilizar estos medios para recopilar el contexto de la actividad, ya que la introducción de uno adicional disminuiría considerablemente la usabilidad del sistema. Para apoyar al usuario en la gestión de su disponibilidad, proporcionamos una interfaz que le permite definir reglas para adaptar su disponibilidad al contexto actual. Estas reglas siguen la forma de evento (E) si condición (C) entonces acción (A), lo cual está directamente respaldado por las reglas ECA del Marco de Contexto descritas en el capítulo 1.3. La prueba de condiciones se desencadena periódicamente mediante eventos de lanzamiento (cada vez que cambia el contexto de un usuario). La condición en sí misma es definida por el usuario, quien puede solicitar el cambio de su estado de disponibilidad como la acción en la regla. Como condición, el usuario puede definir su ubicación, un momento específico (también activando recordatorios diarios, semanales o mensuales) o cualquier combinación lógica de estos criterios. Los recordatorios contextuales [14] se utilizan para dar al usuario la oportunidad de definir tareas y ser recordado de ellas cuando se cumplen ciertos criterios. Por lo tanto, un recordatorio puede ser visto como un post-it para uno mismo, el cual solo es visible en ciertos casos. Los recordatorios pueden estar vinculados a un lugar o tiempo específico, pero también a la proximidad espacial de usuarios o grupos. Estos criterios se pueden combinar con operadores booleanos, proporcionando así un medio poderoso para recordar al usuario las tareas que desea realizar cuando ocurre un cierto contexto. Un recordatorio solo aparecerá la primera vez que el contexto real cumpla con el criterio definido. Al mostrar el recordatorio, el usuario tiene la oportunidad de volver a enviarlo para ser recordado nuevamente, por ejemplo, cinco minutos después o la próxima vez que cierto usuario esté en proximidad espacial. 96 4.4.7 Reconocimiento y Notificación Contextual de Reuniones de Grupo Con la información de contexto disponible, intentamos reconocer las reuniones de un grupo. La determinación de los criterios, cuando el sistema reconoce que un grupo está teniendo una reunión, es parte del trabajo en curso. En un primer enfoque, utilizamos la ubicación y el contexto de actividad de los miembros del grupo para determinar una reunión. Siempre que más del 50 % de los miembros de un grupo estén disponibles en un lugar donde se considere que tiene sentido realizar una reunión (por ejemplo, no en un pasillo), se crea una nota de reunión en un post-it en ese lugar y se notifica a todos los miembros ausentes del grupo sobre la reunión y el lugar donde se llevará a cabo. Durante la reunión, la función de comentarios de las notas adhesivas virtuales proporciona un medio para tomar notas para todos los participantes. Cuando los miembros se unen o abandonan la reunión, esto se añade automáticamente como una nota a la lista de comentarios. Al igual que el reconocimiento del inicio de una reunión, el reconocimiento de su final sigue siendo parte del trabajo en curso. Si se reconoce el final de la reunión, todos los miembros del grupo reciben la lista completa de comentarios como un protocolo de reunión al final de la reunión. CONCLUSIONES Este artículo discutió el potencial del apoyo para la interacción grupal mediante el uso de información de contexto. Primero, introdujimos las nociones de contexto y computación de contexto y motivamos su valor para apoyar la interacción grupal. Se presenta una arquitectura para apoyar la interacción grupal consciente del contexto en entornos móviles y distribuidos. Está construido sobre un marco flexible y extensible, lo que permite una fácil adaptación a las fuentes de contexto disponibles (por ejemplo, agregando sensores adicionales) así como la forma de representación requerida. Hemos desarrollado prototípicamente un conjunto de servicios que mejoran la interacción grupal teniendo en cuenta el contexto actual de los usuarios y el contexto de los propios grupos. Las características importantes son la formación dinámica de grupos, la visualización de la ubicación en un mapa bidimensional, así como la integración discreta en un mensajero instantáneo, la comunicación asincrónica a través de notas virtuales, que están vinculadas a ciertas ubicaciones, y un sistema de gestión de disponibilidad consciente del contexto, que adapta el estado de disponibilidad de un usuario a su situación actual. Para proporcionar información de ubicación, hemos implementado un subsistema para la adquisición automatizada de información de ubicación y proximidad proporcionada por varios sensores, que ofrece una presentación independiente de la tecnología de ubicaciones y proximidades espaciales entre usuarios y fusiona esta información utilizando algoritmos de fusión independientes de los sensores. Un historial de ubicaciones, así como de proximidades espaciales, se almacena en una base de datos, lo que permite habilitar servicios basados en el historial de contexto. REFERENCIAS [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modelado del comportamiento consciente del contexto mediante reglas ECA interpretadas. En Actas de la Conferencia Internacional sobre Computación Paralela y Distribuida (EUROPAR03). (Klagenfurt, Austria, 26-29 de agosto de 2003). Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Aplicaciones Conscientes del Contexto: Del Laboratorio al Mercado. IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. Una encuesta de la investigación en computación móvil consciente del contexto. Informe técnico TR2000-381, Departamento de Ciencias de la Computación, Dartmouth College, Hanover, New Hampshire, noviembre de 2000. [4] Dey, A. Proporcionando Soporte Arquitectónico para Aplicaciones Conscientes del Contexto del Edificio. Tesis de doctorado, Departamento de Ciencias de la Computación, Instituto de Tecnología de Georgia, Atlanta, noviembre de 2000. [5] Svetlana Domnitcheva. Modelado de ubicación: Estado del arte y desafíos. En Actas del Taller sobre Modelado de Ubicación para la Computación Ubicua. (Atlanta, Georgia, Estados Unidos, 30 de septiembre de 2001). 13-19. [6] Ferscha, A. Conciencia del Espacio de Trabajo en Equipos Virtuales Móviles. En Actas del 9º Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE00). (Gaithersburg, Maryland, 14-16 de marzo de 2000). IEEE Computer Society Press, 272-277. [7] Ferscha, A. \n\nIEEE Computer Society Press, 272-277. [7] Ferscha, A. Coordinación en entornos de computación ubicua. En Actas del Duodécimo Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE-2003). (9-11 de junio de 2003). IEEE Computer Society Press, 3-9. [8] Leonhard, U. \n\nIEEE Computer Society Press, 3-9. [8] Leonhard, U. Apoyando la Conciencia de Ubicación en Sistemas Distribuidos Abiertos. Tesis de doctorado, Departamento de Computación, Imperial College, Londres, mayo de 1998. [9] Ryan, N., Pascoe, J., Morse, D. Trabajo de campo de realidad aumentada: el asistente arqueológico consciente del contexto. Gaffney, V., Van Leusen, M., Exxon, S. (eds.) -> Gaffney, V., Van Leusen, M., Exxon, S. (eds.) Aplicaciones informáticas en Arqueología (1997) [10] Schilit, B.N., Theimer, M. Difusión de información de mapas activos a dispositivos móviles. IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N. \n\nRed de IEEE, 8(5) (1994), 22-32. [11] Schilit, B.N. Una arquitectura de sistema para la computación móvil consciente del contexto. Tesis de doctorado, Universidad de Columbia, Departamento de Ciencias de la Computación, mayo de 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S. Apoyando grupos sociales persistentes en entornos de computación ubicua utilizando un servicio de grupo efímero consciente del contexto. En Actas de la Segunda Conferencia Internacional de IEEE sobre Computación y Comunicaciones Pervasivas (PerCom04). (14-17 de marzo de 2004). IEEE Computer Society Press, 287-296. [13] Pascoe, J. \n\nIEEE Computer Society Press, 287-296. [13] Pascoe, J. La arquitectura de Stick-e Note: Extendiendo la interfaz más allá del usuario. Actas de la 2ª Conferencia Internacional de Interfaces de Usuario Inteligentes (IUI97). (Orlando, EE. UU., 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: Un Sistema Consciente del Contexto para Apoyar Recordatorios. Actas del 2º Simposio Internacional sobre Computación Portátil y Ubicua (HUC00). (Bristol, Reino Unido, 2000), 172-186. 97 ",
            "candidates": [],
            "error": [
                []
            ]
        },
        "group interaction": {
            "translated_key": "interacción grupal",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Context Awareness for <br>group interaction</br> Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting <br>group interaction</br> in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate <br>group interaction</br> is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for <br>group interaction</br>.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as <br>group interaction</br> Support System (GISS).",
                "It supports <br>group interaction</br> in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting <br>group interaction</br>.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and <br>group interaction</br> concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 <br>group interaction</br> in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "<br>group interaction</br> includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting <br>group interaction</br> comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing <br>group interaction</br> systems.",
                "Context information facilitates <br>group interaction</br> by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support <br>group interaction</br>, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting <br>group interaction</br>, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of <br>group interaction</br>, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The <br>group interaction</br> Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the <br>group interaction</br> Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of <br>group interaction</br> support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting <br>group interaction</br> in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support <br>group interaction</br> by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of <br>group interaction</br>, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 <br>group interaction</br> Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for <br>group interaction</br> by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting <br>group interaction</br>.",
                "An architecture is presented to support context-aware <br>group interaction</br> in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance <br>group interaction</br> by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [
                "Context Awareness for <br>group interaction</br> Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting <br>group interaction</br> in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate <br>group interaction</br> is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for <br>group interaction</br>.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as <br>group interaction</br> Support System (GISS).",
                "It supports <br>group interaction</br> in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation."
            ],
            "translated_annotated_samples": [
                "En este artículo, presentamos un sistema implementado para apoyar la <br>interacción grupal</br> en entornos de computación distribuida móvil.",
                "Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la <br>interacción en grupo</br>.",
                "A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la <br>interacción en grupo</br>.",
                "Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS).",
                "Apoya la <br>interacción grupal</br> en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás."
            ],
            "translated_text": "En este artículo, presentamos un sistema implementado para apoyar la <br>interacción grupal</br> en entornos de computación distribuida móvil. Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la <br>interacción en grupo</br>. A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la <br>interacción en grupo</br>. Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos. H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica. Términos generales de diseño, Experimentación 1. INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica. Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar. Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones. Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real. Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS). Apoya la <br>interacción grupal</br> en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás. ",
            "candidates": [],
            "error": [
                [
                    "interacción grupal",
                    "interacción en grupo",
                    "interacción en grupo",
                    "interacción grupal"
                ]
            ]
        },
        "software framework": {
            "translated_key": "marco de software",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A <br>software framework</br> for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [
                "A <br>software framework</br> for developing contextsensitive applications is presented, which serves as middleware for GISS."
            ],
            "translated_annotated_samples": [
                "Se presenta un <br>marco de software</br> para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS."
            ],
            "translated_text": "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil. Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la interacción en grupo. A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la interacción en grupo. Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos. H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica. Términos generales de diseño, Experimentación 1. INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica. Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar. Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones. Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real. Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS). Apoya la interacción grupal en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás. En los siguientes subcapítulos, daremos una breve descripción sobre la computación consciente del contexto y motivaremos sus beneficios para apoyar la interacción en grupo. Se presenta un <br>marco de software</br> para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS. El capítulo 2 presenta la arquitectura de GISS, y los capítulos 3 y 4 discuten los conceptos de localización y de interacción en grupo de GISS con más detalle. El capítulo 5 ofrece un resumen final de nuestro trabajo. 1.1 ¿Qué es la Computación Contextual? Según el Diccionario en línea de Merriam-Webster, el contexto se define como las condiciones interrelacionadas en las que algo existe o ocurre. Dado que esta definición es muy general, se han realizado muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos. La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para contexto. El término consciente del contexto fue introducido por primera vez en [10], donde el contexto se refiere a la ubicación, identidades de personas y objetos cercanos, y cambios en esos objetos. En [2], el contexto también se define mediante una enumeración de ejemplos, como la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación del usuario, el entorno, la identidad y el tiempo. Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información que se pueda utilizar para caracterizar la situación de una entidad. Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluyendo al usuario y a las propias aplicaciones. [4] identifica cuatro tipos principales de información de contexto (a veces referidos como dimensiones de contexto), que son - con respecto a la caracterización de la situación de una entidad - más importantes que otros. Estos son la ubicación, la identidad, el tiempo y la actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundarios). Por ejemplo, si conocemos la identidad de una persona, podemos derivar fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico). Según esta definición, [4] define un sistema como consciente del contexto si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación. Figura 1. Las capas de un sistema consciente del contexto. La computación del contexto se basa en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y utilizar el contexto obtenido (ejecución automática, presentación, etiquetado). Para hacer esto, hay algunas capas intermedias (ver Figura 1). Primero, la información de contexto de bajo nivel obtenida debe ser transformada, agregada e interpretada (transformación de contexto) y representada en un modelo abstracto del mundo de contexto (representación de contexto), ya sea centralizado o descentralizado. Finalmente, la información de contexto almacenada se utiliza para activar ciertos eventos de contexto (activación de contexto). Después de estas definiciones abstractas y formales sobre qué es el contexto y la computación de contexto, nos centraremos ahora en el objetivo principal de este trabajo, es decir, cómo la interacción de los miembros de un grupo móvil puede ser apoyada mediante el uso de información de contexto. En [6] hemos identificado que los sistemas organizativos son cruciales para apoyar a los grupos móviles (ver Figura 2). Primero, tiene que haber un Sistema de Gestión de Información y Conocimiento, que sea capaz de apoyar a un equipo con sus necesidades de procesamiento de información y recopilación de conocimiento. La siguiente parte es el Sistema de Conciencia, que se dedica a la percepción de los efectos de la actividad en equipo. Esto se logra comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios. Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea de forma sincrónica o asincrónica, y para el acceso compartido a artefactos, como documentos. Los sistemas de movilidad despliegan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como la captura y entrega de información de conciencia desde y hacia cualquier lugar. Finalmente, pero no menos importante, el sistema de innovación organizacional integra aspectos del equipo en sí mismo, como roles, liderazgo e instalaciones compartidas. Con respecto a estos cinco aspectos de apoyo al equipo, nos enfocamos en la interacción y cubrimos parcialmente el apoyo a la movilidad y la conciencia. La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros. En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para apoyar la interacción grupal. Creemos que la información sobre la situación actual de una persona aporta un valor añadido a los sistemas de interacción grupal existentes. La información de contexto facilita la interacción grupal al permitir que cada miembro esté al tanto del estado de disponibilidad o la ubicación actual de los demás miembros del grupo, lo que a su vez hace posible formar grupos de manera dinámica, colocar notas virtuales en el mundo real o determinar qué personas están cerca. Figura 2. Apoyo para Grupos Móviles [6]. La mayoría de las aplicaciones de hoy en día que son conscientes del contexto utilizan únicamente la ubicación y el tiempo, y la ubicación se considera un tipo crucial de información de contexto [3]. También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo se centra en la utilización de la información de ubicación y la información sobre los usuarios en proximidad espacial. Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizada, no es suficiente para respaldar la interacción grupal, por lo cual también aprovechamos los otros tres tipos principales, a saber, identidad, tiempo y actividad. Esto proporciona una descripción completa de la situación actual de un usuario y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen detalladamente en el capítulo 4.4. Cuando observamos los tipos de información de contexto mencionados anteriormente, podemos ver que todos ellos están centrados en el usuario individual, teniendo en cuenta únicamente el contexto del propio usuario. Creemos que, para apoyar la interacción grupal, también se debe tener en cuenta el estatus del propio grupo. Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el contexto de grupo, que abarca más que la suma de los contextos individuales de los miembros. El contexto de grupo incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un grupo en particular se reúne en este momento. Middleware de contexto 1.3 El Sistema de Soporte de Interacción de Grupo (GISS) utiliza el marco de software presentado en [1], que sirve como middleware para desarrollar aplicaciones sensibles al contexto. Este llamado Marco de Contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes. Una característica principal del marco es la abstracción de la recuperación de información de contexto a través de varios sensores y su entrega a un nivel donde no se percibe ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes mecanismos de recuperación de contexto; la recuperación de información está oculta para el desarrollador de aplicaciones. Esto se logra mediante entidades llamadas, que describen objetos, por ejemplo, un usuario humano, que son importantes para un determinado escenario de contexto. Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, los cuales pueden ser cargados en la entidad. Estos atributos son piezas complejas de software, que se implementan como clases de Java. Los atributos típicos son encapsulaciones de sensores, pero también pueden ser utilizados para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre cambios de ubicación de los usuarios. Cada entidad puede contener una colección de tales atributos, donde una entidad en sí misma es un atributo. El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos desde el almacenamiento local o a través de la red. Para cargar e implementar nuevos atributos, una entidad debe hacer referencia a un cargador de clases y una capa de transporte y búsqueda, que gestiona el mecanismo de búsqueda para descubrir otras entidades y el transporte. Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atributos poseen estas entidades. La comunicación entre entidades y atributos se basa en eventos de contexto. Cada atributo es capaz de desencadenar eventos, los cuales están dirigidos a otros atributos y entidades respectivamente, independientemente de en qué computadora física estén ejecutándose. Entre otras cosas, un evento contiene el nombre del evento y una lista de parámetros que proporcionan información sobre el propio evento. Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (Evento-Condición-Acción) para definir el comportamiento del sistema de contexto. Por lo tanto, cada entidad tiene un intérprete de reglas, que captura eventos desencadenados, verifica las condiciones asociadas a ellos y provoca ciertas acciones. Estas reglas son referenciadas por la configuración XML de la entidad. Una regla en sí misma incluso puede desencadenar la inserción de nuevas reglas o la descarga de reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto. En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar los datos del sensor de bajo nivel de las aplicaciones de alto nivel y oculta los detalles de comunicación externa al desarrollador de la aplicación. Además, es capaz de adaptar su comportamiento dinámicamente cargando atributos, entidades o reglas ECA en tiempo de ejecución. VISIÓN GENERAL DE LA ARQUITECTURA Dado que GISS utiliza el Marco de Contexto descrito en el capítulo 1.3 como middleware, cada usuario está representado por una entidad, al igual que el servidor central, que es responsable de la transformación de contexto, la representación de contexto y la activación de contexto (cf. Figura 1). Una parte principal de nuestro trabajo se centra en la adquisición automatizada de información de posición y su provisión independiente de sensores a nivel de aplicación. No solo percibimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos. Al desarrollar la arquitectura, nos enfocamos en mantener el cliente lo más simple posible y reducir al mínimo la comunicación entre el cliente y el servidor. Cada cliente puede tener varios sensores de ubicación y/o proximidad adjuntos, los cuales están encapsulados por los atributos respectivos del Marco de Contexto (Encapsulación de Sensores). Estos atributos son responsables de integrar implementaciones de sensores nativos en el Marco de Contexto y enviar información de posición dependiente del sensor al servidor. Consideramos muy importante apoyar diferentes tipos de sensores al mismo tiempo, con el fin de mejorar la precisión de la ubicación por un lado, y proporcionar un entorno de detección de ubicación ubicuo con transiciones fluidas entre diferentes técnicas de detección de ubicación por otro lado. Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstraen la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor). Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas a ubicaciones estandarizadas. La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de Fusión de Sensores, uno para ubicaciones simbólicas y otro para proximidades espaciales. Su trabajo consiste en fusionar la información de ubicación y proximidad de los clientes, respectivamente, la cual se describe detalladamente en el Capítulo 3.3. Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de Fusión de Sensores notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación. Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede ser fácilmente ampliado con sensores adicionales, simplemente implementando los (generalmente dos) atributos para encapsular los sensores (algunos sensores pueden no necesitar una parte del lado del cliente), abstrayendo las posiciones físicas y observando la interfaz con el Núcleo de GISS. Figura 3. La arquitectura del Sistema de Soporte de Interacción de Grupo (GISS). El atributo central del núcleo de GISS es el coordinador principal de la aplicación tal como se muestra al usuario. No solo sirve como una interfaz al subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad). Cada vez que se detecta un cambio en el contexto de uno o más usuarios, el núcleo de GISS evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y en los demás miembros de estos grupos. Cuando sea necesario, se lanzan eventos a los clientes afectados para activar actividades contextualmente conscientes, como cambiar la presentación de la información de conciencia o la ejecución de servicios. La parte del cliente de la aplicación se mantiene lo más simple posible. Además, el diseño modular no solo fue un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario. Por lo tanto, la interfaz de usuario completa puede intercambiarse fácilmente si se tienen en cuenta y se comprenden todos los eventos definidos por el nuevo atributo de la interfaz. La interfaz de usuario actualmente implementada está dividida en dos partes, las cuales también están representadas por dos atributos. El atributo central en el lado del cliente es la llamada Encapsulación de Mensajería Instantánea, que por un lado interactúa con el servidor a través de eventos y por otro lado sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario. Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente, el Simple Instant Messenger (SIM)3 compatible con ICQ2. Hemos elegido un mensajero instantáneo como interfaz porque proporciona una interfaz conocida para la mayoría de los usuarios y facilita una integración fluida del soporte de interacción grupal, aumentando así la aceptación y facilidad de uso. Dado que la funcionalidad básica del mensajero instantáneo, que es servir como cliente en una red de mensajería instantánea, sigue completamente operativa, nuestra aplicación puede utilizar las funciones ya proporcionadas por el mensajero. Por ejemplo, los contextos de actividad e identidad se derivan de la red de mensajería tal como se describe más adelante. La Encapsulación de Mensajería Instantánea también es responsable de admitir la comunicación en grupo. A través de la interfaz del mensajero, proporciona medios de comunicación síncrona y asíncrona, así como un sistema de recordatorio contextual y herramientas para gestionar grupos y el propio estado de disponibilidad. La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, la cual está implementada en el Visor de atributos. La implementación actual proporciona un mapa bidimensional del campus, pero puede ser fácilmente reemplazada por otras visualizaciones, como un modelo VRML tridimensional. Además, esta visualización se utiliza para mostrar los artefactos de la comunicación asincrónica. Basado en una vista del plano de la zona geográfica en la que se encuentra actualmente el usuario, ofrece una rápida visión general de las personas cercanas, su estado y proporciona medios para interactuar con ellas. En los siguientes capítulos 3 y 4, describimos con más detalle el backend de detección de ubicación y el frontend de la aplicación para apoyar la interacción grupal. SENSADO DE UBICACIÓN En el siguiente capítulo, presentaremos un modelo de ubicación que se utiliza para representar ubicaciones; posteriormente, describiremos la integración de sensores de ubicación y proximidad en más detalle. Finalmente, echaremos un vistazo más de cerca a la fusión de la información de ubicación y proximidad, adquirida por varios sensores. Modelo de Ubicación Un modelo de ubicación (es decir, una representación de contexto para la información de contexto de ubicación) es necesario para representar las ubicaciones de los usuarios, con el fin de poder facilitar consultas relacionadas con la ubicación, como por ejemplo, dada una ubicación, devolver una lista de todos los objetos allí o dado un objeto, devolver su ubicación actual. En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representa la ubicación como coordenadas. Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como Sala P111 o Edificio de Física, porque no necesitamos datos de ubicación geométrica. En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación. Además, utilizamos una jerarquía de contención de ubicaciones simbólicas similar a la introducida en [11], que consta de regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos a su vez contienen habitaciones. También distinguimos cuatro tipos, a saber, región (por ejemplo, un campus completo), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, un piso específico en un edificio) y área (por ejemplo, una habitación específica). Introducimos un quinto tipo de ubicación, al que nos referimos como semántico. Estas llamadas ubicaciones semánticas pueden aparecer en cualquier nivel de la jerarquía y pueden estar anidadas, pero no necesariamente tienen una representación geográfica. Ejemplos de tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones. Figura 4. Jerarquía de Contención de Ubicaciones Simbólicas La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto. 3.2 Sensores Nuestra arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación, y sensores de proximidad, que detectan proximidades espaciales entre usuarios. Como se describe arriba, cada sensor tiene una implementación del lado del servidor y, en la mayoría de los casos, también una implementación correspondiente del lado del cliente. Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular. Tales notificaciones se realizan cada vez que el sensor adquiere nueva información. Por lo tanto, los atributos de abstracción del sensor son responsables de detectar cuándo un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si ha sido desconectado por el usuario) o cuando la posición o proximidad no se pueden determinar más (por ejemplo, si). El lector de RFID no puede detectar etiquetas y notificará a la fusión de sensores correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor. Los atributos de abstracción de sensores de ubicación correspondientes recopilan estas posiciones físicas proporcionadas por los sensores de todos los usuarios, y realizan una búsqueda en el repositorio para obtener la ubicación simbólica asociada. Esto requiere ciertas tablas para cada sensor, las cuales asignan posiciones físicas a ubicaciones simbólicas. Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones. Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular. Hemos implementado prototípicamente tres tipos de sensores de ubicación, basados en WLAN (IEEE 802.11), Bluetooth y RFID (Identificación por Radiofrecuencia). Hemos elegido estos tres sensores completamente diferentes debido a sus diferencias en cuanto a precisión, cobertura y esfuerzo administrativo, con el fin de evaluar la flexibilidad de nuestro sistema (ver Tabla 1). El más preciso es un sensor de RFID, que se basa en un lector de RFID activo. Tan pronto como el lector se conecta al cliente, escanea las etiquetas RFID activas en rango y transmite sus números de serie al servidor, donde se asignan a ubicaciones simbólicas. También tenemos en cuenta el RSSI (Radio Signal Strength Information), que proporciona una precisión de posición de unos pocos centímetros y nos permite determinar cuál etiqueta RFID está más cercana. Debido a esta alta precisión, el RFID se utiliza para localizar usuarios dentro de habitaciones. La administración es bastante simple; una vez que se coloca una nueva etiqueta RFID, su número de serie simplemente debe asignarse a una única ubicación simbólica. Una desventaja es la baja disponibilidad, que se puede atribuir al hecho de que los lectores de RFID siguen siendo muy costosos. El segundo es un sensor WLAN 802.11. Por lo tanto, integramos un sistema de posicionamiento WLAN comercial puramente basado en software para rastrear clientes en la infraestructura WLAN del campus universitario. La precisión de la posición alcanzada se encuentra en el rango de unos pocos metros y, por lo tanto, es adecuada para la detección de ubicación a nivel de habitaciones. Una gran desventaja es que un mapa de toda el área debe ser calibrado con puntos de medición a una distancia de 5 metros cada uno. Debido a que la mayoría de las computadoras móviles están equipadas con tecnología WLAN y el sistema de posicionamiento es una solución solo de software, casi todos pueden usar este tipo de sensor. Finalmente, hemos implementado un sensor de Bluetooth, que detecta etiquetas de Bluetooth (es decir, Módulos Bluetooth con posición conocida) en rango y los transmite al servidor que los mapea a ubicaciones simbólicas. Debido al hecho de que no utilizamos información de la fuerza de la señal en la implementación actual, la precisión es superior a 10 metros y, por lo tanto, una única dirección MAC de Bluetooth está asociada con varios lugares simbólicos, de acuerdo a las ubicaciones físicas que cubre dicho módulo de Bluetooth. Esto conlleva la desventaja de que el alcance de cada etiqueta Bluetooth debe ser determinado y mapeado a ubicaciones simbólicas dentro de este alcance. Tabla 1. Comparación de sensores implementados Precisión del sensor Cobertura Administración RFID < 10 cm pobre fácil WLAN 1-4 m muy buena muy lenta Bluetooth ~ 10 m buena lenta 3.2.2 Sensores de proximidad Cualquier sensor capaz de detectar si dos usuarios están en proximidad espacial se denomina sensor de proximidad. Similar a los sensores de ubicación, los atributos de abstracción del sensor de proximidad recopilan información de proximidad física de todos los usuarios y los transforman en asignaciones de identificaciones de usuario. Hemos implementado dos tipos de sensores de proximidad, uno basado en Bluetooth y otro en ubicaciones simbólicas fusionadas (ver capítulo 3.3.1). La implementación de Bluetooth va de la mano con la implementación del sensor de ubicación basado en Bluetooth. Las direcciones MAC de Bluetooth ya determinadas en el rango de un cliente específico se están comparando con las de todos los demás clientes, y cada vez que el atributo Abstracción del Sensor de Bluetooth detecta congruencia, notifica al sensor de fusión de proximidad al respecto. El segundo sensor se basa en ubicaciones simbólicas procesadas por la Fusión de Sensores de Ubicación, por lo tanto no necesita una implementación del lado del cliente. Cada vez que la ubicación simbólica fusionada de un usuario específico cambia, verifica si se encuentra en la misma ubicación simbólica que otro usuario y notifica nuevamente a la fusión del sensor de proximidad sobre la cercanía entre estos dos usuarios. El rango puede ser restringido a cualquier nivel de la jerarquía de contención de ubicación, por ejemplo, a nivel de habitación. Un problema actualmente sin resolver es la granularidad incomparable de diferentes sensores de proximidad. Por ejemplo, las ubicaciones simbólicas en el mismo nivel en la jerarquía de ubicaciones generalmente no cubren la misma área geográfica. 3.3 El núcleo de fusión de sensores del subsistema de detección de ubicación es la fusión de sensores. Combina datos de varios sensores, al mismo tiempo que lidia con diferencias en cuanto a precisión, cobertura y frecuencia de muestreo. Según los dos tipos de sensores descritos en el capítulo 3.2, distinguimos entre la fusión de sensores de ubicación por un lado, y la fusión de sensores de proximidad por otro lado. La fusión de ubicaciones simbólicas, así como la fusión de proximidades espaciales, opera en información estandarizada (cf. Figura 3). Esto tiene la ventaja de que sensores adicionales de posición y proximidad pueden ser añadidos fácilmente o los algoritmos de fusión pueden ser reemplazados por otros más sofisticados. La fusión se realiza para cada usuario por separado y solo tiene en cuenta las mediciones en un punto en el tiempo (es decir, no se utiliza información histórica para determinar la ubicación actual de un usuario específico). El algoritmo recopila todos los eventos generados por los atributos de Abstracción del Sensor, realiza la fusión y activa el atributo del Núcleo GISS si la ubicación simbólica de un usuario específico o la proximidad espacial entre usuarios cambia. Una característica importante es el almacenamiento persistente del historial de ubicación y proximidad en una base de datos para permitir su recuperación en el futuro. Esto permite a las aplicaciones visualizar el movimiento de los usuarios, por ejemplo. 3.3.1 Fusión de Sensores de Ubicación El objetivo de la fusión de información de ubicación es mejorar la precisión y exactitud al combinar el conjunto de ubicaciones simbólicas proporcionadas por varios sensores de ubicación, con el fin de reducir el número de estas ubicaciones al mínimo, idealmente a una única ubicación simbólica por usuario. Esto es bastante difícil, ya que diferentes sensores pueden variar en precisión y frecuencia de muestreo también. El atributo de fusión de sensor de ubicación se activa por eventos, que son lanzados por los atributos de abstracción de sensor de ubicación. Estos eventos contienen información sobre la identidad del usuario en cuestión, su ubicación actual y el sensor mediante el cual se ha determinado la ubicación. Si el atributo Location Sensor Fusion recibe dicho evento, verifica si la cantidad de ubicaciones simbólicas del usuario en cuestión ha cambiado (en comparación con el último evento). Si este es el caso, notifica al atributo principal del GISS sobre todas las ubicaciones simbólicas con las que este usuario está actualmente asociado. Sin embargo, esta información no es muy útil por sí sola si un usuario en particular está asociado con varias ubicaciones. Como se describe en el capítulo 3.2.1, un sensor de ubicación único puede proporcionar múltiples ubicaciones simbólicas. Además, un cierto usuario puede tener varios sensores de ubicación, los cuales proporcionan ubicaciones simbólicas que difieren en precisión (es decir, diferentes niveles en la jerarquía de contención de ubicación). Para hacer frente a este desafío, implementamos un algoritmo de fusión con el fin de reducir el número de ubicaciones simbólicas al mínimo (idealmente a una sola ubicación). En un primer paso, cada ubicación simbólica se asocia con su número de ocurrencias. Una ubicación simbólica puede ocurrir varias veces si es referida por más de un sensor o si un solo sensor detecta múltiples etiquetas, las cuales a su vez hacen referencia a varias ubicaciones. Además, este número se suma al número de ocurrencias previamente calculado de cada ubicación simbólica, que es una ubicación secundaria de la considerada en la jerarquía de contención de ubicaciones. Por ejemplo, si - en la Figura 4 - room2 ocurre dos veces y desk ocurre una sola vez, el valor 2 de room2 se suma al valor 1 de desk, por lo que desk finalmente obtiene el valor 3. En un paso final, solo quedan aquellas ubicaciones simbólicas que están asignadas con el mayor número de ocurrencias. Una reducción adicional se puede lograr asignando prioridades a los sensores (basadas en precisión y confianza) y acumulando estas prioridades para cada ubicación simbólica en lugar de simplemente contar el número de ocurrencias. Si las ubicaciones fusionadas restantes han cambiado (es decir, si difieren de las ubicaciones fusionadas con las que el usuario considerado está actualmente asociado), se les proporciona la marca de tiempo actual, se escribe en la base de datos y se notifica al atributo GISS sobre dónde se encuentra probablemente el usuario. Finalmente, se calcula la ubicación más precisa y común en la jerarquía de ubicaciones (es decir, el límite superior mínimo de estas ubicaciones simbólicas) para obtener una única ubicación simbólica. Si cambia, el atributo principal de GISS se activa nuevamente. 3.3.2 Fusión de Sensores de Proximidad La fusión de sensores de proximidad es mucho más simple que la fusión de ubicaciones simbólicas. El atributo de fusión del sensor de proximidad correspondiente se activa por eventos, que son lanzados por los atributos de abstracción del sensor de proximidad. Estos eventos especiales contienen información sobre la identidad de los dos usuarios involucrados, si actualmente se encuentran en proximidad espacial o si la proximidad ya no persiste, y mediante qué sensor de proximidad se ha detectado esto. Si el atributo de fusión de sensores es notificado por un cierto atributo de abstracción de sensor de proximidad sobre una proximidad espacial existente, primero verifica si estos dos usuarios ya se sabe que están en proximidad (detectado ya sea por otro usuario o por otro sensor de proximidad del usuario, que causó el evento). Si no, este cambio en la proximidad se escribe en el repositorio de contexto con la marca de tiempo actual. De manera similar, si el atributo Fusión de Proximidad es notificado sobre una proximidad finalizada, verifica si los usuarios aún se sabe que están en proximidad, y escribe este cambio en el repositorio si no lo están. Finalmente, si la proximidad espacial entre los dos usuarios realmente cambia, se lanza un evento para notificar al atributo central de GISS sobre esto. 4. INTERACCIÓN CONTEXTUALMENTE SENSIBLE 4.1 Resumen En la mayoría de los sistemas actuales que admiten la interacción en grupos, los medios proporcionados carecen de conciencia del contexto actual del usuario, por lo tanto, no pueden adaptarse a sus necesidades. En nuestro enfoque, utilizamos información de contexto para mejorar la interacción y ofrecer servicios adicionales, lo cual brinda nuevas posibilidades al usuario. Además, creemos que la interacción en grupos también debe tener en cuenta el contexto actual del grupo en sí y no solo el contexto de los miembros individuales del grupo. Por esta razón, también recuperamos información sobre el contexto actual del grupo, derivada de los contextos de los miembros del grupo junto con algún tipo de meta-información (ver capítulo 4.3). Las fuentes de contexto utilizadas para nuestra aplicación corresponden con los cuatro tipos de contexto principales dados en el capítulo 1.1 - identidad (I), ubicación (L), tiempo (T) y actividad (A). Como se mencionó anteriormente, también tenemos en cuenta el contexto del grupo con el que el usuario está interactuando, de modo que podríamos agregar un quinto tipo de información de contexto: la conciencia del grupo (G) - a la clasificación. Usando esta información de contexto, podemos activar actividades sensibles al contexto en las tres categorías descritas en el capítulo 1.1: presentación de información (P), ejecución automática de servicios (A) y etiquetado de contexto a la información para su posterior recuperación (T). La Tabla 2 proporciona una visión general de las actividades que ya hemos implementado; están descritas de manera exhaustiva en el capítulo 4.4. La tabla también muestra qué tipos de información de contexto se utilizan para cada actividad y la categoría en la que podría clasificarse la actividad. 93 Tabla 2. La clasificación de las actividades implementadas con conciencia del contexto es la siguiente: Visualización de la ubicación, Soporte para la construcción de grupos, Soporte para la comunicación sincrónica, Soporte para la comunicación asincrónica, Gestión de disponibilidad, Soporte para la gestión de tareas y Soporte para reuniones. Las razones para implementar estas características son aprovechar los cuatro tipos de información de contexto para apoyar la interacción grupal mediante el uso de un conocimiento integral sobre la situación en la que se encuentra un usuario individual o todo un grupo. Un problema crítico para la aceptación del usuario de un sistema así es la usabilidad de su interfaz. Hemos evaluado varias formas de presentar medios de interacción conscientes del contexto al usuario, hasta llegar a la solución que utilizamos actualmente. Aunque creemos que la interfaz de usuario que se ha implementado actualmente ofrece el mejor equilibrio entre la integración perfecta de funciones y la facilidad de uso, no habría problema en ampliar la arquitectura con otras interfaces de usuario, incluso en diferentes plataformas. La solución elegida se basa en un mensajero instantáneo existente, que ofrece varias posibilidades para integrar nuestro sistema (ver capítulo 4.2). La mayor ventaja de este enfoque es que el usuario se enfrenta a una interfaz gráfica de usuario con la que ya está familiarizado en la mayoría de los casos. Además, nuestro sistema utiliza una cuenta de mensajería instantánea como identificador, de modo que el usuario no tenga que registrarse en ningún otro lugar (por ejemplo, el usuario puede utilizar su cuenta de ICQ2 ya existente). 4.2 Integración de Mensajería Instantánea Nuestro sistema se basa en un mensajero instantáneo existente, el llamado Simple Instant Messenger (SIM). La implementación de este mensajero se lleva a cabo como un proyecto en Sourceforge4. SIM admite múltiples protocolos de mensajería como AIM5, ICQ2 y MSN6. También admite conexiones a múltiples cuentas al mismo tiempo. Además, se brinda soporte completo para la notificación por SMS (cuando esté disponible en el protocolo utilizado). SIM se basa en un concepto de plug-in. Todos los protocolos, así como partes de la interfaz de usuario, están implementados como complementos. Su arquitectura también se utiliza para ampliar las capacidades de las aplicaciones para comunicarse con aplicaciones externas. Con este propósito, se proporciona un complemento de control remoto, mediante el cual se puede controlar el SIM desde aplicaciones externas a través de una conexión de socket. Esta interfaz de control remoto es ampliamente utilizada por GISS para recuperar la lista de contactos, establecer el estado de disponibilidad de los usuarios o enviar mensajes. La funcionalidad del complemento se amplió de varias maneras, por ejemplo, para aceptar mensajes para una cuenta (como si hubieran sido enviados a través de la red de mensajería). El mensajero, más exactamente la lista de contactos (es decir, una lista de perfiles de todas las personas registradas en el mensajero instantáneo, que se visualiza enumerando sus nombres como se puede ver en la Figura 5), también se utiliza para mostrar las ubicaciones de otros miembros de los grupos a los que pertenece un usuario. Esto proporciona conciencia de ubicación sin ocupar demasiado espacio o requerir la atención completa de los usuarios. Una descripción más detallada de estas características se proporciona en el capítulo 4.4. 4.3 Fuentes de Información de Contexto Mientras que el contexto de ubicación de un usuario se obtiene de nuestro subsistema de detección de ubicación descrito en el capítulo 3, también consideramos otros tipos de contexto además de la ubicación relevantes para el apoyo de la interacción grupal. El tiempo local, como dimensión de contexto muy importante, se puede recuperar fácilmente del reloj en tiempo real del sistema del usuario. Además de la ubicación y el tiempo, también utilizamos la información de contexto de la actividad e identidad de los usuarios, donde explotamos la funcionalidad proporcionada por el sistema de mensajería instantánea subyacente. La identidad (o más exactamente, la asignación de IDs a nombres, así como información adicional del perfil de los usuarios) se puede extraer de los contenidos de la lista de contactos de los usuarios. La información sobre la actividad o un usuario en particular solo está disponible en un área muy restringida, específicamente la actividad en la computadora misma. Otras actividades como hacer una llamada telefónica o algo similar, no pueden ser reconocidas con la implementación actual del sensor de actividad. La única información de contexto utilizada es el estado de disponibilidad de los mensajeros instantáneos, por lo tanto, solo proporciona una clasificación muy general de la actividad de los usuarios (en línea, fuera de línea, ausente, ocupado, etc.). Aunque esto pueda no parecer mucha información, seguramente es relevante y puede ser utilizada para mejorar o incluso habilitar varios servicios. Habiendo recopilado la información de contexto de todos los usuarios disponibles, ahora es posible destilar cierta información sobre el contexto de un grupo específico. La información sobre el contexto de un grupo incluye cuántos miembros tiene actualmente el grupo, si el grupo se reúne en este momento, qué miembros participan en una reunión, cuántos miembros han leído cuáles de las publicaciones disponibles de otros miembros del equipo, y así sucesivamente. Por lo tanto, se necesita información adicional como una lista de miembros para cada grupo. Estas listas pueden ser ensambladas manualmente (por usuarios que se unen y salen de grupos) o recuperadas automáticamente. El contexto de un grupo es un contexto secundario y se obtiene de los contextos disponibles de los miembros del grupo. Cada vez que cambia el contexto de un miembro del grupo, el contexto de todo el grupo cambia y debe ser recalculado. Con conocimiento sobre el contexto del usuario y el contexto de los grupos a los que pertenece, podemos ofrecer varios servicios sensibles al contexto al usuario, los cuales mejoran sus habilidades de interacción. Una breve descripción de estos servicios se da en el capítulo 4.4. 4.4 Soporte de Interacción en Grupo 4.4.1 Visualización de Información de Ubicación Una característica importante es la visualización de información de ubicación, permitiendo a los usuarios estar al tanto de la ubicación de otros usuarios y miembros de los grupos a los que se unió, respectivamente. Como ya se describió en el capítulo 2, utilizamos dos formas diferentes de visualización. Quizás el más importante sea mostrar la información de ubicación en la lista de contactos del mensajero instantáneo, justo al lado del nombre, de manera que siempre sea visible sin llamar la atención de los usuarios (en comparación con una vista bidimensional, por ejemplo, que requiere una ventana propia para mostrar un mapa del entorno). Debido al espacio limitado en la lista de contactos, ha sido necesario implementar algún tipo de concepto de nivel de detalle. Al utilizar un modelo de ubicación jerárquico, podemos determinar la ubicación común más precisa de dos usuarios. En la lista de contactos, se muestra la ubicación simbólica actual un nivel por debajo de la ubicación común previamente calculada. Si, por ejemplo, el usuario A actualmente reside en la habitación P121 en el primer piso de un edificio y el usuario B, que debe aparecer en la lista de contactos del usuario A, está en la habitación P304 en el tercer piso, la ubicación común más precisa de estos dos usuarios es el edificio en el que se encuentran. Por esa razón, el piso (es decir, un nivel más allá de la ubicación común, es decir, el edificio) del usuario B se muestra en la lista de contactos del usuario A. Si ambas personas residen en el mismo piso o incluso en la misma habitación, la habitación estaría ocupada. La Figura 5 muestra una captura de pantalla del Simple Instant Messenger3, donde la ubicación actual de aquellas personas cuya ubicación es conocida por GISS, se muestra entre paréntesis justo al lado de su nombre. Encima de la imagen, se muestra la barra de herramientas GISS integrada y mejorada, que actualmente contiene la siguiente funcionalidad implementada (de izquierda a derecha): Comunicación asincrónica para grupos (ver capítulo 4.4.4), recordatorios contextuales (ver capítulo 4.4.6), visualización bidimensional de información de ubicación, formación y gestión de grupos (ver capítulo 4.4.2), gestión de disponibilidad contextual (ver capítulo 4.4.5) y finalmente un botón para terminar GISS. Figura 5. La integración de GISS en Simple Instant Messenger3. Dado que mostrar solo esta forma abreviada de la ubicación puede no ser suficiente para el usuario, ya que puede querer ver la posición más precisa disponible, se muestra una posición completamente calificada si se hace clic en un nombre de la lista de contactos (por ejemplo, en la forma de escritorio@habitación2@departamento1@primerpiso@edificio 1@campus). La segunda forma posible de visualización es una gráfica. Hemos evaluado una vista tridimensional, la cual se basaba en un modelo VRML del área respectiva (cf. Figura 6). Debido a deficiencias en la navegación y problemas de usabilidad, decidimos utilizar una vista bidimensional del piso (se le denomina nivel en la jerarquía de ubicación, cf. Figura 4). Otros niveles de granularidad como sección (por ejemplo, edificio) y región (por ejemplo, campus) también se proporcionan. En esta vista basada en el plano del piso, las ubicaciones actuales se muestran al estilo de los contactos de ICQ2, que se colocan en la ubicación actualmente detectada de la persona respectiva. El estado de disponibilidad de un usuario, por ejemplo, ausente si no está en la computadora en este momento, o ocupado si no desea ser molestado, se visualiza mediante la codificación de colores de la flor ICQ2 a la izquierda del nombre. Además, la vista del plano del piso muestra los llamados post-its virtuales, que son contrapartes virtuales de los post-its de la vida real y sirven como nuestro medio de comunicación asincrónica (más información sobre los post-its virtuales se puede encontrar en el capítulo 4.4.4). Figura 6. Vista en 3D del piso (VRML). La Figura 7 muestra el mapa bidimensional de un cierto piso, donde varios usuarios se encuentran actualmente ubicados (visualizados por su nombre y la flor a la izquierda). La ubicación del cliente, en la que se muestra en el mapa, se visualiza mediante un círculo verde. Hacia abajo a la derecha, se pueden ver dos notas adhesivas virtuales. Figura 7. Vista en 2D del suelo. Otra característica de la vista en 2D es la visualización del historial de ubicaciones de los usuarios. Al almacenar el historial completo de las ubicaciones de un usuario junto con una marca de tiempo, podemos proporcionar información sobre los lugares donde ha estado en el pasado. Cuando el ratón se mueve sobre el nombre de un usuario en la vista 2D, las huellas de un usuario, colocadas en los lugares donde ha estado, se desvanecen más intensamente cuanto más antigua sea la información de ubicación. 95 4.4.2 Formación y Gestión de Grupos Para apoyar la interacción en grupos, primero es necesario formar grupos. Como los grupos pueden tener diferentes propósitos, distinguimos dos tipos de grupos. Los llamados grupos estáticos son grupos que se crean manualmente con personas que se unen y abandonan. Los grupos estáticos se pueden dividir aún más en dos subtipos. En grupos estáticos abiertos, cualquiera puede unirse y salir en cualquier momento, útil por ejemplo para formar un grupo de asistentes a conferencias de algún tipo de grupo de interés. Los grupos estáticos cerrados tienen un propietario, quien decide qué personas pueden unirse, aunque todos podrían irse en cualquier momento. Los grupos cerrados permiten a los usuarios, por ejemplo, crear un grupo con sus amigos, pudiendo así comunicarse fácilmente con ellos. En contraste con eso, también apoyamos la creación de grupos dinámicos. Se forman entre personas que se encuentran en el mismo lugar al mismo tiempo. La creación de grupos dinámicos solo se realiza en lugares donde tiene sentido formar grupos, por ejemplo en aulas o salas de reuniones, pero no en pasillos o exteriores. Tampoco tendría mucho sentido formar un grupo solo con las personas que residen en el sector frontal izquierdo de un salón; en cambio, se debería considerar todo el salón. Por estas razones, todas las ubicaciones definidas en la jerarquía están etiquetadas, ya sea que permitan la formación de grupos o no. Los grupos dinámicos no solo se forman en función de la granularidad de las habitaciones, sino también en niveles superiores de la jerarquía, por ejemplo, con las personas que actualmente residen en el área de un departamento. Dado que los miembros de los grupos dinámicos cambian constantemente, es posible crear un grupo estático abierto a partir de ellos. 4.4.3 Comunicación Sincrónica para Grupos La forma más importante de comunicación sincrónica en las computadoras hoy en día es la mensajería instantánea; algunas personas incluso consideran que la mensajería instantánea es la verdadera aplicación estrella en Internet. Esto también ha motivado la decisión de construir GISS sobre un sistema de mensajería instantánea. En los sistemas de mensajería de hoy en día, se brinda un amplio soporte a la comunicación de igual a igual. Sin embargo, cuando se trata de comunicación en grupos, el apoyo suele ser bastante deficiente la mayor parte del tiempo. A menudo, solo se admite enviar un mensaje a múltiples destinatarios, sin contar con medios para tener en cuenta el estado actual de los destinatarios. Además, los grupos solo pueden formarse con miembros de la lista de contactos, por lo tanto, no es posible enviar mensajes a un grupo donde no se conocen a todos sus miembros (lo cual puede ser el caso en entornos donde los participantes de una conferencia forman un grupo). Nuestro enfoque no tiene las restricciones mencionadas. Introducimos entradas de grupo en la lista de contactos de los usuarios; le permitimos a él o a ella enviar mensajes a este grupo fácilmente, sin saber quién exactamente es actualmente miembro de este grupo. Además, los mensajes de grupo solo se entregan a personas que no están ocupadas en ese momento, evitando así una interrupción por un mensaje que posiblemente no sea importante para el usuario. Estas funciones no pueden llevarse a cabo en la red del mensajero en sí misma, por lo que cada vez que se envía un mensaje a una cuenta de grupo, lo interceptamos y lo dirigimos a través de nuestro sistema a todos los destinatarios, que están disponibles en un momento determinado. La comunicación a través de una cuenta de grupo también se almacena de forma centralizada, lo que permite a las personas consultar los mensajes perdidos o simplemente ver el historial de mensajes. 4.4.4 Comunicación Asincrónica para Grupos La comunicación asincrónica en grupos no es una idea nueva. El objetivo de este enfoque no es reinventar la rueda, ya que el correo electrónico es quizás la forma más ampliamente utilizada de comunicación asincrónica en computadoras y está ampliamente aceptado y estandarizado. En nuestro trabajo, buscamos la combinación de comunicación asincrónica con conciencia de ubicación. Por esta razón, introducimos el concepto de los llamados post-its virtuales (cp. [13]), que son mensajes que están vinculados a ubicaciones físicas. Estos post-its virtuales pueden ser visibles para todos los usuarios que pasen por allí o pueden estar restringidos para ser visibles solo para ciertos grupos de personas. Además, un post-it virtual también puede tener una fecha de caducidad después de la cual se elimina y ya no se muestra. Los post-its virtuales también pueden ser comentados por otros, proporcionando así algún tipo de interacción similar a un foro, donde cada post-it forma un hilo. Las notas adhesivas virtuales se muestran automáticamente cada vez que un usuario (disponible) pasa por primera vez. Posteriormente, los post-its se pueden acceder a través del visor 2D, donde se muestran todos los post-its visibles. Todos los lectores de una nota adhesiva quedan registrados y se muestran al verla, lo que proporciona cierto nivel de conciencia sobre las actividades de los miembros del grupo en el pasado. 4.4.5 Gestión de disponibilidad consciente del contexto Los mensajeros instantáneos en general proporcionan algún tipo de información sobre la disponibilidad de un usuario. Aunque esta información solo puede definirse de forma muy general, hemos decidido utilizar estos medios para recopilar el contexto de la actividad, ya que la introducción de uno adicional disminuiría considerablemente la usabilidad del sistema. Para apoyar al usuario en la gestión de su disponibilidad, proporcionamos una interfaz que le permite definir reglas para adaptar su disponibilidad al contexto actual. Estas reglas siguen la forma de evento (E) si condición (C) entonces acción (A), lo cual está directamente respaldado por las reglas ECA del Marco de Contexto descritas en el capítulo 1.3. La prueba de condiciones se desencadena periódicamente mediante eventos de lanzamiento (cada vez que cambia el contexto de un usuario). La condición en sí misma es definida por el usuario, quien puede solicitar el cambio de su estado de disponibilidad como la acción en la regla. Como condición, el usuario puede definir su ubicación, un momento específico (también activando recordatorios diarios, semanales o mensuales) o cualquier combinación lógica de estos criterios. Los recordatorios contextuales [14] se utilizan para dar al usuario la oportunidad de definir tareas y ser recordado de ellas cuando se cumplen ciertos criterios. Por lo tanto, un recordatorio puede ser visto como un post-it para uno mismo, el cual solo es visible en ciertos casos. Los recordatorios pueden estar vinculados a un lugar o tiempo específico, pero también a la proximidad espacial de usuarios o grupos. Estos criterios se pueden combinar con operadores booleanos, proporcionando así un medio poderoso para recordar al usuario las tareas que desea realizar cuando ocurre un cierto contexto. Un recordatorio solo aparecerá la primera vez que el contexto real cumpla con el criterio definido. Al mostrar el recordatorio, el usuario tiene la oportunidad de volver a enviarlo para ser recordado nuevamente, por ejemplo, cinco minutos después o la próxima vez que cierto usuario esté en proximidad espacial. 96 4.4.7 Reconocimiento y Notificación Contextual de Reuniones de Grupo Con la información de contexto disponible, intentamos reconocer las reuniones de un grupo. La determinación de los criterios, cuando el sistema reconoce que un grupo está teniendo una reunión, es parte del trabajo en curso. En un primer enfoque, utilizamos la ubicación y el contexto de actividad de los miembros del grupo para determinar una reunión. Siempre que más del 50 % de los miembros de un grupo estén disponibles en un lugar donde se considere que tiene sentido realizar una reunión (por ejemplo, no en un pasillo), se crea una nota de reunión en un post-it en ese lugar y se notifica a todos los miembros ausentes del grupo sobre la reunión y el lugar donde se llevará a cabo. Durante la reunión, la función de comentarios de las notas adhesivas virtuales proporciona un medio para tomar notas para todos los participantes. Cuando los miembros se unen o abandonan la reunión, esto se añade automáticamente como una nota a la lista de comentarios. Al igual que el reconocimiento del inicio de una reunión, el reconocimiento de su final sigue siendo parte del trabajo en curso. Si se reconoce el final de la reunión, todos los miembros del grupo reciben la lista completa de comentarios como un protocolo de reunión al final de la reunión. CONCLUSIONES Este artículo discutió el potencial del apoyo para la interacción grupal mediante el uso de información de contexto. Primero, introdujimos las nociones de contexto y computación de contexto y motivamos su valor para apoyar la interacción grupal. Se presenta una arquitectura para apoyar la interacción grupal consciente del contexto en entornos móviles y distribuidos. Está construido sobre un marco flexible y extensible, lo que permite una fácil adaptación a las fuentes de contexto disponibles (por ejemplo, agregando sensores adicionales) así como la forma de representación requerida. Hemos desarrollado prototípicamente un conjunto de servicios que mejoran la interacción grupal teniendo en cuenta el contexto actual de los usuarios y el contexto de los propios grupos. Las características importantes son la formación dinámica de grupos, la visualización de la ubicación en un mapa bidimensional, así como la integración discreta en un mensajero instantáneo, la comunicación asincrónica a través de notas virtuales, que están vinculadas a ciertas ubicaciones, y un sistema de gestión de disponibilidad consciente del contexto, que adapta el estado de disponibilidad de un usuario a su situación actual. Para proporcionar información de ubicación, hemos implementado un subsistema para la adquisición automatizada de información de ubicación y proximidad proporcionada por varios sensores, que ofrece una presentación independiente de la tecnología de ubicaciones y proximidades espaciales entre usuarios y fusiona esta información utilizando algoritmos de fusión independientes de los sensores. Un historial de ubicaciones, así como de proximidades espaciales, se almacena en una base de datos, lo que permite habilitar servicios basados en el historial de contexto. REFERENCIAS [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modelado del comportamiento consciente del contexto mediante reglas ECA interpretadas. En Actas de la Conferencia Internacional sobre Computación Paralela y Distribuida (EUROPAR03). (Klagenfurt, Austria, 26-29 de agosto de 2003). Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Aplicaciones Conscientes del Contexto: Del Laboratorio al Mercado. IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. Una encuesta de la investigación en computación móvil consciente del contexto. Informe técnico TR2000-381, Departamento de Ciencias de la Computación, Dartmouth College, Hanover, New Hampshire, noviembre de 2000. [4] Dey, A. Proporcionando Soporte Arquitectónico para Aplicaciones Conscientes del Contexto del Edificio. Tesis de doctorado, Departamento de Ciencias de la Computación, Instituto de Tecnología de Georgia, Atlanta, noviembre de 2000. [5] Svetlana Domnitcheva. Modelado de ubicación: Estado del arte y desafíos. En Actas del Taller sobre Modelado de Ubicación para la Computación Ubicua. (Atlanta, Georgia, Estados Unidos, 30 de septiembre de 2001). 13-19. [6] Ferscha, A. Conciencia del Espacio de Trabajo en Equipos Virtuales Móviles. En Actas del 9º Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE00). (Gaithersburg, Maryland, 14-16 de marzo de 2000). IEEE Computer Society Press, 272-277. [7] Ferscha, A. \n\nIEEE Computer Society Press, 272-277. [7] Ferscha, A. Coordinación en entornos de computación ubicua. En Actas del Duodécimo Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE-2003). (9-11 de junio de 2003). IEEE Computer Society Press, 3-9. [8] Leonhard, U. \n\nIEEE Computer Society Press, 3-9. [8] Leonhard, U. Apoyando la Conciencia de Ubicación en Sistemas Distribuidos Abiertos. Tesis de doctorado, Departamento de Computación, Imperial College, Londres, mayo de 1998. [9] Ryan, N., Pascoe, J., Morse, D. Trabajo de campo de realidad aumentada: el asistente arqueológico consciente del contexto. Gaffney, V., Van Leusen, M., Exxon, S. (eds.) -> Gaffney, V., Van Leusen, M., Exxon, S. (eds.) Aplicaciones informáticas en Arqueología (1997) [10] Schilit, B.N., Theimer, M. Difusión de información de mapas activos a dispositivos móviles. IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N. \n\nRed de IEEE, 8(5) (1994), 22-32. [11] Schilit, B.N. Una arquitectura de sistema para la computación móvil consciente del contexto. Tesis de doctorado, Universidad de Columbia, Departamento de Ciencias de la Computación, mayo de 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S. Apoyando grupos sociales persistentes en entornos de computación ubicua utilizando un servicio de grupo efímero consciente del contexto. En Actas de la Segunda Conferencia Internacional de IEEE sobre Computación y Comunicaciones Pervasivas (PerCom04). (14-17 de marzo de 2004). IEEE Computer Society Press, 287-296. [13] Pascoe, J. \n\nIEEE Computer Society Press, 287-296. [13] Pascoe, J. La arquitectura de Stick-e Note: Extendiendo la interfaz más allá del usuario. Actas de la 2ª Conferencia Internacional de Interfaces de Usuario Inteligentes (IUI97). (Orlando, EE. UU., 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: Un Sistema Consciente del Contexto para Apoyar Recordatorios. Actas del 2º Simposio Internacional sobre Computación Portátil y Ubicua (HUC00). (Bristol, Reino Unido, 2000), 172-186. 97 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "contextaware": {
            "translated_key": "consciente del contexto",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be <br>contextaware</br> if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [
                "According to this definition, [4] defines a system to be <br>contextaware</br> if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval."
            ],
            "translated_annotated_samples": [
                "Según esta definición, [4] define un sistema como <br>consciente del contexto</br> si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación."
            ],
            "translated_text": "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil. Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la interacción en grupo. A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la interacción en grupo. Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos. H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica. Términos generales de diseño, Experimentación 1. INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica. Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar. Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones. Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real. Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS). Apoya la interacción grupal en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás. En los siguientes subcapítulos, daremos una breve descripción sobre la computación consciente del contexto y motivaremos sus beneficios para apoyar la interacción en grupo. Se presenta un marco de software para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS. El capítulo 2 presenta la arquitectura de GISS, y los capítulos 3 y 4 discuten los conceptos de localización y de interacción en grupo de GISS con más detalle. El capítulo 5 ofrece un resumen final de nuestro trabajo. 1.1 ¿Qué es la Computación Contextual? Según el Diccionario en línea de Merriam-Webster, el contexto se define como las condiciones interrelacionadas en las que algo existe o ocurre. Dado que esta definición es muy general, se han realizado muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos. La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para contexto. El término consciente del contexto fue introducido por primera vez en [10], donde el contexto se refiere a la ubicación, identidades de personas y objetos cercanos, y cambios en esos objetos. En [2], el contexto también se define mediante una enumeración de ejemplos, como la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación del usuario, el entorno, la identidad y el tiempo. Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información que se pueda utilizar para caracterizar la situación de una entidad. Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluyendo al usuario y a las propias aplicaciones. [4] identifica cuatro tipos principales de información de contexto (a veces referidos como dimensiones de contexto), que son - con respecto a la caracterización de la situación de una entidad - más importantes que otros. Estos son la ubicación, la identidad, el tiempo y la actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundarios). Por ejemplo, si conocemos la identidad de una persona, podemos derivar fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico). Según esta definición, [4] define un sistema como <br>consciente del contexto</br> si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación. Figura 1. Las capas de un sistema consciente del contexto. La computación del contexto se basa en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y utilizar el contexto obtenido (ejecución automática, presentación, etiquetado). Para hacer esto, hay algunas capas intermedias (ver Figura 1). Primero, la información de contexto de bajo nivel obtenida debe ser transformada, agregada e interpretada (transformación de contexto) y representada en un modelo abstracto del mundo de contexto (representación de contexto), ya sea centralizado o descentralizado. Finalmente, la información de contexto almacenada se utiliza para activar ciertos eventos de contexto (activación de contexto). Después de estas definiciones abstractas y formales sobre qué es el contexto y la computación de contexto, nos centraremos ahora en el objetivo principal de este trabajo, es decir, cómo la interacción de los miembros de un grupo móvil puede ser apoyada mediante el uso de información de contexto. En [6] hemos identificado que los sistemas organizativos son cruciales para apoyar a los grupos móviles (ver Figura 2). Primero, tiene que haber un Sistema de Gestión de Información y Conocimiento, que sea capaz de apoyar a un equipo con sus necesidades de procesamiento de información y recopilación de conocimiento. La siguiente parte es el Sistema de Conciencia, que se dedica a la percepción de los efectos de la actividad en equipo. Esto se logra comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios. Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea de forma sincrónica o asincrónica, y para el acceso compartido a artefactos, como documentos. Los sistemas de movilidad despliegan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como la captura y entrega de información de conciencia desde y hacia cualquier lugar. Finalmente, pero no menos importante, el sistema de innovación organizacional integra aspectos del equipo en sí mismo, como roles, liderazgo e instalaciones compartidas. Con respecto a estos cinco aspectos de apoyo al equipo, nos enfocamos en la interacción y cubrimos parcialmente el apoyo a la movilidad y la conciencia. La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros. En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para apoyar la interacción grupal. Creemos que la información sobre la situación actual de una persona aporta un valor añadido a los sistemas de interacción grupal existentes. La información de contexto facilita la interacción grupal al permitir que cada miembro esté al tanto del estado de disponibilidad o la ubicación actual de los demás miembros del grupo, lo que a su vez hace posible formar grupos de manera dinámica, colocar notas virtuales en el mundo real o determinar qué personas están cerca. Figura 2. Apoyo para Grupos Móviles [6]. La mayoría de las aplicaciones de hoy en día que son conscientes del contexto utilizan únicamente la ubicación y el tiempo, y la ubicación se considera un tipo crucial de información de contexto [3]. También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo se centra en la utilización de la información de ubicación y la información sobre los usuarios en proximidad espacial. Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizada, no es suficiente para respaldar la interacción grupal, por lo cual también aprovechamos los otros tres tipos principales, a saber, identidad, tiempo y actividad. Esto proporciona una descripción completa de la situación actual de un usuario y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen detalladamente en el capítulo 4.4. Cuando observamos los tipos de información de contexto mencionados anteriormente, podemos ver que todos ellos están centrados en el usuario individual, teniendo en cuenta únicamente el contexto del propio usuario. Creemos que, para apoyar la interacción grupal, también se debe tener en cuenta el estatus del propio grupo. Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el contexto de grupo, que abarca más que la suma de los contextos individuales de los miembros. El contexto de grupo incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un grupo en particular se reúne en este momento. Middleware de contexto 1.3 El Sistema de Soporte de Interacción de Grupo (GISS) utiliza el marco de software presentado en [1], que sirve como middleware para desarrollar aplicaciones sensibles al contexto. Este llamado Marco de Contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes. Una característica principal del marco es la abstracción de la recuperación de información de contexto a través de varios sensores y su entrega a un nivel donde no se percibe ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes mecanismos de recuperación de contexto; la recuperación de información está oculta para el desarrollador de aplicaciones. Esto se logra mediante entidades llamadas, que describen objetos, por ejemplo, un usuario humano, que son importantes para un determinado escenario de contexto. Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, los cuales pueden ser cargados en la entidad. Estos atributos son piezas complejas de software, que se implementan como clases de Java. Los atributos típicos son encapsulaciones de sensores, pero también pueden ser utilizados para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre cambios de ubicación de los usuarios. Cada entidad puede contener una colección de tales atributos, donde una entidad en sí misma es un atributo. El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos desde el almacenamiento local o a través de la red. Para cargar e implementar nuevos atributos, una entidad debe hacer referencia a un cargador de clases y una capa de transporte y búsqueda, que gestiona el mecanismo de búsqueda para descubrir otras entidades y el transporte. Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atributos poseen estas entidades. La comunicación entre entidades y atributos se basa en eventos de contexto. Cada atributo es capaz de desencadenar eventos, los cuales están dirigidos a otros atributos y entidades respectivamente, independientemente de en qué computadora física estén ejecutándose. Entre otras cosas, un evento contiene el nombre del evento y una lista de parámetros que proporcionan información sobre el propio evento. Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (Evento-Condición-Acción) para definir el comportamiento del sistema de contexto. Por lo tanto, cada entidad tiene un intérprete de reglas, que captura eventos desencadenados, verifica las condiciones asociadas a ellos y provoca ciertas acciones. Estas reglas son referenciadas por la configuración XML de la entidad. Una regla en sí misma incluso puede desencadenar la inserción de nuevas reglas o la descarga de reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto. En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar los datos del sensor de bajo nivel de las aplicaciones de alto nivel y oculta los detalles de comunicación externa al desarrollador de la aplicación. Además, es capaz de adaptar su comportamiento dinámicamente cargando atributos, entidades o reglas ECA en tiempo de ejecución. VISIÓN GENERAL DE LA ARQUITECTURA Dado que GISS utiliza el Marco de Contexto descrito en el capítulo 1.3 como middleware, cada usuario está representado por una entidad, al igual que el servidor central, que es responsable de la transformación de contexto, la representación de contexto y la activación de contexto (cf. Figura 1). Una parte principal de nuestro trabajo se centra en la adquisición automatizada de información de posición y su provisión independiente de sensores a nivel de aplicación. No solo percibimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos. Al desarrollar la arquitectura, nos enfocamos en mantener el cliente lo más simple posible y reducir al mínimo la comunicación entre el cliente y el servidor. Cada cliente puede tener varios sensores de ubicación y/o proximidad adjuntos, los cuales están encapsulados por los atributos respectivos del Marco de Contexto (Encapsulación de Sensores). Estos atributos son responsables de integrar implementaciones de sensores nativos en el Marco de Contexto y enviar información de posición dependiente del sensor al servidor. Consideramos muy importante apoyar diferentes tipos de sensores al mismo tiempo, con el fin de mejorar la precisión de la ubicación por un lado, y proporcionar un entorno de detección de ubicación ubicuo con transiciones fluidas entre diferentes técnicas de detección de ubicación por otro lado. Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstraen la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor). Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas a ubicaciones estandarizadas. La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de Fusión de Sensores, uno para ubicaciones simbólicas y otro para proximidades espaciales. Su trabajo consiste en fusionar la información de ubicación y proximidad de los clientes, respectivamente, la cual se describe detalladamente en el Capítulo 3.3. Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de Fusión de Sensores notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación. Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede ser fácilmente ampliado con sensores adicionales, simplemente implementando los (generalmente dos) atributos para encapsular los sensores (algunos sensores pueden no necesitar una parte del lado del cliente), abstrayendo las posiciones físicas y observando la interfaz con el Núcleo de GISS. Figura 3. La arquitectura del Sistema de Soporte de Interacción de Grupo (GISS). El atributo central del núcleo de GISS es el coordinador principal de la aplicación tal como se muestra al usuario. No solo sirve como una interfaz al subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad). Cada vez que se detecta un cambio en el contexto de uno o más usuarios, el núcleo de GISS evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y en los demás miembros de estos grupos. Cuando sea necesario, se lanzan eventos a los clientes afectados para activar actividades contextualmente conscientes, como cambiar la presentación de la información de conciencia o la ejecución de servicios. La parte del cliente de la aplicación se mantiene lo más simple posible. Además, el diseño modular no solo fue un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario. Por lo tanto, la interfaz de usuario completa puede intercambiarse fácilmente si se tienen en cuenta y se comprenden todos los eventos definidos por el nuevo atributo de la interfaz. La interfaz de usuario actualmente implementada está dividida en dos partes, las cuales también están representadas por dos atributos. El atributo central en el lado del cliente es la llamada Encapsulación de Mensajería Instantánea, que por un lado interactúa con el servidor a través de eventos y por otro lado sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario. Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente, el Simple Instant Messenger (SIM)3 compatible con ICQ2. Hemos elegido un mensajero instantáneo como interfaz porque proporciona una interfaz conocida para la mayoría de los usuarios y facilita una integración fluida del soporte de interacción grupal, aumentando así la aceptación y facilidad de uso. Dado que la funcionalidad básica del mensajero instantáneo, que es servir como cliente en una red de mensajería instantánea, sigue completamente operativa, nuestra aplicación puede utilizar las funciones ya proporcionadas por el mensajero. Por ejemplo, los contextos de actividad e identidad se derivan de la red de mensajería tal como se describe más adelante. La Encapsulación de Mensajería Instantánea también es responsable de admitir la comunicación en grupo. A través de la interfaz del mensajero, proporciona medios de comunicación síncrona y asíncrona, así como un sistema de recordatorio contextual y herramientas para gestionar grupos y el propio estado de disponibilidad. La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, la cual está implementada en el Visor de atributos. La implementación actual proporciona un mapa bidimensional del campus, pero puede ser fácilmente reemplazada por otras visualizaciones, como un modelo VRML tridimensional. Además, esta visualización se utiliza para mostrar los artefactos de la comunicación asincrónica. Basado en una vista del plano de la zona geográfica en la que se encuentra actualmente el usuario, ofrece una rápida visión general de las personas cercanas, su estado y proporciona medios para interactuar con ellas. En los siguientes capítulos 3 y 4, describimos con más detalle el backend de detección de ubicación y el frontend de la aplicación para apoyar la interacción grupal. SENSADO DE UBICACIÓN En el siguiente capítulo, presentaremos un modelo de ubicación que se utiliza para representar ubicaciones; posteriormente, describiremos la integración de sensores de ubicación y proximidad en más detalle. Finalmente, echaremos un vistazo más de cerca a la fusión de la información de ubicación y proximidad, adquirida por varios sensores. Modelo de Ubicación Un modelo de ubicación (es decir, una representación de contexto para la información de contexto de ubicación) es necesario para representar las ubicaciones de los usuarios, con el fin de poder facilitar consultas relacionadas con la ubicación, como por ejemplo, dada una ubicación, devolver una lista de todos los objetos allí o dado un objeto, devolver su ubicación actual. En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representa la ubicación como coordenadas. Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como Sala P111 o Edificio de Física, porque no necesitamos datos de ubicación geométrica. En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación. Además, utilizamos una jerarquía de contención de ubicaciones simbólicas similar a la introducida en [11], que consta de regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos a su vez contienen habitaciones. También distinguimos cuatro tipos, a saber, región (por ejemplo, un campus completo), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, un piso específico en un edificio) y área (por ejemplo, una habitación específica). Introducimos un quinto tipo de ubicación, al que nos referimos como semántico. Estas llamadas ubicaciones semánticas pueden aparecer en cualquier nivel de la jerarquía y pueden estar anidadas, pero no necesariamente tienen una representación geográfica. Ejemplos de tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones. Figura 4. Jerarquía de Contención de Ubicaciones Simbólicas La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto. 3.2 Sensores Nuestra arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación, y sensores de proximidad, que detectan proximidades espaciales entre usuarios. Como se describe arriba, cada sensor tiene una implementación del lado del servidor y, en la mayoría de los casos, también una implementación correspondiente del lado del cliente. Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular. Tales notificaciones se realizan cada vez que el sensor adquiere nueva información. Por lo tanto, los atributos de abstracción del sensor son responsables de detectar cuándo un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si ha sido desconectado por el usuario) o cuando la posición o proximidad no se pueden determinar más (por ejemplo, si). El lector de RFID no puede detectar etiquetas y notificará a la fusión de sensores correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor. Los atributos de abstracción de sensores de ubicación correspondientes recopilan estas posiciones físicas proporcionadas por los sensores de todos los usuarios, y realizan una búsqueda en el repositorio para obtener la ubicación simbólica asociada. Esto requiere ciertas tablas para cada sensor, las cuales asignan posiciones físicas a ubicaciones simbólicas. Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones. Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular. Hemos implementado prototípicamente tres tipos de sensores de ubicación, basados en WLAN (IEEE 802.11), Bluetooth y RFID (Identificación por Radiofrecuencia). Hemos elegido estos tres sensores completamente diferentes debido a sus diferencias en cuanto a precisión, cobertura y esfuerzo administrativo, con el fin de evaluar la flexibilidad de nuestro sistema (ver Tabla 1). El más preciso es un sensor de RFID, que se basa en un lector de RFID activo. Tan pronto como el lector se conecta al cliente, escanea las etiquetas RFID activas en rango y transmite sus números de serie al servidor, donde se asignan a ubicaciones simbólicas. También tenemos en cuenta el RSSI (Radio Signal Strength Information), que proporciona una precisión de posición de unos pocos centímetros y nos permite determinar cuál etiqueta RFID está más cercana. Debido a esta alta precisión, el RFID se utiliza para localizar usuarios dentro de habitaciones. La administración es bastante simple; una vez que se coloca una nueva etiqueta RFID, su número de serie simplemente debe asignarse a una única ubicación simbólica. Una desventaja es la baja disponibilidad, que se puede atribuir al hecho de que los lectores de RFID siguen siendo muy costosos. El segundo es un sensor WLAN 802.11. Por lo tanto, integramos un sistema de posicionamiento WLAN comercial puramente basado en software para rastrear clientes en la infraestructura WLAN del campus universitario. La precisión de la posición alcanzada se encuentra en el rango de unos pocos metros y, por lo tanto, es adecuada para la detección de ubicación a nivel de habitaciones. Una gran desventaja es que un mapa de toda el área debe ser calibrado con puntos de medición a una distancia de 5 metros cada uno. Debido a que la mayoría de las computadoras móviles están equipadas con tecnología WLAN y el sistema de posicionamiento es una solución solo de software, casi todos pueden usar este tipo de sensor. Finalmente, hemos implementado un sensor de Bluetooth, que detecta etiquetas de Bluetooth (es decir, Módulos Bluetooth con posición conocida) en rango y los transmite al servidor que los mapea a ubicaciones simbólicas. Debido al hecho de que no utilizamos información de la fuerza de la señal en la implementación actual, la precisión es superior a 10 metros y, por lo tanto, una única dirección MAC de Bluetooth está asociada con varios lugares simbólicos, de acuerdo a las ubicaciones físicas que cubre dicho módulo de Bluetooth. Esto conlleva la desventaja de que el alcance de cada etiqueta Bluetooth debe ser determinado y mapeado a ubicaciones simbólicas dentro de este alcance. Tabla 1. Comparación de sensores implementados Precisión del sensor Cobertura Administración RFID < 10 cm pobre fácil WLAN 1-4 m muy buena muy lenta Bluetooth ~ 10 m buena lenta 3.2.2 Sensores de proximidad Cualquier sensor capaz de detectar si dos usuarios están en proximidad espacial se denomina sensor de proximidad. Similar a los sensores de ubicación, los atributos de abstracción del sensor de proximidad recopilan información de proximidad física de todos los usuarios y los transforman en asignaciones de identificaciones de usuario. Hemos implementado dos tipos de sensores de proximidad, uno basado en Bluetooth y otro en ubicaciones simbólicas fusionadas (ver capítulo 3.3.1). La implementación de Bluetooth va de la mano con la implementación del sensor de ubicación basado en Bluetooth. Las direcciones MAC de Bluetooth ya determinadas en el rango de un cliente específico se están comparando con las de todos los demás clientes, y cada vez que el atributo Abstracción del Sensor de Bluetooth detecta congruencia, notifica al sensor de fusión de proximidad al respecto. El segundo sensor se basa en ubicaciones simbólicas procesadas por la Fusión de Sensores de Ubicación, por lo tanto no necesita una implementación del lado del cliente. Cada vez que la ubicación simbólica fusionada de un usuario específico cambia, verifica si se encuentra en la misma ubicación simbólica que otro usuario y notifica nuevamente a la fusión del sensor de proximidad sobre la cercanía entre estos dos usuarios. El rango puede ser restringido a cualquier nivel de la jerarquía de contención de ubicación, por ejemplo, a nivel de habitación. Un problema actualmente sin resolver es la granularidad incomparable de diferentes sensores de proximidad. Por ejemplo, las ubicaciones simbólicas en el mismo nivel en la jerarquía de ubicaciones generalmente no cubren la misma área geográfica. 3.3 El núcleo de fusión de sensores del subsistema de detección de ubicación es la fusión de sensores. Combina datos de varios sensores, al mismo tiempo que lidia con diferencias en cuanto a precisión, cobertura y frecuencia de muestreo. Según los dos tipos de sensores descritos en el capítulo 3.2, distinguimos entre la fusión de sensores de ubicación por un lado, y la fusión de sensores de proximidad por otro lado. La fusión de ubicaciones simbólicas, así como la fusión de proximidades espaciales, opera en información estandarizada (cf. Figura 3). Esto tiene la ventaja de que sensores adicionales de posición y proximidad pueden ser añadidos fácilmente o los algoritmos de fusión pueden ser reemplazados por otros más sofisticados. La fusión se realiza para cada usuario por separado y solo tiene en cuenta las mediciones en un punto en el tiempo (es decir, no se utiliza información histórica para determinar la ubicación actual de un usuario específico). El algoritmo recopila todos los eventos generados por los atributos de Abstracción del Sensor, realiza la fusión y activa el atributo del Núcleo GISS si la ubicación simbólica de un usuario específico o la proximidad espacial entre usuarios cambia. Una característica importante es el almacenamiento persistente del historial de ubicación y proximidad en una base de datos para permitir su recuperación en el futuro. Esto permite a las aplicaciones visualizar el movimiento de los usuarios, por ejemplo. 3.3.1 Fusión de Sensores de Ubicación El objetivo de la fusión de información de ubicación es mejorar la precisión y exactitud al combinar el conjunto de ubicaciones simbólicas proporcionadas por varios sensores de ubicación, con el fin de reducir el número de estas ubicaciones al mínimo, idealmente a una única ubicación simbólica por usuario. Esto es bastante difícil, ya que diferentes sensores pueden variar en precisión y frecuencia de muestreo también. El atributo de fusión de sensor de ubicación se activa por eventos, que son lanzados por los atributos de abstracción de sensor de ubicación. Estos eventos contienen información sobre la identidad del usuario en cuestión, su ubicación actual y el sensor mediante el cual se ha determinado la ubicación. Si el atributo Location Sensor Fusion recibe dicho evento, verifica si la cantidad de ubicaciones simbólicas del usuario en cuestión ha cambiado (en comparación con el último evento). Si este es el caso, notifica al atributo principal del GISS sobre todas las ubicaciones simbólicas con las que este usuario está actualmente asociado. Sin embargo, esta información no es muy útil por sí sola si un usuario en particular está asociado con varias ubicaciones. Como se describe en el capítulo 3.2.1, un sensor de ubicación único puede proporcionar múltiples ubicaciones simbólicas. Además, un cierto usuario puede tener varios sensores de ubicación, los cuales proporcionan ubicaciones simbólicas que difieren en precisión (es decir, diferentes niveles en la jerarquía de contención de ubicación). Para hacer frente a este desafío, implementamos un algoritmo de fusión con el fin de reducir el número de ubicaciones simbólicas al mínimo (idealmente a una sola ubicación). En un primer paso, cada ubicación simbólica se asocia con su número de ocurrencias. Una ubicación simbólica puede ocurrir varias veces si es referida por más de un sensor o si un solo sensor detecta múltiples etiquetas, las cuales a su vez hacen referencia a varias ubicaciones. Además, este número se suma al número de ocurrencias previamente calculado de cada ubicación simbólica, que es una ubicación secundaria de la considerada en la jerarquía de contención de ubicaciones. Por ejemplo, si - en la Figura 4 - room2 ocurre dos veces y desk ocurre una sola vez, el valor 2 de room2 se suma al valor 1 de desk, por lo que desk finalmente obtiene el valor 3. En un paso final, solo quedan aquellas ubicaciones simbólicas que están asignadas con el mayor número de ocurrencias. Una reducción adicional se puede lograr asignando prioridades a los sensores (basadas en precisión y confianza) y acumulando estas prioridades para cada ubicación simbólica en lugar de simplemente contar el número de ocurrencias. Si las ubicaciones fusionadas restantes han cambiado (es decir, si difieren de las ubicaciones fusionadas con las que el usuario considerado está actualmente asociado), se les proporciona la marca de tiempo actual, se escribe en la base de datos y se notifica al atributo GISS sobre dónde se encuentra probablemente el usuario. Finalmente, se calcula la ubicación más precisa y común en la jerarquía de ubicaciones (es decir, el límite superior mínimo de estas ubicaciones simbólicas) para obtener una única ubicación simbólica. Si cambia, el atributo principal de GISS se activa nuevamente. 3.3.2 Fusión de Sensores de Proximidad La fusión de sensores de proximidad es mucho más simple que la fusión de ubicaciones simbólicas. El atributo de fusión del sensor de proximidad correspondiente se activa por eventos, que son lanzados por los atributos de abstracción del sensor de proximidad. Estos eventos especiales contienen información sobre la identidad de los dos usuarios involucrados, si actualmente se encuentran en proximidad espacial o si la proximidad ya no persiste, y mediante qué sensor de proximidad se ha detectado esto. Si el atributo de fusión de sensores es notificado por un cierto atributo de abstracción de sensor de proximidad sobre una proximidad espacial existente, primero verifica si estos dos usuarios ya se sabe que están en proximidad (detectado ya sea por otro usuario o por otro sensor de proximidad del usuario, que causó el evento). Si no, este cambio en la proximidad se escribe en el repositorio de contexto con la marca de tiempo actual. De manera similar, si el atributo Fusión de Proximidad es notificado sobre una proximidad finalizada, verifica si los usuarios aún se sabe que están en proximidad, y escribe este cambio en el repositorio si no lo están. Finalmente, si la proximidad espacial entre los dos usuarios realmente cambia, se lanza un evento para notificar al atributo central de GISS sobre esto. 4. INTERACCIÓN CONTEXTUALMENTE SENSIBLE 4.1 Resumen En la mayoría de los sistemas actuales que admiten la interacción en grupos, los medios proporcionados carecen de conciencia del contexto actual del usuario, por lo tanto, no pueden adaptarse a sus necesidades. En nuestro enfoque, utilizamos información de contexto para mejorar la interacción y ofrecer servicios adicionales, lo cual brinda nuevas posibilidades al usuario. Además, creemos que la interacción en grupos también debe tener en cuenta el contexto actual del grupo en sí y no solo el contexto de los miembros individuales del grupo. Por esta razón, también recuperamos información sobre el contexto actual del grupo, derivada de los contextos de los miembros del grupo junto con algún tipo de meta-información (ver capítulo 4.3). Las fuentes de contexto utilizadas para nuestra aplicación corresponden con los cuatro tipos de contexto principales dados en el capítulo 1.1 - identidad (I), ubicación (L), tiempo (T) y actividad (A). Como se mencionó anteriormente, también tenemos en cuenta el contexto del grupo con el que el usuario está interactuando, de modo que podríamos agregar un quinto tipo de información de contexto: la conciencia del grupo (G) - a la clasificación. Usando esta información de contexto, podemos activar actividades sensibles al contexto en las tres categorías descritas en el capítulo 1.1: presentación de información (P), ejecución automática de servicios (A) y etiquetado de contexto a la información para su posterior recuperación (T). La Tabla 2 proporciona una visión general de las actividades que ya hemos implementado; están descritas de manera exhaustiva en el capítulo 4.4. La tabla también muestra qué tipos de información de contexto se utilizan para cada actividad y la categoría en la que podría clasificarse la actividad. 93 Tabla 2. La clasificación de las actividades implementadas con conciencia del contexto es la siguiente: Visualización de la ubicación, Soporte para la construcción de grupos, Soporte para la comunicación sincrónica, Soporte para la comunicación asincrónica, Gestión de disponibilidad, Soporte para la gestión de tareas y Soporte para reuniones. Las razones para implementar estas características son aprovechar los cuatro tipos de información de contexto para apoyar la interacción grupal mediante el uso de un conocimiento integral sobre la situación en la que se encuentra un usuario individual o todo un grupo. Un problema crítico para la aceptación del usuario de un sistema así es la usabilidad de su interfaz. Hemos evaluado varias formas de presentar medios de interacción conscientes del contexto al usuario, hasta llegar a la solución que utilizamos actualmente. Aunque creemos que la interfaz de usuario que se ha implementado actualmente ofrece el mejor equilibrio entre la integración perfecta de funciones y la facilidad de uso, no habría problema en ampliar la arquitectura con otras interfaces de usuario, incluso en diferentes plataformas. La solución elegida se basa en un mensajero instantáneo existente, que ofrece varias posibilidades para integrar nuestro sistema (ver capítulo 4.2). La mayor ventaja de este enfoque es que el usuario se enfrenta a una interfaz gráfica de usuario con la que ya está familiarizado en la mayoría de los casos. Además, nuestro sistema utiliza una cuenta de mensajería instantánea como identificador, de modo que el usuario no tenga que registrarse en ningún otro lugar (por ejemplo, el usuario puede utilizar su cuenta de ICQ2 ya existente). 4.2 Integración de Mensajería Instantánea Nuestro sistema se basa en un mensajero instantáneo existente, el llamado Simple Instant Messenger (SIM). La implementación de este mensajero se lleva a cabo como un proyecto en Sourceforge4. SIM admite múltiples protocolos de mensajería como AIM5, ICQ2 y MSN6. También admite conexiones a múltiples cuentas al mismo tiempo. Además, se brinda soporte completo para la notificación por SMS (cuando esté disponible en el protocolo utilizado). SIM se basa en un concepto de plug-in. Todos los protocolos, así como partes de la interfaz de usuario, están implementados como complementos. Su arquitectura también se utiliza para ampliar las capacidades de las aplicaciones para comunicarse con aplicaciones externas. Con este propósito, se proporciona un complemento de control remoto, mediante el cual se puede controlar el SIM desde aplicaciones externas a través de una conexión de socket. Esta interfaz de control remoto es ampliamente utilizada por GISS para recuperar la lista de contactos, establecer el estado de disponibilidad de los usuarios o enviar mensajes. La funcionalidad del complemento se amplió de varias maneras, por ejemplo, para aceptar mensajes para una cuenta (como si hubieran sido enviados a través de la red de mensajería). El mensajero, más exactamente la lista de contactos (es decir, una lista de perfiles de todas las personas registradas en el mensajero instantáneo, que se visualiza enumerando sus nombres como se puede ver en la Figura 5), también se utiliza para mostrar las ubicaciones de otros miembros de los grupos a los que pertenece un usuario. Esto proporciona conciencia de ubicación sin ocupar demasiado espacio o requerir la atención completa de los usuarios. Una descripción más detallada de estas características se proporciona en el capítulo 4.4. 4.3 Fuentes de Información de Contexto Mientras que el contexto de ubicación de un usuario se obtiene de nuestro subsistema de detección de ubicación descrito en el capítulo 3, también consideramos otros tipos de contexto además de la ubicación relevantes para el apoyo de la interacción grupal. El tiempo local, como dimensión de contexto muy importante, se puede recuperar fácilmente del reloj en tiempo real del sistema del usuario. Además de la ubicación y el tiempo, también utilizamos la información de contexto de la actividad e identidad de los usuarios, donde explotamos la funcionalidad proporcionada por el sistema de mensajería instantánea subyacente. La identidad (o más exactamente, la asignación de IDs a nombres, así como información adicional del perfil de los usuarios) se puede extraer de los contenidos de la lista de contactos de los usuarios. La información sobre la actividad o un usuario en particular solo está disponible en un área muy restringida, específicamente la actividad en la computadora misma. Otras actividades como hacer una llamada telefónica o algo similar, no pueden ser reconocidas con la implementación actual del sensor de actividad. La única información de contexto utilizada es el estado de disponibilidad de los mensajeros instantáneos, por lo tanto, solo proporciona una clasificación muy general de la actividad de los usuarios (en línea, fuera de línea, ausente, ocupado, etc.). Aunque esto pueda no parecer mucha información, seguramente es relevante y puede ser utilizada para mejorar o incluso habilitar varios servicios. Habiendo recopilado la información de contexto de todos los usuarios disponibles, ahora es posible destilar cierta información sobre el contexto de un grupo específico. La información sobre el contexto de un grupo incluye cuántos miembros tiene actualmente el grupo, si el grupo se reúne en este momento, qué miembros participan en una reunión, cuántos miembros han leído cuáles de las publicaciones disponibles de otros miembros del equipo, y así sucesivamente. Por lo tanto, se necesita información adicional como una lista de miembros para cada grupo. Estas listas pueden ser ensambladas manualmente (por usuarios que se unen y salen de grupos) o recuperadas automáticamente. El contexto de un grupo es un contexto secundario y se obtiene de los contextos disponibles de los miembros del grupo. Cada vez que cambia el contexto de un miembro del grupo, el contexto de todo el grupo cambia y debe ser recalculado. Con conocimiento sobre el contexto del usuario y el contexto de los grupos a los que pertenece, podemos ofrecer varios servicios sensibles al contexto al usuario, los cuales mejoran sus habilidades de interacción. Una breve descripción de estos servicios se da en el capítulo 4.4. 4.4 Soporte de Interacción en Grupo 4.4.1 Visualización de Información de Ubicación Una característica importante es la visualización de información de ubicación, permitiendo a los usuarios estar al tanto de la ubicación de otros usuarios y miembros de los grupos a los que se unió, respectivamente. Como ya se describió en el capítulo 2, utilizamos dos formas diferentes de visualización. Quizás el más importante sea mostrar la información de ubicación en la lista de contactos del mensajero instantáneo, justo al lado del nombre, de manera que siempre sea visible sin llamar la atención de los usuarios (en comparación con una vista bidimensional, por ejemplo, que requiere una ventana propia para mostrar un mapa del entorno). Debido al espacio limitado en la lista de contactos, ha sido necesario implementar algún tipo de concepto de nivel de detalle. Al utilizar un modelo de ubicación jerárquico, podemos determinar la ubicación común más precisa de dos usuarios. En la lista de contactos, se muestra la ubicación simbólica actual un nivel por debajo de la ubicación común previamente calculada. Si, por ejemplo, el usuario A actualmente reside en la habitación P121 en el primer piso de un edificio y el usuario B, que debe aparecer en la lista de contactos del usuario A, está en la habitación P304 en el tercer piso, la ubicación común más precisa de estos dos usuarios es el edificio en el que se encuentran. Por esa razón, el piso (es decir, un nivel más allá de la ubicación común, es decir, el edificio) del usuario B se muestra en la lista de contactos del usuario A. Si ambas personas residen en el mismo piso o incluso en la misma habitación, la habitación estaría ocupada. La Figura 5 muestra una captura de pantalla del Simple Instant Messenger3, donde la ubicación actual de aquellas personas cuya ubicación es conocida por GISS, se muestra entre paréntesis justo al lado de su nombre. Encima de la imagen, se muestra la barra de herramientas GISS integrada y mejorada, que actualmente contiene la siguiente funcionalidad implementada (de izquierda a derecha): Comunicación asincrónica para grupos (ver capítulo 4.4.4), recordatorios contextuales (ver capítulo 4.4.6), visualización bidimensional de información de ubicación, formación y gestión de grupos (ver capítulo 4.4.2), gestión de disponibilidad contextual (ver capítulo 4.4.5) y finalmente un botón para terminar GISS. Figura 5. La integración de GISS en Simple Instant Messenger3. Dado que mostrar solo esta forma abreviada de la ubicación puede no ser suficiente para el usuario, ya que puede querer ver la posición más precisa disponible, se muestra una posición completamente calificada si se hace clic en un nombre de la lista de contactos (por ejemplo, en la forma de escritorio@habitación2@departamento1@primerpiso@edificio 1@campus). La segunda forma posible de visualización es una gráfica. Hemos evaluado una vista tridimensional, la cual se basaba en un modelo VRML del área respectiva (cf. Figura 6). Debido a deficiencias en la navegación y problemas de usabilidad, decidimos utilizar una vista bidimensional del piso (se le denomina nivel en la jerarquía de ubicación, cf. Figura 4). Otros niveles de granularidad como sección (por ejemplo, edificio) y región (por ejemplo, campus) también se proporcionan. En esta vista basada en el plano del piso, las ubicaciones actuales se muestran al estilo de los contactos de ICQ2, que se colocan en la ubicación actualmente detectada de la persona respectiva. El estado de disponibilidad de un usuario, por ejemplo, ausente si no está en la computadora en este momento, o ocupado si no desea ser molestado, se visualiza mediante la codificación de colores de la flor ICQ2 a la izquierda del nombre. Además, la vista del plano del piso muestra los llamados post-its virtuales, que son contrapartes virtuales de los post-its de la vida real y sirven como nuestro medio de comunicación asincrónica (más información sobre los post-its virtuales se puede encontrar en el capítulo 4.4.4). Figura 6. Vista en 3D del piso (VRML). La Figura 7 muestra el mapa bidimensional de un cierto piso, donde varios usuarios se encuentran actualmente ubicados (visualizados por su nombre y la flor a la izquierda). La ubicación del cliente, en la que se muestra en el mapa, se visualiza mediante un círculo verde. Hacia abajo a la derecha, se pueden ver dos notas adhesivas virtuales. Figura 7. Vista en 2D del suelo. Otra característica de la vista en 2D es la visualización del historial de ubicaciones de los usuarios. Al almacenar el historial completo de las ubicaciones de un usuario junto con una marca de tiempo, podemos proporcionar información sobre los lugares donde ha estado en el pasado. Cuando el ratón se mueve sobre el nombre de un usuario en la vista 2D, las huellas de un usuario, colocadas en los lugares donde ha estado, se desvanecen más intensamente cuanto más antigua sea la información de ubicación. 95 4.4.2 Formación y Gestión de Grupos Para apoyar la interacción en grupos, primero es necesario formar grupos. Como los grupos pueden tener diferentes propósitos, distinguimos dos tipos de grupos. Los llamados grupos estáticos son grupos que se crean manualmente con personas que se unen y abandonan. Los grupos estáticos se pueden dividir aún más en dos subtipos. En grupos estáticos abiertos, cualquiera puede unirse y salir en cualquier momento, útil por ejemplo para formar un grupo de asistentes a conferencias de algún tipo de grupo de interés. Los grupos estáticos cerrados tienen un propietario, quien decide qué personas pueden unirse, aunque todos podrían irse en cualquier momento. Los grupos cerrados permiten a los usuarios, por ejemplo, crear un grupo con sus amigos, pudiendo así comunicarse fácilmente con ellos. En contraste con eso, también apoyamos la creación de grupos dinámicos. Se forman entre personas que se encuentran en el mismo lugar al mismo tiempo. La creación de grupos dinámicos solo se realiza en lugares donde tiene sentido formar grupos, por ejemplo en aulas o salas de reuniones, pero no en pasillos o exteriores. Tampoco tendría mucho sentido formar un grupo solo con las personas que residen en el sector frontal izquierdo de un salón; en cambio, se debería considerar todo el salón. Por estas razones, todas las ubicaciones definidas en la jerarquía están etiquetadas, ya sea que permitan la formación de grupos o no. Los grupos dinámicos no solo se forman en función de la granularidad de las habitaciones, sino también en niveles superiores de la jerarquía, por ejemplo, con las personas que actualmente residen en el área de un departamento. Dado que los miembros de los grupos dinámicos cambian constantemente, es posible crear un grupo estático abierto a partir de ellos. 4.4.3 Comunicación Sincrónica para Grupos La forma más importante de comunicación sincrónica en las computadoras hoy en día es la mensajería instantánea; algunas personas incluso consideran que la mensajería instantánea es la verdadera aplicación estrella en Internet. Esto también ha motivado la decisión de construir GISS sobre un sistema de mensajería instantánea. En los sistemas de mensajería de hoy en día, se brinda un amplio soporte a la comunicación de igual a igual. Sin embargo, cuando se trata de comunicación en grupos, el apoyo suele ser bastante deficiente la mayor parte del tiempo. A menudo, solo se admite enviar un mensaje a múltiples destinatarios, sin contar con medios para tener en cuenta el estado actual de los destinatarios. Además, los grupos solo pueden formarse con miembros de la lista de contactos, por lo tanto, no es posible enviar mensajes a un grupo donde no se conocen a todos sus miembros (lo cual puede ser el caso en entornos donde los participantes de una conferencia forman un grupo). Nuestro enfoque no tiene las restricciones mencionadas. Introducimos entradas de grupo en la lista de contactos de los usuarios; le permitimos a él o a ella enviar mensajes a este grupo fácilmente, sin saber quién exactamente es actualmente miembro de este grupo. Además, los mensajes de grupo solo se entregan a personas que no están ocupadas en ese momento, evitando así una interrupción por un mensaje que posiblemente no sea importante para el usuario. Estas funciones no pueden llevarse a cabo en la red del mensajero en sí misma, por lo que cada vez que se envía un mensaje a una cuenta de grupo, lo interceptamos y lo dirigimos a través de nuestro sistema a todos los destinatarios, que están disponibles en un momento determinado. La comunicación a través de una cuenta de grupo también se almacena de forma centralizada, lo que permite a las personas consultar los mensajes perdidos o simplemente ver el historial de mensajes. 4.4.4 Comunicación Asincrónica para Grupos La comunicación asincrónica en grupos no es una idea nueva. El objetivo de este enfoque no es reinventar la rueda, ya que el correo electrónico es quizás la forma más ampliamente utilizada de comunicación asincrónica en computadoras y está ampliamente aceptado y estandarizado. En nuestro trabajo, buscamos la combinación de comunicación asincrónica con conciencia de ubicación. Por esta razón, introducimos el concepto de los llamados post-its virtuales (cp. [13]), que son mensajes que están vinculados a ubicaciones físicas. Estos post-its virtuales pueden ser visibles para todos los usuarios que pasen por allí o pueden estar restringidos para ser visibles solo para ciertos grupos de personas. Además, un post-it virtual también puede tener una fecha de caducidad después de la cual se elimina y ya no se muestra. Los post-its virtuales también pueden ser comentados por otros, proporcionando así algún tipo de interacción similar a un foro, donde cada post-it forma un hilo. Las notas adhesivas virtuales se muestran automáticamente cada vez que un usuario (disponible) pasa por primera vez. Posteriormente, los post-its se pueden acceder a través del visor 2D, donde se muestran todos los post-its visibles. Todos los lectores de una nota adhesiva quedan registrados y se muestran al verla, lo que proporciona cierto nivel de conciencia sobre las actividades de los miembros del grupo en el pasado. 4.4.5 Gestión de disponibilidad consciente del contexto Los mensajeros instantáneos en general proporcionan algún tipo de información sobre la disponibilidad de un usuario. Aunque esta información solo puede definirse de forma muy general, hemos decidido utilizar estos medios para recopilar el contexto de la actividad, ya que la introducción de uno adicional disminuiría considerablemente la usabilidad del sistema. Para apoyar al usuario en la gestión de su disponibilidad, proporcionamos una interfaz que le permite definir reglas para adaptar su disponibilidad al contexto actual. Estas reglas siguen la forma de evento (E) si condición (C) entonces acción (A), lo cual está directamente respaldado por las reglas ECA del Marco de Contexto descritas en el capítulo 1.3. La prueba de condiciones se desencadena periódicamente mediante eventos de lanzamiento (cada vez que cambia el contexto de un usuario). La condición en sí misma es definida por el usuario, quien puede solicitar el cambio de su estado de disponibilidad como la acción en la regla. Como condición, el usuario puede definir su ubicación, un momento específico (también activando recordatorios diarios, semanales o mensuales) o cualquier combinación lógica de estos criterios. Los recordatorios contextuales [14] se utilizan para dar al usuario la oportunidad de definir tareas y ser recordado de ellas cuando se cumplen ciertos criterios. Por lo tanto, un recordatorio puede ser visto como un post-it para uno mismo, el cual solo es visible en ciertos casos. Los recordatorios pueden estar vinculados a un lugar o tiempo específico, pero también a la proximidad espacial de usuarios o grupos. Estos criterios se pueden combinar con operadores booleanos, proporcionando así un medio poderoso para recordar al usuario las tareas que desea realizar cuando ocurre un cierto contexto. Un recordatorio solo aparecerá la primera vez que el contexto real cumpla con el criterio definido. Al mostrar el recordatorio, el usuario tiene la oportunidad de volver a enviarlo para ser recordado nuevamente, por ejemplo, cinco minutos después o la próxima vez que cierto usuario esté en proximidad espacial. 96 4.4.7 Reconocimiento y Notificación Contextual de Reuniones de Grupo Con la información de contexto disponible, intentamos reconocer las reuniones de un grupo. La determinación de los criterios, cuando el sistema reconoce que un grupo está teniendo una reunión, es parte del trabajo en curso. En un primer enfoque, utilizamos la ubicación y el contexto de actividad de los miembros del grupo para determinar una reunión. Siempre que más del 50 % de los miembros de un grupo estén disponibles en un lugar donde se considere que tiene sentido realizar una reunión (por ejemplo, no en un pasillo), se crea una nota de reunión en un post-it en ese lugar y se notifica a todos los miembros ausentes del grupo sobre la reunión y el lugar donde se llevará a cabo. Durante la reunión, la función de comentarios de las notas adhesivas virtuales proporciona un medio para tomar notas para todos los participantes. Cuando los miembros se unen o abandonan la reunión, esto se añade automáticamente como una nota a la lista de comentarios. Al igual que el reconocimiento del inicio de una reunión, el reconocimiento de su final sigue siendo parte del trabajo en curso. Si se reconoce el final de la reunión, todos los miembros del grupo reciben la lista completa de comentarios como un protocolo de reunión al final de la reunión. CONCLUSIONES Este artículo discutió el potencial del apoyo para la interacción grupal mediante el uso de información de contexto. Primero, introdujimos las nociones de contexto y computación de contexto y motivamos su valor para apoyar la interacción grupal. Se presenta una arquitectura para apoyar la interacción grupal consciente del contexto en entornos móviles y distribuidos. Está construido sobre un marco flexible y extensible, lo que permite una fácil adaptación a las fuentes de contexto disponibles (por ejemplo, agregando sensores adicionales) así como la forma de representación requerida. Hemos desarrollado prototípicamente un conjunto de servicios que mejoran la interacción grupal teniendo en cuenta el contexto actual de los usuarios y el contexto de los propios grupos. Las características importantes son la formación dinámica de grupos, la visualización de la ubicación en un mapa bidimensional, así como la integración discreta en un mensajero instantáneo, la comunicación asincrónica a través de notas virtuales, que están vinculadas a ciertas ubicaciones, y un sistema de gestión de disponibilidad consciente del contexto, que adapta el estado de disponibilidad de un usuario a su situación actual. Para proporcionar información de ubicación, hemos implementado un subsistema para la adquisición automatizada de información de ubicación y proximidad proporcionada por varios sensores, que ofrece una presentación independiente de la tecnología de ubicaciones y proximidades espaciales entre usuarios y fusiona esta información utilizando algoritmos de fusión independientes de los sensores. Un historial de ubicaciones, así como de proximidades espaciales, se almacena en una base de datos, lo que permite habilitar servicios basados en el historial de contexto. REFERENCIAS [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modelado del comportamiento consciente del contexto mediante reglas ECA interpretadas. En Actas de la Conferencia Internacional sobre Computación Paralela y Distribuida (EUROPAR03). (Klagenfurt, Austria, 26-29 de agosto de 2003). Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Aplicaciones Conscientes del Contexto: Del Laboratorio al Mercado. IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. Una encuesta de la investigación en computación móvil consciente del contexto. Informe técnico TR2000-381, Departamento de Ciencias de la Computación, Dartmouth College, Hanover, New Hampshire, noviembre de 2000. [4] Dey, A. Proporcionando Soporte Arquitectónico para Aplicaciones Conscientes del Contexto del Edificio. Tesis de doctorado, Departamento de Ciencias de la Computación, Instituto de Tecnología de Georgia, Atlanta, noviembre de 2000. [5] Svetlana Domnitcheva. Modelado de ubicación: Estado del arte y desafíos. En Actas del Taller sobre Modelado de Ubicación para la Computación Ubicua. (Atlanta, Georgia, Estados Unidos, 30 de septiembre de 2001). 13-19. [6] Ferscha, A. Conciencia del Espacio de Trabajo en Equipos Virtuales Móviles. En Actas del 9º Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE00). (Gaithersburg, Maryland, 14-16 de marzo de 2000). IEEE Computer Society Press, 272-277. [7] Ferscha, A. \n\nIEEE Computer Society Press, 272-277. [7] Ferscha, A. Coordinación en entornos de computación ubicua. En Actas del Duodécimo Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE-2003). (9-11 de junio de 2003). IEEE Computer Society Press, 3-9. [8] Leonhard, U. \n\nIEEE Computer Society Press, 3-9. [8] Leonhard, U. Apoyando la Conciencia de Ubicación en Sistemas Distribuidos Abiertos. Tesis de doctorado, Departamento de Computación, Imperial College, Londres, mayo de 1998. [9] Ryan, N., Pascoe, J., Morse, D. Trabajo de campo de realidad aumentada: el asistente arqueológico consciente del contexto. Gaffney, V., Van Leusen, M., Exxon, S. (eds.) -> Gaffney, V., Van Leusen, M., Exxon, S. (eds.) Aplicaciones informáticas en Arqueología (1997) [10] Schilit, B.N., Theimer, M. Difusión de información de mapas activos a dispositivos móviles. IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N. \n\nRed de IEEE, 8(5) (1994), 22-32. [11] Schilit, B.N. Una arquitectura de sistema para la computación móvil consciente del contexto. Tesis de doctorado, Universidad de Columbia, Departamento de Ciencias de la Computación, mayo de 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S. Apoyando grupos sociales persistentes en entornos de computación ubicua utilizando un servicio de grupo efímero consciente del contexto. En Actas de la Segunda Conferencia Internacional de IEEE sobre Computación y Comunicaciones Pervasivas (PerCom04). (14-17 de marzo de 2004). IEEE Computer Society Press, 287-296. [13] Pascoe, J. \n\nIEEE Computer Society Press, 287-296. [13] Pascoe, J. La arquitectura de Stick-e Note: Extendiendo la interfaz más allá del usuario. Actas de la 2ª Conferencia Internacional de Interfaces de Usuario Inteligentes (IUI97). (Orlando, EE. UU., 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: Un Sistema Consciente del Contexto para Apoyar Recordatorios. Actas del 2º Simposio Internacional sobre Computación Portátil y Ubicua (HUC00). (Bristol, Reino Unido, 2000), 172-186. 97 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "mobility system": {
            "translated_key": "sistema de movilidad",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "fifth contextdimension group-context": {
            "translated_key": "contexto de grupo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a <br>fifth contextdimension group-context</br>, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [
                "Therefore, we have added a <br>fifth contextdimension group-context</br>, which comprises more than the sum of the individual members contexts."
            ],
            "translated_annotated_samples": [
                "Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el <br>contexto de grupo</br>, que abarca más que la suma de los contextos individuales de los miembros."
            ],
            "translated_text": "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil. Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la interacción en grupo. A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la interacción en grupo. Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos. H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica. Términos generales de diseño, Experimentación 1. INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica. Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar. Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones. Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real. Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS). Apoya la interacción grupal en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás. En los siguientes subcapítulos, daremos una breve descripción sobre la computación consciente del contexto y motivaremos sus beneficios para apoyar la interacción en grupo. Se presenta un marco de software para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS. El capítulo 2 presenta la arquitectura de GISS, y los capítulos 3 y 4 discuten los conceptos de localización y de interacción en grupo de GISS con más detalle. El capítulo 5 ofrece un resumen final de nuestro trabajo. 1.1 ¿Qué es la Computación Contextual? Según el Diccionario en línea de Merriam-Webster, el contexto se define como las condiciones interrelacionadas en las que algo existe o ocurre. Dado que esta definición es muy general, se han realizado muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos. La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para contexto. El término consciente del contexto fue introducido por primera vez en [10], donde el contexto se refiere a la ubicación, identidades de personas y objetos cercanos, y cambios en esos objetos. En [2], el contexto también se define mediante una enumeración de ejemplos, como la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación del usuario, el entorno, la identidad y el tiempo. Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información que se pueda utilizar para caracterizar la situación de una entidad. Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluyendo al usuario y a las propias aplicaciones. [4] identifica cuatro tipos principales de información de contexto (a veces referidos como dimensiones de contexto), que son - con respecto a la caracterización de la situación de una entidad - más importantes que otros. Estos son la ubicación, la identidad, el tiempo y la actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundarios). Por ejemplo, si conocemos la identidad de una persona, podemos derivar fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico). Según esta definición, [4] define un sistema como consciente del contexto si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación. Figura 1. Las capas de un sistema consciente del contexto. La computación del contexto se basa en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y utilizar el contexto obtenido (ejecución automática, presentación, etiquetado). Para hacer esto, hay algunas capas intermedias (ver Figura 1). Primero, la información de contexto de bajo nivel obtenida debe ser transformada, agregada e interpretada (transformación de contexto) y representada en un modelo abstracto del mundo de contexto (representación de contexto), ya sea centralizado o descentralizado. Finalmente, la información de contexto almacenada se utiliza para activar ciertos eventos de contexto (activación de contexto). Después de estas definiciones abstractas y formales sobre qué es el contexto y la computación de contexto, nos centraremos ahora en el objetivo principal de este trabajo, es decir, cómo la interacción de los miembros de un grupo móvil puede ser apoyada mediante el uso de información de contexto. En [6] hemos identificado que los sistemas organizativos son cruciales para apoyar a los grupos móviles (ver Figura 2). Primero, tiene que haber un Sistema de Gestión de Información y Conocimiento, que sea capaz de apoyar a un equipo con sus necesidades de procesamiento de información y recopilación de conocimiento. La siguiente parte es el Sistema de Conciencia, que se dedica a la percepción de los efectos de la actividad en equipo. Esto se logra comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios. Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea de forma sincrónica o asincrónica, y para el acceso compartido a artefactos, como documentos. Los sistemas de movilidad despliegan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como la captura y entrega de información de conciencia desde y hacia cualquier lugar. Finalmente, pero no menos importante, el sistema de innovación organizacional integra aspectos del equipo en sí mismo, como roles, liderazgo e instalaciones compartidas. Con respecto a estos cinco aspectos de apoyo al equipo, nos enfocamos en la interacción y cubrimos parcialmente el apoyo a la movilidad y la conciencia. La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros. En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para apoyar la interacción grupal. Creemos que la información sobre la situación actual de una persona aporta un valor añadido a los sistemas de interacción grupal existentes. La información de contexto facilita la interacción grupal al permitir que cada miembro esté al tanto del estado de disponibilidad o la ubicación actual de los demás miembros del grupo, lo que a su vez hace posible formar grupos de manera dinámica, colocar notas virtuales en el mundo real o determinar qué personas están cerca. Figura 2. Apoyo para Grupos Móviles [6]. La mayoría de las aplicaciones de hoy en día que son conscientes del contexto utilizan únicamente la ubicación y el tiempo, y la ubicación se considera un tipo crucial de información de contexto [3]. También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo se centra en la utilización de la información de ubicación y la información sobre los usuarios en proximidad espacial. Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizada, no es suficiente para respaldar la interacción grupal, por lo cual también aprovechamos los otros tres tipos principales, a saber, identidad, tiempo y actividad. Esto proporciona una descripción completa de la situación actual de un usuario y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen detalladamente en el capítulo 4.4. Cuando observamos los tipos de información de contexto mencionados anteriormente, podemos ver que todos ellos están centrados en el usuario individual, teniendo en cuenta únicamente el contexto del propio usuario. Creemos que, para apoyar la interacción grupal, también se debe tener en cuenta el estatus del propio grupo. Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el <br>contexto de grupo</br>, que abarca más que la suma de los contextos individuales de los miembros. El contexto de grupo incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un grupo en particular se reúne en este momento. Middleware de contexto 1.3 El Sistema de Soporte de Interacción de Grupo (GISS) utiliza el marco de software presentado en [1], que sirve como middleware para desarrollar aplicaciones sensibles al contexto. Este llamado Marco de Contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes. Una característica principal del marco es la abstracción de la recuperación de información de contexto a través de varios sensores y su entrega a un nivel donde no se percibe ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes mecanismos de recuperación de contexto; la recuperación de información está oculta para el desarrollador de aplicaciones. Esto se logra mediante entidades llamadas, que describen objetos, por ejemplo, un usuario humano, que son importantes para un determinado escenario de contexto. Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, los cuales pueden ser cargados en la entidad. Estos atributos son piezas complejas de software, que se implementan como clases de Java. Los atributos típicos son encapsulaciones de sensores, pero también pueden ser utilizados para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre cambios de ubicación de los usuarios. Cada entidad puede contener una colección de tales atributos, donde una entidad en sí misma es un atributo. El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos desde el almacenamiento local o a través de la red. Para cargar e implementar nuevos atributos, una entidad debe hacer referencia a un cargador de clases y una capa de transporte y búsqueda, que gestiona el mecanismo de búsqueda para descubrir otras entidades y el transporte. Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atributos poseen estas entidades. La comunicación entre entidades y atributos se basa en eventos de contexto. Cada atributo es capaz de desencadenar eventos, los cuales están dirigidos a otros atributos y entidades respectivamente, independientemente de en qué computadora física estén ejecutándose. Entre otras cosas, un evento contiene el nombre del evento y una lista de parámetros que proporcionan información sobre el propio evento. Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (Evento-Condición-Acción) para definir el comportamiento del sistema de contexto. Por lo tanto, cada entidad tiene un intérprete de reglas, que captura eventos desencadenados, verifica las condiciones asociadas a ellos y provoca ciertas acciones. Estas reglas son referenciadas por la configuración XML de la entidad. Una regla en sí misma incluso puede desencadenar la inserción de nuevas reglas o la descarga de reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto. En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar los datos del sensor de bajo nivel de las aplicaciones de alto nivel y oculta los detalles de comunicación externa al desarrollador de la aplicación. Además, es capaz de adaptar su comportamiento dinámicamente cargando atributos, entidades o reglas ECA en tiempo de ejecución. VISIÓN GENERAL DE LA ARQUITECTURA Dado que GISS utiliza el Marco de Contexto descrito en el capítulo 1.3 como middleware, cada usuario está representado por una entidad, al igual que el servidor central, que es responsable de la transformación de contexto, la representación de contexto y la activación de contexto (cf. Figura 1). Una parte principal de nuestro trabajo se centra en la adquisición automatizada de información de posición y su provisión independiente de sensores a nivel de aplicación. No solo percibimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos. Al desarrollar la arquitectura, nos enfocamos en mantener el cliente lo más simple posible y reducir al mínimo la comunicación entre el cliente y el servidor. Cada cliente puede tener varios sensores de ubicación y/o proximidad adjuntos, los cuales están encapsulados por los atributos respectivos del Marco de Contexto (Encapsulación de Sensores). Estos atributos son responsables de integrar implementaciones de sensores nativos en el Marco de Contexto y enviar información de posición dependiente del sensor al servidor. Consideramos muy importante apoyar diferentes tipos de sensores al mismo tiempo, con el fin de mejorar la precisión de la ubicación por un lado, y proporcionar un entorno de detección de ubicación ubicuo con transiciones fluidas entre diferentes técnicas de detección de ubicación por otro lado. Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstraen la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor). Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas a ubicaciones estandarizadas. La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de Fusión de Sensores, uno para ubicaciones simbólicas y otro para proximidades espaciales. Su trabajo consiste en fusionar la información de ubicación y proximidad de los clientes, respectivamente, la cual se describe detalladamente en el Capítulo 3.3. Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de Fusión de Sensores notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación. Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede ser fácilmente ampliado con sensores adicionales, simplemente implementando los (generalmente dos) atributos para encapsular los sensores (algunos sensores pueden no necesitar una parte del lado del cliente), abstrayendo las posiciones físicas y observando la interfaz con el Núcleo de GISS. Figura 3. La arquitectura del Sistema de Soporte de Interacción de Grupo (GISS). El atributo central del núcleo de GISS es el coordinador principal de la aplicación tal como se muestra al usuario. No solo sirve como una interfaz al subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad). Cada vez que se detecta un cambio en el contexto de uno o más usuarios, el núcleo de GISS evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y en los demás miembros de estos grupos. Cuando sea necesario, se lanzan eventos a los clientes afectados para activar actividades contextualmente conscientes, como cambiar la presentación de la información de conciencia o la ejecución de servicios. La parte del cliente de la aplicación se mantiene lo más simple posible. Además, el diseño modular no solo fue un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario. Por lo tanto, la interfaz de usuario completa puede intercambiarse fácilmente si se tienen en cuenta y se comprenden todos los eventos definidos por el nuevo atributo de la interfaz. La interfaz de usuario actualmente implementada está dividida en dos partes, las cuales también están representadas por dos atributos. El atributo central en el lado del cliente es la llamada Encapsulación de Mensajería Instantánea, que por un lado interactúa con el servidor a través de eventos y por otro lado sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario. Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente, el Simple Instant Messenger (SIM)3 compatible con ICQ2. Hemos elegido un mensajero instantáneo como interfaz porque proporciona una interfaz conocida para la mayoría de los usuarios y facilita una integración fluida del soporte de interacción grupal, aumentando así la aceptación y facilidad de uso. Dado que la funcionalidad básica del mensajero instantáneo, que es servir como cliente en una red de mensajería instantánea, sigue completamente operativa, nuestra aplicación puede utilizar las funciones ya proporcionadas por el mensajero. Por ejemplo, los contextos de actividad e identidad se derivan de la red de mensajería tal como se describe más adelante. La Encapsulación de Mensajería Instantánea también es responsable de admitir la comunicación en grupo. A través de la interfaz del mensajero, proporciona medios de comunicación síncrona y asíncrona, así como un sistema de recordatorio contextual y herramientas para gestionar grupos y el propio estado de disponibilidad. La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, la cual está implementada en el Visor de atributos. La implementación actual proporciona un mapa bidimensional del campus, pero puede ser fácilmente reemplazada por otras visualizaciones, como un modelo VRML tridimensional. Además, esta visualización se utiliza para mostrar los artefactos de la comunicación asincrónica. Basado en una vista del plano de la zona geográfica en la que se encuentra actualmente el usuario, ofrece una rápida visión general de las personas cercanas, su estado y proporciona medios para interactuar con ellas. En los siguientes capítulos 3 y 4, describimos con más detalle el backend de detección de ubicación y el frontend de la aplicación para apoyar la interacción grupal. SENSADO DE UBICACIÓN En el siguiente capítulo, presentaremos un modelo de ubicación que se utiliza para representar ubicaciones; posteriormente, describiremos la integración de sensores de ubicación y proximidad en más detalle. Finalmente, echaremos un vistazo más de cerca a la fusión de la información de ubicación y proximidad, adquirida por varios sensores. Modelo de Ubicación Un modelo de ubicación (es decir, una representación de contexto para la información de contexto de ubicación) es necesario para representar las ubicaciones de los usuarios, con el fin de poder facilitar consultas relacionadas con la ubicación, como por ejemplo, dada una ubicación, devolver una lista de todos los objetos allí o dado un objeto, devolver su ubicación actual. En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representa la ubicación como coordenadas. Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como Sala P111 o Edificio de Física, porque no necesitamos datos de ubicación geométrica. En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación. Además, utilizamos una jerarquía de contención de ubicaciones simbólicas similar a la introducida en [11], que consta de regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos a su vez contienen habitaciones. También distinguimos cuatro tipos, a saber, región (por ejemplo, un campus completo), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, un piso específico en un edificio) y área (por ejemplo, una habitación específica). Introducimos un quinto tipo de ubicación, al que nos referimos como semántico. Estas llamadas ubicaciones semánticas pueden aparecer en cualquier nivel de la jerarquía y pueden estar anidadas, pero no necesariamente tienen una representación geográfica. Ejemplos de tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones. Figura 4. Jerarquía de Contención de Ubicaciones Simbólicas La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto. 3.2 Sensores Nuestra arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación, y sensores de proximidad, que detectan proximidades espaciales entre usuarios. Como se describe arriba, cada sensor tiene una implementación del lado del servidor y, en la mayoría de los casos, también una implementación correspondiente del lado del cliente. Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular. Tales notificaciones se realizan cada vez que el sensor adquiere nueva información. Por lo tanto, los atributos de abstracción del sensor son responsables de detectar cuándo un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si ha sido desconectado por el usuario) o cuando la posición o proximidad no se pueden determinar más (por ejemplo, si). El lector de RFID no puede detectar etiquetas y notificará a la fusión de sensores correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor. Los atributos de abstracción de sensores de ubicación correspondientes recopilan estas posiciones físicas proporcionadas por los sensores de todos los usuarios, y realizan una búsqueda en el repositorio para obtener la ubicación simbólica asociada. Esto requiere ciertas tablas para cada sensor, las cuales asignan posiciones físicas a ubicaciones simbólicas. Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones. Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular. Hemos implementado prototípicamente tres tipos de sensores de ubicación, basados en WLAN (IEEE 802.11), Bluetooth y RFID (Identificación por Radiofrecuencia). Hemos elegido estos tres sensores completamente diferentes debido a sus diferencias en cuanto a precisión, cobertura y esfuerzo administrativo, con el fin de evaluar la flexibilidad de nuestro sistema (ver Tabla 1). El más preciso es un sensor de RFID, que se basa en un lector de RFID activo. Tan pronto como el lector se conecta al cliente, escanea las etiquetas RFID activas en rango y transmite sus números de serie al servidor, donde se asignan a ubicaciones simbólicas. También tenemos en cuenta el RSSI (Radio Signal Strength Information), que proporciona una precisión de posición de unos pocos centímetros y nos permite determinar cuál etiqueta RFID está más cercana. Debido a esta alta precisión, el RFID se utiliza para localizar usuarios dentro de habitaciones. La administración es bastante simple; una vez que se coloca una nueva etiqueta RFID, su número de serie simplemente debe asignarse a una única ubicación simbólica. Una desventaja es la baja disponibilidad, que se puede atribuir al hecho de que los lectores de RFID siguen siendo muy costosos. El segundo es un sensor WLAN 802.11. Por lo tanto, integramos un sistema de posicionamiento WLAN comercial puramente basado en software para rastrear clientes en la infraestructura WLAN del campus universitario. La precisión de la posición alcanzada se encuentra en el rango de unos pocos metros y, por lo tanto, es adecuada para la detección de ubicación a nivel de habitaciones. Una gran desventaja es que un mapa de toda el área debe ser calibrado con puntos de medición a una distancia de 5 metros cada uno. Debido a que la mayoría de las computadoras móviles están equipadas con tecnología WLAN y el sistema de posicionamiento es una solución solo de software, casi todos pueden usar este tipo de sensor. Finalmente, hemos implementado un sensor de Bluetooth, que detecta etiquetas de Bluetooth (es decir, Módulos Bluetooth con posición conocida) en rango y los transmite al servidor que los mapea a ubicaciones simbólicas. Debido al hecho de que no utilizamos información de la fuerza de la señal en la implementación actual, la precisión es superior a 10 metros y, por lo tanto, una única dirección MAC de Bluetooth está asociada con varios lugares simbólicos, de acuerdo a las ubicaciones físicas que cubre dicho módulo de Bluetooth. Esto conlleva la desventaja de que el alcance de cada etiqueta Bluetooth debe ser determinado y mapeado a ubicaciones simbólicas dentro de este alcance. Tabla 1. Comparación de sensores implementados Precisión del sensor Cobertura Administración RFID < 10 cm pobre fácil WLAN 1-4 m muy buena muy lenta Bluetooth ~ 10 m buena lenta 3.2.2 Sensores de proximidad Cualquier sensor capaz de detectar si dos usuarios están en proximidad espacial se denomina sensor de proximidad. Similar a los sensores de ubicación, los atributos de abstracción del sensor de proximidad recopilan información de proximidad física de todos los usuarios y los transforman en asignaciones de identificaciones de usuario. Hemos implementado dos tipos de sensores de proximidad, uno basado en Bluetooth y otro en ubicaciones simbólicas fusionadas (ver capítulo 3.3.1). La implementación de Bluetooth va de la mano con la implementación del sensor de ubicación basado en Bluetooth. Las direcciones MAC de Bluetooth ya determinadas en el rango de un cliente específico se están comparando con las de todos los demás clientes, y cada vez que el atributo Abstracción del Sensor de Bluetooth detecta congruencia, notifica al sensor de fusión de proximidad al respecto. El segundo sensor se basa en ubicaciones simbólicas procesadas por la Fusión de Sensores de Ubicación, por lo tanto no necesita una implementación del lado del cliente. Cada vez que la ubicación simbólica fusionada de un usuario específico cambia, verifica si se encuentra en la misma ubicación simbólica que otro usuario y notifica nuevamente a la fusión del sensor de proximidad sobre la cercanía entre estos dos usuarios. El rango puede ser restringido a cualquier nivel de la jerarquía de contención de ubicación, por ejemplo, a nivel de habitación. Un problema actualmente sin resolver es la granularidad incomparable de diferentes sensores de proximidad. Por ejemplo, las ubicaciones simbólicas en el mismo nivel en la jerarquía de ubicaciones generalmente no cubren la misma área geográfica. 3.3 El núcleo de fusión de sensores del subsistema de detección de ubicación es la fusión de sensores. Combina datos de varios sensores, al mismo tiempo que lidia con diferencias en cuanto a precisión, cobertura y frecuencia de muestreo. Según los dos tipos de sensores descritos en el capítulo 3.2, distinguimos entre la fusión de sensores de ubicación por un lado, y la fusión de sensores de proximidad por otro lado. La fusión de ubicaciones simbólicas, así como la fusión de proximidades espaciales, opera en información estandarizada (cf. Figura 3). Esto tiene la ventaja de que sensores adicionales de posición y proximidad pueden ser añadidos fácilmente o los algoritmos de fusión pueden ser reemplazados por otros más sofisticados. La fusión se realiza para cada usuario por separado y solo tiene en cuenta las mediciones en un punto en el tiempo (es decir, no se utiliza información histórica para determinar la ubicación actual de un usuario específico). El algoritmo recopila todos los eventos generados por los atributos de Abstracción del Sensor, realiza la fusión y activa el atributo del Núcleo GISS si la ubicación simbólica de un usuario específico o la proximidad espacial entre usuarios cambia. Una característica importante es el almacenamiento persistente del historial de ubicación y proximidad en una base de datos para permitir su recuperación en el futuro. Esto permite a las aplicaciones visualizar el movimiento de los usuarios, por ejemplo. 3.3.1 Fusión de Sensores de Ubicación El objetivo de la fusión de información de ubicación es mejorar la precisión y exactitud al combinar el conjunto de ubicaciones simbólicas proporcionadas por varios sensores de ubicación, con el fin de reducir el número de estas ubicaciones al mínimo, idealmente a una única ubicación simbólica por usuario. Esto es bastante difícil, ya que diferentes sensores pueden variar en precisión y frecuencia de muestreo también. El atributo de fusión de sensor de ubicación se activa por eventos, que son lanzados por los atributos de abstracción de sensor de ubicación. Estos eventos contienen información sobre la identidad del usuario en cuestión, su ubicación actual y el sensor mediante el cual se ha determinado la ubicación. Si el atributo Location Sensor Fusion recibe dicho evento, verifica si la cantidad de ubicaciones simbólicas del usuario en cuestión ha cambiado (en comparación con el último evento). Si este es el caso, notifica al atributo principal del GISS sobre todas las ubicaciones simbólicas con las que este usuario está actualmente asociado. Sin embargo, esta información no es muy útil por sí sola si un usuario en particular está asociado con varias ubicaciones. Como se describe en el capítulo 3.2.1, un sensor de ubicación único puede proporcionar múltiples ubicaciones simbólicas. Además, un cierto usuario puede tener varios sensores de ubicación, los cuales proporcionan ubicaciones simbólicas que difieren en precisión (es decir, diferentes niveles en la jerarquía de contención de ubicación). Para hacer frente a este desafío, implementamos un algoritmo de fusión con el fin de reducir el número de ubicaciones simbólicas al mínimo (idealmente a una sola ubicación). En un primer paso, cada ubicación simbólica se asocia con su número de ocurrencias. Una ubicación simbólica puede ocurrir varias veces si es referida por más de un sensor o si un solo sensor detecta múltiples etiquetas, las cuales a su vez hacen referencia a varias ubicaciones. Además, este número se suma al número de ocurrencias previamente calculado de cada ubicación simbólica, que es una ubicación secundaria de la considerada en la jerarquía de contención de ubicaciones. Por ejemplo, si - en la Figura 4 - room2 ocurre dos veces y desk ocurre una sola vez, el valor 2 de room2 se suma al valor 1 de desk, por lo que desk finalmente obtiene el valor 3. En un paso final, solo quedan aquellas ubicaciones simbólicas que están asignadas con el mayor número de ocurrencias. Una reducción adicional se puede lograr asignando prioridades a los sensores (basadas en precisión y confianza) y acumulando estas prioridades para cada ubicación simbólica en lugar de simplemente contar el número de ocurrencias. Si las ubicaciones fusionadas restantes han cambiado (es decir, si difieren de las ubicaciones fusionadas con las que el usuario considerado está actualmente asociado), se les proporciona la marca de tiempo actual, se escribe en la base de datos y se notifica al atributo GISS sobre dónde se encuentra probablemente el usuario. Finalmente, se calcula la ubicación más precisa y común en la jerarquía de ubicaciones (es decir, el límite superior mínimo de estas ubicaciones simbólicas) para obtener una única ubicación simbólica. Si cambia, el atributo principal de GISS se activa nuevamente. 3.3.2 Fusión de Sensores de Proximidad La fusión de sensores de proximidad es mucho más simple que la fusión de ubicaciones simbólicas. El atributo de fusión del sensor de proximidad correspondiente se activa por eventos, que son lanzados por los atributos de abstracción del sensor de proximidad. Estos eventos especiales contienen información sobre la identidad de los dos usuarios involucrados, si actualmente se encuentran en proximidad espacial o si la proximidad ya no persiste, y mediante qué sensor de proximidad se ha detectado esto. Si el atributo de fusión de sensores es notificado por un cierto atributo de abstracción de sensor de proximidad sobre una proximidad espacial existente, primero verifica si estos dos usuarios ya se sabe que están en proximidad (detectado ya sea por otro usuario o por otro sensor de proximidad del usuario, que causó el evento). Si no, este cambio en la proximidad se escribe en el repositorio de contexto con la marca de tiempo actual. De manera similar, si el atributo Fusión de Proximidad es notificado sobre una proximidad finalizada, verifica si los usuarios aún se sabe que están en proximidad, y escribe este cambio en el repositorio si no lo están. Finalmente, si la proximidad espacial entre los dos usuarios realmente cambia, se lanza un evento para notificar al atributo central de GISS sobre esto. 4. INTERACCIÓN CONTEXTUALMENTE SENSIBLE 4.1 Resumen En la mayoría de los sistemas actuales que admiten la interacción en grupos, los medios proporcionados carecen de conciencia del contexto actual del usuario, por lo tanto, no pueden adaptarse a sus necesidades. En nuestro enfoque, utilizamos información de contexto para mejorar la interacción y ofrecer servicios adicionales, lo cual brinda nuevas posibilidades al usuario. Además, creemos que la interacción en grupos también debe tener en cuenta el contexto actual del grupo en sí y no solo el contexto de los miembros individuales del grupo. Por esta razón, también recuperamos información sobre el contexto actual del grupo, derivada de los contextos de los miembros del grupo junto con algún tipo de meta-información (ver capítulo 4.3). Las fuentes de contexto utilizadas para nuestra aplicación corresponden con los cuatro tipos de contexto principales dados en el capítulo 1.1 - identidad (I), ubicación (L), tiempo (T) y actividad (A). Como se mencionó anteriormente, también tenemos en cuenta el contexto del grupo con el que el usuario está interactuando, de modo que podríamos agregar un quinto tipo de información de contexto: la conciencia del grupo (G) - a la clasificación. Usando esta información de contexto, podemos activar actividades sensibles al contexto en las tres categorías descritas en el capítulo 1.1: presentación de información (P), ejecución automática de servicios (A) y etiquetado de contexto a la información para su posterior recuperación (T). La Tabla 2 proporciona una visión general de las actividades que ya hemos implementado; están descritas de manera exhaustiva en el capítulo 4.4. La tabla también muestra qué tipos de información de contexto se utilizan para cada actividad y la categoría en la que podría clasificarse la actividad. 93 Tabla 2. La clasificación de las actividades implementadas con conciencia del contexto es la siguiente: Visualización de la ubicación, Soporte para la construcción de grupos, Soporte para la comunicación sincrónica, Soporte para la comunicación asincrónica, Gestión de disponibilidad, Soporte para la gestión de tareas y Soporte para reuniones. Las razones para implementar estas características son aprovechar los cuatro tipos de información de contexto para apoyar la interacción grupal mediante el uso de un conocimiento integral sobre la situación en la que se encuentra un usuario individual o todo un grupo. Un problema crítico para la aceptación del usuario de un sistema así es la usabilidad de su interfaz. Hemos evaluado varias formas de presentar medios de interacción conscientes del contexto al usuario, hasta llegar a la solución que utilizamos actualmente. Aunque creemos que la interfaz de usuario que se ha implementado actualmente ofrece el mejor equilibrio entre la integración perfecta de funciones y la facilidad de uso, no habría problema en ampliar la arquitectura con otras interfaces de usuario, incluso en diferentes plataformas. La solución elegida se basa en un mensajero instantáneo existente, que ofrece varias posibilidades para integrar nuestro sistema (ver capítulo 4.2). La mayor ventaja de este enfoque es que el usuario se enfrenta a una interfaz gráfica de usuario con la que ya está familiarizado en la mayoría de los casos. Además, nuestro sistema utiliza una cuenta de mensajería instantánea como identificador, de modo que el usuario no tenga que registrarse en ningún otro lugar (por ejemplo, el usuario puede utilizar su cuenta de ICQ2 ya existente). 4.2 Integración de Mensajería Instantánea Nuestro sistema se basa en un mensajero instantáneo existente, el llamado Simple Instant Messenger (SIM). La implementación de este mensajero se lleva a cabo como un proyecto en Sourceforge4. SIM admite múltiples protocolos de mensajería como AIM5, ICQ2 y MSN6. También admite conexiones a múltiples cuentas al mismo tiempo. Además, se brinda soporte completo para la notificación por SMS (cuando esté disponible en el protocolo utilizado). SIM se basa en un concepto de plug-in. Todos los protocolos, así como partes de la interfaz de usuario, están implementados como complementos. Su arquitectura también se utiliza para ampliar las capacidades de las aplicaciones para comunicarse con aplicaciones externas. Con este propósito, se proporciona un complemento de control remoto, mediante el cual se puede controlar el SIM desde aplicaciones externas a través de una conexión de socket. Esta interfaz de control remoto es ampliamente utilizada por GISS para recuperar la lista de contactos, establecer el estado de disponibilidad de los usuarios o enviar mensajes. La funcionalidad del complemento se amplió de varias maneras, por ejemplo, para aceptar mensajes para una cuenta (como si hubieran sido enviados a través de la red de mensajería). El mensajero, más exactamente la lista de contactos (es decir, una lista de perfiles de todas las personas registradas en el mensajero instantáneo, que se visualiza enumerando sus nombres como se puede ver en la Figura 5), también se utiliza para mostrar las ubicaciones de otros miembros de los grupos a los que pertenece un usuario. Esto proporciona conciencia de ubicación sin ocupar demasiado espacio o requerir la atención completa de los usuarios. Una descripción más detallada de estas características se proporciona en el capítulo 4.4. 4.3 Fuentes de Información de Contexto Mientras que el contexto de ubicación de un usuario se obtiene de nuestro subsistema de detección de ubicación descrito en el capítulo 3, también consideramos otros tipos de contexto además de la ubicación relevantes para el apoyo de la interacción grupal. El tiempo local, como dimensión de contexto muy importante, se puede recuperar fácilmente del reloj en tiempo real del sistema del usuario. Además de la ubicación y el tiempo, también utilizamos la información de contexto de la actividad e identidad de los usuarios, donde explotamos la funcionalidad proporcionada por el sistema de mensajería instantánea subyacente. La identidad (o más exactamente, la asignación de IDs a nombres, así como información adicional del perfil de los usuarios) se puede extraer de los contenidos de la lista de contactos de los usuarios. La información sobre la actividad o un usuario en particular solo está disponible en un área muy restringida, específicamente la actividad en la computadora misma. Otras actividades como hacer una llamada telefónica o algo similar, no pueden ser reconocidas con la implementación actual del sensor de actividad. La única información de contexto utilizada es el estado de disponibilidad de los mensajeros instantáneos, por lo tanto, solo proporciona una clasificación muy general de la actividad de los usuarios (en línea, fuera de línea, ausente, ocupado, etc.). Aunque esto pueda no parecer mucha información, seguramente es relevante y puede ser utilizada para mejorar o incluso habilitar varios servicios. Habiendo recopilado la información de contexto de todos los usuarios disponibles, ahora es posible destilar cierta información sobre el contexto de un grupo específico. La información sobre el contexto de un grupo incluye cuántos miembros tiene actualmente el grupo, si el grupo se reúne en este momento, qué miembros participan en una reunión, cuántos miembros han leído cuáles de las publicaciones disponibles de otros miembros del equipo, y así sucesivamente. Por lo tanto, se necesita información adicional como una lista de miembros para cada grupo. Estas listas pueden ser ensambladas manualmente (por usuarios que se unen y salen de grupos) o recuperadas automáticamente. El contexto de un grupo es un contexto secundario y se obtiene de los contextos disponibles de los miembros del grupo. Cada vez que cambia el contexto de un miembro del grupo, el contexto de todo el grupo cambia y debe ser recalculado. Con conocimiento sobre el contexto del usuario y el contexto de los grupos a los que pertenece, podemos ofrecer varios servicios sensibles al contexto al usuario, los cuales mejoran sus habilidades de interacción. Una breve descripción de estos servicios se da en el capítulo 4.4. 4.4 Soporte de Interacción en Grupo 4.4.1 Visualización de Información de Ubicación Una característica importante es la visualización de información de ubicación, permitiendo a los usuarios estar al tanto de la ubicación de otros usuarios y miembros de los grupos a los que se unió, respectivamente. Como ya se describió en el capítulo 2, utilizamos dos formas diferentes de visualización. Quizás el más importante sea mostrar la información de ubicación en la lista de contactos del mensajero instantáneo, justo al lado del nombre, de manera que siempre sea visible sin llamar la atención de los usuarios (en comparación con una vista bidimensional, por ejemplo, que requiere una ventana propia para mostrar un mapa del entorno). Debido al espacio limitado en la lista de contactos, ha sido necesario implementar algún tipo de concepto de nivel de detalle. Al utilizar un modelo de ubicación jerárquico, podemos determinar la ubicación común más precisa de dos usuarios. En la lista de contactos, se muestra la ubicación simbólica actual un nivel por debajo de la ubicación común previamente calculada. Si, por ejemplo, el usuario A actualmente reside en la habitación P121 en el primer piso de un edificio y el usuario B, que debe aparecer en la lista de contactos del usuario A, está en la habitación P304 en el tercer piso, la ubicación común más precisa de estos dos usuarios es el edificio en el que se encuentran. Por esa razón, el piso (es decir, un nivel más allá de la ubicación común, es decir, el edificio) del usuario B se muestra en la lista de contactos del usuario A. Si ambas personas residen en el mismo piso o incluso en la misma habitación, la habitación estaría ocupada. La Figura 5 muestra una captura de pantalla del Simple Instant Messenger3, donde la ubicación actual de aquellas personas cuya ubicación es conocida por GISS, se muestra entre paréntesis justo al lado de su nombre. Encima de la imagen, se muestra la barra de herramientas GISS integrada y mejorada, que actualmente contiene la siguiente funcionalidad implementada (de izquierda a derecha): Comunicación asincrónica para grupos (ver capítulo 4.4.4), recordatorios contextuales (ver capítulo 4.4.6), visualización bidimensional de información de ubicación, formación y gestión de grupos (ver capítulo 4.4.2), gestión de disponibilidad contextual (ver capítulo 4.4.5) y finalmente un botón para terminar GISS. Figura 5. La integración de GISS en Simple Instant Messenger3. Dado que mostrar solo esta forma abreviada de la ubicación puede no ser suficiente para el usuario, ya que puede querer ver la posición más precisa disponible, se muestra una posición completamente calificada si se hace clic en un nombre de la lista de contactos (por ejemplo, en la forma de escritorio@habitación2@departamento1@primerpiso@edificio 1@campus). La segunda forma posible de visualización es una gráfica. Hemos evaluado una vista tridimensional, la cual se basaba en un modelo VRML del área respectiva (cf. Figura 6). Debido a deficiencias en la navegación y problemas de usabilidad, decidimos utilizar una vista bidimensional del piso (se le denomina nivel en la jerarquía de ubicación, cf. Figura 4). Otros niveles de granularidad como sección (por ejemplo, edificio) y región (por ejemplo, campus) también se proporcionan. En esta vista basada en el plano del piso, las ubicaciones actuales se muestran al estilo de los contactos de ICQ2, que se colocan en la ubicación actualmente detectada de la persona respectiva. El estado de disponibilidad de un usuario, por ejemplo, ausente si no está en la computadora en este momento, o ocupado si no desea ser molestado, se visualiza mediante la codificación de colores de la flor ICQ2 a la izquierda del nombre. Además, la vista del plano del piso muestra los llamados post-its virtuales, que son contrapartes virtuales de los post-its de la vida real y sirven como nuestro medio de comunicación asincrónica (más información sobre los post-its virtuales se puede encontrar en el capítulo 4.4.4). Figura 6. Vista en 3D del piso (VRML). La Figura 7 muestra el mapa bidimensional de un cierto piso, donde varios usuarios se encuentran actualmente ubicados (visualizados por su nombre y la flor a la izquierda). La ubicación del cliente, en la que se muestra en el mapa, se visualiza mediante un círculo verde. Hacia abajo a la derecha, se pueden ver dos notas adhesivas virtuales. Figura 7. Vista en 2D del suelo. Otra característica de la vista en 2D es la visualización del historial de ubicaciones de los usuarios. Al almacenar el historial completo de las ubicaciones de un usuario junto con una marca de tiempo, podemos proporcionar información sobre los lugares donde ha estado en el pasado. Cuando el ratón se mueve sobre el nombre de un usuario en la vista 2D, las huellas de un usuario, colocadas en los lugares donde ha estado, se desvanecen más intensamente cuanto más antigua sea la información de ubicación. 95 4.4.2 Formación y Gestión de Grupos Para apoyar la interacción en grupos, primero es necesario formar grupos. Como los grupos pueden tener diferentes propósitos, distinguimos dos tipos de grupos. Los llamados grupos estáticos son grupos que se crean manualmente con personas que se unen y abandonan. Los grupos estáticos se pueden dividir aún más en dos subtipos. En grupos estáticos abiertos, cualquiera puede unirse y salir en cualquier momento, útil por ejemplo para formar un grupo de asistentes a conferencias de algún tipo de grupo de interés. Los grupos estáticos cerrados tienen un propietario, quien decide qué personas pueden unirse, aunque todos podrían irse en cualquier momento. Los grupos cerrados permiten a los usuarios, por ejemplo, crear un grupo con sus amigos, pudiendo así comunicarse fácilmente con ellos. En contraste con eso, también apoyamos la creación de grupos dinámicos. Se forman entre personas que se encuentran en el mismo lugar al mismo tiempo. La creación de grupos dinámicos solo se realiza en lugares donde tiene sentido formar grupos, por ejemplo en aulas o salas de reuniones, pero no en pasillos o exteriores. Tampoco tendría mucho sentido formar un grupo solo con las personas que residen en el sector frontal izquierdo de un salón; en cambio, se debería considerar todo el salón. Por estas razones, todas las ubicaciones definidas en la jerarquía están etiquetadas, ya sea que permitan la formación de grupos o no. Los grupos dinámicos no solo se forman en función de la granularidad de las habitaciones, sino también en niveles superiores de la jerarquía, por ejemplo, con las personas que actualmente residen en el área de un departamento. Dado que los miembros de los grupos dinámicos cambian constantemente, es posible crear un grupo estático abierto a partir de ellos. 4.4.3 Comunicación Sincrónica para Grupos La forma más importante de comunicación sincrónica en las computadoras hoy en día es la mensajería instantánea; algunas personas incluso consideran que la mensajería instantánea es la verdadera aplicación estrella en Internet. Esto también ha motivado la decisión de construir GISS sobre un sistema de mensajería instantánea. En los sistemas de mensajería de hoy en día, se brinda un amplio soporte a la comunicación de igual a igual. Sin embargo, cuando se trata de comunicación en grupos, el apoyo suele ser bastante deficiente la mayor parte del tiempo. A menudo, solo se admite enviar un mensaje a múltiples destinatarios, sin contar con medios para tener en cuenta el estado actual de los destinatarios. Además, los grupos solo pueden formarse con miembros de la lista de contactos, por lo tanto, no es posible enviar mensajes a un grupo donde no se conocen a todos sus miembros (lo cual puede ser el caso en entornos donde los participantes de una conferencia forman un grupo). Nuestro enfoque no tiene las restricciones mencionadas. Introducimos entradas de grupo en la lista de contactos de los usuarios; le permitimos a él o a ella enviar mensajes a este grupo fácilmente, sin saber quién exactamente es actualmente miembro de este grupo. Además, los mensajes de grupo solo se entregan a personas que no están ocupadas en ese momento, evitando así una interrupción por un mensaje que posiblemente no sea importante para el usuario. Estas funciones no pueden llevarse a cabo en la red del mensajero en sí misma, por lo que cada vez que se envía un mensaje a una cuenta de grupo, lo interceptamos y lo dirigimos a través de nuestro sistema a todos los destinatarios, que están disponibles en un momento determinado. La comunicación a través de una cuenta de grupo también se almacena de forma centralizada, lo que permite a las personas consultar los mensajes perdidos o simplemente ver el historial de mensajes. 4.4.4 Comunicación Asincrónica para Grupos La comunicación asincrónica en grupos no es una idea nueva. El objetivo de este enfoque no es reinventar la rueda, ya que el correo electrónico es quizás la forma más ampliamente utilizada de comunicación asincrónica en computadoras y está ampliamente aceptado y estandarizado. En nuestro trabajo, buscamos la combinación de comunicación asincrónica con conciencia de ubicación. Por esta razón, introducimos el concepto de los llamados post-its virtuales (cp. [13]), que son mensajes que están vinculados a ubicaciones físicas. Estos post-its virtuales pueden ser visibles para todos los usuarios que pasen por allí o pueden estar restringidos para ser visibles solo para ciertos grupos de personas. Además, un post-it virtual también puede tener una fecha de caducidad después de la cual se elimina y ya no se muestra. Los post-its virtuales también pueden ser comentados por otros, proporcionando así algún tipo de interacción similar a un foro, donde cada post-it forma un hilo. Las notas adhesivas virtuales se muestran automáticamente cada vez que un usuario (disponible) pasa por primera vez. Posteriormente, los post-its se pueden acceder a través del visor 2D, donde se muestran todos los post-its visibles. Todos los lectores de una nota adhesiva quedan registrados y se muestran al verla, lo que proporciona cierto nivel de conciencia sobre las actividades de los miembros del grupo en el pasado. 4.4.5 Gestión de disponibilidad consciente del contexto Los mensajeros instantáneos en general proporcionan algún tipo de información sobre la disponibilidad de un usuario. Aunque esta información solo puede definirse de forma muy general, hemos decidido utilizar estos medios para recopilar el contexto de la actividad, ya que la introducción de uno adicional disminuiría considerablemente la usabilidad del sistema. Para apoyar al usuario en la gestión de su disponibilidad, proporcionamos una interfaz que le permite definir reglas para adaptar su disponibilidad al contexto actual. Estas reglas siguen la forma de evento (E) si condición (C) entonces acción (A), lo cual está directamente respaldado por las reglas ECA del Marco de Contexto descritas en el capítulo 1.3. La prueba de condiciones se desencadena periódicamente mediante eventos de lanzamiento (cada vez que cambia el contexto de un usuario). La condición en sí misma es definida por el usuario, quien puede solicitar el cambio de su estado de disponibilidad como la acción en la regla. Como condición, el usuario puede definir su ubicación, un momento específico (también activando recordatorios diarios, semanales o mensuales) o cualquier combinación lógica de estos criterios. Los recordatorios contextuales [14] se utilizan para dar al usuario la oportunidad de definir tareas y ser recordado de ellas cuando se cumplen ciertos criterios. Por lo tanto, un recordatorio puede ser visto como un post-it para uno mismo, el cual solo es visible en ciertos casos. Los recordatorios pueden estar vinculados a un lugar o tiempo específico, pero también a la proximidad espacial de usuarios o grupos. Estos criterios se pueden combinar con operadores booleanos, proporcionando así un medio poderoso para recordar al usuario las tareas que desea realizar cuando ocurre un cierto contexto. Un recordatorio solo aparecerá la primera vez que el contexto real cumpla con el criterio definido. Al mostrar el recordatorio, el usuario tiene la oportunidad de volver a enviarlo para ser recordado nuevamente, por ejemplo, cinco minutos después o la próxima vez que cierto usuario esté en proximidad espacial. 96 4.4.7 Reconocimiento y Notificación Contextual de Reuniones de Grupo Con la información de contexto disponible, intentamos reconocer las reuniones de un grupo. La determinación de los criterios, cuando el sistema reconoce que un grupo está teniendo una reunión, es parte del trabajo en curso. En un primer enfoque, utilizamos la ubicación y el contexto de actividad de los miembros del grupo para determinar una reunión. Siempre que más del 50 % de los miembros de un grupo estén disponibles en un lugar donde se considere que tiene sentido realizar una reunión (por ejemplo, no en un pasillo), se crea una nota de reunión en un post-it en ese lugar y se notifica a todos los miembros ausentes del grupo sobre la reunión y el lugar donde se llevará a cabo. Durante la reunión, la función de comentarios de las notas adhesivas virtuales proporciona un medio para tomar notas para todos los participantes. Cuando los miembros se unen o abandonan la reunión, esto se añade automáticamente como una nota a la lista de comentarios. Al igual que el reconocimiento del inicio de una reunión, el reconocimiento de su final sigue siendo parte del trabajo en curso. Si se reconoce el final de la reunión, todos los miembros del grupo reciben la lista completa de comentarios como un protocolo de reunión al final de la reunión. CONCLUSIONES Este artículo discutió el potencial del apoyo para la interacción grupal mediante el uso de información de contexto. Primero, introdujimos las nociones de contexto y computación de contexto y motivamos su valor para apoyar la interacción grupal. Se presenta una arquitectura para apoyar la interacción grupal consciente del contexto en entornos móviles y distribuidos. Está construido sobre un marco flexible y extensible, lo que permite una fácil adaptación a las fuentes de contexto disponibles (por ejemplo, agregando sensores adicionales) así como la forma de representación requerida. Hemos desarrollado prototípicamente un conjunto de servicios que mejoran la interacción grupal teniendo en cuenta el contexto actual de los usuarios y el contexto de los propios grupos. Las características importantes son la formación dinámica de grupos, la visualización de la ubicación en un mapa bidimensional, así como la integración discreta en un mensajero instantáneo, la comunicación asincrónica a través de notas virtuales, que están vinculadas a ciertas ubicaciones, y un sistema de gestión de disponibilidad consciente del contexto, que adapta el estado de disponibilidad de un usuario a su situación actual. Para proporcionar información de ubicación, hemos implementado un subsistema para la adquisición automatizada de información de ubicación y proximidad proporcionada por varios sensores, que ofrece una presentación independiente de la tecnología de ubicaciones y proximidades espaciales entre usuarios y fusiona esta información utilizando algoritmos de fusión independientes de los sensores. Un historial de ubicaciones, así como de proximidades espaciales, se almacena en una base de datos, lo que permite habilitar servicios basados en el historial de contexto. REFERENCIAS [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modelado del comportamiento consciente del contexto mediante reglas ECA interpretadas. En Actas de la Conferencia Internacional sobre Computación Paralela y Distribuida (EUROPAR03). (Klagenfurt, Austria, 26-29 de agosto de 2003). Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Aplicaciones Conscientes del Contexto: Del Laboratorio al Mercado. IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. Una encuesta de la investigación en computación móvil consciente del contexto. Informe técnico TR2000-381, Departamento de Ciencias de la Computación, Dartmouth College, Hanover, New Hampshire, noviembre de 2000. [4] Dey, A. Proporcionando Soporte Arquitectónico para Aplicaciones Conscientes del Contexto del Edificio. Tesis de doctorado, Departamento de Ciencias de la Computación, Instituto de Tecnología de Georgia, Atlanta, noviembre de 2000. [5] Svetlana Domnitcheva. Modelado de ubicación: Estado del arte y desafíos. En Actas del Taller sobre Modelado de Ubicación para la Computación Ubicua. (Atlanta, Georgia, Estados Unidos, 30 de septiembre de 2001). 13-19. [6] Ferscha, A. Conciencia del Espacio de Trabajo en Equipos Virtuales Móviles. En Actas del 9º Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE00). (Gaithersburg, Maryland, 14-16 de marzo de 2000). IEEE Computer Society Press, 272-277. [7] Ferscha, A. \n\nIEEE Computer Society Press, 272-277. [7] Ferscha, A. Coordinación en entornos de computación ubicua. En Actas del Duodécimo Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE-2003). (9-11 de junio de 2003). IEEE Computer Society Press, 3-9. [8] Leonhard, U. \n\nIEEE Computer Society Press, 3-9. [8] Leonhard, U. Apoyando la Conciencia de Ubicación en Sistemas Distribuidos Abiertos. Tesis de doctorado, Departamento de Computación, Imperial College, Londres, mayo de 1998. [9] Ryan, N., Pascoe, J., Morse, D. Trabajo de campo de realidad aumentada: el asistente arqueológico consciente del contexto. Gaffney, V., Van Leusen, M., Exxon, S. (eds.) -> Gaffney, V., Van Leusen, M., Exxon, S. (eds.) Aplicaciones informáticas en Arqueología (1997) [10] Schilit, B.N., Theimer, M. Difusión de información de mapas activos a dispositivos móviles. IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N. \n\nRed de IEEE, 8(5) (1994), 22-32. [11] Schilit, B.N. Una arquitectura de sistema para la computación móvil consciente del contexto. Tesis de doctorado, Universidad de Columbia, Departamento de Ciencias de la Computación, mayo de 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S. Apoyando grupos sociales persistentes en entornos de computación ubicua utilizando un servicio de grupo efímero consciente del contexto. En Actas de la Segunda Conferencia Internacional de IEEE sobre Computación y Comunicaciones Pervasivas (PerCom04). (14-17 de marzo de 2004). IEEE Computer Society Press, 287-296. [13] Pascoe, J. \n\nIEEE Computer Society Press, 287-296. [13] Pascoe, J. La arquitectura de Stick-e Note: Extendiendo la interfaz más allá del usuario. Actas de la 2ª Conferencia Internacional de Interfaces de Usuario Inteligentes (IUI97). (Orlando, EE. UU., 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: Un Sistema Consciente del Contexto para Apoyar Recordatorios. Actas del 2º Simposio Internacional sobre Computación Portátil y Ubicua (HUC00). (Bristol, Reino Unido, 2000), 172-186. 97 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "xml configuration file": {
            "translated_key": "Archivo de configuración XML",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "event-condition-action": {
            "translated_key": "Evento-Condición-Acción",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (<br>event-condition-action</br>)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [
                "Related with this event-based architecture is the use of ECA (<br>event-condition-action</br>)-rules for defining the behaviour of the context system."
            ],
            "translated_annotated_samples": [
                "Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (<br>Evento-Condición-Acción</br>) para definir el comportamiento del sistema de contexto."
            ],
            "translated_text": "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil. Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la interacción en grupo. A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la interacción en grupo. Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos. H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica. Términos generales de diseño, Experimentación 1. INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica. Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar. Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones. Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real. Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS). Apoya la interacción grupal en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás. En los siguientes subcapítulos, daremos una breve descripción sobre la computación consciente del contexto y motivaremos sus beneficios para apoyar la interacción en grupo. Se presenta un marco de software para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS. El capítulo 2 presenta la arquitectura de GISS, y los capítulos 3 y 4 discuten los conceptos de localización y de interacción en grupo de GISS con más detalle. El capítulo 5 ofrece un resumen final de nuestro trabajo. 1.1 ¿Qué es la Computación Contextual? Según el Diccionario en línea de Merriam-Webster, el contexto se define como las condiciones interrelacionadas en las que algo existe o ocurre. Dado que esta definición es muy general, se han realizado muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos. La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para contexto. El término consciente del contexto fue introducido por primera vez en [10], donde el contexto se refiere a la ubicación, identidades de personas y objetos cercanos, y cambios en esos objetos. En [2], el contexto también se define mediante una enumeración de ejemplos, como la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación del usuario, el entorno, la identidad y el tiempo. Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información que se pueda utilizar para caracterizar la situación de una entidad. Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluyendo al usuario y a las propias aplicaciones. [4] identifica cuatro tipos principales de información de contexto (a veces referidos como dimensiones de contexto), que son - con respecto a la caracterización de la situación de una entidad - más importantes que otros. Estos son la ubicación, la identidad, el tiempo y la actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundarios). Por ejemplo, si conocemos la identidad de una persona, podemos derivar fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico). Según esta definición, [4] define un sistema como consciente del contexto si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación. Figura 1. Las capas de un sistema consciente del contexto. La computación del contexto se basa en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y utilizar el contexto obtenido (ejecución automática, presentación, etiquetado). Para hacer esto, hay algunas capas intermedias (ver Figura 1). Primero, la información de contexto de bajo nivel obtenida debe ser transformada, agregada e interpretada (transformación de contexto) y representada en un modelo abstracto del mundo de contexto (representación de contexto), ya sea centralizado o descentralizado. Finalmente, la información de contexto almacenada se utiliza para activar ciertos eventos de contexto (activación de contexto). Después de estas definiciones abstractas y formales sobre qué es el contexto y la computación de contexto, nos centraremos ahora en el objetivo principal de este trabajo, es decir, cómo la interacción de los miembros de un grupo móvil puede ser apoyada mediante el uso de información de contexto. En [6] hemos identificado que los sistemas organizativos son cruciales para apoyar a los grupos móviles (ver Figura 2). Primero, tiene que haber un Sistema de Gestión de Información y Conocimiento, que sea capaz de apoyar a un equipo con sus necesidades de procesamiento de información y recopilación de conocimiento. La siguiente parte es el Sistema de Conciencia, que se dedica a la percepción de los efectos de la actividad en equipo. Esto se logra comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios. Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea de forma sincrónica o asincrónica, y para el acceso compartido a artefactos, como documentos. Los sistemas de movilidad despliegan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como la captura y entrega de información de conciencia desde y hacia cualquier lugar. Finalmente, pero no menos importante, el sistema de innovación organizacional integra aspectos del equipo en sí mismo, como roles, liderazgo e instalaciones compartidas. Con respecto a estos cinco aspectos de apoyo al equipo, nos enfocamos en la interacción y cubrimos parcialmente el apoyo a la movilidad y la conciencia. La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros. En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para apoyar la interacción grupal. Creemos que la información sobre la situación actual de una persona aporta un valor añadido a los sistemas de interacción grupal existentes. La información de contexto facilita la interacción grupal al permitir que cada miembro esté al tanto del estado de disponibilidad o la ubicación actual de los demás miembros del grupo, lo que a su vez hace posible formar grupos de manera dinámica, colocar notas virtuales en el mundo real o determinar qué personas están cerca. Figura 2. Apoyo para Grupos Móviles [6]. La mayoría de las aplicaciones de hoy en día que son conscientes del contexto utilizan únicamente la ubicación y el tiempo, y la ubicación se considera un tipo crucial de información de contexto [3]. También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo se centra en la utilización de la información de ubicación y la información sobre los usuarios en proximidad espacial. Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizada, no es suficiente para respaldar la interacción grupal, por lo cual también aprovechamos los otros tres tipos principales, a saber, identidad, tiempo y actividad. Esto proporciona una descripción completa de la situación actual de un usuario y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen detalladamente en el capítulo 4.4. Cuando observamos los tipos de información de contexto mencionados anteriormente, podemos ver que todos ellos están centrados en el usuario individual, teniendo en cuenta únicamente el contexto del propio usuario. Creemos que, para apoyar la interacción grupal, también se debe tener en cuenta el estatus del propio grupo. Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el contexto de grupo, que abarca más que la suma de los contextos individuales de los miembros. El contexto de grupo incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un grupo en particular se reúne en este momento. Middleware de contexto 1.3 El Sistema de Soporte de Interacción de Grupo (GISS) utiliza el marco de software presentado en [1], que sirve como middleware para desarrollar aplicaciones sensibles al contexto. Este llamado Marco de Contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes. Una característica principal del marco es la abstracción de la recuperación de información de contexto a través de varios sensores y su entrega a un nivel donde no se percibe ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes mecanismos de recuperación de contexto; la recuperación de información está oculta para el desarrollador de aplicaciones. Esto se logra mediante entidades llamadas, que describen objetos, por ejemplo, un usuario humano, que son importantes para un determinado escenario de contexto. Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, los cuales pueden ser cargados en la entidad. Estos atributos son piezas complejas de software, que se implementan como clases de Java. Los atributos típicos son encapsulaciones de sensores, pero también pueden ser utilizados para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre cambios de ubicación de los usuarios. Cada entidad puede contener una colección de tales atributos, donde una entidad en sí misma es un atributo. El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos desde el almacenamiento local o a través de la red. Para cargar e implementar nuevos atributos, una entidad debe hacer referencia a un cargador de clases y una capa de transporte y búsqueda, que gestiona el mecanismo de búsqueda para descubrir otras entidades y el transporte. Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atributos poseen estas entidades. La comunicación entre entidades y atributos se basa en eventos de contexto. Cada atributo es capaz de desencadenar eventos, los cuales están dirigidos a otros atributos y entidades respectivamente, independientemente de en qué computadora física estén ejecutándose. Entre otras cosas, un evento contiene el nombre del evento y una lista de parámetros que proporcionan información sobre el propio evento. Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (<br>Evento-Condición-Acción</br>) para definir el comportamiento del sistema de contexto. Por lo tanto, cada entidad tiene un intérprete de reglas, que captura eventos desencadenados, verifica las condiciones asociadas a ellos y provoca ciertas acciones. Estas reglas son referenciadas por la configuración XML de la entidad. Una regla en sí misma incluso puede desencadenar la inserción de nuevas reglas o la descarga de reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto. En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar los datos del sensor de bajo nivel de las aplicaciones de alto nivel y oculta los detalles de comunicación externa al desarrollador de la aplicación. Además, es capaz de adaptar su comportamiento dinámicamente cargando atributos, entidades o reglas ECA en tiempo de ejecución. VISIÓN GENERAL DE LA ARQUITECTURA Dado que GISS utiliza el Marco de Contexto descrito en el capítulo 1.3 como middleware, cada usuario está representado por una entidad, al igual que el servidor central, que es responsable de la transformación de contexto, la representación de contexto y la activación de contexto (cf. Figura 1). Una parte principal de nuestro trabajo se centra en la adquisición automatizada de información de posición y su provisión independiente de sensores a nivel de aplicación. No solo percibimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos. Al desarrollar la arquitectura, nos enfocamos en mantener el cliente lo más simple posible y reducir al mínimo la comunicación entre el cliente y el servidor. Cada cliente puede tener varios sensores de ubicación y/o proximidad adjuntos, los cuales están encapsulados por los atributos respectivos del Marco de Contexto (Encapsulación de Sensores). Estos atributos son responsables de integrar implementaciones de sensores nativos en el Marco de Contexto y enviar información de posición dependiente del sensor al servidor. Consideramos muy importante apoyar diferentes tipos de sensores al mismo tiempo, con el fin de mejorar la precisión de la ubicación por un lado, y proporcionar un entorno de detección de ubicación ubicuo con transiciones fluidas entre diferentes técnicas de detección de ubicación por otro lado. Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstraen la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor). Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas a ubicaciones estandarizadas. La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de Fusión de Sensores, uno para ubicaciones simbólicas y otro para proximidades espaciales. Su trabajo consiste en fusionar la información de ubicación y proximidad de los clientes, respectivamente, la cual se describe detalladamente en el Capítulo 3.3. Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de Fusión de Sensores notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación. Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede ser fácilmente ampliado con sensores adicionales, simplemente implementando los (generalmente dos) atributos para encapsular los sensores (algunos sensores pueden no necesitar una parte del lado del cliente), abstrayendo las posiciones físicas y observando la interfaz con el Núcleo de GISS. Figura 3. La arquitectura del Sistema de Soporte de Interacción de Grupo (GISS). El atributo central del núcleo de GISS es el coordinador principal de la aplicación tal como se muestra al usuario. No solo sirve como una interfaz al subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad). Cada vez que se detecta un cambio en el contexto de uno o más usuarios, el núcleo de GISS evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y en los demás miembros de estos grupos. Cuando sea necesario, se lanzan eventos a los clientes afectados para activar actividades contextualmente conscientes, como cambiar la presentación de la información de conciencia o la ejecución de servicios. La parte del cliente de la aplicación se mantiene lo más simple posible. Además, el diseño modular no solo fue un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario. Por lo tanto, la interfaz de usuario completa puede intercambiarse fácilmente si se tienen en cuenta y se comprenden todos los eventos definidos por el nuevo atributo de la interfaz. La interfaz de usuario actualmente implementada está dividida en dos partes, las cuales también están representadas por dos atributos. El atributo central en el lado del cliente es la llamada Encapsulación de Mensajería Instantánea, que por un lado interactúa con el servidor a través de eventos y por otro lado sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario. Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente, el Simple Instant Messenger (SIM)3 compatible con ICQ2. Hemos elegido un mensajero instantáneo como interfaz porque proporciona una interfaz conocida para la mayoría de los usuarios y facilita una integración fluida del soporte de interacción grupal, aumentando así la aceptación y facilidad de uso. Dado que la funcionalidad básica del mensajero instantáneo, que es servir como cliente en una red de mensajería instantánea, sigue completamente operativa, nuestra aplicación puede utilizar las funciones ya proporcionadas por el mensajero. Por ejemplo, los contextos de actividad e identidad se derivan de la red de mensajería tal como se describe más adelante. La Encapsulación de Mensajería Instantánea también es responsable de admitir la comunicación en grupo. A través de la interfaz del mensajero, proporciona medios de comunicación síncrona y asíncrona, así como un sistema de recordatorio contextual y herramientas para gestionar grupos y el propio estado de disponibilidad. La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, la cual está implementada en el Visor de atributos. La implementación actual proporciona un mapa bidimensional del campus, pero puede ser fácilmente reemplazada por otras visualizaciones, como un modelo VRML tridimensional. Además, esta visualización se utiliza para mostrar los artefactos de la comunicación asincrónica. Basado en una vista del plano de la zona geográfica en la que se encuentra actualmente el usuario, ofrece una rápida visión general de las personas cercanas, su estado y proporciona medios para interactuar con ellas. En los siguientes capítulos 3 y 4, describimos con más detalle el backend de detección de ubicación y el frontend de la aplicación para apoyar la interacción grupal. SENSADO DE UBICACIÓN En el siguiente capítulo, presentaremos un modelo de ubicación que se utiliza para representar ubicaciones; posteriormente, describiremos la integración de sensores de ubicación y proximidad en más detalle. Finalmente, echaremos un vistazo más de cerca a la fusión de la información de ubicación y proximidad, adquirida por varios sensores. Modelo de Ubicación Un modelo de ubicación (es decir, una representación de contexto para la información de contexto de ubicación) es necesario para representar las ubicaciones de los usuarios, con el fin de poder facilitar consultas relacionadas con la ubicación, como por ejemplo, dada una ubicación, devolver una lista de todos los objetos allí o dado un objeto, devolver su ubicación actual. En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representa la ubicación como coordenadas. Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como Sala P111 o Edificio de Física, porque no necesitamos datos de ubicación geométrica. En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación. Además, utilizamos una jerarquía de contención de ubicaciones simbólicas similar a la introducida en [11], que consta de regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos a su vez contienen habitaciones. También distinguimos cuatro tipos, a saber, región (por ejemplo, un campus completo), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, un piso específico en un edificio) y área (por ejemplo, una habitación específica). Introducimos un quinto tipo de ubicación, al que nos referimos como semántico. Estas llamadas ubicaciones semánticas pueden aparecer en cualquier nivel de la jerarquía y pueden estar anidadas, pero no necesariamente tienen una representación geográfica. Ejemplos de tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones. Figura 4. Jerarquía de Contención de Ubicaciones Simbólicas La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto. 3.2 Sensores Nuestra arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación, y sensores de proximidad, que detectan proximidades espaciales entre usuarios. Como se describe arriba, cada sensor tiene una implementación del lado del servidor y, en la mayoría de los casos, también una implementación correspondiente del lado del cliente. Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular. Tales notificaciones se realizan cada vez que el sensor adquiere nueva información. Por lo tanto, los atributos de abstracción del sensor son responsables de detectar cuándo un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si ha sido desconectado por el usuario) o cuando la posición o proximidad no se pueden determinar más (por ejemplo, si). El lector de RFID no puede detectar etiquetas y notificará a la fusión de sensores correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor. Los atributos de abstracción de sensores de ubicación correspondientes recopilan estas posiciones físicas proporcionadas por los sensores de todos los usuarios, y realizan una búsqueda en el repositorio para obtener la ubicación simbólica asociada. Esto requiere ciertas tablas para cada sensor, las cuales asignan posiciones físicas a ubicaciones simbólicas. Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones. Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular. Hemos implementado prototípicamente tres tipos de sensores de ubicación, basados en WLAN (IEEE 802.11), Bluetooth y RFID (Identificación por Radiofrecuencia). Hemos elegido estos tres sensores completamente diferentes debido a sus diferencias en cuanto a precisión, cobertura y esfuerzo administrativo, con el fin de evaluar la flexibilidad de nuestro sistema (ver Tabla 1). El más preciso es un sensor de RFID, que se basa en un lector de RFID activo. Tan pronto como el lector se conecta al cliente, escanea las etiquetas RFID activas en rango y transmite sus números de serie al servidor, donde se asignan a ubicaciones simbólicas. También tenemos en cuenta el RSSI (Radio Signal Strength Information), que proporciona una precisión de posición de unos pocos centímetros y nos permite determinar cuál etiqueta RFID está más cercana. Debido a esta alta precisión, el RFID se utiliza para localizar usuarios dentro de habitaciones. La administración es bastante simple; una vez que se coloca una nueva etiqueta RFID, su número de serie simplemente debe asignarse a una única ubicación simbólica. Una desventaja es la baja disponibilidad, que se puede atribuir al hecho de que los lectores de RFID siguen siendo muy costosos. El segundo es un sensor WLAN 802.11. Por lo tanto, integramos un sistema de posicionamiento WLAN comercial puramente basado en software para rastrear clientes en la infraestructura WLAN del campus universitario. La precisión de la posición alcanzada se encuentra en el rango de unos pocos metros y, por lo tanto, es adecuada para la detección de ubicación a nivel de habitaciones. Una gran desventaja es que un mapa de toda el área debe ser calibrado con puntos de medición a una distancia de 5 metros cada uno. Debido a que la mayoría de las computadoras móviles están equipadas con tecnología WLAN y el sistema de posicionamiento es una solución solo de software, casi todos pueden usar este tipo de sensor. Finalmente, hemos implementado un sensor de Bluetooth, que detecta etiquetas de Bluetooth (es decir, Módulos Bluetooth con posición conocida) en rango y los transmite al servidor que los mapea a ubicaciones simbólicas. Debido al hecho de que no utilizamos información de la fuerza de la señal en la implementación actual, la precisión es superior a 10 metros y, por lo tanto, una única dirección MAC de Bluetooth está asociada con varios lugares simbólicos, de acuerdo a las ubicaciones físicas que cubre dicho módulo de Bluetooth. Esto conlleva la desventaja de que el alcance de cada etiqueta Bluetooth debe ser determinado y mapeado a ubicaciones simbólicas dentro de este alcance. Tabla 1. Comparación de sensores implementados Precisión del sensor Cobertura Administración RFID < 10 cm pobre fácil WLAN 1-4 m muy buena muy lenta Bluetooth ~ 10 m buena lenta 3.2.2 Sensores de proximidad Cualquier sensor capaz de detectar si dos usuarios están en proximidad espacial se denomina sensor de proximidad. Similar a los sensores de ubicación, los atributos de abstracción del sensor de proximidad recopilan información de proximidad física de todos los usuarios y los transforman en asignaciones de identificaciones de usuario. Hemos implementado dos tipos de sensores de proximidad, uno basado en Bluetooth y otro en ubicaciones simbólicas fusionadas (ver capítulo 3.3.1). La implementación de Bluetooth va de la mano con la implementación del sensor de ubicación basado en Bluetooth. Las direcciones MAC de Bluetooth ya determinadas en el rango de un cliente específico se están comparando con las de todos los demás clientes, y cada vez que el atributo Abstracción del Sensor de Bluetooth detecta congruencia, notifica al sensor de fusión de proximidad al respecto. El segundo sensor se basa en ubicaciones simbólicas procesadas por la Fusión de Sensores de Ubicación, por lo tanto no necesita una implementación del lado del cliente. Cada vez que la ubicación simbólica fusionada de un usuario específico cambia, verifica si se encuentra en la misma ubicación simbólica que otro usuario y notifica nuevamente a la fusión del sensor de proximidad sobre la cercanía entre estos dos usuarios. El rango puede ser restringido a cualquier nivel de la jerarquía de contención de ubicación, por ejemplo, a nivel de habitación. Un problema actualmente sin resolver es la granularidad incomparable de diferentes sensores de proximidad. Por ejemplo, las ubicaciones simbólicas en el mismo nivel en la jerarquía de ubicaciones generalmente no cubren la misma área geográfica. 3.3 El núcleo de fusión de sensores del subsistema de detección de ubicación es la fusión de sensores. Combina datos de varios sensores, al mismo tiempo que lidia con diferencias en cuanto a precisión, cobertura y frecuencia de muestreo. Según los dos tipos de sensores descritos en el capítulo 3.2, distinguimos entre la fusión de sensores de ubicación por un lado, y la fusión de sensores de proximidad por otro lado. La fusión de ubicaciones simbólicas, así como la fusión de proximidades espaciales, opera en información estandarizada (cf. Figura 3). Esto tiene la ventaja de que sensores adicionales de posición y proximidad pueden ser añadidos fácilmente o los algoritmos de fusión pueden ser reemplazados por otros más sofisticados. La fusión se realiza para cada usuario por separado y solo tiene en cuenta las mediciones en un punto en el tiempo (es decir, no se utiliza información histórica para determinar la ubicación actual de un usuario específico). El algoritmo recopila todos los eventos generados por los atributos de Abstracción del Sensor, realiza la fusión y activa el atributo del Núcleo GISS si la ubicación simbólica de un usuario específico o la proximidad espacial entre usuarios cambia. Una característica importante es el almacenamiento persistente del historial de ubicación y proximidad en una base de datos para permitir su recuperación en el futuro. Esto permite a las aplicaciones visualizar el movimiento de los usuarios, por ejemplo. 3.3.1 Fusión de Sensores de Ubicación El objetivo de la fusión de información de ubicación es mejorar la precisión y exactitud al combinar el conjunto de ubicaciones simbólicas proporcionadas por varios sensores de ubicación, con el fin de reducir el número de estas ubicaciones al mínimo, idealmente a una única ubicación simbólica por usuario. Esto es bastante difícil, ya que diferentes sensores pueden variar en precisión y frecuencia de muestreo también. El atributo de fusión de sensor de ubicación se activa por eventos, que son lanzados por los atributos de abstracción de sensor de ubicación. Estos eventos contienen información sobre la identidad del usuario en cuestión, su ubicación actual y el sensor mediante el cual se ha determinado la ubicación. Si el atributo Location Sensor Fusion recibe dicho evento, verifica si la cantidad de ubicaciones simbólicas del usuario en cuestión ha cambiado (en comparación con el último evento). Si este es el caso, notifica al atributo principal del GISS sobre todas las ubicaciones simbólicas con las que este usuario está actualmente asociado. Sin embargo, esta información no es muy útil por sí sola si un usuario en particular está asociado con varias ubicaciones. Como se describe en el capítulo 3.2.1, un sensor de ubicación único puede proporcionar múltiples ubicaciones simbólicas. Además, un cierto usuario puede tener varios sensores de ubicación, los cuales proporcionan ubicaciones simbólicas que difieren en precisión (es decir, diferentes niveles en la jerarquía de contención de ubicación). Para hacer frente a este desafío, implementamos un algoritmo de fusión con el fin de reducir el número de ubicaciones simbólicas al mínimo (idealmente a una sola ubicación). En un primer paso, cada ubicación simbólica se asocia con su número de ocurrencias. Una ubicación simbólica puede ocurrir varias veces si es referida por más de un sensor o si un solo sensor detecta múltiples etiquetas, las cuales a su vez hacen referencia a varias ubicaciones. Además, este número se suma al número de ocurrencias previamente calculado de cada ubicación simbólica, que es una ubicación secundaria de la considerada en la jerarquía de contención de ubicaciones. Por ejemplo, si - en la Figura 4 - room2 ocurre dos veces y desk ocurre una sola vez, el valor 2 de room2 se suma al valor 1 de desk, por lo que desk finalmente obtiene el valor 3. En un paso final, solo quedan aquellas ubicaciones simbólicas que están asignadas con el mayor número de ocurrencias. Una reducción adicional se puede lograr asignando prioridades a los sensores (basadas en precisión y confianza) y acumulando estas prioridades para cada ubicación simbólica en lugar de simplemente contar el número de ocurrencias. Si las ubicaciones fusionadas restantes han cambiado (es decir, si difieren de las ubicaciones fusionadas con las que el usuario considerado está actualmente asociado), se les proporciona la marca de tiempo actual, se escribe en la base de datos y se notifica al atributo GISS sobre dónde se encuentra probablemente el usuario. Finalmente, se calcula la ubicación más precisa y común en la jerarquía de ubicaciones (es decir, el límite superior mínimo de estas ubicaciones simbólicas) para obtener una única ubicación simbólica. Si cambia, el atributo principal de GISS se activa nuevamente. 3.3.2 Fusión de Sensores de Proximidad La fusión de sensores de proximidad es mucho más simple que la fusión de ubicaciones simbólicas. El atributo de fusión del sensor de proximidad correspondiente se activa por eventos, que son lanzados por los atributos de abstracción del sensor de proximidad. Estos eventos especiales contienen información sobre la identidad de los dos usuarios involucrados, si actualmente se encuentran en proximidad espacial o si la proximidad ya no persiste, y mediante qué sensor de proximidad se ha detectado esto. Si el atributo de fusión de sensores es notificado por un cierto atributo de abstracción de sensor de proximidad sobre una proximidad espacial existente, primero verifica si estos dos usuarios ya se sabe que están en proximidad (detectado ya sea por otro usuario o por otro sensor de proximidad del usuario, que causó el evento). Si no, este cambio en la proximidad se escribe en el repositorio de contexto con la marca de tiempo actual. De manera similar, si el atributo Fusión de Proximidad es notificado sobre una proximidad finalizada, verifica si los usuarios aún se sabe que están en proximidad, y escribe este cambio en el repositorio si no lo están. Finalmente, si la proximidad espacial entre los dos usuarios realmente cambia, se lanza un evento para notificar al atributo central de GISS sobre esto. 4. INTERACCIÓN CONTEXTUALMENTE SENSIBLE 4.1 Resumen En la mayoría de los sistemas actuales que admiten la interacción en grupos, los medios proporcionados carecen de conciencia del contexto actual del usuario, por lo tanto, no pueden adaptarse a sus necesidades. En nuestro enfoque, utilizamos información de contexto para mejorar la interacción y ofrecer servicios adicionales, lo cual brinda nuevas posibilidades al usuario. Además, creemos que la interacción en grupos también debe tener en cuenta el contexto actual del grupo en sí y no solo el contexto de los miembros individuales del grupo. Por esta razón, también recuperamos información sobre el contexto actual del grupo, derivada de los contextos de los miembros del grupo junto con algún tipo de meta-información (ver capítulo 4.3). Las fuentes de contexto utilizadas para nuestra aplicación corresponden con los cuatro tipos de contexto principales dados en el capítulo 1.1 - identidad (I), ubicación (L), tiempo (T) y actividad (A). Como se mencionó anteriormente, también tenemos en cuenta el contexto del grupo con el que el usuario está interactuando, de modo que podríamos agregar un quinto tipo de información de contexto: la conciencia del grupo (G) - a la clasificación. Usando esta información de contexto, podemos activar actividades sensibles al contexto en las tres categorías descritas en el capítulo 1.1: presentación de información (P), ejecución automática de servicios (A) y etiquetado de contexto a la información para su posterior recuperación (T). La Tabla 2 proporciona una visión general de las actividades que ya hemos implementado; están descritas de manera exhaustiva en el capítulo 4.4. La tabla también muestra qué tipos de información de contexto se utilizan para cada actividad y la categoría en la que podría clasificarse la actividad. 93 Tabla 2. La clasificación de las actividades implementadas con conciencia del contexto es la siguiente: Visualización de la ubicación, Soporte para la construcción de grupos, Soporte para la comunicación sincrónica, Soporte para la comunicación asincrónica, Gestión de disponibilidad, Soporte para la gestión de tareas y Soporte para reuniones. Las razones para implementar estas características son aprovechar los cuatro tipos de información de contexto para apoyar la interacción grupal mediante el uso de un conocimiento integral sobre la situación en la que se encuentra un usuario individual o todo un grupo. Un problema crítico para la aceptación del usuario de un sistema así es la usabilidad de su interfaz. Hemos evaluado varias formas de presentar medios de interacción conscientes del contexto al usuario, hasta llegar a la solución que utilizamos actualmente. Aunque creemos que la interfaz de usuario que se ha implementado actualmente ofrece el mejor equilibrio entre la integración perfecta de funciones y la facilidad de uso, no habría problema en ampliar la arquitectura con otras interfaces de usuario, incluso en diferentes plataformas. La solución elegida se basa en un mensajero instantáneo existente, que ofrece varias posibilidades para integrar nuestro sistema (ver capítulo 4.2). La mayor ventaja de este enfoque es que el usuario se enfrenta a una interfaz gráfica de usuario con la que ya está familiarizado en la mayoría de los casos. Además, nuestro sistema utiliza una cuenta de mensajería instantánea como identificador, de modo que el usuario no tenga que registrarse en ningún otro lugar (por ejemplo, el usuario puede utilizar su cuenta de ICQ2 ya existente). 4.2 Integración de Mensajería Instantánea Nuestro sistema se basa en un mensajero instantáneo existente, el llamado Simple Instant Messenger (SIM). La implementación de este mensajero se lleva a cabo como un proyecto en Sourceforge4. SIM admite múltiples protocolos de mensajería como AIM5, ICQ2 y MSN6. También admite conexiones a múltiples cuentas al mismo tiempo. Además, se brinda soporte completo para la notificación por SMS (cuando esté disponible en el protocolo utilizado). SIM se basa en un concepto de plug-in. Todos los protocolos, así como partes de la interfaz de usuario, están implementados como complementos. Su arquitectura también se utiliza para ampliar las capacidades de las aplicaciones para comunicarse con aplicaciones externas. Con este propósito, se proporciona un complemento de control remoto, mediante el cual se puede controlar el SIM desde aplicaciones externas a través de una conexión de socket. Esta interfaz de control remoto es ampliamente utilizada por GISS para recuperar la lista de contactos, establecer el estado de disponibilidad de los usuarios o enviar mensajes. La funcionalidad del complemento se amplió de varias maneras, por ejemplo, para aceptar mensajes para una cuenta (como si hubieran sido enviados a través de la red de mensajería). El mensajero, más exactamente la lista de contactos (es decir, una lista de perfiles de todas las personas registradas en el mensajero instantáneo, que se visualiza enumerando sus nombres como se puede ver en la Figura 5), también se utiliza para mostrar las ubicaciones de otros miembros de los grupos a los que pertenece un usuario. Esto proporciona conciencia de ubicación sin ocupar demasiado espacio o requerir la atención completa de los usuarios. Una descripción más detallada de estas características se proporciona en el capítulo 4.4. 4.3 Fuentes de Información de Contexto Mientras que el contexto de ubicación de un usuario se obtiene de nuestro subsistema de detección de ubicación descrito en el capítulo 3, también consideramos otros tipos de contexto además de la ubicación relevantes para el apoyo de la interacción grupal. El tiempo local, como dimensión de contexto muy importante, se puede recuperar fácilmente del reloj en tiempo real del sistema del usuario. Además de la ubicación y el tiempo, también utilizamos la información de contexto de la actividad e identidad de los usuarios, donde explotamos la funcionalidad proporcionada por el sistema de mensajería instantánea subyacente. La identidad (o más exactamente, la asignación de IDs a nombres, así como información adicional del perfil de los usuarios) se puede extraer de los contenidos de la lista de contactos de los usuarios. La información sobre la actividad o un usuario en particular solo está disponible en un área muy restringida, específicamente la actividad en la computadora misma. Otras actividades como hacer una llamada telefónica o algo similar, no pueden ser reconocidas con la implementación actual del sensor de actividad. La única información de contexto utilizada es el estado de disponibilidad de los mensajeros instantáneos, por lo tanto, solo proporciona una clasificación muy general de la actividad de los usuarios (en línea, fuera de línea, ausente, ocupado, etc.). Aunque esto pueda no parecer mucha información, seguramente es relevante y puede ser utilizada para mejorar o incluso habilitar varios servicios. Habiendo recopilado la información de contexto de todos los usuarios disponibles, ahora es posible destilar cierta información sobre el contexto de un grupo específico. La información sobre el contexto de un grupo incluye cuántos miembros tiene actualmente el grupo, si el grupo se reúne en este momento, qué miembros participan en una reunión, cuántos miembros han leído cuáles de las publicaciones disponibles de otros miembros del equipo, y así sucesivamente. Por lo tanto, se necesita información adicional como una lista de miembros para cada grupo. Estas listas pueden ser ensambladas manualmente (por usuarios que se unen y salen de grupos) o recuperadas automáticamente. El contexto de un grupo es un contexto secundario y se obtiene de los contextos disponibles de los miembros del grupo. Cada vez que cambia el contexto de un miembro del grupo, el contexto de todo el grupo cambia y debe ser recalculado. Con conocimiento sobre el contexto del usuario y el contexto de los grupos a los que pertenece, podemos ofrecer varios servicios sensibles al contexto al usuario, los cuales mejoran sus habilidades de interacción. Una breve descripción de estos servicios se da en el capítulo 4.4. 4.4 Soporte de Interacción en Grupo 4.4.1 Visualización de Información de Ubicación Una característica importante es la visualización de información de ubicación, permitiendo a los usuarios estar al tanto de la ubicación de otros usuarios y miembros de los grupos a los que se unió, respectivamente. Como ya se describió en el capítulo 2, utilizamos dos formas diferentes de visualización. Quizás el más importante sea mostrar la información de ubicación en la lista de contactos del mensajero instantáneo, justo al lado del nombre, de manera que siempre sea visible sin llamar la atención de los usuarios (en comparación con una vista bidimensional, por ejemplo, que requiere una ventana propia para mostrar un mapa del entorno). Debido al espacio limitado en la lista de contactos, ha sido necesario implementar algún tipo de concepto de nivel de detalle. Al utilizar un modelo de ubicación jerárquico, podemos determinar la ubicación común más precisa de dos usuarios. En la lista de contactos, se muestra la ubicación simbólica actual un nivel por debajo de la ubicación común previamente calculada. Si, por ejemplo, el usuario A actualmente reside en la habitación P121 en el primer piso de un edificio y el usuario B, que debe aparecer en la lista de contactos del usuario A, está en la habitación P304 en el tercer piso, la ubicación común más precisa de estos dos usuarios es el edificio en el que se encuentran. Por esa razón, el piso (es decir, un nivel más allá de la ubicación común, es decir, el edificio) del usuario B se muestra en la lista de contactos del usuario A. Si ambas personas residen en el mismo piso o incluso en la misma habitación, la habitación estaría ocupada. La Figura 5 muestra una captura de pantalla del Simple Instant Messenger3, donde la ubicación actual de aquellas personas cuya ubicación es conocida por GISS, se muestra entre paréntesis justo al lado de su nombre. Encima de la imagen, se muestra la barra de herramientas GISS integrada y mejorada, que actualmente contiene la siguiente funcionalidad implementada (de izquierda a derecha): Comunicación asincrónica para grupos (ver capítulo 4.4.4), recordatorios contextuales (ver capítulo 4.4.6), visualización bidimensional de información de ubicación, formación y gestión de grupos (ver capítulo 4.4.2), gestión de disponibilidad contextual (ver capítulo 4.4.5) y finalmente un botón para terminar GISS. Figura 5. La integración de GISS en Simple Instant Messenger3. Dado que mostrar solo esta forma abreviada de la ubicación puede no ser suficiente para el usuario, ya que puede querer ver la posición más precisa disponible, se muestra una posición completamente calificada si se hace clic en un nombre de la lista de contactos (por ejemplo, en la forma de escritorio@habitación2@departamento1@primerpiso@edificio 1@campus). La segunda forma posible de visualización es una gráfica. Hemos evaluado una vista tridimensional, la cual se basaba en un modelo VRML del área respectiva (cf. Figura 6). Debido a deficiencias en la navegación y problemas de usabilidad, decidimos utilizar una vista bidimensional del piso (se le denomina nivel en la jerarquía de ubicación, cf. Figura 4). Otros niveles de granularidad como sección (por ejemplo, edificio) y región (por ejemplo, campus) también se proporcionan. En esta vista basada en el plano del piso, las ubicaciones actuales se muestran al estilo de los contactos de ICQ2, que se colocan en la ubicación actualmente detectada de la persona respectiva. El estado de disponibilidad de un usuario, por ejemplo, ausente si no está en la computadora en este momento, o ocupado si no desea ser molestado, se visualiza mediante la codificación de colores de la flor ICQ2 a la izquierda del nombre. Además, la vista del plano del piso muestra los llamados post-its virtuales, que son contrapartes virtuales de los post-its de la vida real y sirven como nuestro medio de comunicación asincrónica (más información sobre los post-its virtuales se puede encontrar en el capítulo 4.4.4). Figura 6. Vista en 3D del piso (VRML). La Figura 7 muestra el mapa bidimensional de un cierto piso, donde varios usuarios se encuentran actualmente ubicados (visualizados por su nombre y la flor a la izquierda). La ubicación del cliente, en la que se muestra en el mapa, se visualiza mediante un círculo verde. Hacia abajo a la derecha, se pueden ver dos notas adhesivas virtuales. Figura 7. Vista en 2D del suelo. Otra característica de la vista en 2D es la visualización del historial de ubicaciones de los usuarios. Al almacenar el historial completo de las ubicaciones de un usuario junto con una marca de tiempo, podemos proporcionar información sobre los lugares donde ha estado en el pasado. Cuando el ratón se mueve sobre el nombre de un usuario en la vista 2D, las huellas de un usuario, colocadas en los lugares donde ha estado, se desvanecen más intensamente cuanto más antigua sea la información de ubicación. 95 4.4.2 Formación y Gestión de Grupos Para apoyar la interacción en grupos, primero es necesario formar grupos. Como los grupos pueden tener diferentes propósitos, distinguimos dos tipos de grupos. Los llamados grupos estáticos son grupos que se crean manualmente con personas que se unen y abandonan. Los grupos estáticos se pueden dividir aún más en dos subtipos. En grupos estáticos abiertos, cualquiera puede unirse y salir en cualquier momento, útil por ejemplo para formar un grupo de asistentes a conferencias de algún tipo de grupo de interés. Los grupos estáticos cerrados tienen un propietario, quien decide qué personas pueden unirse, aunque todos podrían irse en cualquier momento. Los grupos cerrados permiten a los usuarios, por ejemplo, crear un grupo con sus amigos, pudiendo así comunicarse fácilmente con ellos. En contraste con eso, también apoyamos la creación de grupos dinámicos. Se forman entre personas que se encuentran en el mismo lugar al mismo tiempo. La creación de grupos dinámicos solo se realiza en lugares donde tiene sentido formar grupos, por ejemplo en aulas o salas de reuniones, pero no en pasillos o exteriores. Tampoco tendría mucho sentido formar un grupo solo con las personas que residen en el sector frontal izquierdo de un salón; en cambio, se debería considerar todo el salón. Por estas razones, todas las ubicaciones definidas en la jerarquía están etiquetadas, ya sea que permitan la formación de grupos o no. Los grupos dinámicos no solo se forman en función de la granularidad de las habitaciones, sino también en niveles superiores de la jerarquía, por ejemplo, con las personas que actualmente residen en el área de un departamento. Dado que los miembros de los grupos dinámicos cambian constantemente, es posible crear un grupo estático abierto a partir de ellos. 4.4.3 Comunicación Sincrónica para Grupos La forma más importante de comunicación sincrónica en las computadoras hoy en día es la mensajería instantánea; algunas personas incluso consideran que la mensajería instantánea es la verdadera aplicación estrella en Internet. Esto también ha motivado la decisión de construir GISS sobre un sistema de mensajería instantánea. En los sistemas de mensajería de hoy en día, se brinda un amplio soporte a la comunicación de igual a igual. Sin embargo, cuando se trata de comunicación en grupos, el apoyo suele ser bastante deficiente la mayor parte del tiempo. A menudo, solo se admite enviar un mensaje a múltiples destinatarios, sin contar con medios para tener en cuenta el estado actual de los destinatarios. Además, los grupos solo pueden formarse con miembros de la lista de contactos, por lo tanto, no es posible enviar mensajes a un grupo donde no se conocen a todos sus miembros (lo cual puede ser el caso en entornos donde los participantes de una conferencia forman un grupo). Nuestro enfoque no tiene las restricciones mencionadas. Introducimos entradas de grupo en la lista de contactos de los usuarios; le permitimos a él o a ella enviar mensajes a este grupo fácilmente, sin saber quién exactamente es actualmente miembro de este grupo. Además, los mensajes de grupo solo se entregan a personas que no están ocupadas en ese momento, evitando así una interrupción por un mensaje que posiblemente no sea importante para el usuario. Estas funciones no pueden llevarse a cabo en la red del mensajero en sí misma, por lo que cada vez que se envía un mensaje a una cuenta de grupo, lo interceptamos y lo dirigimos a través de nuestro sistema a todos los destinatarios, que están disponibles en un momento determinado. La comunicación a través de una cuenta de grupo también se almacena de forma centralizada, lo que permite a las personas consultar los mensajes perdidos o simplemente ver el historial de mensajes. 4.4.4 Comunicación Asincrónica para Grupos La comunicación asincrónica en grupos no es una idea nueva. El objetivo de este enfoque no es reinventar la rueda, ya que el correo electrónico es quizás la forma más ampliamente utilizada de comunicación asincrónica en computadoras y está ampliamente aceptado y estandarizado. En nuestro trabajo, buscamos la combinación de comunicación asincrónica con conciencia de ubicación. Por esta razón, introducimos el concepto de los llamados post-its virtuales (cp. [13]), que son mensajes que están vinculados a ubicaciones físicas. Estos post-its virtuales pueden ser visibles para todos los usuarios que pasen por allí o pueden estar restringidos para ser visibles solo para ciertos grupos de personas. Además, un post-it virtual también puede tener una fecha de caducidad después de la cual se elimina y ya no se muestra. Los post-its virtuales también pueden ser comentados por otros, proporcionando así algún tipo de interacción similar a un foro, donde cada post-it forma un hilo. Las notas adhesivas virtuales se muestran automáticamente cada vez que un usuario (disponible) pasa por primera vez. Posteriormente, los post-its se pueden acceder a través del visor 2D, donde se muestran todos los post-its visibles. Todos los lectores de una nota adhesiva quedan registrados y se muestran al verla, lo que proporciona cierto nivel de conciencia sobre las actividades de los miembros del grupo en el pasado. 4.4.5 Gestión de disponibilidad consciente del contexto Los mensajeros instantáneos en general proporcionan algún tipo de información sobre la disponibilidad de un usuario. Aunque esta información solo puede definirse de forma muy general, hemos decidido utilizar estos medios para recopilar el contexto de la actividad, ya que la introducción de uno adicional disminuiría considerablemente la usabilidad del sistema. Para apoyar al usuario en la gestión de su disponibilidad, proporcionamos una interfaz que le permite definir reglas para adaptar su disponibilidad al contexto actual. Estas reglas siguen la forma de evento (E) si condición (C) entonces acción (A), lo cual está directamente respaldado por las reglas ECA del Marco de Contexto descritas en el capítulo 1.3. La prueba de condiciones se desencadena periódicamente mediante eventos de lanzamiento (cada vez que cambia el contexto de un usuario). La condición en sí misma es definida por el usuario, quien puede solicitar el cambio de su estado de disponibilidad como la acción en la regla. Como condición, el usuario puede definir su ubicación, un momento específico (también activando recordatorios diarios, semanales o mensuales) o cualquier combinación lógica de estos criterios. Los recordatorios contextuales [14] se utilizan para dar al usuario la oportunidad de definir tareas y ser recordado de ellas cuando se cumplen ciertos criterios. Por lo tanto, un recordatorio puede ser visto como un post-it para uno mismo, el cual solo es visible en ciertos casos. Los recordatorios pueden estar vinculados a un lugar o tiempo específico, pero también a la proximidad espacial de usuarios o grupos. Estos criterios se pueden combinar con operadores booleanos, proporcionando así un medio poderoso para recordar al usuario las tareas que desea realizar cuando ocurre un cierto contexto. Un recordatorio solo aparecerá la primera vez que el contexto real cumpla con el criterio definido. Al mostrar el recordatorio, el usuario tiene la oportunidad de volver a enviarlo para ser recordado nuevamente, por ejemplo, cinco minutos después o la próxima vez que cierto usuario esté en proximidad espacial. 96 4.4.7 Reconocimiento y Notificación Contextual de Reuniones de Grupo Con la información de contexto disponible, intentamos reconocer las reuniones de un grupo. La determinación de los criterios, cuando el sistema reconoce que un grupo está teniendo una reunión, es parte del trabajo en curso. En un primer enfoque, utilizamos la ubicación y el contexto de actividad de los miembros del grupo para determinar una reunión. Siempre que más del 50 % de los miembros de un grupo estén disponibles en un lugar donde se considere que tiene sentido realizar una reunión (por ejemplo, no en un pasillo), se crea una nota de reunión en un post-it en ese lugar y se notifica a todos los miembros ausentes del grupo sobre la reunión y el lugar donde se llevará a cabo. Durante la reunión, la función de comentarios de las notas adhesivas virtuales proporciona un medio para tomar notas para todos los participantes. Cuando los miembros se unen o abandonan la reunión, esto se añade automáticamente como una nota a la lista de comentarios. Al igual que el reconocimiento del inicio de una reunión, el reconocimiento de su final sigue siendo parte del trabajo en curso. Si se reconoce el final de la reunión, todos los miembros del grupo reciben la lista completa de comentarios como un protocolo de reunión al final de la reunión. CONCLUSIONES Este artículo discutió el potencial del apoyo para la interacción grupal mediante el uso de información de contexto. Primero, introdujimos las nociones de contexto y computación de contexto y motivamos su valor para apoyar la interacción grupal. Se presenta una arquitectura para apoyar la interacción grupal consciente del contexto en entornos móviles y distribuidos. Está construido sobre un marco flexible y extensible, lo que permite una fácil adaptación a las fuentes de contexto disponibles (por ejemplo, agregando sensores adicionales) así como la forma de representación requerida. Hemos desarrollado prototípicamente un conjunto de servicios que mejoran la interacción grupal teniendo en cuenta el contexto actual de los usuarios y el contexto de los propios grupos. Las características importantes son la formación dinámica de grupos, la visualización de la ubicación en un mapa bidimensional, así como la integración discreta en un mensajero instantáneo, la comunicación asincrónica a través de notas virtuales, que están vinculadas a ciertas ubicaciones, y un sistema de gestión de disponibilidad consciente del contexto, que adapta el estado de disponibilidad de un usuario a su situación actual. Para proporcionar información de ubicación, hemos implementado un subsistema para la adquisición automatizada de información de ubicación y proximidad proporcionada por varios sensores, que ofrece una presentación independiente de la tecnología de ubicaciones y proximidades espaciales entre usuarios y fusiona esta información utilizando algoritmos de fusión independientes de los sensores. Un historial de ubicaciones, así como de proximidades espaciales, se almacena en una base de datos, lo que permite habilitar servicios basados en el historial de contexto. REFERENCIAS [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modelado del comportamiento consciente del contexto mediante reglas ECA interpretadas. En Actas de la Conferencia Internacional sobre Computación Paralela y Distribuida (EUROPAR03). (Klagenfurt, Austria, 26-29 de agosto de 2003). Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Aplicaciones Conscientes del Contexto: Del Laboratorio al Mercado. IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. Una encuesta de la investigación en computación móvil consciente del contexto. Informe técnico TR2000-381, Departamento de Ciencias de la Computación, Dartmouth College, Hanover, New Hampshire, noviembre de 2000. [4] Dey, A. Proporcionando Soporte Arquitectónico para Aplicaciones Conscientes del Contexto del Edificio. Tesis de doctorado, Departamento de Ciencias de la Computación, Instituto de Tecnología de Georgia, Atlanta, noviembre de 2000. [5] Svetlana Domnitcheva. Modelado de ubicación: Estado del arte y desafíos. En Actas del Taller sobre Modelado de Ubicación para la Computación Ubicua. (Atlanta, Georgia, Estados Unidos, 30 de septiembre de 2001). 13-19. [6] Ferscha, A. Conciencia del Espacio de Trabajo en Equipos Virtuales Móviles. En Actas del 9º Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE00). (Gaithersburg, Maryland, 14-16 de marzo de 2000). IEEE Computer Society Press, 272-277. [7] Ferscha, A. \n\nIEEE Computer Society Press, 272-277. [7] Ferscha, A. Coordinación en entornos de computación ubicua. En Actas del Duodécimo Taller Internacional de la IEEE sobre Tecnologías Habilitadoras: Infraestructura para Empresas Colaborativas (WETICE-2003). (9-11 de junio de 2003). IEEE Computer Society Press, 3-9. [8] Leonhard, U. \n\nIEEE Computer Society Press, 3-9. [8] Leonhard, U. Apoyando la Conciencia de Ubicación en Sistemas Distribuidos Abiertos. Tesis de doctorado, Departamento de Computación, Imperial College, Londres, mayo de 1998. [9] Ryan, N., Pascoe, J., Morse, D. Trabajo de campo de realidad aumentada: el asistente arqueológico consciente del contexto. Gaffney, V., Van Leusen, M., Exxon, S. (eds.) -> Gaffney, V., Van Leusen, M., Exxon, S. (eds.) Aplicaciones informáticas en Arqueología (1997) [10] Schilit, B.N., Theimer, M. Difusión de información de mapas activos a dispositivos móviles. IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N. \n\nRed de IEEE, 8(5) (1994), 22-32. [11] Schilit, B.N. Una arquitectura de sistema para la computación móvil consciente del contexto. Tesis de doctorado, Universidad de Columbia, Departamento de Ciencias de la Computación, mayo de 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S. Apoyando grupos sociales persistentes en entornos de computación ubicua utilizando un servicio de grupo efímero consciente del contexto. En Actas de la Segunda Conferencia Internacional de IEEE sobre Computación y Comunicaciones Pervasivas (PerCom04). (14-17 de marzo de 2004). IEEE Computer Society Press, 287-296. [13] Pascoe, J. \n\nIEEE Computer Society Press, 287-296. [13] Pascoe, J. La arquitectura de Stick-e Note: Extendiendo la interfaz más allá del usuario. Actas de la 2ª Conferencia Internacional de Interfaces de Usuario Inteligentes (IUI97). (Orlando, EE. UU., 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: Un Sistema Consciente del Contexto para Apoyar Recordatorios. Actas del 2º Simposio Internacional sobre Computación Portátil y Ubicua (HUC00). (Bristol, Reino Unido, 2000), 172-186. 97 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "sensor fusion": {
            "translated_key": "Fusión de Sensores",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called <br>sensor fusion</br>-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the <br>sensor fusion</br>-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute <br>sensor fusion</br> is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding <br>sensor fusion</br> about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location <br>sensor fusion</br> about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity <br>sensor fusion</br> about this.",
                "The second sensor is based on symbolic locations processed by Location <br>sensor fusion</br>, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity <br>sensor fusion</br> about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 <br>sensor fusion</br> Core of the location sensing subsystem is the <br>sensor fusion</br>.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location <br>sensor fusion</br> Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location <br>sensor fusion</br>-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location <br>sensor fusion</br> receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity <br>sensor fusion</br> Proximity <br>sensor fusion</br> is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the <br>sensor fusion</br>-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [
                "The standardized location- and proximity-information of each user is then passed to the so-called <br>sensor fusion</br>-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the <br>sensor fusion</br>-attributes notify the GISS Core-attribute, which controls the application.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute <br>sensor fusion</br> is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "RFID reader cannot detect tags) and notify the corresponding <br>sensor fusion</br> about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location <br>sensor fusion</br> about the symbolic locations a certain sensor of a particular user determined."
            ],
            "translated_annotated_samples": [
                "La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de <br>Fusión de Sensores</br>, uno para ubicaciones simbólicas y otro para proximidades espaciales.",
                "Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de <br>Fusión de Sensores</br> notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación.",
                "Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular.",
                "El lector de RFID no puede detectar etiquetas y notificará a la <br>fusión de sensores</br> correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor.",
                "Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular."
            ],
            "translated_text": "En este artículo, presentamos un sistema implementado para apoyar la interacción grupal en entornos de computación distribuida móvil. Primero, se presenta una introducción a la computación contextual y una motivación para utilizar la información contextual para facilitar la interacción en grupo. A continuación, presentamos la arquitectura de nuestro sistema, que consta de dos partes: un subsistema para la detección de ubicación que adquiere información sobre la ubicación de los usuarios, así como las proximidades espaciales entre ellos, y otro para la aplicación contextual real, que proporciona servicios para la interacción en grupo. Categorías y Descriptores de Asunto C.2.4 [Redes de Computadoras-Comunicación]: Sistemas Distribuidos - aplicaciones distribuidas. H.1.2 [Modelos y Principios]: Sistemas Usuario/Máquina - factores humanos. H.5.3 [Interfaces de Información y Presentación]: Interfaces de Grupo y Organización - interacción asincrónica, computación colaborativa, teoría y modelos, interacción sincrónica. Términos generales de diseño, Experimentación 1. INTRODUCCIÓN Los entornos informáticos actuales se caracterizan por un número creciente de dispositivos móviles potentes conectados de forma inalámbrica. Los usuarios pueden desplazarse por un entorno llevando consigo sus computadoras y teniendo acceso remoto a información y servicios, en cualquier momento y lugar. Nuevas situaciones aparecen, donde el contexto del usuario - por ejemplo, su ubicación actual o las personas cercanas - es más dinámico; la computación ya no ocurre en un solo lugar y en un solo contexto, sino que abarca una multitud de situaciones y ubicaciones. Este desarrollo conduce a una nueva clase de aplicaciones, las cuales son conscientes del contexto en el que se ejecutan y, por lo tanto, unen los mundos virtual y real. Motivados por esto y el hecho de que solo se han realizado unos pocos estudios para apoyar la comunicación grupal en tales entornos informáticos [12], hemos desarrollado un sistema al que nos referimos como Sistema de Apoyo a la Interacción de Grupos (GISS). Apoya la interacción grupal en entornos de computación móvil distribuida de tal manera que los miembros del grupo ya no necesitan estar en el mismo lugar para interactuar entre sí o simplemente para estar al tanto de la situación de los demás. En los siguientes subcapítulos, daremos una breve descripción sobre la computación consciente del contexto y motivaremos sus beneficios para apoyar la interacción en grupo. Se presenta un marco de software para el desarrollo de aplicaciones sensibles al contexto, que sirve como middleware para GISS. El capítulo 2 presenta la arquitectura de GISS, y los capítulos 3 y 4 discuten los conceptos de localización y de interacción en grupo de GISS con más detalle. El capítulo 5 ofrece un resumen final de nuestro trabajo. 1.1 ¿Qué es la Computación Contextual? Según el Diccionario en línea de Merriam-Webster, el contexto se define como las condiciones interrelacionadas en las que algo existe o ocurre. Dado que esta definición es muy general, se han realizado muchos enfoques para definir la noción de contexto con respecto a los entornos informáticos. La mayoría de las definiciones de contexto se hacen enumerando ejemplos o eligiendo sinónimos para contexto. El término consciente del contexto fue introducido por primera vez en [10], donde el contexto se refiere a la ubicación, identidades de personas y objetos cercanos, y cambios en esos objetos. En [2], el contexto también se define mediante una enumeración de ejemplos, como la ubicación, las identidades de las personas alrededor del usuario, la hora del día, la temporada, la temperatura, etc. [9] define el contexto como la ubicación del usuario, el entorno, la identidad y el tiempo. Aquí nos ajustamos a una definición ampliamente aceptada y más formal, que define el contexto como cualquier información que se pueda utilizar para caracterizar la situación de una entidad. Una entidad es una persona, lugar u objeto que se considera relevante para la interacción entre un usuario y una aplicación, incluyendo al usuario y a las propias aplicaciones. [4] identifica cuatro tipos principales de información de contexto (a veces referidos como dimensiones de contexto), que son - con respecto a la caracterización de la situación de una entidad - más importantes que otros. Estos son la ubicación, la identidad, el tiempo y la actividad, que también se pueden utilizar para derivar otras fuentes de información contextual (tipos de contexto secundarios). Por ejemplo, si conocemos la identidad de una persona, podemos derivar fácilmente información relacionada sobre esta persona de varias fuentes de datos (por ejemplo, día de nacimiento o dirección de correo electrónico). Según esta definición, [4] define un sistema como consciente del contexto si utiliza el contexto para proporcionar información y/o servicios relevantes al usuario, donde la relevancia depende de la tarea del usuario. [4] también proporciona una clasificación de características para aplicaciones conscientes del contexto, que incluye la presentación de información y servicios a un usuario, la ejecución automática de un servicio y el etiquetado de contexto a la información para su posterior recuperación. Figura 1. Las capas de un sistema consciente del contexto. La computación del contexto se basa en dos problemas principales, a saber, identificar el contexto relevante (identidad, ubicación, tiempo, actividad) y utilizar el contexto obtenido (ejecución automática, presentación, etiquetado). Para hacer esto, hay algunas capas intermedias (ver Figura 1). Primero, la información de contexto de bajo nivel obtenida debe ser transformada, agregada e interpretada (transformación de contexto) y representada en un modelo abstracto del mundo de contexto (representación de contexto), ya sea centralizado o descentralizado. Finalmente, la información de contexto almacenada se utiliza para activar ciertos eventos de contexto (activación de contexto). Después de estas definiciones abstractas y formales sobre qué es el contexto y la computación de contexto, nos centraremos ahora en el objetivo principal de este trabajo, es decir, cómo la interacción de los miembros de un grupo móvil puede ser apoyada mediante el uso de información de contexto. En [6] hemos identificado que los sistemas organizativos son cruciales para apoyar a los grupos móviles (ver Figura 2). Primero, tiene que haber un Sistema de Gestión de Información y Conocimiento, que sea capaz de apoyar a un equipo con sus necesidades de procesamiento de información y recopilación de conocimiento. La siguiente parte es el Sistema de Conciencia, que se dedica a la percepción de los efectos de la actividad en equipo. Esto se logra comunicando el contexto laboral, la agenda y la información del espacio de trabajo a los usuarios. Los sistemas de interacción brindan soporte para la comunicación entre los miembros del equipo, ya sea de forma sincrónica o asincrónica, y para el acceso compartido a artefactos, como documentos. Los sistemas de movilidad despliegan mecanismos para permitir el acceso en cualquier lugar a la memoria del equipo, así como la captura y entrega de información de conciencia desde y hacia cualquier lugar. Finalmente, pero no menos importante, el sistema de innovación organizacional integra aspectos del equipo en sí mismo, como roles, liderazgo e instalaciones compartidas. Con respecto a estos cinco aspectos de apoyo al equipo, nos enfocamos en la interacción y cubrimos parcialmente el apoyo a la movilidad y la conciencia. La interacción grupal incluye todos los medios que permiten a los miembros del grupo comunicarse libremente con todos los demás miembros. En este punto, surge la pregunta de cómo se puede utilizar la información de contexto para apoyar la interacción grupal. Creemos que la información sobre la situación actual de una persona aporta un valor añadido a los sistemas de interacción grupal existentes. La información de contexto facilita la interacción grupal al permitir que cada miembro esté al tanto del estado de disponibilidad o la ubicación actual de los demás miembros del grupo, lo que a su vez hace posible formar grupos de manera dinámica, colocar notas virtuales en el mundo real o determinar qué personas están cerca. Figura 2. Apoyo para Grupos Móviles [6]. La mayoría de las aplicaciones de hoy en día que son conscientes del contexto utilizan únicamente la ubicación y el tiempo, y la ubicación se considera un tipo crucial de información de contexto [3]. También vemos la importancia de la información de ubicación en entornos móviles y ubicuos, por lo que un enfoque principal de nuestro trabajo se centra en la utilización de la información de ubicación y la información sobre los usuarios en proximidad espacial. Sin embargo, creemos que la ubicación, como el único tipo de información de contexto utilizada, no es suficiente para respaldar la interacción grupal, por lo cual también aprovechamos los otros tres tipos principales, a saber, identidad, tiempo y actividad. Esto proporciona una descripción completa de la situación actual de un usuario y, por lo tanto, permite numerosos medios para apoyar la interacción grupal, que se describen detalladamente en el capítulo 4.4. Cuando observamos los tipos de información de contexto mencionados anteriormente, podemos ver que todos ellos están centrados en el usuario individual, teniendo en cuenta únicamente el contexto del propio usuario. Creemos que, para apoyar la interacción grupal, también se debe tener en cuenta el estatus del propio grupo. Por lo tanto, hemos añadido un quinto grupo de contexto dimensional, el contexto de grupo, que abarca más que la suma de los contextos individuales de los miembros. El contexto de grupo incluye cualquier información sobre la situación de un grupo completo, por ejemplo, cuántos miembros tiene actualmente un grupo o si un grupo en particular se reúne en este momento. Middleware de contexto 1.3 El Sistema de Soporte de Interacción de Grupo (GISS) utiliza el marco de software presentado en [1], que sirve como middleware para desarrollar aplicaciones sensibles al contexto. Este llamado Marco de Contexto se basa en una arquitectura de comunicación distribuida y admite diferentes tipos de protocolos de transporte y mecanismos de codificación de mensajes. Una característica principal del marco es la abstracción de la recuperación de información de contexto a través de varios sensores y su entrega a un nivel donde no se percibe ninguna diferencia, para el diseñador de aplicaciones, entre estos diferentes mecanismos de recuperación de contexto; la recuperación de información está oculta para el desarrollador de aplicaciones. Esto se logra mediante entidades llamadas, que describen objetos, por ejemplo, un usuario humano, que son importantes para un determinado escenario de contexto. Las entidades expresan su funcionalidad mediante el uso de los llamados atributos, los cuales pueden ser cargados en la entidad. Estos atributos son piezas complejas de software, que se implementan como clases de Java. Los atributos típicos son encapsulaciones de sensores, pero también pueden ser utilizados para implementar servicios de contexto, por ejemplo, para notificar a otras entidades sobre cambios de ubicación de los usuarios. Cada entidad puede contener una colección de tales atributos, donde una entidad en sí misma es un atributo. El conjunto inicial de atributos que contiene una entidad puede cambiar dinámicamente en tiempo de ejecución, si una entidad carga o descarga atributos desde el almacenamiento local o a través de la red. Para cargar e implementar nuevos atributos, una entidad debe hacer referencia a un cargador de clases y una capa de transporte y búsqueda, que gestiona el mecanismo de búsqueda para descubrir otras entidades y el transporte. Los archivos de configuración XML especifican qué conjunto inicial de entidades debe cargarse y qué atributos poseen estas entidades. La comunicación entre entidades y atributos se basa en eventos de contexto. Cada atributo es capaz de desencadenar eventos, los cuales están dirigidos a otros atributos y entidades respectivamente, independientemente de en qué computadora física estén ejecutándose. Entre otras cosas, un evento contiene el nombre del evento y una lista de parámetros que proporcionan información sobre el propio evento. Relacionado con esta arquitectura basada en eventos está el uso de reglas ECA (Evento-Condición-Acción) para definir el comportamiento del sistema de contexto. Por lo tanto, cada entidad tiene un intérprete de reglas, que captura eventos desencadenados, verifica las condiciones asociadas a ellos y provoca ciertas acciones. Estas reglas son referenciadas por la configuración XML de la entidad. Una regla en sí misma incluso puede desencadenar la inserción de nuevas reglas o la descarga de reglas existentes en tiempo de ejecución para cambiar dinámicamente el comportamiento del sistema de contexto. En resumen, el marco de contexto proporciona una arquitectura flexible y distribuida para ocultar los datos del sensor de bajo nivel de las aplicaciones de alto nivel y oculta los detalles de comunicación externa al desarrollador de la aplicación. Además, es capaz de adaptar su comportamiento dinámicamente cargando atributos, entidades o reglas ECA en tiempo de ejecución. VISIÓN GENERAL DE LA ARQUITECTURA Dado que GISS utiliza el Marco de Contexto descrito en el capítulo 1.3 como middleware, cada usuario está representado por una entidad, al igual que el servidor central, que es responsable de la transformación de contexto, la representación de contexto y la activación de contexto (cf. Figura 1). Una parte principal de nuestro trabajo se centra en la adquisición automatizada de información de posición y su provisión independiente de sensores a nivel de aplicación. No solo percibimos la ubicación actual de los usuarios, sino que también determinamos las proximidades espaciales entre ellos. Al desarrollar la arquitectura, nos enfocamos en mantener el cliente lo más simple posible y reducir al mínimo la comunicación entre el cliente y el servidor. Cada cliente puede tener varios sensores de ubicación y/o proximidad adjuntos, los cuales están encapsulados por los atributos respectivos del Marco de Contexto (Encapsulación de Sensores). Estos atributos son responsables de integrar implementaciones de sensores nativos en el Marco de Contexto y enviar información de posición dependiente del sensor al servidor. Consideramos muy importante apoyar diferentes tipos de sensores al mismo tiempo, con el fin de mejorar la precisión de la ubicación por un lado, y proporcionar un entorno de detección de ubicación ubicuo con transiciones fluidas entre diferentes técnicas de detección de ubicación por otro lado. Todos los sensores de ubicación y proximidad admitidos están representados por atributos de contexto del lado del servidor, que corresponden a los atributos de encapsulación del sensor del lado del cliente y abstraen la información de posición dependiente del sensor recibida de todos los usuarios a través de la red inalámbrica (abstracción del sensor). Esto requiere un repositorio de contexto, donde se almacena el mapeo de diversas posiciones físicas a ubicaciones estandarizadas. La información estandarizada de la ubicación y proximidad de cada usuario se transmite luego a los llamados atributos de <br>Fusión de Sensores</br>, uno para ubicaciones simbólicas y otro para proximidades espaciales. Su trabajo consiste en fusionar la información de ubicación y proximidad de los clientes, respectivamente, la cual se describe detalladamente en el Capítulo 3.3. Cada vez que la ubicación simbólica de un usuario o la proximidad espacial entre dos usuarios cambia, los atributos de <br>Fusión de Sensores</br> notifican al atributo principal del Sistema de Información Geográfica (GIS), que controla la aplicación. Debido a la abstracción de la información de posición dependiente del sensor, el sistema puede ser fácilmente ampliado con sensores adicionales, simplemente implementando los (generalmente dos) atributos para encapsular los sensores (algunos sensores pueden no necesitar una parte del lado del cliente), abstrayendo las posiciones físicas y observando la interfaz con el Núcleo de GISS. Figura 3. La arquitectura del Sistema de Soporte de Interacción de Grupo (GISS). El atributo central del núcleo de GISS es el coordinador principal de la aplicación tal como se muestra al usuario. No solo sirve como una interfaz al subsistema de detección de ubicación, sino que también recopila información de contexto adicional en otras dimensiones (tiempo, identidad o actividad). Cada vez que se detecta un cambio en el contexto de uno o más usuarios, el núcleo de GISS evalúa el efecto de estos cambios en el usuario, en los grupos a los que pertenece y en los demás miembros de estos grupos. Cuando sea necesario, se lanzan eventos a los clientes afectados para activar actividades contextualmente conscientes, como cambiar la presentación de la información de conciencia o la ejecución de servicios. La parte del cliente de la aplicación se mantiene lo más simple posible. Además, el diseño modular no solo fue un problema en el lado del sensor, sino también al diseñar la arquitectura de la interfaz de usuario. Por lo tanto, la interfaz de usuario completa puede intercambiarse fácilmente si se tienen en cuenta y se comprenden todos los eventos definidos por el nuevo atributo de la interfaz. La interfaz de usuario actualmente implementada está dividida en dos partes, las cuales también están representadas por dos atributos. El atributo central en el lado del cliente es la llamada Encapsulación de Mensajería Instantánea, que por un lado interactúa con el servidor a través de eventos y por otro lado sirve como un proxy para la aplicación externa en la que se basa la interfaz de usuario. Como aplicación externa, utilizamos un mensajero instantáneo de código abierto existente, el Simple Instant Messenger (SIM)3 compatible con ICQ2. Hemos elegido un mensajero instantáneo como interfaz porque proporciona una interfaz conocida para la mayoría de los usuarios y facilita una integración fluida del soporte de interacción grupal, aumentando así la aceptación y facilidad de uso. Dado que la funcionalidad básica del mensajero instantáneo, que es servir como cliente en una red de mensajería instantánea, sigue completamente operativa, nuestra aplicación puede utilizar las funciones ya proporcionadas por el mensajero. Por ejemplo, los contextos de actividad e identidad se derivan de la red de mensajería tal como se describe más adelante. La Encapsulación de Mensajería Instantánea también es responsable de admitir la comunicación en grupo. A través de la interfaz del mensajero, proporciona medios de comunicación síncrona y asíncrona, así como un sistema de recordatorio contextual y herramientas para gestionar grupos y el propio estado de disponibilidad. La segunda parte de la interfaz de usuario es una visualización de las ubicaciones de los usuarios, la cual está implementada en el Visor de atributos. La implementación actual proporciona un mapa bidimensional del campus, pero puede ser fácilmente reemplazada por otras visualizaciones, como un modelo VRML tridimensional. Además, esta visualización se utiliza para mostrar los artefactos de la comunicación asincrónica. Basado en una vista del plano de la zona geográfica en la que se encuentra actualmente el usuario, ofrece una rápida visión general de las personas cercanas, su estado y proporciona medios para interactuar con ellas. En los siguientes capítulos 3 y 4, describimos con más detalle el backend de detección de ubicación y el frontend de la aplicación para apoyar la interacción grupal. SENSADO DE UBICACIÓN En el siguiente capítulo, presentaremos un modelo de ubicación que se utiliza para representar ubicaciones; posteriormente, describiremos la integración de sensores de ubicación y proximidad en más detalle. Finalmente, echaremos un vistazo más de cerca a la fusión de la información de ubicación y proximidad, adquirida por varios sensores. Modelo de Ubicación Un modelo de ubicación (es decir, una representación de contexto para la información de contexto de ubicación) es necesario para representar las ubicaciones de los usuarios, con el fin de poder facilitar consultas relacionadas con la ubicación, como por ejemplo, dada una ubicación, devolver una lista de todos los objetos allí o dado un objeto, devolver su ubicación actual. En general, hay dos enfoques [3,5]: modelos simbólicos, que representan la ubicación como símbolos abstractos, y un modelo geométrico, que representa la ubicación como coordenadas. Hemos elegido un modelo de ubicación simbólica, que se refiere a ubicaciones como símbolos abstractos como Sala P111 o Edificio de Física, porque no necesitamos datos de ubicación geométrica. En cambio, los símbolos abstractos son más convenientes para la interacción humana a nivel de aplicación. Además, utilizamos una jerarquía de contención de ubicaciones simbólicas similar a la introducida en [11], que consta de regiones de nivel superior, que contienen edificios, que contienen pisos, y los pisos a su vez contienen habitaciones. También distinguimos cuatro tipos, a saber, región (por ejemplo, un campus completo), sección (por ejemplo, un edificio o una sección al aire libre), nivel (por ejemplo, un piso específico en un edificio) y área (por ejemplo, una habitación específica). Introducimos un quinto tipo de ubicación, al que nos referimos como semántico. Estas llamadas ubicaciones semánticas pueden aparecer en cualquier nivel de la jerarquía y pueden estar anidadas, pero no necesariamente tienen una representación geográfica. Ejemplos de tales ubicaciones semánticas son objetos etiquetados dentro de una habitación (por ejemplo, un escritorio y una impresora en este escritorio) o el nombre de un departamento, que contiene ciertas habitaciones. Figura 4. Jerarquía de Contención de Ubicaciones Simbólicas La jerarquía de ubicaciones simbólicas, así como el tipo de cada posición, se almacena en el repositorio de contexto. 3.2 Sensores Nuestra arquitectura admite dos tipos diferentes de sensores: sensores de ubicación, que adquieren información de ubicación, y sensores de proximidad, que detectan proximidades espaciales entre usuarios. Como se describe arriba, cada sensor tiene una implementación del lado del servidor y, en la mayoría de los casos, también una implementación correspondiente del lado del cliente. Mientras que los atributos del cliente (Abstracción del Sensor) son responsables de adquirir datos de sensor de bajo nivel y transmitirlos al servidor, los atributos de Encapsulación del Sensor correspondientes los transforman en un formato uniforme e independiente del sensor, es decir, ubicaciones simbólicas e IDs de usuarios en proximidad espacial, respectivamente. Posteriormente, se activa la Fusión del Sensor correspondiente con esta información independiente del sensor de un usuario específico, detectado por un sensor particular. Tales notificaciones se realizan cada vez que el sensor adquiere nueva información. Por lo tanto, los atributos de abstracción del sensor son responsables de detectar cuándo un determinado sensor ya no está disponible en el lado del cliente (por ejemplo, si ha sido desconectado por el usuario) o cuando la posición o proximidad no se pueden determinar más (por ejemplo, si). El lector de RFID no puede detectar etiquetas y notificará a la <br>fusión de sensores</br> correspondiente sobre esto. Sensores de ubicación Para detectar posiciones físicas, los atributos de encapsulación de sensores transmiten de forma asíncrona información de posición dependiente del sensor al servidor. Los atributos de abstracción de sensores de ubicación correspondientes recopilan estas posiciones físicas proporcionadas por los sensores de todos los usuarios, y realizan una búsqueda en el repositorio para obtener la ubicación simbólica asociada. Esto requiere ciertas tablas para cada sensor, las cuales asignan posiciones físicas a ubicaciones simbólicas. Una posición física puede tener múltiples ubicaciones simbólicas en diferentes niveles de precisión en la jerarquía de ubicación asignada, por ejemplo, si un sensor cubre varias habitaciones. Si se pudiera encontrar tal mapeo, se genera un evento para notificar al atributo Location Sensor Fusion sobre las ubicaciones simbólicas que determinó un cierto sensor de un usuario en particular. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "location sense": {
            "translated_key": "sentido de la ubicación",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Context Awareness for Group Interaction Support Alois Ferscha, Clemens Holzmann, Stefan Oppl Institut für Pervasive Computing, Johannes Kepler Universität Linz Altenbergerstraße 69, A-4040 Linz {ferscha,holzmann,oppl}@soft.uni-linz.ac.at ABSTRACT In this paper, we present an implemented system for supporting group interaction in mobile distributed computing environments.",
                "First, an introduction to context computing and a motivation for using contextual information to facilitate group interaction is given.",
                "We then present the architecture of our system, which consists of two parts: a subsystem for location sensing that acquires information about the location of users as well as spatial proximities between them, and one for the actual context-aware application, which provides services for group interaction.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication Networks]: Distributed Systems - distributed applications.",
                "H.1.2 [Models and Principles]: User/Machine Systems - human factors.",
                "H.5.3 [Information Interfaces and Presentation]: Group and Organization Interfaces - asynchronous interaction, collaborative computing, theory and models, synchronous interaction.",
                "General Terms Design, Experimentation 1.",
                "INTRODUCTION Todays computing environments are characterized by an increasing number of powerful, wirelessly connected mobile devices.",
                "Users can move throughout an environment while carrying their computers with them and having remote access to information and services, anytime and anywhere.",
                "New situations appear, where the users context - for example his current location or nearby people - is more dynamic; computation does not occur at a single location and in a single context any longer, but comprises a multitude of situations and locations.",
                "This development leads to a new class of applications, which are aware of the context in which they run in and thus bringing virtual and real worlds together.",
                "Motivated by this and the fact, that only a few studies have been done for supporting group communication in such computing environments [12], we have developed a system, which we refer to as Group Interaction Support System (GISS).",
                "It supports group interaction in mobile distributed computing environments in a way that group members need not to at the same place any longer in order to interact with each other or just to be aware of the others situation.",
                "In the following subchapters, we will give a short overview on context aware computing and motivate its benefits for supporting group interaction.",
                "A software framework for developing contextsensitive applications is presented, which serves as middleware for GISS.",
                "Chapter 2 presents the architecture of GISS, and chapter 3 and 4 discuss the location sensing and group interaction concepts of GISS in more detail.",
                "Chapter 5 gives a final summary of our work. 1.1 What is Context Computing?",
                "According to Merriam-Websters Online Dictionary1 , context is defined as the interrelated conditions in which something exists or occurs.",
                "Because this definition is very general, many approaches have been made to define the notion of context with respect to computing environments.",
                "Most definitions of context are done by enumerating examples or by choosing synonyms for context.",
                "The term context-aware has been introduced first in [10] where context is referred to as location, identities of nearby people and objects, and changes to those objects.",
                "In [2], context is also defined by an enumeration of examples, namely location, identities of the people around the user, the time of the day, season, temperature etc. [9] defines context as the users location, environment, identity and time.",
                "Here we conform to a widely accepted and more formal definition, which defines context as any information than can be used to characterize the situation of an entity.",
                "An entity is a person, place, or object that is considered relevant to the interaction between a user and an application, including the user and applications themselves. [4] [4] identifies four primary types of context information (sometimes referred to as context dimensions), that are - with respect to characterizing the situation of an entity - more important than others.",
                "These are location, identity, time and activity, which can also be used to derive other sources of contextual information (secondary context types).",
                "For example, if we know a persons identity, we can easily derive related information about this person from several data sources (e.g. day of birth or e-mail address).",
                "According to this definition, [4] defines a system to be contextaware if it uses context to provide relevant information and/or services to the user, where relevancy depends on the users task. [4] also gives a classification of features for context-aware applications, which comprises presentation of information and services to a user, automatic execution of a service and tagging of context to information for later retrieval.",
                "Figure 1.",
                "Layers of a context-aware system Context computing is based on two major issues, namely identifying relevant context (identity, location, time, activity) and using obtained context (automatic execution, presentation, tagging).",
                "In order to do this, there are a few layers between (see Figure 1).",
                "First, the obtained low-level context information has to be transformed, aggregated and interpreted (context transformation) and represented in an abstract context world model (context representation), either centralized or decentralized.",
                "Finally, the stored context information is used to trigger certain context events (context triggering). [7] 1.2 Group Interaction in Context After these abstract and formal definitions about what context and context computing is, we will now focus on the main goal of this work, namely how the interaction of mobile group members can be supported by using context information.",
                "In [6] we have identified organizational systems to be crucial for supporting mobile groups (see Figure 2).",
                "First, there has to be an Information and Knowledge Management System, which is capable of supporting a team with its information processing- and knowledge gathering needs.",
                "The next part is the Awareness System, which is dedicated to the perceptualisation of the effects of team activity.",
                "It does this by communicating work context, agenda and workspace information to the users.",
                "The Interaction Systems provide support for the communication among team members, either synchronous or asynchronous, and for the shared access to artefacts, such as documents.",
                "Mobility Systems deploy mechanisms to enable any-place access to team memory as well as the capturing and delivery of awareness information from and to any places.",
                "Finally yet importantly, the organisational innovation system integrates aspects of the team itself, like roles, leadership and shared facilities.",
                "With respect to these five aspects of team support, we focus on interaction and partly cover mobility- and awareness-support.",
                "Group interaction includes all means that enable group members to communicate freely with all the other members.",
                "At this point, the question how context information can be used for supporting group interaction comes up.",
                "We believe that information about the current situation of a person provides a surplus value to existing group interaction systems.",
                "Context information facilitates group interaction by allowing each member to be aware of the availability status or the current location of each other group member, which again makes it possible to form groups dynamically, to place virtual post-its in the real world or to determine which people are around.",
                "Figure 2.",
                "Support for Mobile Groups [6] Most of todays context-aware applications use location and time only, and location is referred to as a crucial type of context information [3].",
                "We also see the importance of location information in mobile and ubiquitous environments, wherefore a main focus of our work is on the utilization of location information and information about users in spatial proximity.",
                "Nevertheless, we believe that location, as the only used type of context information, is not sufficient to support group interaction, wherefore we also take advantage of the other three primary types, namely identity, time and activity.",
                "This provides a comprehensive description of a users current situation and thus enabling numerous means for supporting group interaction, which are described in detail in chapter 4.4.",
                "When we look at the types of context information stated above, we can see that all of them are single user-centred, taking into account only the context of the user itself.",
                "We believe, that for the support of group interaction, the status of the group itself has also be taken into account.",
                "Therefore, we have added a fifth contextdimension group-context, which comprises more than the sum of the individual members contexts.",
                "Group context includes any information about the situation of a whole group, for example how many members a group currently has or if a certain group meets right now. 1.3 Context Middleware The Group Interaction Support System (GISS) uses the softwareframework introduced in [1], which serves as a middleware for developing context-sensitive applications.",
                "This so-called Context Framework is based on a distributed communication architecture and it supports different kinds of transport protocols and message coding mechanisms. 89 A main feature of the framework is the abstraction of context information retrieval via various sensors and its delivery to a level where no difference appears, for the application designer, between these different kinds of context retrieval mechanisms; the information retrieval is hidden from the application developer.",
                "This is achieved by so-called entities, which describe objectse.g. a human user - that are important for a certain context scenario.",
                "Entities express their functionality by the use of so-called attributes, which can be loaded into the entity.",
                "These attributes are complex pieces of software, which are implemented as Java classes.",
                "Typical attributes are encapsulations of sensors, but they can also be used to implement context services, for example to notify other entities about location changes of users.",
                "Each entity can contain a collection of such attributes, where an entity itself is an attribute.",
                "The initial set of attributes an entity contains can change dynamically at runtime, if an entity loads or unloads attributes from the local storage or over the network.",
                "In order to load and deploy new attributes, an entity has to reference a class loader and a transport and lookup layer, which manages the lookup mechanism for discovering other entities and the transport.",
                "XML configuration files specify which initial set of entities should be loaded and which attributes these entities own.",
                "The communication between entities and attributes is based on context events.",
                "Each attribute is able to trigger events, which are addressed to other attributes and entities respectively, independently on which physical computer they are running.",
                "Among other things, and event contains the name of the event and a list of parameters delivering information about the event itself.",
                "Related with this event-based architecture is the use of ECA (Event-Condition-Action)-rules for defining the behaviour of the context system.",
                "Therefore, every entity has a rule-interpreter, which catches triggered events, checks conditions associated with them and causes certain actions.",
                "These rules are referenced by the entitys XML configuration.",
                "A rule itself is even able to trigger the insertion of new rules or the unloading of existing rules at runtime in order to change the behaviour of the context system dynamically.",
                "To sum up, the context framework provides a flexible, distributed architecture for hiding low-level sensor data from high-level applications and it hides external communication details from the application developer.",
                "Furthermore, it is able to adapt its behaviour dynamically by loading attributes, entities or ECArules at runtime. 2.",
                "ARCHITECTURE OVERVIEW As GISS uses the Context Framework described in chapter 1.3 as middleware, every user is represented by an entity, as well as the central server, which is responsible for context transformation, context representation and context triggering (cf.",
                "Figure 1).",
                "A main part of our work is about the automated acquisition of position information and its sensor-independent provision at application level.",
                "We do not only sense the current location of users, but also determine spatial proximities between them.",
                "Developing the architecture, we focused on keeping the client as simple as possible and reducing the communication between client and server to a minimum.",
                "Each client may have various location and/or proximity sensors attached, which are encapsulated by respective Context Framework-attributes (Sensor Encapsulation).",
                "These attributes are responsible for integrating native sensor-implementations into the Context Framework and sending sensor-dependent position information to the server.",
                "We consider it very important to support different types of sensors even at the same time, in order to improve location accuracy on the one hand, while providing a pervasive location-sensing environment with seamless transition between different location sensing techniques on the other hand.",
                "All location- and proximity-sensors supported are represented by server-side context-attributes, which correspond to the client-side sensor encapsulation-attributes and abstract the sensor-dependent position information received from all users via the wireless network (sensor abstraction).",
                "This requires a context repository, where the mapping of diverse physical positions to standardized locations is stored.",
                "The standardized location- and proximity-information of each user is then passed to the so-called Sensor Fusion-attributes, one for symbolic locations and a second one for spatial proximities.",
                "Their job is to merge location- and proximityinformation of clients, respectively, which is described in detail in Chapter 3.3.",
                "Every time the symbolic location of a user or the spatial proximity between two users changes, the Sensor Fusion-attributes notify the GISS Core-attribute, which controls the application.",
                "Because of the abstraction of sensor-dependent position information, the system can easily be extended by additional sensors, just by implementing the (typically two) attributes for encapsulating sensors (some sensors may not need a client-side part), abstracting physical positions and observing the interface to GISS Core.",
                "Figure 3.",
                "Architecture of the Group Interaction Support System (GISS) The GISS Core-attribute is the central coordinator of the application as it shows to the user.",
                "It not only serves as an interface to the location-sensing subsystem, but also collects further context information in other dimensions (time, identity or activity). 90 Every time a change in the context of one or more users is detected, GISS Core evaluates the effect of these changes on the user, on the groups he belongs to and on the other members of these groups.",
                "Whenever necessary, events are thrown to the affected clients to trigger context-aware activities, like changing the presentation of awareness information or the execution of services.",
                "The client-side part of the application is kept as simple as possible.",
                "Furthermore, modular design was not only an issue on the sensor side but also when designing the user interface architecture.",
                "Thus, the complete user interface can be easily exchanged, if all of the defined events are taken into account and understood by the new interface-attribute.",
                "The currently implemented user interface is split up in two parts, which are also represented by two attributes.",
                "The central attribute on client-side is the so-called Instant Messenger Encapsulation, which on the one hand interacts with the server through events and on the other hand serves as a proxy for the external application the user interface is built on.",
                "As external application, we use an existing open source instant messenger - the ICQ2 -compliant Simple Instant Messenger (SIM)3 .",
                "We have chosen and instant messenger as front-end because it provides a well-known interface for most users and facilitates a seamless integration of group interaction support, thus increasing acceptance and ease of use.",
                "As the basic functionality of the instant messenger - to serve as a client in an instant messenger network - remains fully functional, our application is able to use the features already provided by the messenger.",
                "For example, the contexts activity and identity are derived from the messenger network as it is described later.",
                "The Instant Messenger Encapsulation is also responsible for supporting group communication.",
                "Through the interface of the messenger, it provides means of synchronous and asynchronous communication as well as a context-aware reminder system and tools for managing groups and the own availability status.",
                "The second part of the user interface is a visualisation of the users locations, which is implemented in the attribute Viewer.",
                "The current implementation provides a two-dimensional map of the campus, but it can easily be replaced by other visualisations, a three-dimensional VRML-model for example.",
                "Furthermore, this visualisation is used to show the artefacts for asynchronous communication.",
                "Based on a floor plan-view of the geographical area the user currently resides in, it gives a quick overview of which people are nearby, their state and provides means to interact with them.",
                "In the following chapters 3 and 4, we describe the location sensing-backend and the application front-end for supporting group interaction in more detail. 3.",
                "LOCATION SENSING In the following chapter, we will introduce a location model, which is used for representing locations; afterwards, we will describe the integration of location- and proximity-sensors in 2 http://www.icq.com/ 3 http://sim-icq.sourceforge.net more detail.",
                "Finally, we will have a closer look on the fusion of location- and proximity-information, acquired by various sensors. 3.1 Location Model A location model (i.e. a context representation for the contextinformation location) is needed to represent the locations of users, in order to be able to facilitate location-related queries like given a location, return a list of all the objects there or given an object, return its current location.",
                "In general, there are two approaches [3,5]: symbolic models, which represent location as abstract symbols, and a geometric model, which represent location as coordinates.",
                "We have chosen a symbolic location model, which refers to locations as abstract symbols like Room P111 or Physics Building, because we do not require geometric location data.",
                "Instead, abstract symbols are more convenient for human interaction at application level.",
                "Furthermore, we use a symbolic location containment hierarchy similar to the one introduced in [11], which consists of top-level regions, which contain buildings, which contain floors, and the floors again contain rooms.",
                "We also distinguish four types, namely region (e.g. a whole campus), section (e.g. a building or an outdoor section), level (e.g. a certain floor in a building) and area (e.g. a certain room).",
                "We introduce a fifth type of location, which we refer to as semantic.",
                "These socalled semantic locations can appear at any level in the hierarchy and they can be nested, but they do not necessarily have a geographic representation.",
                "Examples for such semantic locations are tagged objects within a room (e.g. a desk and a printer on this desk) or the name of a department, which contains certain rooms.",
                "Figure 4.",
                "Symbolic Location Containment Hierarchy The hierarchy of symbolic locations as well as the type of each position is stored in the context repository. 3.2 Sensors Our architecture supports two different kinds of sensors: location sensors, which acquire location information, and proximity sensors, which detect spatial proximities between users.",
                "As described above, each sensor has a server- and in most cases a corresponding client-side-implementation, too.",
                "While the clientattributes (Sensor Abstraction) are responsible for acquiring low-level sensor-data and transmitting it to the server, the corresponding Sensor Encapsulation-attributes transform them into a uniform and sensor-independent format, namely symbolic locations and IDs of users in spatial proximity, respectively. 91 Afterwards, the respective attribute Sensor Fusion is being triggered with this sensor-independent information of a certain user, detected by a particular sensor.",
                "Such notifications are performed every time the sensor acquired new information.",
                "Accordingly, Sensor Abstraction-attributes are responsible to detect when a certain sensor is no longer available on the client side (e.g. if it has been unplugged by the user) or when position respectively proximity could not be determined any longer (e.g.",
                "RFID reader cannot detect tags) and notify the corresponding sensor fusion about this. 3.2.1 Location Sensors In order to sense physical positions, the Sensor Encapsulationattributes asynchronously transmit sensor-dependent position information to the server.",
                "The corresponding location Sensor Abstraction-attributes collect these physical positions delivered by the sensors of all users, and perform a repository-lookup in order to get the associated symbolic location.",
                "This requires certain tables for each sensor, which map physical positions to symbolic locations.",
                "One physical position may have multiple symbolic locations at different accuracy-levels in the location hierarchy assigned to, for example if a sensor covers several rooms.",
                "If such a mapping could be found, an event is thrown in order to notify the attribute Location Sensor Fusion about the symbolic locations a certain sensor of a particular user determined.",
                "We have prototypically implemented three kinds of location sensors, which are based on WLAN (IEEE 802.11), Bluetooth and RFID (Radio Frequency Identification).",
                "We have chosen these three completely different sensors because of their differences concerning accuracy, coverage and administrative effort, in order to evaluate the flexibility of our system (see Table 1).",
                "The most accurate one is an RFID sensor, which is based on an active RFID-reader.",
                "As soon as the reader is plugged into the client, it scans for active RFID tags in range and transmits their serial numbers to the server, where they are mapped to symbolic locations.",
                "We also take into account RSSI (Radio Signal Strength Information), which provides position accuracy of few centimetres and thus enables us to determine which RFID-tag is nearest.",
                "Due to this high accuracy, RFID is used for locating users within rooms.",
                "The administration is quite simple; once a new RFID tag is placed, its serial number simply has to be assigned to a single symbolic location.",
                "A drawback is the poor availability, which can be traced back to the fact that RFID readers are still very expensive.",
                "The second one is an 802.11 WLAN sensor.",
                "Therefore, we integrated a purely software-based, commercial WLAN positioning system for tracking clients on the university campuswide WLAN infrastructure.",
                "The reached position accuracy is in the range of few meters and thus is suitable for location sensing at the granularity of rooms.",
                "A big disadvantage is that a map of the whole area has to be calibrated with measuring points at a distance of 5 meters each.",
                "Because most mobile computers are equipped with WLAN technology and the positioning-system is a software-only solution, nearly everyone is able to use this kind of sensor.",
                "Finally, we have implemented a Bluetooth sensor, which detects Bluetooth tags (i.e.",
                "Bluetooth-modules with known position) in range and transmits them to the server that maps to symbolic locations.",
                "Because of the fact that we do not use signal strengthinformation in the current implementation, the accuracy is above 10 meters and therefore a single Bluetooth MAC address is associated with several symbolic locations, according to the physical locations such a Bluetooth module covers.",
                "This leads to the disadvantage that the range of each Bluetooth-tag has to be determined and mapped to symbolic locations within this range.",
                "Table 1.",
                "Comparison of implemented sensors Sensor Accuracy Coverage Administration RFID < 10 cm poor easy WLAN 1-4 m very well very timeconsuming Bluetooth ~ 10 m well time-consuming 3.2.2 Proximity Sensors Any sensor that is able to detect whether two users are in spatial proximity is referred to as proximity sensor.",
                "Similar to the location sensors, the Proximity Sensor Abstraction-attributes collect physical proximity information of all users and transform them to mappings of user-IDs.",
                "We have implemented two types of proximity-sensors, which are based on Bluetooth on the one hand and on fused symbolic locations (see chapter 3.3.1) on the other hand.",
                "The Bluetooth-implementation goes along with the implementation of the Bluetooth-based location sensor.",
                "The already determined Bluetooth MAC addresses in range of a certain client are being compared with those of all other clients, and each time the attribute Bluetooth Sensor Abstraction detects congruence, it notifies the proximity sensor fusion about this.",
                "The second sensor is based on symbolic locations processed by Location Sensor Fusion, wherefore it does not need a client-side implementation.",
                "Each time the fused symbolic location of a certain user changes, it checks whether he is at the same symbolic location like another user and again notifies the proximity sensor fusion about the proximity between these two users.",
                "The range can be restricted to any level of the location containment hierarchy, for example to room granularity.",
                "A currently unresolved issue is the incomparable granularity of different proximity sensors.",
                "For example, the symbolic locations at same level in the location hierarchy mostly do not cover the same geographic area. 3.3 Sensor Fusion Core of the location sensing subsystem is the sensor fusion.",
                "It merges data of various sensors, while coping with differences concerning accuracy, coverage and sample-rate.",
                "According to the two kinds of sensors described in chapter 3.2, we distinguish between fusion of location sensors on the one hand, and fusion of proximity sensors on the other hand.",
                "The fusion of symbolic locations as well as the fusion of spatial proximities operates on standardized information (cf.",
                "Figure 3).",
                "This has the advantage, that additional position- and proximitysensors can be added easily or the fusion algorithms can be replaced by ones that are more sophisticated. 92 Fusion is performed for each user separately and takes into account the measurements at a single point in time only (i.e. no history information is used for determining the current location of a certain user).",
                "The algorithm collects all events thrown by the Sensor Abstraction-attributes, performs fusion and triggers the GISS Core-attribute if the symbolic location of a certain user or the spatial proximity between users changed.",
                "An important feature is the persistent storage of location- and proximity-history in a database in order to allow future retrieval.",
                "This enables applications to visualize the movement of users for example. 3.3.1 Location Sensor Fusion Goal of the fusion of location information is to improve precision and accuracy by merging the set of symbolic locations supplied by various location sensors, in order to reduce the number of these locations to a minimum, ideally to a single symbolic location per user.",
                "This is quite difficult, because different sensors may differ in accuracy and sample rate as well.",
                "The Location Sensor Fusion-attribute is triggered by events, which are thrown by the Location Sensor Abstractionattributes.",
                "These events contain information about the identity of the user concerned, his current location and the sensor by which the location has been determined.",
                "If the attribute Location Sensor Fusion receives such an event, it checks if the amount of symbolic locations of the user concerned has changed (compared with the last event).",
                "If this is the case, it notifies the GISS Core-attribute about all symbolic locations this user is currently associated with.",
                "However, this information is not very useful on its own if a certain user is associated with several locations.",
                "As described in chapter 3.2.1, a single location sensor may deliver multiple symbolic locations.",
                "Moreover, a certain user may have several location sensors, which supply symbolic locations differing in accuracy (i.e. different levels in the location containment hierarchy).",
                "To cope with this challenge, we implemented a fusion algorithm in order to reduce the number of symbolic locations to a minimum (ideally to a single location).",
                "In a first step, each symbolic location is associated with its number of occurrences.",
                "A symbolic location may occur several times if it is referred to by more than one sensor or if a single sensor detects multiple tags, which again refer to several locations.",
                "Furthermore, this number is added to the previously calculated number of occurrences of each symbolic location, which is a child-location of the considered one in the location containment hierarchy.",
                "For example, if - in Figure 4 - room2 occurs two times and desk occurs a single time, the value 2 of room2 is added to the value 1 of desk, whereby desk finally gets the value 3.",
                "In a final step, only those symbolic locations are left which are assigned with the highest number of occurrences.",
                "A further reduction can be achieved by assigning priorities to sensors (based on accuracy and confidence) and cumulating these priorities for each symbolic location instead of just counting the number of occurrences.",
                "If the remaining fused locations have changed (i.e. if they differ from the fused locations the considered user is currently associated with), they are provided with the current timestamp, written to the database and the GISS-attribute is notified about where the user is probably located.",
                "Finally, the most accurate, common location in the location hierarchy is calculated (i.e. the least upper bound of these symbolic locations) in order to get a single symbolic location.",
                "If it changes, the GISS Core-attribute is triggered again. 3.3.2 Proximity Sensor Fusion Proximity sensor fusion is much simpler than the fusion of symbolic locations.",
                "The corresponding proximity sensor fusionattribute is triggered by events, which are thrown by the Proximity Sensor Abstraction-attributes.",
                "These special events contain information about the identity of the two users concerned, if they are currently in spatial proximity or if proximity no longer persists, and by which proximity-sensor this has been detected.",
                "If the sensor fusion-attribute is notified by a certain Proximity Sensor Abstraction-attribute about an existing spatial proximity, it first checks if these two users are already known to be in proximity (detected either by another user or by another proximity-sensor of the user, which caused the event).",
                "If not, this change in proximity is written to the context repository with current timestamp.",
                "Similarly, if the attribute Proximity Fusion is notified about an ended proximity, it checks if the users are still known to be in proximity, and writes this change to the repository if not.",
                "Finally, if spatial proximity between the two users actually changed, an event is thrown to notify the GISS Core-attribute about this. 4.",
                "CONTEXTSENSITIVE INTERACTION 4.1 Overview In most of todays systems supporting interaction in groups, the provided means lack any awareness of the users current context, thus being unable to adapt to his needs.",
                "In our approach, we use context information to enhance interaction and provide further services, which offer new possibilities to the user.",
                "Furthermore, we believe that interaction in groups also has to take into account the current context of the group itself and not only the context of individual group members.",
                "For this reason, we also retrieve information about the groups current context, derived from the contexts of the group members together with some sort of meta-information (see chapter 4.3).",
                "The sources of context used for our application correspond with the four primary context types given in chapter 1.1 - identity (I), location (L), time (T) and activity (A).",
                "As stated before, we also take into account the context of the group the user is interaction with, so that we could add a fifth type of context informationgroup awareness (G) - to the classification.",
                "Using this context information, we can trigger context-aware activities in all of the three categories described in chapter 1.1 - presentation of information (P), automatic execution of services (A) and tagging of context to information for later retrieval (T).",
                "Table 2 gives an overview of activities we have already implemented; they are described comprehensively in chapter 4.4.",
                "The table also shows which types of context information are used for each activity and the category the activity could be classified in. 93 Table 2.",
                "Classification of implemented context-aware activities Service L T I A G P A T Location Visualisation X X X Group Building Support X X X X Support for Synchronous Communication X X X X Support for Asynchronous Communication X X X X X X X Availability Management X X X Task Management Support X X X X Meeting Support X X X X X X Reasons for implementing these very features are to take advantage of all four types of context information in order to support group interaction by utilizing a comprehensive knowledge about the situation a single user or a whole group is in.",
                "A critical issue for the user acceptance of such a system is the usability of its interface.",
                "We have evaluated several ways of presenting context-aware means of interaction to the user, until we came to the solution we use right now.",
                "Although we think that the user interface that has been implemented now offers the best trade-off between seamless integration of features and ease of use, it would be no problem to extend the architecture with other user interfaces, even on different platforms.",
                "The chosen solution is based on an existing instant messenger, which offers several possibilities to integrate our system (see chapter 4.2).",
                "The biggest advantage of this approach is that the user is confronted with a graphical user interface he is already used to in most cases.",
                "Furthermore, our system uses an instant messenger account as an identifier, so that the user does not have to register a further account anywhere else (for example, the user can use his already existing ICQ2 -account). 4.2 Instant Messenger Integration Our system is based upon an existing instant messenger, the socalled Simple Instant Messenger (SIM)3 .",
                "The implementation of this messenger is carried out as a project at Sourceforge4 .",
                "SIM supports multiple messenger protocols such as AIM5 , ICQ2 and MSN6 .",
                "It also supports connections to multiple accounts at the same time.",
                "Furthermore, full support for SMS-notification (where provided from the used protocol) is given.",
                "SIM is based on a plug-in concept.",
                "All protocols as well as parts of the user-interface are implemented as plug-ins.",
                "Its architecture is also used to extend the applications abilities to communicate with external applications.",
                "For this purpose, a remote control plug-in is provided, by which SIM can be controlled from external applications via socket connection.",
                "This remote control interface is extensively used by GISS for retrieving the contact list, setting the users availability-state or sending messages.",
                "The 4 http://sourceforge.net/ 5 http://www.aim.com/ 6 http://messenger.msn.com/ functionality of the plug-in was extended in several ways, for example to accept messages for an account (as if they would have been sent via the messenger network).",
                "The messenger, more exactly the contact list (i.e. a list of profiles of all people registered with the instant messenger, which is visualized by listing their names as it can be seen in Figure 5), is also used to display locations of other members of the groups a user belongs to.",
                "This provides location awareness without taking too much space or requesting the users full attention.",
                "A more comprehensive description of these features is given in chapter 4.4. 4.3 Sources of Context Information While the location-context of a user is obtained from our location sensing subsystem described in chapter 3, we consider further types of context than location relevant for the support of group interaction, too.",
                "Local time as a very important context dimension can be easily retrieved from the real time clock of the users system.",
                "Besides location and time, we also use context information of users activity and identity, where we exploit the functionality provided by the underlying instant messenger system.",
                "Identity (or more exactly, the mapping of IDs to names as well as additional information from the users profile) can be distilled out of the contents of the users contact list.",
                "Information about the activity or a certain user is only available in a very restricted area, namely the activity at the computer itself.",
                "Other activities like making a phone call or something similar, cannot be recognized with the current implementation of the activity sensor.",
                "The only context-information used is the instant messengers availability state, thus only providing a very coarse classification of the users activity (online, offline, away, busy etc.).",
                "Although this may not seem to be very much information, it is surely relevant and can be used to improve or even enable several services.",
                "Having collected the context information from all available users, it is now possible to distil some information about the context of a certain group.",
                "Information about the context of a group includes how many members the group currently has, if the group meets right now, which members are participating at a meeting, how many members have read which of the available posts from other team members and so on.",
                "Therefore, some additional information like a list of members for each group is needed.",
                "These lists can be assembled manually (by users joining and leaving groups) or retrieved automatically.",
                "The context of a group is secondary context and is aggregated from the available contexts of the group members.",
                "Every time the context of a single group member changes, the context of the whole group is changing and has to be recalculated.",
                "With knowledge about a users context and the context of the groups he belongs to, we can provide several context-aware services to the user, which enhance his interaction abilities.",
                "A brief description of these services is given in chapter 4.4. 94 4.4 Group Interaction Support 4.4.1 Visualisation of Location Information An important feature is the visualisation of location information, thus allowing users to be aware of the location of other users and members of groups he joined, respectively.",
                "As already described in chapter 2, we use two different forms of visualisation.",
                "The maybe more important one is to display location information in the contact list of the instant messenger, right beside the name, thus being always visible while not drawing the users attention on it (compared with a twodimensional view for example, which requires a own window for displaying a map of the environment).",
                "Due to the restricted space in the contact list, it has been necessary to implement some sort of level-of-detail concept.",
                "As we use a hierarchical location model, we are able to determine the most accurate common location of two users.",
                "In the contact list, the current symbolic location one level below the previously calculated common location is then displayed.",
                "If, for example, user A currently resides in room P121 at the first floor of a building and user B, which has to be displayed in the contact list of user A, is in room P304 at the third floor, the most accurate common location of these two users is the building they are in.",
                "For that reason, the floor (i.e. one level beyond the common location, namely the building) of user B is displayed in the contact list of user A.",
                "If both people reside on the same floor or even in the same room, the room would be taken.",
                "Figure 5 shows a screenshot of the Simple Instant Messenger3 , where the current location of those people, whose location is known by GISS, is displayed in brackets right beside their name.",
                "On top of the image, the heightened, integrated GISS-toolbar is shown, which currently contains the following, implemented functionality (from left to right): Asynchronous communication for groups (see chapter 4.4.4), context-aware reminders (see chapter 4.4.6), two-dimensional visualisation of locationinformation, forming and managing groups (see chapter 4.4.2), context-aware availability-management (see chapter 4.4.5) and finally a button for terminating GISS.",
                "Figure 5.",
                "GISS integration in Simple Instant Messenger3 As displaying just this short form of location may not be enough for the user, because he may want to see the most accurate position available, a fully qualified position is shown if a name in the contact-list is clicked (e.g. in the form of desk@room2@department1@1stfloor@building 1@campus).",
                "The second possible form of visualisation is a graphical one.",
                "We have evaluated a three-dimensional view, which was based on a VRML model of the respective area (cf.",
                "Figure 6).",
                "Due to lacks in navigational and usability issues, we decided to use a twodimensional view of the floor (it is referred to as level in the location hierarchy, cf.",
                "Figure 4).",
                "Other levels of granularity like section (e.g. building) and region (e.g. campus) are also provided.",
                "In this floor-plan-based view, the current locations are shown in the manner of ICQ2 contacts, which are placed at the currently sensed location of the respective person.",
                "The availability-status of a user, for example away if he is not on the computer right now, or busy if he does not want to be disturbed, is visualized by colour-coding the ICQ2 -flower left beside the name.",
                "Furthermore, the floor-plan-view shows so-called the virtual post-its, which are virtual counterparts of real-life post-its and serve as our means of asynchronous communication (more about virtual post-its can be found in chapter 4.4.4).",
                "Figure 6. 3D-view of the floor (VRML) Figure 7 shows the two-dimensional map of a certain floor, where several users are currently located (visualized by their name and the flower left beside).",
                "The location of the client, on which the map is displayed, is visualized by a green circle.",
                "Down to the right, two virtual post-its can be seen.",
                "Figure 7. 2D view of the floor Another feature of the 2D-view is the visualisation of locationhistory of users.",
                "As we store the complete history of a users locations together with a timestamp, we are able to provide information about the locations he has been back in time.",
                "When the mouse is moved over the name of a certain user in the 2Dview, footprints of a user, placed at the locations he has been, are faded out the stronger, the older the location information is. 95 4.4.2 Forming and Managing Groups To support interaction in groups, it is first necessary to form groups.",
                "As groups can have different purposes, we distinguish two types of groups.",
                "So-called static groups are groups, which are built up manually by people joining and leaving them.",
                "Static groups can be further divided into two subtypes.",
                "In open static groups, everybody can join and leave anytime, useful for example to form a group of lecture attendees of some sort of interest group.",
                "Closed static groups have an owner, who decides, which persons are allowed to join, although everybody could leave again at any time.",
                "Closed groups enable users for example to create a group of their friends, thus being able to communicate with them easily.",
                "In contrast to that, we also support the creation of dynamic groups.",
                "They are formed among persons, who are at the same location at the same time.",
                "The creation of dynamic groups is only performed at locations, where it makes sense to form groups, for example in lecture halls or meeting rooms, but not on corridors or outdoor.",
                "It would also be not very meaningful to form a group only of the people residing in the left front sector of a hall; instead, the complete hall should be considered.",
                "For these reasons, all the defined locations in the hierarchy are tagged, whether they allow the formation of groups or not.",
                "Dynamic groups are also not only formed granularity of rooms, but also on higher levels in the hierarchy, for example with the people currently residing in the area of a department.",
                "As the members of dynamic groups constantly change, it is possible to create an open static group out of them. 4.4.3 Synchronous Communication for Groups The most important form of synchronous communication on computers today is instant messaging; some people even see instant messaging to be the real killer application on the Internet.",
                "This has also motivated the decision to build GISS upon an instant messaging system.",
                "In todays messenger systems, peer-to-peer-communication is extensively supported.",
                "However, when it comes to communication in groups, the support is rather poor most of the time.",
                "Often, only sending a message to multiple recipients is supported, lacking means to take into account the current state of the recipients.",
                "Furthermore, groups can only be formed of members in ones contact list, thus being not able to send messages to a group, where not all of its members are known (which may be the case in settings, where the participants of a lecture form a group).",
                "Our approach does not have the mentioned restrictions.",
                "We introduce group-entries in the users contact list; enable him or his to send messages to this group easily, without knowing who exactly is currently a member of this group.",
                "Furthermore, group messages are only delivered to persons, who are currently not busy, thus preventing a disturbance by a message, which is possibly unimportant for the user.",
                "These features cannot be carried out in the messenger network itself, so whenever a message to a group account is sent, we intercept it and route it through our system to all the recipients, which are available at a certain time.",
                "Communication via a group account is also stored centrally, enabling people to query missed messages or simply viewing the message history. 4.4.4 Asynchronous Communication for Groups Asynchronous communication in groups is not a new idea.",
                "The goal of this approach is not to reinvent the wheel, as email is maybe the most widely used form of asynchronous communication on computers and is broadly accepted and standardized.",
                "In out work, we aim at the combination of asynchronous communication with location awareness.",
                "For this reason, we introduce the concept of so-called virtual postits (cp. [13]), which are messages that are bound to physical locations.",
                "These virtual post-its could be either visible for all users that are passing by or they can be restricted to be visible for certain groups of people only.",
                "Moreover, a virtual post-it can also have an expiry date after which it is dropped and not displayed anymore.",
                "Virtual post-its can also be commented by others, thus providing some from of forum-like interaction, where each post-it forms a thread.",
                "Virtual post-its are displayed automatically, whenever a user (available) passes by the first time.",
                "Afterwards, post-its can be accessed via the 2D-viewer, where all visible post-its are shown.",
                "All readers of a post-it are logged and displayed when viewing it, providing some sort of awareness about the group members activities in the past. 4.4.5 Context-aware Availability Management Instant messengers in general provide some kind of availability information about a user.",
                "Although this information can be only defined in a very coarse granularity, we have decided to use these means of gathering activity context, because the introduction of an additional one would strongly decrease the usability of the system.",
                "To support the user managing his availability, we provide an interface that lets the user define rules to adapt his availability to the current context.",
                "These rules follow the form on event (E) if condition (C) then action (A), which is directly supported by the ECA-rules of the Context Framework described in chapter 1.3.",
                "The testing of conditions is periodically triggered by throwing events (whenever the context of a user changes).",
                "The condition itself is defined by the user, who can demand the change of his availability status as the action in the rule.",
                "As a condition, the user can define his location, a certain time (also triggering daily, every week or every month) or any logical combination of these criteria. 4.4.6 Context-Aware Reminders Reminders [14] are used to give the user the opportunity of defining tasks and being reminded of those, when certain criteria are fulfilled.",
                "Thus, a reminder can be seen as a post-it to oneself, which is only visible in certain cases.",
                "Reminders can be bound to a certain place or time, but also to spatial proximity of users or groups.",
                "These criteria can be combined with Boolean operators, thus providing a powerful means to remind the user of tasks that he wants to carry out when a certain context occurs.",
                "A reminder will only pop up the first time the actual context meets the defined criterion.",
                "On showing up the reminder, the user has the chance to resubmit it to be reminded again, for example five minutes later or the next time a certain user is in spatial proximity. 96 4.4.7 Context-Aware Recognition and Notification of Group Meetings With the available context information, we try to recognize meetings of a group.",
                "The determination of the criteria, when the system recognizes a group having a meeting, is part of the ongoing work.",
                "In a first approach, we use the location- and activity-context of the group members to determine a meeting.",
                "Whenever more than 50 % of the members of a group are available at a location, where a meeting is considered to make sense (e.g. not on a corridor), a meeting minutes post-it is created at this location and all absent group members are notified of the meeting and the location it takes place.",
                "During the meeting, the comment-feature of virtual post-its provides a means to take notes for all of the participants.",
                "When members are joining or leaving the meeting, this is automatically added as a note to the list of comments.",
                "Like the recognition of the beginning of a meeting, the recognition of its end is still part of ongoing work.",
                "If the end of the meeting is recognized, all group members get the complete list of comments as a meeting protocol at the end of the meeting. 5.",
                "CONCLUSIONS This paper discussed the potentials of support for group interaction by using context information.",
                "First, we introduced the notions of context and context computing and motivated their value for supporting group interaction.",
                "An architecture is presented to support context-aware group interaction in mobile, distributed environments.",
                "It is built upon a flexible and extensible framework, thus enabling an easy adoption to available context sources (e.g. by adding additional sensors) as well as the required form of representation.",
                "We have prototypically developed a set of services, which enhance group interaction by taking into account the current context of the users as well as the context of groups itself.",
                "Important features are dynamic formation of groups, visualization of location on a two-dimensional map as well as unobtrusively integrated in an instant-messenger, asynchronous communication by virtual post-its, which are bound to certain locations, and a context-aware availability-management, which adapts the availability-status of a user to his current situation.",
                "To provide location information, we have implemented a subsystem for automated acquisition of location- and proximityinformation provided by various sensors, which provides a technology-independent presentation of locations and spatial proximities between users and merges this information using sensor-independent fusion algorithms.",
                "A history of locations as well as of spatial proximities is stored in a database, thus enabling context history-based services. 6.",
                "REFERENCES [1] Beer, W., Christian, V., Ferscha, A., Mehrmann, L. Modeling Context-aware Behavior by Interpreted ECA Rules.",
                "In Proceedings of the International Conference on Parallel and Distributed Computing (EUROPAR03). (Klagenfurt, Austria, August 26-29, 2003).",
                "Springer Verlag, LNCS 2790, 1064-1073. [2] Brown, P.J., Bovey, J.D., Chen X. Context-Aware Applications: From the Laboratory to the Marketplace.",
                "IEEE Personal Communications, 4(5) (1997), 58-64. [3] Chen, H., Kotz, D. A Survey of Context-Aware Mobile Computing Research.",
                "Technical Report TR2000-381, Computer Science Department, Dartmouth College, Hanover, New Hampshire, November 2000. [4] Dey, A.",
                "Providing Architectural Support for Building Context-Aware Applications.",
                "Ph.D. Thesis, Department of Computer Science, Georgia Institute of Technology, Atlanta, November 2000. [5] Svetlana Domnitcheva.",
                "Location Modeling: State of the Art and Challenges.",
                "In Proceedings of the Workshop on Location Modeling for Ubiquitous Computing. (Atlanta, Georgia, United States, September 30, 2001). 13-19. [6] Ferscha, A. Workspace Awareness in Mobile Virtual Teams.",
                "In Proceedings of the IEEE 9th International Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE00). (Gaithersburg, Maryland, March 14-16, 2000).",
                "IEEE Computer Society Press, 272-277. [7] Ferscha, A.",
                "Coordination in Pervasive Computing Environments.",
                "In Proceedings of the Twelfth International IEEE Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE-2003). (June 9-11, 2003).",
                "IEEE Computer Society Press, 3-9. [8] Leonhard, U.",
                "Supporting Location Awareness in Open Distributed Systems.",
                "Ph.D. Thesis, Department of Computing, Imperial College, London, May 1998. [9] Ryan, N., Pascoe, J., Morse, D. Enhanced Reality Fieldwork: the Context-Aware Archaeological Assistant.",
                "Gaffney, V., Van Leusen, M., Exxon, S. (eds.)",
                "Computer Applications in Archaeology (1997) [10] Schilit, B.N., Theimer, M. Disseminating Active Map Information to Mobile Hosts.",
                "IEEE Network, 8(5) (1994), 22-32. [11] Schilit, B.N.",
                "A System Architecture for Context-Aware Mobile Computing.",
                "Ph.D. Thesis, Columbia University, Department of Computer Science, May 1995. [12] Wang, B., Bodily, J., Gupta, S.K.S.",
                "Supporting Persistent Social Groups in Ubiquitous Computing Environments Using Context-Aware Ephemeral Group Service.",
                "In Proceedings of the Second IEEE International Conference on Pervasive Computing and Communications (PerCom04). (March 14-17, 2004).",
                "IEEE Computer Society Press, 287-296. [13] Pascoe, J.",
                "The Stick-e Note Architecture: Extending the Interface Beyond the User.",
                "Proceedings of the 2nd International Conference of Intelligent User Interfaces (IUI97). (Orlando, USA, 1997), 261-264. [14] Dey, A., Abowd, G. CybreMinder: A Context-Aware System for Supporting Re-minders.",
                "Proceedings of the 2nd International Symposium on Handheld and Ubiquitous Computing (HUC00). (Bristol, UK, 2000), 172-186. 97"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        }
    }
}