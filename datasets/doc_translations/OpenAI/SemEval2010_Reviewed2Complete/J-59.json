{
    "id": "J-59",
    "original_text": "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time. Jobs have processing times and incur waiting costs (linear in their waiting time). The jobs share their costs through compensation using monetary transfers. We characterize the Shapley value rule for this model using fairness axioms. Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job. Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1. INTRODUCTION A set of jobs need to be served by a server. The server can process only one job at a time. Each job has a finite processing time and a per unit time waiting cost. Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time. To compensate for waiting by jobs, monetary transfers to jobs are allowed. How should the jobs share the cost equitably amongst themselves (through transfers)? The problem of fair division of costs among agents in a queue has many practical applications. For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks). Study of queueing problems has attracted economists for a long time [7, 17]. Cost sharing is a fundamental problem in many settings on the Internet. Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner. The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24]. Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.). We hope that our analysis will give new insights on cost sharing problems of this nature. Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24]. While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular. Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model. A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 . Maniquet [15] studies a model where he assumes all processing times are unity. For such a model, he characterizes the Shapley value rule using classical fairness axioms. Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule. Chun characterizes this rule using similar fairness axioms. Chun [2] also studies the envy properties of these rules. Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity. Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them. Another stream of literature is on sequencing games, first introduced by Curiel et al. [4]. For a detailed survey, refer to Curiel et al. [3]. Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given. Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too). The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order. In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]). Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs. They take two approaches to define the worth of coalitions. One of their approaches, called the tail game, is related to the reverse rule of Chun [1]. In the tail game, jobs in a coalition are served after the jobs not in the coalition are served. Klijn and S´anchez [14] showed that the tail game is balanced. Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors. We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1]. Klijn and S´anchez [13] study the core of this game in detail. Strategic aspects of queueing problems have also been researched. Mitra [19] studies the first best implementation in queueing models with generic cost functions. First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero. Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible. Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear. For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property. Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs. The general cost sharing literature is vast and has a long history. For a good survey, we refer to [20]. From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present. We take a cooperative game theory approach and apply the classical Shapley value rule to the problem. We show that the Shapley value rule satisfies many intuitive fairness axioms. Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting. We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time. A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering). If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue). If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering. Depending on the ordering selected, one job inflicts cost on the other. Our fairness axiom says that each job should at least bear such expected costs. We characterize the Shapley value rule using these fairness axioms. We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2. THE MODEL There are n jobs that need to be served by one server which can process only one job at a time. The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ. Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}. Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i. Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists. We will denote γi = θi pi . Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj. The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost. C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢. An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs. So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ. To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing. Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S). The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering. This is also known as the weighted shortest processing time rule, first introduced by Smith [26]. Lemma 1. For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj. Proof. Assume for contradiction that the statment of the lemma is not true. This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj. Define a new ordering σ by interchanging i and j in σ∗ . The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ. The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. From efficiency we get θjpi − θipj ≥ 0. This gives us γj ≥ γi, which is a contradiction. An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i. Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0. The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set. The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers. Lemma 2. Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation. If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation. Proof. Since (σ, t) is efficient, £i∈N ti = 0. This gives £i∈N πi = C(N). Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N). This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. So, (σ∗ , t∗ ) is an efficient allocation. Depending on the transfers, the cost shares in different efficient allocations may differ. An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3. COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value. Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering. Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only. The worth of a coalition of S jobs is just −C(S). Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·). Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served. The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|!(|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1. Lemma 3. Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj. Proof. Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T). This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). We will show by induction that ∆(S) = 0 if |S| > 2. For |S| = 3, let S = {i, j, k}. Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk . So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Now, assume for T S, ∆(T) = 0 if |T| > 2. Without loss of generality assume that σ to be the identity mapping. Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. This proves that ∆(S) = 0 if |S| > 2. Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them. For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ. Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence. Efficiency Axioms We define two types of efficiency axioms. One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance). Definition 1. An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs. Definition 2. An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same. Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them? Equity axioms provide us with fairness properties which help us answer this question. We provide five such axioms. Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new. We start with a well known equity axiom called anonymity. Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ. Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ. Our first equity axiom states that allocation rules should be immune to such permutation of data. Definition 3. An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)). The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal. This implies that if all the jobs are of same type, then jobs should equally share the total system cost. Definition 4. An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time. But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj . We introduce a new axiom for this. If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i. Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways). If i, j ∈ S(γ) then we have pjθi = piθj. Probability of σi < σj is 1 2 and so is the probability of σi > σj. The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi. Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other. Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ). We impose this as an equity axiom below. Definition 5. An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. The central idea behind this axiom is that of expected cost inflicted. If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations. In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated. Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others. Note that the above bound poses no constraints on how the costs are shared among different groups. Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost. A direct consequence of ECB is the following lemma. Lemma 4. Let ψ be an efficient rule which satisfies ECB. For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof. From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢. Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). This gives us a contradiction. Next, we introduce an axiom about sharing the transfer of a job between a set of jobs. In particular, if the last job quits the system, then the ordering need not change. But the transfer to the last job needs to be shared between the other jobs. This should be done in proportion to their processing times because every job influenced the last job based on its processing time. Definition 6. An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj . An analogous fairness axiom results if we remove the job from the beginning of the queue. Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values. Definition 7. An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj . The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs. Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs. These independence properties should be carried over to the cost sharing rules. This gives us two independence axioms. Definition 8. An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). Definition 9. An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms. All our characterizations involve efficiency and ECB. But if we have IPJθ, we either need IFJp or PRp. Similarly if we have IFJp, we either need IPJθ or PRθ. Proposition 1. Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule. Proof. Define for any i, j ∈ N, θi j = γipj and pi j = θj γi . Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i. Observe that all jobs have the same γ: γi. By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t . Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢. Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi. Applying IPJθ, the cost share of job i should not change. Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi. Applying IFJp, the cost share of job i should not change. Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi. Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule. It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job. This is shown in Propositions 2 and 3. Proposition 2. Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule. Proof. As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q . By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1. In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi. So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Now, we can set K = K ∪ {i + 2}. As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢. Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change. This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value. Proposition 3. Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule. Proof. The proof mirrors the proof of Proposition 2. We provide a short sketch. Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j . This allows us to use IFJp. Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering. So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule. The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed. Proposition 4. The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ. Proof. The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero. So, it satisfies efficiency. The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen. So, it is pareto indifferent. The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share. For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj. Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j). The Shapley value satisfies ECB by its expression in Lemma 3. Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering. If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged. If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged. Thus, the Shapley value rule satisfies IPJθ. An analogous argument shows that the Shapley value rule satisfies IFJp. For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering. Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively. Transfer of last job is tn = 1 2 θn £j<n pj. Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj . A similar argument shows that the Shapley value rule satisfies PRθ. These series of propositions lead us to our main result. Theorem 1. Let ψ be an allocation rule. The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ. Proof. The proof follows from Propositions 1, 2, 3, and 4. 5. DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms. We will show how these reasonable mechanisms lead to the Shapley value mechanism. Definition 10. An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1. The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs. If α = 0, then every job bears its own cost. If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others. The Shapley value rule comes as a result of ETE as shown in the following proposition. Proposition 5. Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule. Proof. Consider a q ∈ Q in which pi = pj and θi = θj. Let (σ, t) ∈ ψ(q) and π be the resulting cost shares. From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 . This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity. Definition 11. An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j. From the result in [2], the Shapley value rule does not satisfy no-envy in our model also. To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity. Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity). As before denote σij be an ordering where the position of i and j is swapped from an ordering σ. For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij . Observe that an allocation may not allow for calculation of tij . For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient. For simplicity, we state the definition of adjusted no-envy to apply to all such rules. Definition 12. An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i . Proposition 6. The Shapley value rule satisfies adjusted no-envy. Proof. Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6. CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs. We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties. We characterized the Shapley value rule using different intuitive fairness axioms. In future, we plan to further simplify some of the fairness axioms. Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server). We also plan to look at cost sharing mechanisms other than the Shapley value. Investigating the strategic power of jobs in such mechanisms is another line of future research. 7. REFERENCES [1] Youngsub Chun. A Note on Maniquets Characterization of the Shapley Value in Queueing Problems. Working Paper, Rochester University, 2004. [2] Youngsub Chun. No-envy in Queuing Problems. Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn. Sequencing Games: A Survey. In Peter Borm and Hans Peters, editors, Chapter in Game Theory. Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs. Sequencing Games. European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman. Sequencing and Cooperation. Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani. Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games. In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan. Incentive Mechanisms for Priority Queueing Problems. Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker. Sharing the Cost of Multicast Transmissions. In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm. The Split Core for Sequencing Games. Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi. Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games. Princeton University Press, 1959. Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani. Applications of Approximate Algorithms to Cooperative Games. In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani. Equitable Cost Allocations via Primal-Dual Type Algorithms. In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez. Sequencing Games without a Completely Specified Initial Order. Report in Statistics and Operations Research, pages 1-17, 2002. Report 02-04. [14] Flip Klijn and Estela S´anchez. Sequencing Games without Initial Order. Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet. A Characterization of the Shapley Value in Queueing Problems. Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan. Cost sharing in a job scheduling problem. Working Paper, CORE, 2005. [17] Manipushpak Mitra. Essays on First Best Implementable Incentive Problems. Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra. Mechanism design in queueing problems. Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra. Achieving the first best in sequencing problems. Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin. Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing. North-Holland, 2002. Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin. On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs. Working Paper, Rice University, 2004. [22] Herv´e Moulin. Split-proof Probabilistic Scheduling. Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra. Characterization of Additive Cost Sharing Methods. Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos. Group Strategyproof Mechanisms via Primal-Dual Algorithms. In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley. Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317. Annals of Mathematics Studies, 1953. Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Various Optimizers for Single-Stage Production. Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs. On incentive compatibility and budget balancedness in public decision making. Economic Design, 2, 2002. 239",
    "original_translation": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de programación de trabajos. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239",
    "original_sentences": [
        "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
        "Jobs have processing times and incur waiting costs (linear in their waiting time).",
        "The jobs share their costs through compensation using monetary transfers.",
        "We characterize the Shapley value rule for this model using fairness axioms.",
        "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
        "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
        "INTRODUCTION A set of jobs need to be served by a server.",
        "The server can process only one job at a time.",
        "Each job has a finite processing time and a per unit time waiting cost.",
        "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
        "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
        "How should the jobs share the cost equitably amongst themselves (through transfers)?",
        "The problem of fair division of costs among agents in a queue has many practical applications.",
        "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
        "Study of queueing problems has attracted economists for a long time [7, 17].",
        "Cost sharing is a fundamental problem in many settings on the Internet.",
        "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
        "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
        "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
        "We hope that our analysis will give new insights on cost sharing problems of this nature.",
        "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
        "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
        "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
        "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
        "Maniquet [15] studies a model where he assumes all processing times are unity.",
        "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
        "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
        "Chun characterizes this rule using similar fairness axioms.",
        "Chun [2] also studies the envy properties of these rules.",
        "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
        "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
        "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
        "For a detailed survey, refer to Curiel et al. [3].",
        "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
        "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
        "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
        "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
        "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
        "They take two approaches to define the worth of coalitions.",
        "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
        "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
        "Klijn and S´anchez [14] showed that the tail game is balanced.",
        "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
        "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
        "Klijn and S´anchez [13] study the core of this game in detail.",
        "Strategic aspects of queueing problems have also been researched.",
        "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
        "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
        "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
        "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
        "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
        "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
        "The general cost sharing literature is vast and has a long history.",
        "For a good survey, we refer to [20].",
        "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
        "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
        "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
        "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
        "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
        "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
        "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
        "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
        "Depending on the ordering selected, one job inflicts cost on the other.",
        "Our fairness axiom says that each job should at least bear such expected costs.",
        "We characterize the Shapley value rule using these fairness axioms.",
        "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
        "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
        "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
        "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
        "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
        "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
        "We will denote γi = θi pi .",
        "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
        "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
        "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
        "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
        "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
        "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
        "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
        "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
        "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
        "Lemma 1.",
        "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
        "Proof.",
        "Assume for contradiction that the statment of the lemma is not true.",
        "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
        "Define a new ordering σ by interchanging i and j in σ∗ .",
        "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
        "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
        "From efficiency we get θjpi − θipj ≥ 0.",
        "This gives us γj ≥ γi, which is a contradiction.",
        "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
        "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
        "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
        "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
        "Lemma 2.",
        "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
        "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
        "Proof.",
        "Since (σ, t) is efficient, £i∈N ti = 0.",
        "This gives £i∈N πi = C(N).",
        "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
        "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
        "So, (σ∗ , t∗ ) is an efficient allocation.",
        "Depending on the transfers, the cost shares in different efficient allocations may differ.",
        "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
        "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
        "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
        "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
        "The worth of a coalition of S jobs is just −C(S).",
        "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
        "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
        "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
        "Lemma 3.",
        "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
        "Proof.",
        "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
        "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
        "We will show by induction that ∆(S) = 0 if |S| > 2.",
        "For |S| = 3, let S = {i, j, k}.",
        "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
        "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
        "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
        "Without loss of generality assume that σ to be the identity mapping.",
        "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
        "This proves that ∆(S) = 0 if |S| > 2.",
        "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
        "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
        "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
        "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
        "Efficiency Axioms We define two types of efficiency axioms.",
        "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
        "Definition 1.",
        "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
        "Definition 2.",
        "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
        "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
        "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
        "Equity axioms provide us with fairness properties which help us answer this question.",
        "We provide five such axioms.",
        "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
        "We start with a well known equity axiom called anonymity.",
        "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
        "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
        "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
        "Definition 3.",
        "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
        "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
        "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
        "Definition 4.",
        "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
        "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
        "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
        "We introduce a new axiom for this.",
        "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
        "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
        "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
        "If i, j ∈ S(γ) then we have pjθi = piθj.",
        "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
        "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
        "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
        "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
        "We impose this as an equity axiom below.",
        "Definition 5.",
        "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
        "The central idea behind this axiom is that of expected cost inflicted.",
        "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
        "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
        "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
        "Note that the above bound poses no constraints on how the costs are shared among different groups.",
        "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
        "A direct consequence of ECB is the following lemma.",
        "Lemma 4.",
        "Let ψ be an efficient rule which satisfies ECB.",
        "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
        "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
        "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
        "This gives us a contradiction.",
        "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
        "In particular, if the last job quits the system, then the ordering need not change.",
        "But the transfer to the last job needs to be shared between the other jobs.",
        "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
        "Definition 6.",
        "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
        "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
        "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
        "Definition 7.",
        "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
        "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
        "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
        "These independence properties should be carried over to the cost sharing rules.",
        "This gives us two independence axioms.",
        "Definition 8.",
        "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
        "Definition 9.",
        "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
        "All our characterizations involve efficiency and ECB.",
        "But if we have IPJθ, we either need IFJp or PRp.",
        "Similarly if we have IFJp, we either need IPJθ or PRθ.",
        "Proposition 1.",
        "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
        "Proof.",
        "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
        "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
        "Observe that all jobs have the same γ: γi.",
        "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
        "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
        "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
        "Applying IPJθ, the cost share of job i should not change.",
        "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
        "Applying IFJp, the cost share of job i should not change.",
        "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
        "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
        "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
        "This is shown in Propositions 2 and 3.",
        "Proposition 2.",
        "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
        "Proof.",
        "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
        "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
        "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
        "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
        "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
        "Now, we can set K = K ∪ {i + 2}.",
        "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
        "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
        "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
        "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
        "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
        "Proposition 3.",
        "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
        "Proof.",
        "The proof mirrors the proof of Proposition 2.",
        "We provide a short sketch.",
        "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
        "This allows us to use IFJp.",
        "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
        "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
        "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
        "Proposition 4.",
        "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
        "Proof.",
        "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
        "So, it satisfies efficiency.",
        "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
        "So, it is pareto indifferent.",
        "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
        "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
        "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
        "The Shapley value satisfies ECB by its expression in Lemma 3.",
        "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
        "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
        "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
        "Thus, the Shapley value rule satisfies IPJθ.",
        "An analogous argument shows that the Shapley value rule satisfies IFJp.",
        "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
        "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
        "Transfer of last job is tn = 1 2 θn £j<n pj.",
        "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
        "A similar argument shows that the Shapley value rule satisfies PRθ.",
        "These series of propositions lead us to our main result.",
        "Theorem 1.",
        "Let ψ be an allocation rule.",
        "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
        "Proof.",
        "The proof follows from Propositions 1, 2, 3, and 4. 5.",
        "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
        "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
        "Definition 10.",
        "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
        "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
        "If α = 0, then every job bears its own cost.",
        "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
        "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
        "Proposition 5.",
        "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
        "Proof.",
        "Consider a q ∈ Q in which pi = pj and θi = θj.",
        "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
        "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
        "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
        "Definition 11.",
        "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
        "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
        "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
        "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
        "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
        "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
        "Observe that an allocation may not allow for calculation of tij .",
        "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
        "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
        "Definition 12.",
        "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
        "Proposition 6.",
        "The Shapley value rule satisfies adjusted no-envy.",
        "Proof.",
        "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
        "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
        "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
        "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
        "We characterized the Shapley value rule using different intuitive fairness axioms.",
        "In future, we plan to further simplify some of the fairness axioms.",
        "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
        "We also plan to look at cost sharing mechanisms other than the Shapley value.",
        "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
        "REFERENCES [1] Youngsub Chun.",
        "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
        "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
        "No-envy in Queuing Problems.",
        "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
        "Sequencing Games: A Survey.",
        "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
        "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
        "Sequencing Games.",
        "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
        "Sequencing and Cooperation.",
        "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
        "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
        "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
        "Incentive Mechanisms for Priority Queueing Problems.",
        "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
        "Sharing the Cost of Multicast Transmissions.",
        "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
        "The Split Core for Sequencing Games.",
        "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
        "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
        "Princeton University Press, 1959.",
        "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
        "Applications of Approximate Algorithms to Cooperative Games.",
        "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
        "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
        "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
        "Sequencing Games without a Completely Specified Initial Order.",
        "Report in Statistics and Operations Research, pages 1-17, 2002.",
        "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
        "Sequencing Games without Initial Order.",
        "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
        "A Characterization of the Shapley Value in Queueing Problems.",
        "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
        "Cost sharing in a job scheduling problem.",
        "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
        "Essays on First Best Implementable Incentive Problems.",
        "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
        "Mechanism design in queueing problems.",
        "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
        "Achieving the first best in sequencing problems.",
        "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
        "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
        "North-Holland, 2002.",
        "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
        "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
        "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
        "Split-proof Probabilistic Scheduling.",
        "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
        "Characterization of Additive Cost Sharing Methods.",
        "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
        "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
        "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
        "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
        "Annals of Mathematics Studies, 1953.",
        "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
        "Various Optimizers for Single-Stage Production.",
        "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
        "On incentive compatibility and budget balancedness in public decision making.",
        "Economic Design, 2, 2002. 239"
    ],
    "translated_text_sentences": [
        "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley.",
        "Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera).",
        "Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias.",
        "Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad.",
        "Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo.",
        "Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1.",
        "INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor.",
        "El servidor solo puede procesar un trabajo a la vez.",
        "Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo.",
        "La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento.",
        "Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos.",
        "¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)?",
        "El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas.",
        "Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos).",
        "El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17].",
        "El reparto de costos es un problema fundamental en muchos entornos en Internet.",
        "Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa.",
        "El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24].",
        "Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.).",
        "Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza.",
        "Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24].",
        "Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular.",
        "Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo.",
        "Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1.",
        "Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios.",
        "Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad.",
        "Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa.",
        "Chun caracteriza esta regla utilizando axiomas de equidad similares.",
        "Chun [2] también estudia las propiedades de envidia de estas reglas.",
        "Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios.",
        "Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos.",
        "Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4].",
        "Para una encuesta detallada, consulte a Curiel et al. [3].",
        "Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos.",
        "Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también).",
        "La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial.",
        "En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]).",
        "Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos.",
        "Ellos toman dos enfoques para definir el valor de las coaliciones.",
        "Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1].",
        "En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición.",
        "Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado.",
        "Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos.",
        "Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1].",
        "Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego.",
        "Los aspectos estratégicos de los problemas de colas también han sido investigados.",
        "Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas.",
        "La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero.",
        "Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible.",
        "Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal.",
        "Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia.",
        "Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad.",
        "La literatura sobre el reparto de costos en general es extensa y tiene una larga historia.",
        "Para una buena encuesta, nos referimos a [20].",
        "Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes.",
        "Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema.",
        "Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad.",
        "Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto.",
        "Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes.",
        "Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente).",
        "Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola).",
        "Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente.",
        "Dependiendo del orden seleccionado, un trabajo impone costos al otro.",
        "Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados.",
        "Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad.",
        "También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2.",
        "EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez.",
        "El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ.",
        "Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}.",
        "Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i.",
        "Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles.",
        "Denotaremos γi = θi pi.",
        "Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj.",
        "El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento.",
        "C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.",
        "Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos.",
        "Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ.",
        "Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso.",
        "A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S).",
        "El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente.",
        "Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26].",
        "Lema 1.",
        "Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj.",
        "Prueba.",
        "Supongamos para contradicción que la afirmación del lema no es verdadera.",
        "Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj.",
        "Define un nuevo orden σ intercambiando i y j en σ∗.",
        "Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ.",
        "La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
        "De la eficiencia obtenemos θjpi − θipj ≥ 0.",
        "Esto nos da γj ≥ γi, lo cual es una contradicción.",
        "Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i.",
        "Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0.",
        "El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto.",
        "El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias.",
        "Lema 2.",
        "Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación.",
        "Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente.",
        "Prueba.",
        "Dado que (σ, t) es eficiente, £i∈N ti = 0.",
        "Esto da £i∈N πi = C(N).",
        "Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N).",
        "Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
        "Entonces, (σ∗ , t∗ ) es una asignación eficiente.",
        "Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir.",
        "Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones.",
        "COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley.",
        "Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente.",
        "Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S.",
        "El valor de una coalición de S trabajos es simplemente −C(S).",
        "Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·).",
        "Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos.",
        "El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1.",
        "Lema 3.",
        "Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj.",
        "Prueba.",
        "Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T).",
        "Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
        "Demostraremos por inducción que ∆(S) = 0 si |S| > 2.",
        "Para |S| = 3, sea S = {i, j, k}.",
        "Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk.",
        "Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
        "Ahora, asume para T S, ∆(T) = 0 si |T| > 2.",
        "Sin pérdida de generalidad, asumir que σ es la función identidad.",
        "Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
        "Esto demuestra que ∆(S) = 0 si |S| > 2.",
        "Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
        "CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos.",
        "Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ.",
        "Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia.",
        "Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia.",
        "Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario).",
        "Definición 1.",
        "Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos.",
        "Definición 2.",
        "Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
        "Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo.",
        "Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos?",
        "Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta.",
        "Proporcionamos cinco axiomas de este tipo.",
        "Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos.",
        "Comenzamos con un axioma de equidad bien conocido llamado anonimato.",
        "Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ.",
        "De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ.",
        "Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos.",
        "Definición 3.",
        "Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)).",
        "El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales.",
        "Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema.",
        "Definición 4.",
        "Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
        "ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento.",
        "Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj.",
        "Introducimos un nuevo axioma para esto.",
        "Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i.",
        "Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
        "En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas).",
        "Si i, j ∈ S(γ) entonces tenemos pjθi = piθj.",
        "La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj.",
        "El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi.",
        "Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro.",
        "Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ).",
        "Imponemos esto como un axioma de equidad a continuación.",
        "Definición 5.",
        "Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
        "La idea central detrás de este axioma es la del costo esperado infligido.",
        "Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones.",
        "En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación.",
        "Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás.",
        "Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos.",
        "También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento.",
        "Una consecuencia directa del ECB es el siguiente lema.",
        "Lema 4.",
        "Sea ψ una regla eficiente que cumple con ECB.",
        "Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba.",
        "Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢.",
        "Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
        "Esto nos da una contradicción.",
        "A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos.",
        "En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar.",
        "Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos.",
        "Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento.",
        "Definición 6.",
        "Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj.",
        "Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola.",
        "Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ.",
        "Definición 7.",
        "Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj.",
        "Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores.",
        "Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes.",
        "Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos.",
        "Esto nos da dos axiomas de independencia.",
        "Definición 8.",
        "Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t).",
        "Definición 9.",
        "Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas.",
        "Todas nuestras caracterizaciones implican eficiencia y ECB.",
        "Pero si tenemos IPJθ, necesitamos IFJp o PRp.",
        "De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ.",
        "Proposición 1.",
        "Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley.",
        "Prueba.",
        "Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi.",
        "Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i.",
        "Observa que todos los trabajos tienen el mismo γ: γi.",
        "Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t.",
        "Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri).",
        "Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi.",
        "Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar.",
        "De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi.",
        "Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar.",
        "Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi.",
        "Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley.",
        "Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo.",
        "Esto se muestra en las Proposiciones 2 y 3.",
        "Proposición 2.",
        "Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley.",
        "Prueba.",
        "Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q.",
        "Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
        "Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1.",
        "En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi.",
        "Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
        "Ahora, podemos establecer K = K ∪ {i + 2}.",
        "Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
        "Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
        "Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢.",
        "Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán.",
        "Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley.",
        "Proposición 3.",
        "Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley.",
        "Prueba.",
        "La prueba refleja la prueba de la Proposición 2.",
        "Proporcionamos un breve bosquejo.",
        "Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j.",
        "Esto nos permite usar IFJp.",
        "Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente.",
        "Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley.",
        "La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos.",
        "Proposición 4.",
        "La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ.",
        "Prueba.",
        "La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero.",
        "Entonces, satisface eficiencia.",
        "El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido.",
        "Entonces, es indiferente en términos de Pareto.",
        "El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos.",
        "Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj.",
        "Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j).",
        "El valor de Shapley satisface ECB por su expresión en el Lema 3.",
        "Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente.",
        "Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia.",
        "Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios.",
        "Por lo tanto, la regla del valor de Shapley satisface IPJθ.",
        "Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp.",
        "Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente.",
        "Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente.",
        "La transferencia del último trabajo es tn = 1 2 θn £j<n pj.",
        "Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj.",
        "Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ.",
        "Estas series de proposiciones nos llevan a nuestro resultado principal.",
        "Teorema 1.",
        "Sea ψ una regla de asignación.",
        "Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ.",
        "Prueba.",
        "La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5.",
        "DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos.",
        "Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley.",
        "Definición 10.",
        "Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1.",
        "El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos.",
        "Si α = 0, entonces cada trabajo tiene su propio costo.",
        "Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos.",
        "La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición.",
        "Proposición 5.",
        "Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley.",
        "Prueba.",
        "Considera un q ∈ Q en el que pi = pj y θi = θj.",
        "Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes.",
        "De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2.",
        "Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios.",
        "Definición 11.",
        "Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j.",
        "A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo.",
        "Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios.",
        "Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios).",
        "Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ.",
        "Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij.",
        "Observe que una asignación puede no permitir el cálculo de tij.",
        "Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente.",
        "Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo.",
        "Definición 12.",
        "Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij.",
        "Proposición 6.",
        "La regla del valor de Shapley satisface la no envidia ajustada.",
        "Prueba.",
        "Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
        "Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6.",
        "CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios.",
        "Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad.",
        "Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad.",
        "En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad.",
        "Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central).",
        "También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley.",
        "Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7.",
        "REFERENCIAS [1] Youngsub Chun.",
        "Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas.",
        "Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun.",
        "Ausencia de envidia en problemas de colas.",
        "Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn.",
        "Juegos de secuenciación: Una encuesta.",
        "En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos.",
        "Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs.",
        "Juegos de secuenciación.",
        "Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman.",
        "Secuenciación y Cooperación.",
        "Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani.",
        "Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones.",
        "En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan.",
        "Mecanismos de incentivos para problemas de colas prioritarias.",
        "Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker.",
        "Compartiendo el costo de las transmisiones multicast.",
        "En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm.",
        "El núcleo dividido para juegos de secuenciación.",
        "Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi.",
        "Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas.",
        "Prensa de la Universidad de Princeton, 1959.",
        "Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani.",
        "Aplicaciones de algoritmos aproximados a juegos cooperativos.",
        "En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani.",
        "Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual.",
        "En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez.",
        "Juegos de secuenciación sin un orden inicial completamente especificado.",
        "Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002.",
        "Informe 02-04. [14] Flip Klijn y Estela Sánchez.",
        "Juegos de secuenciación sin orden inicial.",
        "Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet.",
        "Una caracterización del valor de Shapley en problemas de colas.",
        "Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan.",
        "Compartir costos en un problema de programación de trabajos.",
        "Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra.",
        "Ensayos sobre problemas de incentivos implementables de primera mejor solución.",
        "Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra.",
        "Diseño de mecanismos en problemas de colas.",
        "Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
        "Logrando lo mejor en problemas de secuenciación.",
        "Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin.",
        "Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes.",
        "Holanda del Norte, 2002.",
        "Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin.",
        "En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238.",
        "Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin.",
        "Programación probabilística a prueba de divisiones.",
        "Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra.",
        "Caracterización de Métodos de Compartición de Costos Aditivos.",
        "Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos.",
        "Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual.",
        "En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley.",
        "Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317.",
        "Anales de Estudios Matemáticos, 1953.",
        "Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
        "Varios optimizadores para producción de una sola etapa.",
        "Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs.",
        "Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas.",
        "Diseño Económico, 2, 2002. 239"
    ],
    "error_count": 2,
    "keys": {
        "cost sharing": {
            "translated_key": "reparto de costos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "<br>cost sharing</br> in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "<br>cost sharing</br> is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in <br>cost sharing</br> literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on <br>cost sharing</br> problems of this nature.",
                "Recently, there has been increased interest in <br>cost sharing</br> methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general <br>cost sharing</br> literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on <br>cost sharing</br> in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers <br>cost sharing</br> when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable <br>cost sharing</br> mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "<br>cost sharing</br> USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the <br>cost sharing</br> rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of <br>cost sharing</br> Mechanisms In this section, we will define a reasonable class of <br>cost sharing</br> mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable <br>cost sharing</br> mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at <br>cost sharing</br> mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "<br>cost sharing</br> in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive <br>cost sharing</br> Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "<br>cost sharing</br> in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "<br>cost sharing</br> is a fundamental problem in many settings on the Internet.",
                "The current surge in <br>cost sharing</br> literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "We hope that our analysis will give new insights on <br>cost sharing</br> problems of this nature.",
                "Recently, there has been increased interest in <br>cost sharing</br> methods with submodular cost functions [11, 12, 6, 24]."
            ],
            "translated_annotated_samples": [
                "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley.",
                "El <br>reparto de costos</br> es un problema fundamental en muchos entornos en Internet.",
                "El actual aumento en la literatura sobre el <br>intercambio de costos</br> por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24].",
                "Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de <br>reparto de costos</br> de esta naturaleza.",
                "Recientemente, ha habido un aumento en el interés en los métodos de <br>reparto de costos</br> con funciones de costo submodulares [11, 12, 6, 24]."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El <br>reparto de costos</br> es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el <br>intercambio de costos</br> por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de <br>reparto de costos</br> de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de <br>reparto de costos</br> con funciones de costo submodulares [11, 12, 6, 24]. ",
            "candidates": [],
            "error": [
                [
                    "reparto de costos",
                    "intercambio de costos",
                    "reparto de costos",
                    "reparto de costos"
                ]
            ]
        },
        "job scheduling": {
            "translated_key": "programación de trabajos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a <br>job scheduling</br> Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of <br>job scheduling</br> appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a <br>job scheduling</br> problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a <br>job scheduling</br> problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "Cost Sharing in a <br>job scheduling</br> Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Internet has many settings in which our model of <br>job scheduling</br> appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "CONCLUSION We studied the problem of sharing costs for a <br>job scheduling</br> problem on a single server, when jobs have processing times and unit time waiting costs.",
                "Cost sharing in a <br>job scheduling</br> problem."
            ],
            "translated_annotated_samples": [
                "Compartir costos en un problema de <br>programación de trabajos</br> utilizando el Valor de Shapley.",
                "Internet tiene muchos entornos en los que aparece nuestro modelo de <br>programación de trabajos</br> y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.).",
                "CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de <br>programación de trabajos</br> en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios.",
                "Compartir costos en un problema de <br>programación de trabajos</br>."
            ],
            "translated_text": "Compartir costos en un problema de <br>programación de trabajos</br> utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de <br>programación de trabajos</br> y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de <br>programación de trabajos</br> en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de <br>programación de trabajos</br>. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "shapley value": {
            "translated_key": "Valor de Shapley",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the <br>shapley value</br> Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the <br>shapley value</br> rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the <br>shapley value</br> rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the <br>shapley value</br> in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the <br>shapley value</br> in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical <br>shapley value</br> rule to the problem.",
                "We show that the <br>shapley value</br> rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the <br>shapley value</br> in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the <br>shapley value</br> rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE <br>shapley value</br> In this section, we define the coalitional cost of this game and analyze the solution proposed by the <br>shapley value</br>.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The <br>shapley value</br> (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The <br>shapley value</br> allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the <br>shapley value</br> is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the <br>shapley value</br> formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the <br>shapley value</br> formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE <br>shapley value</br> In this section, we will define serveral axioms on fairness and characterize the <br>shapley value</br> using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the <br>shapley value</br> rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the <br>shapley value</br> rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the <br>shapley value</br> in Lemma 3, we get the <br>shapley value</br> rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the <br>shapley value</br> rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the <br>shapley value</br>.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the <br>shapley value</br> rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the <br>shapley value</br> rule.",
                "The next proposition shows that the <br>shapley value</br> rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The <br>shapley value</br> rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The <br>shapley value</br> rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The <br>shapley value</br> assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The <br>shapley value</br> is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the <br>shapley value</br> of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The <br>shapley value</br> satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the <br>shapley value</br> is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the <br>shapley value</br> rule satisfies IPJθ.",
                "An analogous argument shows that the <br>shapley value</br> rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the <br>shapley value</br> with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the <br>shapley value</br> rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the <br>shapley value</br>. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the <br>shapley value</br> mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The <br>shapley value</br> rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the <br>shapley value</br> rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the <br>shapley value</br> rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the <br>shapley value</br> rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the <br>shapley value</br> rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the <br>shapley value</br> rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The <br>shapley value</br> rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the <br>shapley value</br> rule satisfies many nice fairness properties.",
                "We characterized the <br>shapley value</br> rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the <br>shapley value</br>.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the <br>shapley value</br> in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the <br>shapley value</br> in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "Cost Sharing in a Job Scheduling Problem Using the <br>shapley value</br> Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "We characterize the <br>shapley value</br> rule for this model using fairness axioms.",
                "For such a model, he characterizes the <br>shapley value</br> rule using classical fairness axioms.",
                "Further, they provide expressions for the <br>shapley value</br> in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the <br>shapley value</br> in the tail game, generalizing the result in Chun [1]."
            ],
            "translated_annotated_samples": [
                "Compartir costos en un problema de programación de trabajos utilizando el <br>Valor de Shapley</br>.",
                "Caracterizamos la regla del <br>valor de Shapley</br> para este modelo utilizando axiomas de equidad.",
                "Para dicho modelo, caracteriza la regla del <br>valor de Shapley</br> utilizando axiomas clásicos de equidad.",
                "Además, proporcionan expresiones para el <br>valor de Shapley</br> en el juego de cola en términos de vectores marginales y vectores marginales invertidos.",
                "Proporcionamos una expresión más simple del <br>valor de Shapley</br> en el juego de la cola, generalizando el resultado en Chun [1]."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el <br>Valor de Shapley</br>. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del <br>valor de Shapley</br> para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del <br>valor de Shapley</br> utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el <br>valor de Shapley</br> en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del <br>valor de Shapley</br> en el juego de la cola, generalizando el resultado en Chun [1]. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "monetary transfer": {
            "translated_key": "transferencias monetarias",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using <br>monetary transfer</br>s.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, <br>monetary transfer</br>s to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "The jobs share their costs through compensation using <br>monetary transfer</br>s.",
                "To compensate for waiting by jobs, <br>monetary transfer</br>s to jobs are allowed."
            ],
            "translated_annotated_samples": [
                "Los trabajos comparten sus costos a través de compensación utilizando <br>transferencias monetarias</br>.",
                "Para compensar la espera en los trabajos, se permiten <br>transferencias monetarias</br> a los trabajos."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando <br>transferencias monetarias</br>. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten <br>transferencias monetarias</br> a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de programación de trabajos. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "fairness axiom": {
            "translated_key": "axioma de equidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our <br>fairness axiom</br> says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next <br>fairness axiom</br> says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous <br>fairness axiom</br> results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "Our <br>fairness axiom</br> says that each job should at least bear such expected costs.",
                "Our next <br>fairness axiom</br> says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "An analogous <br>fairness axiom</br> results if we remove the job from the beginning of the queue."
            ],
            "translated_annotated_samples": [
                "Nuestro <br>axioma de equidad</br> dice que cada trabajo debería al menos soportar esos costos esperados.",
                "Nuestro próximo <br>axioma de equidad</br> dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro.",
                "Un <br>axioma de equidad</br> análogo resulta si eliminamos el trabajo del principio de la cola."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro <br>axioma de equidad</br> dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo <br>axioma de equidad</br> dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un <br>axioma de equidad</br> análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de programación de trabajos. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "queueing problem": {
            "translated_key": "problema de las colas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the <br>queueing problem</br> from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a <br>queueing problem</br> is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "Moulin [22, 21] studies the <br>queueing problem</br> from a strategic point view when per unit waiting costs are unity.",
                "Thus, a <br>queueing problem</br> is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists."
            ],
            "translated_annotated_samples": [
                "Moulin [22, 21] estudia el <br>problema de las colas</br> desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios.",
                "Por lo tanto, un <br>problema de colas</br> se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el <br>problema de las colas</br> desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un <br>problema de colas</br> se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de programación de trabajos. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239 ",
            "candidates": [],
            "error": [
                [
                    "problema de las colas",
                    "problema de colas"
                ]
            ]
        },
        "agent": {
            "translated_key": "agentes",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among <br>agent</br>s in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the <br>agent</br>s waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "The problem of fair division of costs among <br>agent</br>s in a queue has many practical applications.",
                "Internet has many settings in which our model of job scheduling appears and the <br>agent</br>s waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.)."
            ],
            "translated_annotated_samples": [
                "El problema de la división justa de costos entre <br>agentes</br> en una cola tiene muchas aplicaciones prácticas.",
                "Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los <br>agentes</br> que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.)."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre <br>agentes</br> en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los <br>agentes</br> que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de programación de trabajos. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "cooperative game theory approach": {
            "translated_key": "teoría de juegos cooperativos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a <br>cooperative game theory approach</br> and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a <br>cooperative game theory approach</br> and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "We take a <br>cooperative game theory approach</br> and apply the classical Shapley value rule to the problem.",
                "We took a <br>cooperative game theory approach</br> and show that the famous the Shapley value rule satisfies many nice fairness properties."
            ],
            "translated_annotated_samples": [
                "Tomamos un enfoque de <br>teoría de juegos cooperativos</br> y aplicamos la regla clásica del valor de Shapley al problema.",
                "Tomamos un <br>enfoque de teoría de juegos cooperativos</br> y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de <br>teoría de juegos cooperativos</br> y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un <br>enfoque de teoría de juegos cooperativos</br> y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de programación de trabajos. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239 ",
            "candidates": [],
            "error": [
                [
                    "teoría de juegos cooperativos",
                    "enfoque de teoría de juegos cooperativos"
                ]
            ]
        },
        "unit waiting cost": {
            "translated_key": "costo de espera por unidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per <br>unit waiting cost</br> of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs <br>unit waiting cost</br> and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per <br>unit waiting cost</br> and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per <br>unit waiting cost</br> of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per <br>unit waiting cost</br> of jobs are present.",
                "We introduce axioms such as independece of preceding jobs <br>unit waiting cost</br> and independence of following jobs processing time.",
                "ETE directs us to share costs equally between jobs if they are of the same per <br>unit waiting cost</br> and processing time.",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per <br>unit waiting cost</br> of its preceding jobs."
            ],
            "translated_annotated_samples": [
                "Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el <br>costo de espera por unidad</br> de trabajos están presentes.",
                "Introducimos axiomas como la independencia del <br>costo de espera de las unidades de trabajos anteriores</br> y la independencia del tiempo de procesamiento de los trabajos siguientes.",
                "ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo <br>costo de espera por unidad</br> y tiempo de procesamiento.",
                "Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del <br>costo de espera por unidad</br> de sus trabajos anteriores."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el <br>costo de espera por unidad</br> de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del <br>costo de espera de las unidades de trabajos anteriores</br> y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo <br>costo de espera por unidad</br> y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el límite de costo esperado (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del <br>costo de espera por unidad</br> de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de programación de trabajos. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239 ",
            "candidates": [],
            "error": [
                [
                    "costo de espera por unidad",
                    "costo de espera de las unidades de trabajos anteriores",
                    "costo de espera por unidad",
                    "costo de espera por unidad"
                ]
            ]
        },
        "processing time": {
            "translated_key": "tiempo de procesamiento",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite <br>processing time</br> and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and <br>processing time</br>.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both <br>processing time</br> and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs <br>processing time</br>.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and <br>processing time</br> (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the <br>processing time</br> and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest <br>processing time</br> rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and <br>processing time</br>.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its <br>processing time</br>.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing <br>processing time</br>, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "Each job has a finite <br>processing time</br> and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and <br>processing time</br>.",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both <br>processing time</br> and per unit waiting cost of jobs are present.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs <br>processing time</br>.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and <br>processing time</br> (these jobs can be ordered in any manner between themseleves in an efficient ordering)."
            ],
            "translated_annotated_samples": [
                "Cada trabajo tiene un <br>tiempo de procesamiento</br> finito y un costo de espera por unidad de tiempo.",
                "La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el <br>tiempo de procesamiento</br>.",
                "Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el <br>tiempo de procesamiento</br> como el costo de espera por unidad de trabajos están presentes.",
                "Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del <br>tiempo de procesamiento</br> de los trabajos siguientes.",
                "Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y <br>tiempo de procesamiento</br> (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente)."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un <br>tiempo de procesamiento</br> finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el <br>tiempo de procesamiento</br>. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el <br>tiempo de procesamiento</br> como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del <br>tiempo de procesamiento</br> de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y <br>tiempo de procesamiento</br> (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "allocation rule": {
            "translated_key": "regla de asignación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An <br>allocation rule</br> ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value <br>allocation rule</br> says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from <br>allocation rule</br> ψ.",
                "Also, we will denote the cost share vector associated with an <br>allocation rule</br> (σ, t) as π and that with <br>allocation rule</br> (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An <br>allocation rule</br> ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the <br>allocation rule</br> should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An <br>allocation rule</br> ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An <br>allocation rule</br> ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An <br>allocation rule</br> ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An <br>allocation rule</br> satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an <br>allocation rule</br> chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the <br>allocation rule</br> can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An <br>allocation rule</br> ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An <br>allocation rule</br> ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An <br>allocation rule</br> ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An <br>allocation rule</br> ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any <br>allocation rule</br> in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an <br>allocation rule</br>.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An <br>allocation rule</br> ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable <br>allocation rule</br> ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An <br>allocation rule</br> satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from <br>allocation rule</br> (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An <br>allocation rule</br> satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "An <br>allocation rule</br> ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value <br>allocation rule</br> says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from <br>allocation rule</br> ψ.",
                "Also, we will denote the cost share vector associated with an <br>allocation rule</br> (σ, t) as π and that with <br>allocation rule</br> (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "An <br>allocation rule</br> ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the <br>allocation rule</br> should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs."
            ],
            "translated_annotated_samples": [
                "Una <br>regla de asignación</br> ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones.",
                "El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La <br>regla de asignación</br> del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1.",
                "Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la <br>regla de asignación</br> ψ.",
                "Además, denotaremos el vector de participación en los costos asociado con una <br>regla de asignación</br> (σ, t) como π y aquel con la <br>regla de asignación</br> (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia.",
                "Una <br>regla de asignación</br> ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la <br>regla de asignación</br> no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una <br>regla de asignación</br> ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La <br>regla de asignación</br> del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la <br>regla de asignación</br> ψ. Además, denotaremos el vector de participación en los costos asociado con una <br>regla de asignación</br> (σ, t) como π y aquel con la <br>regla de asignación</br> (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una <br>regla de asignación</br> ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la <br>regla de asignación</br> no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "expected cost bound": {
            "translated_key": "límite de costo esperado",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies <br>expected cost bound</br> (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "An allocation rule satisfies <br>expected cost bound</br> (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢."
            ],
            "translated_annotated_samples": [
                "Una regla de asignación satisface el <br>límite de costo esperado</br> (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la participación en los costos de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la participación en los costos de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la participación en costos de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la participación en los costos del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la participación en los costos en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o participación en costos) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la participación en costos del trabajo i se da por la Ecuación 1. Lema 3. Sea σ∗ una ordenación eficiente de trabajos en el conjunto N. Para todo i ∈ N, el valor de Shapley se da por, SVi = piθi + 1 2 ¡Li + Ri¢, donde Li = θi £j∈Pi(σ∗) pj y Ri = pi £j∈Fi(σ∗) θj. Prueba. Otra forma de escribir la fórmula del valor de Shapley es la siguiente [10], SVi = S⊆N:i∈S ∆(S) |S| , donde ∆(S) = C(S) si |S| = 1 y ∆(S) = C(S)−£T S ∆(T). Esto da ∆({i}) = C({i}) = piθi ∀i ∈ N. Para cualquier i, j ∈ N con i = j, tenemos ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj). Demostraremos por inducción que ∆(S) = 0 si |S| > 2. Para |S| = 3, sea S = {i, j, k}. Sin pérdida de generalidad, asumir θi pi ≥ θj pj ≥ θk pk. Entonces, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0. Ahora, asume para T S, ∆(T) = 0 si |T| > 2. Sin pérdida de generalidad, asumir que σ es la función identidad. Ahora, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0. Esto demuestra que ∆(S) = 0 si |S| > 2. Usando la fórmula del valor de Shapley ahora, SVi = S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2 j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡ j<i ∆({i, j}) + j>i ∆({i, j})¢ = piθi + 1 2 ¡ j<i pjθi + j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4. CARACTERIZACIÓN AXIOMÁTICA DEL VALOR DE SHAPLEY En esta sección, definiremos varios axiomas sobre equidad y caracterizaremos el valor de Shapley utilizando estos. Para un q dado ∈ Q, denotaremos ψ(q) como el conjunto de asignaciones de la regla de asignación ψ. Además, denotaremos el vector de participación en los costos asociado con una regla de asignación (σ, t) como π y aquel con la regla de asignación (σ, t) como π, etc. 4.1 Los Axiomas de Equidad Definiremos tres tipos de axiomas de equidad: (i) relacionados con la eficiencia, (ii) relacionados con la equidad, y (iii) relacionados con la independencia. Axiomas de eficiencia Definimos dos tipos de axiomas de eficiencia. Uno relacionado con la eficiencia que establece que se debe seleccionar un orden eficiente y que las transferencias de trabajos deben sumar cero (equilibrio presupuestario). Definición 1. Una regla de asignación ψ satisface eficiencia si para cada q ∈ Q y (σ, t) ∈ ψ(q), (σ, t) es una asignación eficiente. El segundo axioma relacionado con la eficiencia dice que la regla de asignación no debe discriminar entre dos asignaciones que son equivalentes entre sí en términos de participaciones en los costos de los trabajos. Definición 2. Una regla de asignación ψ satisface la indiferencia de Pareto si para cada q ∈ Q, (σ, t) ∈ ψ(q), y (σ , t ) ∈ Σ(q), tenemos que ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢. Una implicación del axioma de indiferencia de Pareto y del Lema 2 es que para cada ordenación eficiente existe un conjunto de transferencias de trabajos que forma parte de una regla eficiente y el costo compartido de un trabajo en todas estas asignaciones es el mismo. Axiomas de equidad ¿Cómo se debe compartir el costo entre dos trabajos si los trabajos tienen algún tipo de similitud entre ellos? Los axiomas de equidad nos proporcionan propiedades de justicia que nos ayudan a responder esta pregunta. Proporcionamos cinco axiomas de este tipo. Algunos de estos axiomas (por ejemplo, anonimato, trato igual para iguales) son estándar en la literatura, mientras que otros son nuevos. Comenzamos con un axioma de equidad bien conocido llamado anonimato. Denote ρ : N → N como una permutación de elementos en N. Sea ρ(σ, t) la asignación obtenida al permutar los elementos en σ y t de acuerdo con ρ. De manera similar, dejemos que ρ(p, θ) denote la nueva lista de (p, θ) obtenida al permutar los elementos de p y θ de acuerdo con ρ. Nuestro primer axioma de equidad establece que las reglas de asignación deben ser inmunes a tal permutación de datos. Definición 3. Una regla de asignación ψ satisface el anonimato si para todo q ∈ Q, (σ, t) ∈ ψ(q) y para cada permutación ρ, entonces ρ(σ, t) ∈ ψ(N, ρ(q)). El próximo axioma de equidad es clásico en la literatura y establece que dos trabajos similares deben ser compensados de manera que sus participaciones en el costo sean iguales. Esto implica que si todos los trabajos son del mismo tipo, entonces los trabajos deberían compartir equitativamente el costo total del sistema. Definición 4. Una regla de asignación ψ satisface el trato igual a iguales (ETE) si para todo q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, entonces ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢. ETE nos indica que debemos compartir los costos de manera equitativa entre los trabajos si tienen el mismo costo de espera por unidad y tiempo de procesamiento. Pero no menciona las participaciones en los costos de dos trabajos i y j que satisfacen θi pi = θj pj. Introducimos un nuevo axioma para esto. Si una regla eficiente elige σ de manera que σi < σj para algunos i, j ∈ N, entonces el trabajo i está infligiendo un costo de piθj al trabajo j y el trabajo j está infligiendo un costo de cero al trabajo i. Para algún γ ≥ 0, S(γ) = {i ∈ N : γi = γ}. En una regla eficiente, los elementos en S(γ) pueden ser ordenados de cualquier manera (en |S(γ)|! formas). Si i, j ∈ S(γ) entonces tenemos pjθi = piθj. La probabilidad de que σi < σj es 1/2 y también lo es la probabilidad de que σi > σj. El costo esperado que i inflige en j es 1 2 piθj y el que j inflige en i es 1 2 pjθi. Nuestro próximo axioma de equidad dice que i y j deben ser responsables de su propio costo de procesamiento y del costo esperado que infligen el uno al otro. Argumentando para cada par de trabajos i, j ∈ S(γ), establecemos un límite en la participación de costos de los trabajos en S(γ). Imponemos esto como un axioma de equidad a continuación. Definición 5. Una regla de asignación satisface el <br>límite de costo esperado</br> (ECB) si para todo q ∈ Q, (σ, t) ∈ ψ(q) con π siendo la participación de costos resultante, para cualquier γ ≥ 0, y para cada i ∈ S(γ), tenemos que πi ≥ piθi + 1/2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢. La idea central detrás de este axioma es la del costo esperado infligido. Si una regla de asignación elige múltiples asignaciones, podemos asignar probabilidades iguales de seleccionar una de las asignaciones. En ese caso, se puede calcular el costo esperado infligido por un trabajo i en otro trabajo j en la regla de asignación. Nuestro axioma dice que la participación en los costos de un trabajo debe ser al menos su propio costo de procesamiento y el costo total esperado que inflige a los demás. Ten en cuenta que el límite anterior no impone restricciones sobre cómo se comparten los costos entre diferentes grupos. También observe que si S(γ) contiene solo un trabajo, ECB dice que ese trabajo al menos debe cubrir su propio costo de procesamiento. Una consecuencia directa del ECB es el siguiente lema. Lema 4. Sea ψ una regla eficiente que cumple con ECB. Para un q ∈ Q si S(γ) = N, entonces para cualquier (σ, t) ∈ ψ(q) que dé una participación de costos de π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Prueba. Del BCE, obtenemos πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Supongamos por contradicción que existe j ∈ N tal que πj > pjθj + 1 2 ¡Li + Ri¢. Usando eficiencia y el hecho de que £i∈N Li = £i∈N Ri, obtenemos £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N). Esto nos da una contradicción. A continuación, introducimos un axioma sobre compartir la transferencia de un trabajo entre un conjunto de trabajos. En particular, si el último trabajo abandona el sistema, entonces el orden no necesita cambiar. Pero la transferencia al último trabajo debe ser compartida entre los otros trabajos. Esto debe hacerse en proporción a sus tiempos de procesamiento, ya que cada trabajo influyó en el trabajo anterior en función de su tiempo de procesamiento. Definición 6. Una regla de asignación ψ satisface la responsabilidad proporcional de p (PRp) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = |N|, q = (N \\ {k}, p, θ) ∈ Q, tal que para todo i ∈ N\\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\ {k}: σi = σi y ti = ti + tk pi £j=k pj. Un axioma de equidad análogo resulta si eliminamos el trabajo del principio de la cola. Dado que la presencia del primer trabajo influenció a cada trabajo dependiendo de sus valores de θ, su transferencia debe ser compartida en proporción a los valores de θ. Definición 7. Una regla de asignación ψ satisface la responsabilidad proporcional de θ (PRθ) si para todo q ∈ Q, para todo (σ, t) ∈ ψ(q), k ∈ N tal que σk = 1, q = (N \\{k}, p, θ) ∈ Q, tal que para todo i ∈ N \\{k}: θi = θi, pi = pi, existe (σ, t) ∈ ψ(q) tal que para todo i ∈ N \\{k}: σi = σi y ti = ti + tk θi £j=k θj. Los axiomas de responsabilidad proporcional son generalizaciones de los axiomas de responsabilidad igual introducidos por Maniquet [15]. 235 Axiomas de Independencia El costo de espera de un trabajo no depende del costo de espera por unidad de sus trabajos anteriores. Del mismo modo, el costo de espera impuesto por un trabajo a sus trabajos siguientes es independiente de los tiempos de procesamiento de los trabajos siguientes. Estas propiedades de independencia deben ser aplicadas a las reglas de reparto de costos. Esto nos da dos axiomas de independencia. Definición 8. Una regla de asignación ψ satisface la independencia de trabajos anteriores θ (IPJθ) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk < γk, pk = pk, entonces para todo j ∈ N tal que σj > σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). Definición 9. Una regla de asignación ψ satisface la independencia de los trabajos siguientes p (IFJp) si para todo q = (N, p, θ), q = (N, p, θ) ∈ Q, (σ, t) ∈ ψ(q), (σ, t) ∈ ψ(q), si para todo i ∈ N \\ {k}: θi = θi, pi = pi y γk > γk, θk = θk, entonces para todo j ∈ N tal que σj < σk: πj = πj, donde π es la participación en los costos en (σ, t) y π es la participación en los costos en (σ, t). 4.2 Resultados de la Caracterización Después de haber establecido los axiomas de equidad, proponemos tres formas diferentes de caracterizar la regla del valor de Shapley utilizando estos axiomas. Todas nuestras caracterizaciones implican eficiencia y ECB. Pero si tenemos IPJθ, necesitamos IFJp o PRp. De manera similar, si tenemos IFJp, necesitamos IPJθ o PRθ. Proposición 1. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ e IFJp es una regla implicada por la regla del valor de Shapley. Prueba. Para cualquier i, j ∈ N, θi j = γipj y pi j = θj γi. Suponga sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considere el q = (N, p, θ) correspondiente al trabajo i con pj = pj si j ≤ i y pj = pi j si j > i, θj = θi j si j < i y θj = θj si j ≥ i. Observa que todos los trabajos tienen el mismo γ: γi. Por el Lema 2 y la eficiencia, (σ, t) ∈ ψ(q) para algún conjunto de transferencias t. Usando el Lema 4, obtenemos la participación en los costos de i desde (σ, t) como πi = piθi + 1 2 (Li + Ri). Ahora, para cualquier j < i, si cambiamos θj a θj sin cambiar el tiempo de procesamiento, el nuevo γ de j es γj ≥ γi. Aplicando IPJθ, la participación en los costos del trabajo i no debería cambiar. De manera similar, para cualquier trabajo j > i, si cambiamos pj a pj sin cambiar θj, el nuevo γ de j es γj ≤ γi. Aplicando IFJp, la participación en los costos del trabajo i no debería cambiar. Aplicando este procedimiento para cada j < i con IPJθ y para cada j > i con IFJp, llegamos a q = (N, p, θ) y la ganancia de i no cambia de πi. Usando este argumento para cada i ∈ N y utilizando la expresión para el valor de Shapley en el Lema 3, obtenemos la regla del valor de Shapley. Es posible reemplazar uno de los axiomas de independencia con un axioma de equidad sobre el reparto de la transferencia de un trabajo. Esto se muestra en las Proposiciones 2 y 3. Proposición 2. Cualquier regla eficiente ψ que cumpla con ECB, IPJθ y PRp es una regla implicada por la regla del valor de Shapley. Prueba. Como en la demostración de la Proposición 1, define θi j = γipj ∀ i, j ∈ N. Supongamos sin pérdida de generalidad que σ es un ordenamiento eficiente con σi = i ∀ i ∈ N. Considera una cola con trabajos en el conjunto K = {1, . . . , i, i + 1}, donde i < n. Define q = (K, p, θ), donde θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ es un ordenamiento eficiente para q. Por el BCE y el Lema 4, la participación en los costos del trabajo i + 1 en cualquier regla de asignación en ψ debe ser πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢. Ahora, considera q = (K, p, θ) tal que θj = θi j ∀ j ≤ i y θi+1 = θi+1. σ sigue siendo un ordenamiento eficiente en q y mediante IPJθ, la participación en los costos de i + 1 sigue siendo πi+1. En q = (K \\ {i + 1}, p, θ), podemos calcular la participación en los costos del trabajo i utilizando ECB y el Lema 4 como πi = piθi + 1 2 £j<i pjθi. Por lo tanto, utilizando PRp obtenemos la nueva participación en los costos del trabajo i en q como πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢. Ahora, podemos establecer K = K ∪ {i + 2}. Como antes, podemos encontrar la participación en costos de i + 2 en esta cola como πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢. Usando PRp obtenemos la nueva participación en los costos del trabajo i en la nueva cola como πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢. Este proceso se puede repetir hasta que agreguemos el trabajo n, momento en el que la participación en el costo de i es piθi + 1/2 ¡£j<i pjθi + £j>i piθj¢. Entonces, podemos ajustar el θ de los trabajos anteriores a i a su valor original y aplicando IPJθ, las ganancias de los trabajos de i a n no cambiarán. Esto nos da los valores de Shapley de los trabajos i a n. Estableciendo i = 1, obtenemos las participaciones de costos de todos los trabajos de ψ como el valor de Shapley. Proposición 3. Cualquier regla eficiente ψ que cumpla con ECB, IFJp y PRθ es una regla implicada por la regla del valor de Shapley. Prueba. La prueba refleja la prueba de la Proposición 2. Proporcionamos un breve bosquejo. Análogo a la demostración de la Proposición 2, los θs se mantienen iguales a los datos originales y los tiempos de procesamiento se inicializan en pi+1 j. Esto nos permite usar IFJp. Además, en contraste con la Proposición 2, consideramos K = {i, i + 1, . . . , n} y añadimos repetidamente trabajos al principio de la cola manteniendo el mismo orden eficiente. Por lo tanto, agregamos los componentes de costo de los trabajos anteriores al costo compartido de los trabajos en cada iteración y convergemos a la regla del valor de Shapley. La siguiente proposición muestra que la regla del valor de Shapley cumple con todos los axiomas de equidad discutidos. Proposición 4. La regla del valor de Shapley satisface eficiencia, indiferencia de Pareto, anonimato, ETE, ECB, IPJθ, IFJp, PRp y PRθ. Prueba. La regla del valor de Shapley elige un orden eficiente y, por definición, los pagos suman cero. Entonces, satisface eficiencia. El valor de Shapley asigna la misma participación de costos a un trabajo independientemente del orden eficiente elegido. Entonces, es indiferente en términos de Pareto. El valor de Shapley es anónimo porque el índice particular de un trabajo no afecta su orden o participación en costos. Para ETE, considera dos trabajos i, j ∈ N tales que pi = pj y θi = θj. Sin pérdida de generalidad, asuma que el orden eficiente es 1, . . . , i, . . . , j, . . . , n. Ahora, el valor de Shapley del trabajo i es 236 SVi = piθi + 1 2 ¡Li + Ri¢ (De la Lema 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Usando pi = pj y θi = θj) = SVj (Usando θk pk = θi pi para todo i ≤ k ≤ j). El valor de Shapley satisface ECB por su expresión en el Lema 3. Considerando cualquier trabajo i, en un ordenamiento eficiente σ, si aumentamos el valor de γj para algún j = i tal que σj > σi, entonces el conjunto Pi (trabajos anteriores) no cambia en el nuevo ordenamiento eficiente. Si γj se cambia de manera que pj permanezca igual, entonces la expresión £j∈Pi θipj no cambia. Si los valores (p, θ) de ningún otro trabajo son cambiados, entonces el valor de Shapley no cambia al aumentar γj para algún j ∈ Pi manteniendo pj sin cambios. Por lo tanto, la regla del valor de Shapley satisface IPJθ. Un argumento análogo muestra que la regla del valor de Shapley satisface IFJp. Para PRp, asumir sin pérdida de generalidad que los trabajos están ordenados del 1 al n en un orden eficiente. Denote la transferencia del trabajo i = n debido al valor de Shapley con el conjunto de trabajos N y el conjunto de trabajos N \\ {n} como ti y ti respectivamente. La transferencia del último trabajo es tn = 1 2 θn £j<n pj. Ahora, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj. Un argumento similar muestra que la regla del valor de Shapley cumple con PRθ. Estas series de proposiciones nos llevan a nuestro resultado principal. Teorema 1. Sea ψ una regla de asignación. Las siguientes afirmaciones son equivalentes: 1) Para cada q ∈ Q, ψ(q) selecciona todas las asignaciones que asignan trabajos con participaciones de costos implícitas en el valor de Shapley. 2) ψ satisface eficiencia, ECB, IFJp e IPJθ. 3) ψ satisface eficiencia, ECB, IFJp y PRθ. 4) ψ satisface eficiencia, ECB, PRp e IPJθ. Prueba. La prueba se sigue de las Proposiciones 1, 2, 3 y 4. 5. DISCUSIONES 5.1 Una Clase Razonable de Mecanismos de Compartición de Costos En esta sección, definiremos una clase razonable de mecanismos de compartición de costos. Mostraremos cómo estos mecanismos razonables conducen al mecanismo del valor de Shapley. Definición 10. Una regla de asignación ψ es razonable si para todo q ∈ Q y (σ, t) ∈ ψ(q) tenemos que para todo i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, donde 0 ≤ α ≤ 1. El mecanismo de reparto de costos razonable establece que cada trabajo debe ser pagado con una fracción constante de la diferencia entre el costo de espera que incurre y el costo de espera que inflige a otros trabajos. Si α = 0, entonces cada trabajo tiene su propio costo. Si α = 1, entonces cada trabajo recibe compensación por su costo de espera pero compensa a otros por el costo que inflige en ellos. La regla del valor de Shapley surge como resultado de ETE, como se muestra en la siguiente proposición. Proposición 5. Cualquier regla de asignación eficiente y razonable ψ que cumpla con ETE es una regla implícita de la regla del valor de Shapley. Prueba. Considera un q ∈ Q en el que pi = pj y θi = θj. Que (σ, t) ∈ ψ(q) y π sean las participaciones de costos resultantes. De ETE, obtenemos, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Dado que ψ es eficiente y razonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Usando pi = pj, θi = θj) ⇒ 1 − α = α (Usando Li − Lj = Rj − Ri = 0) ⇒ α = 1 2. Esto nos da la regla del valor de Shapley según el Lema 3. 5.2. Resultados sobre Envy Chun [2] discute una condición de equidad llamada no-envidia para el caso en que los tiempos de procesamiento de todos los trabajos son unitarios. Definición 11. Una regla de asignación satisface no envidia si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tj, donde π es la participación en los costos de la regla de asignación (σ, t) y σij es el orden obtenido al intercambiar i y j. A partir del resultado en [2], la regla del valor de Shapley tampoco satisface la no envidia en nuestro modelo. Para superar esto, Chun [2] introduce la noción de no envidia ajustada, la cual demuestra que se cumple en la regla del valor de Shapley cuando los tiempos de procesamiento de todos los trabajos son unitarios. Aquí mostramos que la envidia ajustada sigue manteniéndose en la regla del valor de Shapley en nuestro modelo (cuando los tiempos de procesamiento no necesariamente son unitarios). Como antes, denotemos σij como un ordenamiento donde la posición de i y j se intercambia de un ordenamiento σ. Para la no envidia ajustada, si (σ, t) es una asignación para algún q ∈ Q, dejemos que tij sea la transferencia 237 del trabajo i cuando la transferencia de i se calcula con respecto al orden σij. Observe que una asignación puede no permitir el cálculo de tij. Por ejemplo, si ψ es eficiente, entonces tij no puede ser calculado si σij tampoco es eficiente. Para simplificar, establecemos la definición de envidia ajustada para aplicar a todas las reglas de este tipo. Definición 12. Una regla de asignación satisface la no envidia ajustada si para todo q ∈ Q, (σ, t) ∈ ψ(q), e i, j ∈ N, tenemos que πi ≤ ci(σij) - tij. Proposición 6. La regla del valor de Shapley satisface la no envidia ajustada. Prueba. Sin pérdida de generalidad, asuma que el orden eficiente de los trabajos es: 1, . . . , n. Considere dos trabajos i e i + k. A partir del Lema 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢. Sea ˆπi la participación en el costo de i debido al traslado ajustado tii+k i en el orden σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡ j<i θipj + θipi+k + i<j<i+k θipj + j>i θjpi − θi+kpi − i<j<i+k θjpi¢ = SVi + 1 2 i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Utilizando el hecho de que θi pi ≥ θj pj para i < j). 6. CONCLUSIÓN Estudiamos el problema de compartir costos para un problema de programación de trabajos en un único servidor, cuando los trabajos tienen tiempos de procesamiento y costos de espera unitarios. Tomamos un enfoque de teoría de juegos cooperativos y mostramos que la famosa regla del valor de Shapley cumple con muchas propiedades de equidad. Caracterizamos la regla del valor de Shapley utilizando diferentes axiomas intuitivos de equidad. En el futuro, planeamos simplificar aún más algunos de los axiomas de equidad. Algunas simplificaciones iniciales ya aparecen en [16], donde proporcionamos un axioma alternativo a ECB y también discutimos la implicación de transferencias entre trabajos (en lugar de transferencias desde trabajos a un servidor central). También planeamos examinar mecanismos de reparto de costos distintos al valor de Shapley. Investigar el poder estratégico de los empleos en tales mecanismos es otra línea de investigación futura. 7. REFERENCIAS [1] Youngsub Chun. Una nota sobre la caracterización de Maniquet del Valor de Shapley en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [2] Youngsub Chun. Ausencia de envidia en problemas de colas. Documento de trabajo, Universidad de Rochester, 2004. [3] Imma Curiel, Herbert Hamers y Flip Klijn. Juegos de secuenciación: Una encuesta. En Peter Borm y Hans Peters, editores, Capítulo en Teoría de Juegos. Biblioteca de Teoría y Decisión, Editorial Kulwer Academic, 2002. [4] Imma Curiel, Giorgio Pederzoli y Stef Tijs. Juegos de secuenciación. Revista Europea de Investigación Operativa, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs y Bart Veltman. Secuenciación y Cooperación. Investigación de Operaciones, 42(3):566-568, mayo-junio de 1994. [6] Nikhil R. Devanur, Milena Mihail y Vijay V. Vazirani. Mecanismos de reparto de costos a prueba de estrategias para juegos de cobertura de conjuntos y ubicación de instalaciones. En Actas de la Cuarta Conferencia Anual de la ACM sobre Comercio Electrónico, 2003. [7] Robert J. Dolan. Mecanismos de incentivos para problemas de colas prioritarias. Revista Bell de Economía, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou y Scott Shenker. Compartiendo el costo de las transmisiones multicast. En Actas del Trigésimo Segundo Simposio Anual de la ACM sobre Teoría de la Computación, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs y Peter Borm. El núcleo dividido para juegos de secuenciación. Juegos y Comportamiento Económico, 15:165-176, 1996. [10] John C. Harsanyi. Contribuciones a la Teoría de Juegos IV, capítulo Un Modelo de Negociación para Juegos Cooperativos de n personas. Prensa de la Universidad de Princeton, 1959. Editores: A. W. Tucker, R. D. Luce. [11] Kamal Jain y Vijay Vazirani. Aplicaciones de algoritmos aproximados a juegos cooperativos. En Actas del 33º Simposio sobre Teoría de la Computación (STOC 01), 2001. [12] Kamal Jain y Vijay Vazirani. Asignaciones de costos equitativas a través de algoritmos de tipo primal-dual. En Actas del 34º Simposio sobre Teoría de la Computación (STOC 02), 2002. [13] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin un orden inicial completamente especificado. Informe en Estadística e Investigación de Operaciones, páginas 1-17, 2002. Informe 02-04. [14] Flip Klijn y Estela Sánchez. Juegos de secuenciación sin orden inicial. Documento de trabajo, Universitat Autónoma de Barcelona, julio de 2004. [15] François Maniquet. Una caracterización del valor de Shapley en problemas de colas. Revista de Teoría Económica, 109:90-103, 2003. [16] Debasis Mishra y Bharath Rangarajan. Compartir costos en un problema de programación de trabajos. Documento de trabajo, CORE, 2005. [17] Manipushpak Mitra. Ensayos sobre problemas de incentivos implementables de primera mejor solución. Tesis de doctorado, Instituto Estadístico de la India, Nueva Delhi, 2000. [18] Manipushpak Mitra. Diseño de mecanismos en problemas de colas. Teoría Económica, 17(2):277-305, 2001. [19] Manipushpak Mitra. Logrando lo mejor en problemas de secuenciación. Revisión de Diseño Económico, 7:75-91, 2002. [20] Hervé Moulin. Manual de Elección Social y Bienestar, capítulo Compartición Axiomática de Costos y Excedentes. Holanda del Norte, 2002. Editores: Arrow, Sen, Suzumura. [21] Hervé Moulin. En la programación de tarifas para prevenir la fusión, división y transferencia de trabajos 238. Documento de trabajo, Universidad Rice, 2004. [22] Hervé Moulin. Programación probabilística a prueba de divisiones. Documento de trabajo, Universidad Rice, 2004. [23] Hervé Moulin y Rakesh Vohra. Caracterización de Métodos de Compartición de Costos Aditivos. Cartas Económicas, 80:399-407, 2003. [24] Martin Pál y Eva Tardos. Mecanismos de grupo a prueba de estrategias a través de algoritmos primal-dual. En Actas del 44º Simposio Anual de la IEEE sobre los Fundamentos de la Ciencia de la Computación (FOCS 03), 2003. [25] Lloyd S. Shapley. Contribuciones a la Teoría de Juegos II, capítulo Un Valor para Juegos de n personas, páginas 307-317. Anales de Estudios Matemáticos, 1953. Editores: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith. Varios optimizadores para producción de una sola etapa. Revista Cuatrimestral de Logística de Investigación Naval, 3:59-66, 1956. [27] Jeroen Suijs. Sobre la compatibilidad de incentivos y el equilibrio presupuestario en la toma de decisiones públicas. Diseño Económico, 2, 2002. 239 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "queue problem": {
            "translated_key": "problema de cola",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "cost share": {
            "translated_key": "participación en los costos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the <br>cost share</br> of jobs in a group, efficiency, and some independence properties on the the <br>cost share</br> of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on <br>cost share</br> of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the <br>cost share</br> of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the <br>cost share</br> in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or <br>cost share</br>) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the <br>cost share</br> of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the <br>cost share</br> vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the <br>cost share</br> of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the <br>cost share</br> of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting <br>cost share</br>, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the <br>cost share</br> of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a <br>cost share</br> of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the <br>cost share</br> in (σ, t) and π is the <br>cost share</br> in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the <br>cost share</br> in (σ, t) and π is the <br>cost share</br> in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get <br>cost share</br> of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the <br>cost share</br> of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the <br>cost share</br> of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the <br>cost share</br> of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the <br>cost share</br> of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the <br>cost share</br> of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new <br>cost share</br> of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find <br>cost share</br> of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new <br>cost share</br> of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point <br>cost share</br> of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the <br>cost share</br> of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same <br>cost share</br> to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or <br>cost share</br>.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the <br>cost share</br> from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the <br>cost share</br> of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [
                "Our axioms include a bound on the <br>cost share</br> of jobs in a group, efficiency, and some independence properties on the the <br>cost share</br> of a job.",
                "A key axiom that we introduce gives us a bound on <br>cost share</br> of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "Given a transfer ti and an ordering σ, the <br>cost share</br> of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The following straightforward lemma says that for two different efficient orderings, the <br>cost share</br> in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "The Shapley value (or <br>cost share</br>) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the <br>cost share</br> of job i is given by Equation 1."
            ],
            "translated_annotated_samples": [
                "Nuestros axiomas incluyen un límite en la <br>participación en los costos</br> de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la <br>participación en los costos</br> de un trabajo.",
                "Un axioma clave que introducimos nos da un límite en la <br>participación en costos</br> de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente).",
                "Dado un tiempo de transferencia ti y un ordenamiento σ, la <br>participación en los costos</br> del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0.",
                "El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la <br>participación en los costos</br> en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias.",
                "El valor de Shapley (o <br>participación en costos</br>) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la <br>participación en costos</br> del trabajo i se da por la Ecuación 1."
            ],
            "translated_text": "Compartir costos en un problema de programación de trabajos utilizando el Valor de Shapley. Los trabajos tienen tiempos de procesamiento y generan costos de espera (lineales en su tiempo de espera). Los trabajos comparten sus costos a través de compensación utilizando transferencias monetarias. Caracterizamos la regla del valor de Shapley para este modelo utilizando axiomas de equidad. Nuestros axiomas incluyen un límite en la <br>participación en los costos</br> de trabajos en un grupo, eficiencia y algunas propiedades de independencia en la <br>participación en los costos</br> de un trabajo. Categorías y Descriptores de Asignaturas J.4 [Ciencias Sociales y del Comportamiento]: Economía Términos Generales Economía, Teoría 1. INTRODUCCIÓN Un conjunto de trabajos debe ser atendido por un servidor. El servidor solo puede procesar un trabajo a la vez. Cada trabajo tiene un tiempo de procesamiento finito y un costo de espera por unidad de tiempo. La ordenación eficiente de esta cola nos indica que debemos atender los trabajos en orden creciente de la relación entre el costo de espera por unidad de tiempo y el tiempo de procesamiento. Para compensar la espera en los trabajos, se permiten transferencias monetarias a los trabajos. ¿Cómo deben los trabajos compartir equitativamente el costo entre ellos mismos (a través de transferencias)? El problema de la división justa de costos entre agentes en una cola tiene muchas aplicaciones prácticas. Por ejemplo, los programas informáticos se programan regularmente en servidores, los datos se programan para ser transmitidos a través de redes, los trabajos se programan en el piso de la tienda en máquinas, y las colas aparecen en muchos servicios públicos (oficinas de correos, bancos). El estudio de problemas de colas ha atraído a economistas durante mucho tiempo [7, 17]. El reparto de costos es un problema fundamental en muchos entornos en Internet. Internet puede ser visto como un recurso común compartido por muchos usuarios y el costo incurrido al utilizar el recurso debe ser compartido de manera equitativa. El actual aumento en la literatura sobre el intercambio de costos por parte de científicos de la computación valida esta afirmación [8, 11, 12, 6, 24]. Internet tiene muchos entornos en los que aparece nuestro modelo de programación de trabajos y los agentes que esperan en una cola incurren en costos (trabajos programados en servidores, consultas respondidas desde una base de datos, datos programados para ser transmitidos a través de una red de ancho de banda fijo, etc.). Esperamos que nuestro análisis brinde nuevas perspectivas sobre los problemas de reparto de costos de esta naturaleza. Recientemente, ha habido un aumento en el interés en los métodos de reparto de costos con funciones de costo submodulares [11, 12, 6, 24]. Si bien muchos entornos tienen funciones de costo submodulares (por ejemplo, juegos de transmisión de multidifusión [8]), la función de costo de nuestro juego es supermodular. Además, este tipo de literatura generalmente no asume equilibrio presupuestario (transferencias que se compensan entre sí), mientras que es una característica inherente de nuestro modelo. Un artículo reciente de Maniquet [15] es el más cercano a nuestro modelo y es la motivación detrás de nuestro trabajo 1. Maniquet [15] estudia un modelo en el que asume que todos los tiempos de procesamiento son unitarios. Para dicho modelo, caracteriza la regla del valor de Shapley utilizando axiomas clásicos de equidad. Chun interpreta el valor de una coalición de trabajos de manera diferente para el mismo modelo y deriva una regla inversa. Chun caracteriza esta regla utilizando axiomas de equidad similares. Chun [2] también estudia las propiedades de envidia de estas reglas. Moulin [22, 21] estudia el problema de las colas desde un punto de vista estratégico cuando los costos de espera por unidad son unitarios. Moulin introduce nuevos conceptos en entornos de colas como la división y fusión de trabajos, y formas de prevenirlos. Otro flujo de literatura se centra en los juegos de secuenciación, introducidos por primera vez por Curiel et al. [4]. Para una encuesta detallada, consulte a Curiel et al. [3]. Curiel et al. [4] definieron juegos de secuenciación similares a nuestro modelo, pero en los que se proporciona un orden inicial de trabajos. Además, su noción del valor de una coalición es muy diferente de las nociones estudiadas en Maniquet [15] y Chun [1] (estas son las nociones utilizadas en nuestro trabajo también). La noción particular del valor de una coalición convierte el juego de secuenciación de Curiel et al. [4] en convexo, mientras que nuestro juego no es convexo y no asume la presencia de ningún orden inicial. En resumen, el enfoque de esta corriente de investigación es cómo compartir los ahorros en costos desde el pedido inicial hasta el pedido óptimo entre los trabajos (ver también Hamers et al. [9], Curiel et al. [5]). Recientemente, Klijn y Sánchez [13, 14] consideraron juegos de secuenciación sin ningún orden inicial de trabajos. Ellos toman dos enfoques para definir el valor de las coaliciones. Uno de sus enfoques, llamado el juego de la cola, está relacionado con la regla inversa de Chun [1]. En el juego de la cola, los trabajos en una coalición se atienden después de que se atienden los trabajos que no están en la coalición. Klijn y Sánchez [14] demostraron que el juego de la cola está equilibrado. Además, proporcionan expresiones para el valor de Shapley en el juego de cola en términos de vectores marginales y vectores marginales invertidos. Proporcionamos una expresión más simple del valor de Shapley en el juego de la cola, generalizando el resultado en Chun [1]. Klijn y Sánchez [13] estudian detalladamente el núcleo de este juego. Los aspectos estratégicos de los problemas de colas también han sido investigados. Mitra [19] estudia la mejor implementación en modelos de colas con funciones de costo genéricas. La primera mejor implementación significa que existe un mecanismo eficiente en el cual los trabajos en la cola tienen una estrategia dominante para revelar sus verdaderos tipos y que sus transferencias se suman a cero. Suijs [27] muestra que si los costos de espera de los trabajos son lineales, entonces la implementación de primera mejor opción es posible. Mitra [19] muestra que entre una clase más general de problemas de colas, la implementación óptima en primer lugar es posible si y solo si el costo es lineal. Para otro modelo de colas, Mitra [18] muestra que la implementación óptima es posible si y solo si la función de costos cumple con una propiedad combinatoria y una propiedad de independencia. Moulin [22, 21] estudia conceptos estratégicos como la división y fusión en problemas de colas con costos de espera por unidad. La literatura sobre el reparto de costos en general es extensa y tiene una larga historia. Para una buena encuesta, nos referimos a [20]. Desde la obra seminal de Shapley [25] hasta trabajos recientes sobre el reparto de costos en transmisiones de multidifusión y problemas de optimización [8, 6, 23], esta área ha atraído a economistas, científicos de la computación e investigadores en operaciones. 1.1 Nuestra Contribución Nuestro modelo es el primero que considera el reparto de costos cuando tanto el tiempo de procesamiento como el costo de espera por unidad de trabajos están presentes. Tomamos un enfoque de teoría de juegos cooperativos y aplicamos la regla clásica del valor de Shapley al problema. Mostramos que la regla del valor de Shapley cumple con muchos axiomas intuitivos de equidad. Debido a la naturaleza bidimensional de nuestro modelo y a la naturaleza unidimensional del modelo de Maniquets [15], sus axiomas son insuficientes para caracterizar el valor de Shapley en nuestro contexto. Introducimos axiomas como la independencia del costo de espera de las unidades de trabajos anteriores y la independencia del tiempo de procesamiento de los trabajos siguientes. Un axioma clave que introducimos nos da un límite en la <br>participación en costos</br> de un trabajo en un grupo de trabajos que tienen la misma proporción de costo de espera por unidad de tiempo y tiempo de procesamiento (estos trabajos pueden ser ordenados de cualquier manera entre sí en un orden eficiente). Si dicho grupo consiste en un solo trabajo, entonces el axioma dice que dicho trabajo al menos debería pagar su propio costo de procesamiento (es decir, el costo que habría incurrido si fuera el único trabajo en la cola). Si hay varios trabajos en un grupo, la probabilidad de que dos trabajos de ese grupo se influyan mutuamente con costos es la misma (1 2) en un ordenamiento eficiente. Dependiendo del orden seleccionado, un trabajo impone costos al otro. Nuestro axioma de equidad dice que cada trabajo debería al menos soportar esos costos esperados. Caracterizamos la regla del valor de Shapley utilizando estos axiomas de equidad. También extendemos los resultados de envidia en [2] a nuestro contexto y discutimos una clase de mecanismos de reparto de costos razonables. 2. EL MODELO Hay n trabajos que deben ser atendidos por un servidor que solo puede procesar un trabajo a la vez. El conjunto de trabajos se denota como N = {1, . . . , n}. σ : N → N es un ordenamiento de trabajos en N y σi denota la posición del trabajo i en el ordenamiento σ. Dada una ordenación σ, define Fi(σ) = {j ∈ N : σi < σj} y Pi(σ) = {j ∈ N : σi > σj}. Cada trabajo i está identificado por dos parámetros: (pi, θi). pi es el tiempo de procesamiento y θi es el costo por unidad de tiempo de espera del trabajo i. Por lo tanto, un problema de colas se define por una lista q = (N, p, θ) ∈ Q, donde Q es el conjunto de todas las listas posibles. Denotaremos γi = θi pi. Dado un ordenamiento de trabajos σ, el costo incurrido por el trabajo i está dado por ci(σ) = piθi + θi   j∈Pi(σ) pj. El costo total incurrido por todos los trabajos debido a un ordenamiento σ se puede escribir de dos maneras: (i) sumando el costo incurrido por cada trabajo y (ii) sumando los costos infligidos por un trabajo en otros trabajos con su propio costo de procesamiento. C(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢.\n\nC(N, σ) =  i∈N ci(σ) =  i∈N piθi +  i∈N ¡θi  j∈Pi(σ) pj¢. =  i∈N piθi +  i∈N ¡pi  j∈Fi(σ) θj¢. Un ordenamiento eficiente σ∗ es aquel que minimiza el costo total incurrido por todos los trabajos. Entonces, C(N, σ∗ ) ≤ C(N, σ) para todo σ ∈ Σ. Para lograr simplicidad notacional, escribiremos el costo total en un orden eficiente de trabajos desde N como C(N) siempre que no sea confuso. A veces, solo nos ocuparemos de un subconjunto de trabajos S ⊆ N. El ordenamiento σ se definirá entonces solo en los trabajos de S y escribiremos el costo total de un ordenamiento eficiente de trabajos en S como C(S). El siguiente lema muestra que los trabajos están ordenados en γ decreciente en un ordenamiento eficiente. Esto también se conoce como la regla del tiempo de procesamiento más corto ponderado, introducida por primera vez por Smith [26]. Lema 1. Para cualquier S ⊆ N, sea σ∗ una ordenación eficiente de trabajos en S. Para todo i = j, i, j ∈ S, si σ∗ i > σ∗ j, entonces γi ≤ γj. Prueba. Supongamos para contradicción que la afirmación del lema no es verdadera. Esto significa que podemos encontrar dos trabajos consecutivos i, j ∈ S (σ∗ i = σ∗ j + 1) tales que γi > γj. Define un nuevo orden σ intercambiando i y j en σ∗. Los costos para los trabajos en S \\ {i, j} no cambian de σ∗ a σ. La diferencia entre los costos totales en σ∗ y σ está dada por, C(S, σ) − C(S, σ∗ ) = θjpi − θipj. De la eficiencia obtenemos θjpi − θipj ≥ 0. Esto nos da γj ≥ γi, lo cual es una contradicción. Una asignación para q = (N, p, θ) ∈ Q tiene dos componentes: un orden σ y una transferencia ti para cada trabajo i ∈ N. ti denota el pago recibido por el trabajo i. Dado un tiempo de transferencia ti y un ordenamiento σ, la <br>participación en los costos</br> del trabajo i se define como, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. Una asignación (σ, t) es eficiente para q = (N, p, θ) siempre que σ sea un ordenamiento eficiente y £i∈N ti = 0. El conjunto de ordenamientos eficientes de q se denota como Σ∗ (q) y σ∗ (q) se usará para referirse a un elemento típico del conjunto. El siguiente lema directo dice que para dos ordenamientos eficientes diferentes, la <br>participación en los costos</br> en una asignación eficiente es posible de lograr en la otra mediante la modificación adecuada de las transferencias. Lema 2. Sea (σ, t) una asignación eficiente y π sea el vector de participaciones de costos de los trabajos de esta asignación. Si σ∗ = σ es un ordenamiento eficiente y t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, entonces (σ∗ , t∗ ) también es una asignación eficiente. Prueba. Dado que (σ, t) es eficiente, £i∈N ti = 0. Esto da £i∈N πi = C(N). Dado que σ∗ es un orden eficiente, £i∈N ci(σ∗ ) = C(N). Esto significa, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0. Entonces, (σ∗ , t∗ ) es una asignación eficiente. Dependiendo de las transferencias, las participaciones en los costos en diferentes asignaciones eficientes pueden diferir. Una regla de asignación ψ asocia a cada q ∈ Q un subconjunto no vacío ψ(q) de asignaciones. COMPARTICIÓN DE COSTOS UTILIZANDO EL VALOR DE SHAPLEY En esta sección, definimos el costo coalicional de este juego y analizamos la solución propuesta por el valor de Shapley. Dada una cola q ∈ Q, el costo de una coalición de trabajos S ⊆ N en la cola se define como el costo incurrido por los trabajos en S si estos son los únicos trabajos atendidos en la cola utilizando un ordenamiento eficiente. Formalmente, el costo de una coalición S ⊆ N es, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, donde σ∗ = σ∗ (S) es un ordenamiento eficiente considerando solo trabajos de S. El valor de una coalición de S trabajos es simplemente −C(S). Maniquet [15] observa otra forma equivalente de definir el valor de una coalición es utilizando la función dual de la función de coste C(·). Otras formas interesantes de definir el valor de una coalición en tales juegos son discutidas por Chun [1], quien asume que una coalición de trabajos se sirve después de que los trabajos que no están en la coalición son servidos. El valor de Shapley (o <br>participación en costos</br>) de un trabajo i se define como, SVi = S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) La regla de asignación del valor de Shapley dice que los trabajos se ordenan utilizando un ordenamiento eficiente y las transferencias se asignan a los trabajos de manera que la <br>participación en costos</br> del trabajo i se da por la Ecuación 1. ",
            "candidates": [],
            "error": [
                [
                    "participación en los costos",
                    "participación en los costos",
                    "participación en costos",
                    "participación en los costos",
                    "participación en los costos",
                    "participación en costos",
                    "participación en costos"
                ]
            ]
        },
        "job schedule": {
            "translated_key": "horario laboral",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Cost Sharing in a Job Scheduling Problem Using the Shapley Value Debasis Mishra Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium mishra@core.ucl.ac.be Bharath Rangarajan Center for Operations Research and Econometrics (CORE) Universit´e Catholique de Louvain Louvain la Neuve, Belgium rangarajan@core.ucl.ac.be ABSTRACT A set of jobs need to be served by a single server which can serve only one job at a time.",
                "Jobs have processing times and incur waiting costs (linear in their waiting time).",
                "The jobs share their costs through compensation using monetary transfers.",
                "We characterize the Shapley value rule for this model using fairness axioms.",
                "Our axioms include a bound on the cost share of jobs in a group, efficiency, and some independence properties on the the cost share of a job.",
                "Categories and Subject Descriptors J.4 [Social and Behaviorial Sciences]: Economics General Terms Economics, Theory 1.",
                "INTRODUCTION A set of jobs need to be served by a server.",
                "The server can process only one job at a time.",
                "Each job has a finite processing time and a per unit time waiting cost.",
                "Efficient ordering of this queue directs us to serve the jobs in increasing order of the ratio of per unit time waiting cost and processing time.",
                "To compensate for waiting by jobs, monetary transfers to jobs are allowed.",
                "How should the jobs share the cost equitably amongst themselves (through transfers)?",
                "The problem of fair division of costs among agents in a queue has many practical applications.",
                "For example, computer programs are regularly scheduled on servers, data are scheduled to be transmitted over networks, jobs are scheduled in shop-floor on machines, and queues appear in many public services (post offices, banks).",
                "Study of queueing problems has attracted economists for a long time [7, 17].",
                "Cost sharing is a fundamental problem in many settings on the Internet.",
                "Internet can be seen as a common resource shared by many users and the cost incured by using the resource needs to be shared in an equitable manner.",
                "The current surge in cost sharing literature from computer scientists validate this claim [8, 11, 12, 6, 24].",
                "Internet has many settings in which our model of job scheduling appears and the agents waiting in a queue incur costs (jobs scheduled on servers, queries answered from a database, data scheduled to be transmitted over a fixed bandwidth network etc.).",
                "We hope that our analysis will give new insights on cost sharing problems of this nature.",
                "Recently, there has been increased interest in cost sharing methods with submodular cost functions [11, 12, 6, 24].",
                "While many settings do have submodular cost functions (for example, multi-cast transmission games [8]), while the cost function of our game is supermodular.",
                "Also, such literature typically does not assume budget-balance (transfers adding up to zero), while it is an inherent feature of our model.",
                "A recent paper by Maniquet [15] is the closest to our model and is the motivation behind our work 1 .",
                "Maniquet [15] studies a model where he assumes all processing times are unity.",
                "For such a model, he characterizes the Shapley value rule using classical fairness axioms.",
                "Chun [1] interprets the worth of a coalition of jobs in a different manner for the same model and derives a reverse rule.",
                "Chun characterizes this rule using similar fairness axioms.",
                "Chun [2] also studies the envy properties of these rules.",
                "Moulin [22, 21] studies the queueing problem from a strategic point view when per unit waiting costs are unity.",
                "Moulin introduces new concepts in the queueing settings such as splitting and merging of jobs, and ways to prevent them.",
                "Another stream of literature is on sequencing games, first introduced by Curiel et al. [4].",
                "For a detailed survey, refer to Curiel et al. [3].",
                "Curiel et al. [4] defined sequencing games similar to our model, but in which an initial ordering of jobs is given.",
                "Besides, their notion of worth of a coalition is very different from the notions studied in Maniquet [15] and Chun [1] (these are the notions used in our work too).",
                "The particular notion of the worth of a coalition makes the sequencing game of Curiel et al. [4] convex, whereas our game is not convex and does not assume the presence of any initial order.",
                "In summary, the focus of this stream of 1 The authors thank Fran¸cois Maniquet for several fruitful discussions. 232 research is how to share the savings in costs from the initial ordering to the optimal ordering amongst jobs (also see Hamers et al. [9], Curiel et al. [5]).",
                "Recently, Klijn and S´anchez [13, 14] considered sequencing games without any initial ordering of jobs.",
                "They take two approaches to define the worth of coalitions.",
                "One of their approaches, called the tail game, is related to the reverse rule of Chun [1].",
                "In the tail game, jobs in a coalition are served after the jobs not in the coalition are served.",
                "Klijn and S´anchez [14] showed that the tail game is balanced.",
                "Further, they provide expressions for the Shapley value in tail game in terms of marginal vectors and reversed marginal vectors.",
                "We provide a simpler expression of the Shapley value in the tail game, generalizing the result in Chun [1].",
                "Klijn and S´anchez [13] study the core of this game in detail.",
                "Strategic aspects of queueing problems have also been researched.",
                "Mitra [19] studies the first best implementation in queueing models with generic cost functions.",
                "First best implementation means that there exists an efficient mechanism in which jobs in the queue have a dominant strategy to reveal their true types and their transfers add up to zero.",
                "Suijs [27] shows that if waiting costs of jobs are linear then first best implementation is possible.",
                "Mitra [19] shows that among a more general class of queueing problems first best implementation is possible if and only if the cost is linear.",
                "For another queueing model, Mitra [18] shows that first best implementation is possible if and only if the cost function satisfies a combinatorial property and an independence property.",
                "Moulin [22, 21] studies strategic concepts such as splitting and merging in queueing problems with unit per unit waiting costs.",
                "The general cost sharing literature is vast and has a long history.",
                "For a good survey, we refer to [20].",
                "From the seminal work of Shapley [25] to recent works on cost sharing in multi-cast transmission and optimization problems [8, 6, 23] this area has attracted economists, computer scientists, and operations researchers. 1.1 Our Contribution Ours is the first model which considers cost sharing when both processing time and per unit waiting cost of jobs are present.",
                "We take a cooperative game theory approach and apply the classical Shapley value rule to the problem.",
                "We show that the Shapley value rule satisfies many intuitive fairness axioms.",
                "Due to two dimensional nature of our model and one dimensional nature of Maniquets model [15], his axioms are insufficient to characterize the Shapley value in our setting.",
                "We introduce axioms such as independece of preceding jobs unit waiting cost and independence of following jobs processing time.",
                "A key axiom that we introduce gives us a bound on cost share of a job in a group of jobs which have the same ratio of unit time waiting cost and processing time (these jobs can be ordered in any manner between themseleves in an efficient ordering).",
                "If such a group consists of just one job, then the axiom says that such a job should at least pay his own processing cost (i.e., the cost it would have incurred if it was the only job in the queue).",
                "If there are multiple jobs in such a group, the probability of any two jobs from such a group inflicting costs on each other is same (1 2 ) in an efficient ordering.",
                "Depending on the ordering selected, one job inflicts cost on the other.",
                "Our fairness axiom says that each job should at least bear such expected costs.",
                "We characterize the Shapley value rule using these fairness axioms.",
                "We also extend the envy results in [2] to our setting and discuss a class of reasonable cost sharing mechanisms. 2.",
                "THE MODEL There are n jobs that need to be served by one server which can process only one job at a time.",
                "The set of jobs are denoted as N = {1, . . . , n}. σ : N → N is an ordering of jobs in N and σi denotes the position of job i in the ordering σ.",
                "Given an ordering σ, define Fi(σ) = {j ∈ N : σi < σj} and Pi(σ) = {j ∈ N : σi > σj}.",
                "Every job i is identified by two parameters: (pi, θi). pi is the processing time and θi is the cost per unit waiting time of job i.",
                "Thus, a queueing problem is defined by a list q = (N, p, θ) ∈ Q, where Q is the set of all possible lists.",
                "We will denote γi = θi pi .",
                "Given an ordering of jobs σ, the cost incurred by job i is given by ci(σ) = piθi + θi   j∈Pi(σ) pj.",
                "The total cost incurred by all jobs due to an ordering σ can be written in two ways: (i) by summing the cost incurred by every job and (ii) by summing the costs inflicted by a job on other jobs with their own processing cost.",
                "C(N, σ) =   i∈N ci(σ) =   i∈N piθi +   i∈N ¡θi   j∈Pi(σ) pj¢. =   i∈N piθi +   i∈N ¡pi   j∈Fi(σ) θj¢.",
                "An efficient ordering σ∗ is the one which minimizes the total cost incurred by all jobs.",
                "So, C(N, σ∗ ) ≤ C(N, σ) ∀ σ ∈ Σ.",
                "To achieve notational simplicity, we will write the total cost in an efficient ordering of jobs from N as C(N) whenever it is not confusing.",
                "Sometimes, we will deal with only a subset of jobs S ⊆ N. The ordering σ will then be defined on jobs in S only and we will write the total cost from an efficient ordering of jobs in S as C(S).",
                "The following lemma shows that jobs are ordered in decreasing γ in an efficient ordering.",
                "This is also known as the weighted shortest processing time rule, first introduced by Smith [26].",
                "Lemma 1.",
                "For any S ⊆ N, let σ∗ be an efficient ordering of jobs in S. For every i = j, i, j ∈ S, if σ∗ i > σ∗ j , then γi ≤ γj.",
                "Proof.",
                "Assume for contradiction that the statment of the lemma is not true.",
                "This means, we can find two consecutive jobs i, j ∈ S (σ∗ i = σ∗ j + 1) such that γi > γj.",
                "Define a new ordering σ by interchanging i and j in σ∗ .",
                "The costs to jobs in S \\ {i, j} is not changed from σ∗ to σ.",
                "The difference between total costs in σ∗ and σ is given by, C(S, σ) − C(S, σ∗ ) = θjpi − θipj.",
                "From efficiency we get θjpi − θipj ≥ 0.",
                "This gives us γj ≥ γi, which is a contradiction.",
                "An allocation for q = (N, p, θ) ∈ Q has two components: an ordering σ and a transfer ti for every job i ∈ N. ti denotes the payment received by job i.",
                "Given a transfer ti and an ordering σ, the cost share of job i is defined as, πi = ci(σ) − ti = θi   j∈N:σj ≤σi pj − ti. 233 An allocation (σ, t) is efficient for q = (N, p, θ) whenever σ is an efficient ordering and £i∈N ti = 0.",
                "The set of efficient orderings of q is denoted as Σ∗ (q) and σ∗ (q) will be used to refer to a typical element of the set.",
                "The following straightforward lemma says that for two different efficient orderings, the cost share in one efficient allocation is possible to achieve in the other by appropriately modifying the transfers.",
                "Lemma 2.",
                "Let (σ, t) be an efficient allocation and π be the vector of cost shares of jobs from this allocation.",
                "If σ∗ = σ be an efficient ordering and t∗ i = ci(σ∗ ) − πi ∀ i ∈ N, then (σ∗ , t∗ ) is also an efficient allocation.",
                "Proof.",
                "Since (σ, t) is efficient, £i∈N ti = 0.",
                "This gives £i∈N πi = C(N).",
                "Since σ∗ is an efficient ordering, £i∈N ci(σ∗ ) = C(N).",
                "This means, £i∈N t∗ i = £i∈N [ci(σ∗ ) − πi] = 0.",
                "So, (σ∗ , t∗ ) is an efficient allocation.",
                "Depending on the transfers, the cost shares in different efficient allocations may differ.",
                "An allocation rule ψ associates with every q ∈ Q a non-empty subset ψ(q) of allocations. 3.",
                "COST SHARING USING THE SHAPLEY VALUE In this section, we define the coalitional cost of this game and analyze the solution proposed by the Shapley value.",
                "Given a queue q ∈ Q, the cost of a coalition of S ⊆ N jobs in the queue is defined as the cost incurred by jobs in S if these are the only jobs served in the queue using an efficient ordering.",
                "Formally, the cost of a coalition S ⊆ N is, C(S) =   i∈S   j∈S:σ∗ j ≤σ∗ i θjpj, where σ∗ = σ∗ (S) is an efficient ordering considering jobs from S only.",
                "The worth of a coalition of S jobs is just −C(S).",
                "Maniquet [15] observes another equivalent way to define the worth of a coalition is using the dual function of the cost function C(·).",
                "Other interesting ways to define the worth of a coalition in such games is discussed by Chun [1], who assume that a coalition of jobs are served after the jobs not in the coalition are served.",
                "The Shapley value (or cost share) of a job i is defined as, SVi =   S⊆N\\{i} |S|! (|N| − |S| − 1)! |N|! ¡C(S∪{i})−C(S)¢. (1) The Shapley value allocation rule says that jobs are ordered using an efficient ordering and transfers are assigned to jobs such that the cost share of job i is given by Equation 1.",
                "Lemma 3.",
                "Let σ∗ be an efficient ordering of jobs in set N. For all i ∈ N, the Shapley value is given by, SVi = piθi + 1 2 ¡Li + Ri¢, where Li = θi £j∈Pi(σ∗) pj and Ri = pi £j∈Fi(σ∗) θj.",
                "Proof.",
                "Another way to write the Shapley value formula is the following [10], SVi =   S⊆N:i∈S ∆(S) |S| , where ∆(S) = C(S) if |S| = 1 and ∆(S) = C(S)−£T S ∆(T).",
                "This gives ∆({i}) = C({i}) = piθi ∀i ∈ N. For any i, j ∈ N with i = j, we have ∆({i, j}) = C({i, j}) − C({i}) − C({j}) = min(piθi + pjθj + pjθi, piθi + pjθj + piθj) − piθi − pjθj = min(pjθi, piθj).",
                "We will show by induction that ∆(S) = 0 if |S| > 2.",
                "For |S| = 3, let S = {i, j, k}.",
                "Without loss of generality, assume θi pi ≥ θj pj ≥ θk pk .",
                "So, ∆(S) = C(S) − ∆({i, j}) − ∆({j, k}) − ∆({i, k})−∆({i})−∆({j})−∆({k}) = C(S)−piθj −pjθk − piθk − piθi − pjθj − pkθk = C(S) − C(S) = 0.",
                "Now, assume for T S, ∆(T) = 0 if |T| > 2.",
                "Without loss of generality assume that σ to be the identity mapping.",
                "Now, ∆(S) = C(S) −   T S ∆(T) = C(S) −   i∈S   j∈S:j<i ∆({i, j}) −   i∈S ∆({i}) = C(S) −   i∈S   j∈S:j<i pjθi −   i∈S piθi = C(S) − C(S) = 0.",
                "This proves that ∆(S) = 0 if |S| > 2.",
                "Using the Shapley value formula now, SVi =   S⊆N:i∈S ∆(S) |S| = ∆({i}) + 1 2   j∈N:j=i ∆({i, j}) = piθi + 1 2 ¡  j<i ∆({i, j}) +   j>i ∆({i, j})¢ = piθi + 1 2 ¡  j<i pjθi +   j>i piθj¢= piθi + 1 2 ¡Li + Ri¢. 4.",
                "AXIOMATICCHARACTERIZATIONOF THE SHAPLEY VALUE In this section, we will define serveral axioms on fairness and characterize the Shapley value using them.",
                "For a given q ∈ Q, we will denote ψ(q) as the set of allocations from allocation rule ψ.",
                "Also, we will denote the cost share vector associated with an allocation rule (σ, t) as π and that with allocation rule (σ , t ) as π etc. 4.1 The Fairness Axioms We will define three types of fairness axioms: (i) related to efficiency, (ii) related to equity, and (iii) related to independence.",
                "Efficiency Axioms We define two types of efficiency axioms.",
                "One related to efficiency which states that an efficient ordering should be selected and the transfers of jobs should add up to zero (budget balance).",
                "Definition 1.",
                "An allocation rule ψ satisfies efficiency if for every q ∈ Q and (σ, t) ∈ ψ(q), (σ, t) is an efficient allocation. 234 The second axiom related to efficiency says that the allocation rule should not discriminate between two allocations which are equivalent to each other in terms of cost shares of jobs.",
                "Definition 2.",
                "An allocation rule ψ satisfies Pareto indifference if for every q ∈ Q, (σ, t) ∈ ψ(q), and (σ , t ) ∈ Σ(q), we have ¡πi = πi ∀ i ∈ N¢⇒ ¡(σ , t ) ∈ ψ(q)¢.",
                "An implication of Pareto indifference axiom and Lemma 2 is that for every efficient ordering there is some set of transfers of jobs such that it is part of an efficient rule and the cost share of a job in all these allocations are same.",
                "Equity Axioms How should the cost be shared between two jobs if the jobs have some kind of similarity between them?",
                "Equity axioms provide us with fairness properties which help us answer this question.",
                "We provide five such axioms.",
                "Some of these axioms (for example anonymity, equal treatment of equals) are standard in the literature, while some are new.",
                "We start with a well known equity axiom called anonymity.",
                "Denote ρ : N → N as a permutation of elements in N. Let ρ(σ, t) denote the allocation obtained by permuting elements in σ and t according to ρ.",
                "Similarly, let ρ(p, θ) denote the new list of (p, θ) obtained by permuting elements of p and θ according to ρ.",
                "Our first equity axiom states that allocation rules should be immune to such permutation of data.",
                "Definition 3.",
                "An allocation rule ψ satisfies anonymity if for all q ∈ Q, (σ, t) ∈ ψ(q) and every permutation ρ, we then ρ(σ, t) ∈ ψ(N, ρ(q)).",
                "The next equity axiom is classical in literature and says that two similar jobs should be compensated such that their cost shares are equal.",
                "This implies that if all the jobs are of same type, then jobs should equally share the total system cost.",
                "Definition 4.",
                "An allocation rule ψ satisfies equal treatment of equals (ETE) if for all q ∈ Q, (σ, t) ∈ ψ(q), i, j ∈ N, then ¡pi = pj; θi = θj¢⇒ ¡πi = πj¢.",
                "ETE directs us to share costs equally between jobs if they are of the same per unit waiting cost and processing time.",
                "But it is silent about the cost shares of two jobs i and j which satisfy θi pi = θj pj .",
                "We introduce a new axiom for this.",
                "If an efficient rule chooses σ such that σi < σj for some i, j ∈ N, then job i is inflicting a cost of piθj on job j and job j is inflicting zero cost on job i.",
                "Define for some γ ≥ 0, S(γ) = {i ∈ N : γi = γ}.",
                "In an efficient rule, the elements in S(γ) can be ordered in any manner (in |S(γ)|! ways).",
                "If i, j ∈ S(γ) then we have pjθi = piθj.",
                "Probability of σi < σj is 1 2 and so is the probability of σi > σj.",
                "The expected cost i inflicts on j is 1 2 piθj and j inflicts on i is 1 2 pjθi.",
                "Our next fairness axiom says that i and j should each be responsible for their own processing cost and this expected cost they inflict on each other.",
                "Arguing for every pair of jobs i, j ∈ S(γ), we establish a bound on the cost share of jobs in S(γ).",
                "We impose this as an equity axiom below.",
                "Definition 5.",
                "An allocation rule satisfies expected cost bound (ECB) if for all q ∈ Q, (σ, t) ∈ ψ(q) with π being the resulting cost share, for any γ ≥ 0, and for every i ∈ S(γ), we have πi ≥ piθi + 1 2 ¡   j∈S(γ):σj <σi pjθi +   j∈S(γ):σj >σi piθj¢.",
                "The central idea behind this axiom is that of expected cost inflicted.",
                "If an allocation rule chooses multiple allocations, we can assign equal probabilities of selecting one of the allocations.",
                "In that case, the expected cost inflicted by a job i on another job j in the allocation rule can be calculated.",
                "Our axiom says that the cost share of a job should be at least its own processing cost and the total expected cost it inflicts on others.",
                "Note that the above bound poses no constraints on how the costs are shared among different groups.",
                "Also observe that if S(γ) contains just one job, ECB says that job should at least bear its own processing cost.",
                "A direct consequence of ECB is the following lemma.",
                "Lemma 4.",
                "Let ψ be an efficient rule which satisfies ECB.",
                "For a q ∈ Q if S(γ) = N, then for any (σ, t) ∈ ψ(q) which gives a cost share of π, πi = piθi + 1 2 ¡Li + Ri¢∀ i ∈ N. Proof.",
                "From ECB, we get πi ≥ piθi+1 2 ¡Li+Ri¢∀ i ∈ N. Assume for contradiction that there exists j ∈ N such that πj > pjθj + 1 2 ¡Li + Ri¢.",
                "Using efficiency and the fact that £i∈N Li = £i∈N Ri, we get £i∈N πi = C(N) > £i∈N piθi + 1 2 £i∈N ¡Li + Ri¢ = C(N).",
                "This gives us a contradiction.",
                "Next, we introduce an axiom about sharing the transfer of a job between a set of jobs.",
                "In particular, if the last job quits the system, then the ordering need not change.",
                "But the transfer to the last job needs to be shared between the other jobs.",
                "This should be done in proportion to their processing times because every job influenced the last job based on its processing time.",
                "Definition 6.",
                "An allocation rule ψ satisfies proportionate responsibility of p (PRp) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = |N|, q = (N \\ {k}, p , θ ) ∈ Q, such that for all i ∈ N\\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk pi £j=k pj .",
                "An analogous fairness axiom results if we remove the job from the beginning of the queue.",
                "Since the presence of the first job influenced each job depending on their θ values, its transfer needs to be shared in proportion to θ values.",
                "Definition 7.",
                "An allocation rule ψ satisfies proportionate responsibility of θ (PRθ) if for all q ∈ Q, for all (σ, t) ∈ ψ(q), k ∈ N such that σk = 1, q = (N \\{k}, p , θ ) ∈ Q, such that for all i ∈ N \\{k}: θi = θi, pi = pi, there exists (σ , t ) ∈ ψ(q ) such that for all i ∈ N \\ {k}: σi = σi and ti = ti + tk θi £j=k θj .",
                "The proportionate responsibility axioms are generalizations of equal responsibility axioms introduced by Maniquet [15]. 235 Independence Axioms The waiting cost of a job does not depend on the per unit waiting cost of its preceding jobs.",
                "Similarly, the waiting cost inflicted by a job to its following jobs is independent of the processing times of the following jobs.",
                "These independence properties should be carried over to the cost sharing rules.",
                "This gives us two independence axioms.",
                "Definition 8.",
                "An allocation rule ψ satisfies independence of preceding jobs θ (IPJθ) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk < γk, pk = pk, then for all j ∈ N such that σj > σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ).",
                "Definition 9.",
                "An allocation rule ψ satisfies independence of following jobs p (IFJp) if for all q = (N, p, θ), q = (N, p , θ ) ∈ Q, (σ, t) ∈ ψ(q), (σ , t ) ∈ ψ(q ), if for all i ∈ N \\ {k}: θi = θi, pi = pi and γk > γk, θk = θk, then for all j ∈ N such that σj < σk: πj = πj, where π is the cost share in (σ, t) and π is the cost share in (σ , t ). 4.2 The Characterization Results Having stated the fairness axioms, we propose three different ways to characterize the Shapley value rule using these axioms.",
                "All our characterizations involve efficiency and ECB.",
                "But if we have IPJθ, we either need IFJp or PRp.",
                "Similarly if we have IFJp, we either need IPJθ or PRθ.",
                "Proposition 1.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and IFJp is a rule implied by the Shapley value rule.",
                "Proof.",
                "Define for any i, j ∈ N, θi j = γipj and pi j = θj γi .",
                "Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider the following q = (N, p , θ ) corresponding to job i with pj = pj if j ≤ i and pj = pi j if j > i, θj = θi j if j < i and θj = θj if j ≥ i.",
                "Observe that all jobs have the same γ: γi.",
                "By Lemma 2 and efficiency, (σ, t ) ∈ ψ(q ) for some set of transfers t .",
                "Using Lemma 4, we get cost share of i from (σ, t ) as πi = piθi + 1 2 ¡Li + Ri¢.",
                "Now, for any j < i, if we change θj to θj without changing processing time, the new γ of j is γj ≥ γi.",
                "Applying IPJθ, the cost share of job i should not change.",
                "Similarly, for any job j > i, if we change pj to pj without changing θj, the new γ of j is γj ≤ γi.",
                "Applying IFJp, the cost share of job i should not change.",
                "Applying this procedure for every j < i with IPJθ and for every j > i with IFJp, we reach q = (N, p, θ) and the payoff of i does not change from πi.",
                "Using this argument for every i ∈ N and using the expression for the Shapley value in Lemma 3, we get the Shapley value rule.",
                "It is possible to replace one of the independence axioms with an equity axiom on sharing the transfer of a job.",
                "This is shown in Propositions 2 and 3.",
                "Proposition 2.",
                "Any efficient rule ψ that satisfies ECB, IPJθ, and PRp is a rule implied by the Shapley value rule.",
                "Proof.",
                "As in the proof of Proposition 1, define θi j = γipj ∀ i, j ∈ N. Assume without loss of generality that σ is an efficient ordering with σi = i ∀ i ∈ N. Consider a queue with jobs in set K = {1, . . . , i, i + 1}, where i < n. Define q = (K, p, θ ), where θj = θi+1 j ∀ j ∈ K. Define σj = σj ∀ j ∈ K. σ is an efficient ordering for q .",
                "By ECB and Lemma 4 the cost share of job i + 1 in any allocation rule in ψ must be πi+1 = pi+1θi+1 + 1 2 ¡£j<i+1 pjθi+1¢.",
                "Now, consider q = (K, p, θ ) such that θj = θi j ∀ j ≤ i and θi+1 = θi+1. σ remains an efficient ordering in q and by IPJθ the cost share of i + 1 remains πi+1.",
                "In q = (K \\ {i + 1}, p, θ ), we can calculate the cost share of job i using ECB and Lemma 4 as πi = piθi + 1 2 £j<i pjθi.",
                "So, using PRp we get the new cost share of job i in q as πi = πi + ti+1 pi j<i+1 pj = piθi + 1 2 ¡£j<i pjθi + piθi+1¢.",
                "Now, we can set K = K ∪ {i + 2}.",
                "As before, we can find cost share of i + 2 in this queue as πi+2 = pi+2θi+2 + 1 2 ¡£j<i+2 pjθi+2¢.",
                "Using PRp we get the new cost share of job i in the new queue as πi = piθi + 1 2 ¡£j<i pjθi + piθi+1 + piθi+2¢.",
                "This process can be repeated till we add job n at which point cost share of i is piθi + 1 2 ¡£j<i pjθi + £j>i piθj¢.",
                "Then, we can adjust the θ of preceding jobs of i to their original value and applying IPJθ, the payoffs of jobs i through n will not change.",
                "This gives us the Shapley values of jobs i through n. Setting i = 1, we get cost shares of all the jobs from ψ as the Shapley value.",
                "Proposition 3.",
                "Any efficient rule ψ that satisfies ECB, IFJp, and PRθ is a rule implied by the Shapley value rule.",
                "Proof.",
                "The proof mirrors the proof of Proposition 2.",
                "We provide a short sketch.",
                "Analogous to the proof of Proposition 2, θs are kept equal to original data and processing times are initialized to pi+1 j .",
                "This allows us to use IFJp.",
                "Also, contrast to Proposition 2, we consider K = {i, i + 1, . . . , n} and repeatedly add jobs to the beginning of the queue maintaining the same efficient ordering.",
                "So, we add the cost components of preceding jobs to the cost share of jobs in each iteration and converge to the Shapley value rule.",
                "The next proposition shows that the Shapley value rule satisfies all the fairness axioms discussed.",
                "Proposition 4.",
                "The Shapley value rule satisfies efficiency, pareto indifference, anonymity, ETE, ECB, IPJθ, IFJp, PRp, and PRθ.",
                "Proof.",
                "The Shapley value rule chooses an efficient ordering and by definition the payments add upto zero.",
                "So, it satisfies efficiency.",
                "The Shapley value assigns same cost share to a job irrespective of the efficient ordering chosen.",
                "So, it is pareto indifferent.",
                "The Shapley value is anonymous because the particular index of a job does not effect his ordering or cost share.",
                "For ETE, consider two jobs i, j ∈ N such that pi = pj and θi = θj.",
                "Without loss of generality assume the efficient ordering to be 1, . . . , i, . . . , j, . . . , n. Now, the Shapley value of job i is 236 SVi = piθi + 1 2 ¡Li + Ri¢(From Lemma 3) = pjθj + 1 2 ¡Lj + Rj¢− 1 2 ¡Li − Lj + Ri − Rj¢ = SVj − 1 2 ¡   i<k≤j piθk −   i≤k<j pkθi¢ = SVj − 1 2   i<k≤j (piθk − pkθi) (Using pi = pj and θi = θj) = SVj (Using θk pk = θi pi for all i ≤ k ≤ j).",
                "The Shapley value satisfies ECB by its expression in Lemma 3.",
                "Consider any job i, in an efficient ordering σ, if we increase the value of γj for some j = i such that σj > σi, then the set Pi ( preceding jobs) does not change in the new efficient ordering.",
                "If γj is changed such that pj remains the same, then the expression £j∈Pi θipj is unchanged.",
                "If (p, θ) values of no other jobs are changed, then the Shapley value is unchanged by increasing γj for some j ∈ Pi while keeping pj unchanged.",
                "Thus, the Shapley value rule satisfies IPJθ.",
                "An analogous argument shows that the Shapley value rule satisfies IFJp.",
                "For PRp, assume without loss of generality that jobs are ordered 1, . . . , n in an efficient ordering.",
                "Denote the transfer of job i = n due to the Shapley value with set of jobs N and set of jobs N \\ {n} as ti and ti respectively.",
                "Transfer of last job is tn = 1 2 θn £j<n pj.",
                "Now, ti = 1 2 ¡θi   j<i pj − pi   j>i θj¢ = 1 2 ¡θi   j<i pj − pi   j>i:j=n θj¢− 1 2 piθn = ti − 1 2 θn   j<n pj pi £j<n pj = ti − tn pi £j<n pj .",
                "A similar argument shows that the Shapley value rule satisfies PRθ.",
                "These series of propositions lead us to our main result.",
                "Theorem 1.",
                "Let ψ be an allocation rule.",
                "The following statements are equivalent: 1) For each q ∈ Q, ψ(q) selects all the allocation assigning jobs cost shares implied by the Shapley value. 2) ψ satisfies efficiency, ECB, IFJp, and IPJθ. 3) ψ satisfies efficiency, ECB, IFJp, and PRθ. 4) ψ satisfies efficiency, ECB, PRp, and IPJθ.",
                "Proof.",
                "The proof follows from Propositions 1, 2, 3, and 4. 5.",
                "DISCUSSIONS 5.1 A Reasonable Class of Cost Sharing Mechanisms In this section, we will define a reasonable class of cost sharing mechanisms.",
                "We will show how these reasonable mechanisms lead to the Shapley value mechanism.",
                "Definition 10.",
                "An allocation rule ψ is reasonable if for all q ∈ Q and (σ, t) ∈ ψ(q) we have for all i ∈ N, ti = α ¡θi   j∈Pi(σ) pj − pi   j∈Fi(σ) θj¢∀ i ∈ N, where 0 ≤ α ≤ 1.",
                "The reasonable cost sharing mechanism says that every job should be paid a constant fraction of the difference between the waiting cost he incurs and the waiting cost he inflicts on other jobs.",
                "If α = 0, then every job bears its own cost.",
                "If α = 1, then every job gets compensated for its waiting cost but compensates others for the cost he inflicts on others.",
                "The Shapley value rule comes as a result of ETE as shown in the following proposition.",
                "Proposition 5.",
                "Any efficient and reasonable allocation rule ψ that satisfies ETE is a rule implied by the Shapley value rule.",
                "Proof.",
                "Consider a q ∈ Q in which pi = pj and θi = θj.",
                "Let (σ, t) ∈ ψ(q) and π be the resulting cost shares.",
                "From ETE, we get, πi = πj ⇒ ci(σ) − ti = cj(σ) − tj ⇒ piθi + (1 − α)Li + αRi = pjθj + (1 − α)Lj + αRj (Since ψ is efficient and reasonable) ⇒ (1 − α)(Li − Lj) = α(Rj − Ri) (Using pi = pj, θi = θj) ⇒ 1 − α = α (Using Li − Lj = Rj − Ri = 0) ⇒ α = 1 2 .",
                "This gives us the Shapley value rule by Lemma 3. 5.2 Results on Envy Chun [2] discusses a fariness condition called no-envy for the case when processing times of all jobs are unity.",
                "Definition 11.",
                "An allocation rule satisfies no-envy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tj, where π is the cost share from allocation rule (σ, t) and σij is the ordering obtaining by swapping i and j.",
                "From the result in [2], the Shapley value rule does not satisfy no-envy in our model also.",
                "To overcome this, Chun [2] introduces the notion of adjusted no-envy, which he shows is satisfied in the Shapley value rule when processing times of all jobs are unity.",
                "Here, we show that adjusted envy continues to hold in the Shapley value rule in our model (when processing times need not be unity).",
                "As before denote σij be an ordering where the position of i and j is swapped from an ordering σ.",
                "For adjusted noenvy, if (σ, t) is an allocation for some q ∈ Q, let tij be the 237 transfer of job i when the transfer of i is calculated with respect to ordering σij .",
                "Observe that an allocation may not allow for calculation of tij .",
                "For example, if ψ is efficient, then tij cannot be calculated if σij is also not efficient.",
                "For simplicity, we state the definition of adjusted no-envy to apply to all such rules.",
                "Definition 12.",
                "An allocation rule satisfies adjusted noenvy if for all q ∈ Q, (σ, t) ∈ ψ(q), and i, j ∈ N, we have πi ≤ ci(σij ) − tij i .",
                "Proposition 6.",
                "The Shapley value rule satisfies adjusted no-envy.",
                "Proof.",
                "Without loss of generality, assume efficient ordering of jobs is: 1, . . . , n. Consider two jobs i and i + k. From Lemma 3, SVi = piθi + 1 2 ¡  j<i θipj +   j>i θjpi¢.",
                "Let ˆπi be the cost share of i due to adjusted transfer tii+k i in the ordering σii+k . ˆπi = ci(σii+k ) − tii+k i = piθi + 1 2 ¡  j<i θipj + θipi+k +   i<j<i+k θipj +   j>i θjpi − θi+kpi −   i<j<i+k θjpi¢ = SVi + 1 2   i<j≤i+k ¡θipj − θjpi¢ ≥ SVi (Using the fact that θi pi ≥ θj pj for i < j). 6.",
                "CONCLUSION We studied the problem of sharing costs for a job scheduling problem on a single server, when jobs have processing times and unit time waiting costs.",
                "We took a cooperative game theory approach and show that the famous the Shapley value rule satisfies many nice fairness properties.",
                "We characterized the Shapley value rule using different intuitive fairness axioms.",
                "In future, we plan to further simplify some of the fairness axioms.",
                "Some initial simplifications already appear in [16], where we provide an alternative axiom to ECB and also discuss the implication of transfers between jobs (in stead of transfers from jobs to a central server).",
                "We also plan to look at cost sharing mechanisms other than the Shapley value.",
                "Investigating the strategic power of jobs in such mechanisms is another line of future research. 7.",
                "REFERENCES [1] Youngsub Chun.",
                "A Note on Maniquets Characterization of the Shapley Value in Queueing Problems.",
                "Working Paper, Rochester University, 2004. [2] Youngsub Chun.",
                "No-envy in Queuing Problems.",
                "Working Paper, Rochester University, 2004. [3] Imma Curiel, Herbert Hamers, and Flip Klijn.",
                "Sequencing Games: A Survey.",
                "In Peter Borm and Hans Peters, editors, Chapter in Game Theory.",
                "Theory and Decision Library, Kulwer Academic Publishers, 2002. [4] Imma Curiel, Giorgio Pederzoli, and Stef Tijs.",
                "Sequencing Games.",
                "European Journal of Operational Research, 40:344-351, 1989. [5] Imma Curiel, Jos Potters, Rajendra Prasad, Stef Tijs, and Bart Veltman.",
                "Sequencing and Cooperation.",
                "Operations Research, 42(3):566-568, May-June 1994. [6] Nikhil R. Devanur, Milena Mihail, and Vijay V. Vazirani.",
                "Strategyproof Cost-sharing Mechanisms for Set Cover and Facility Location Games.",
                "In Proceedings of Fourth Annual ACM Conferece on Electronic Commerce, 2003. [7] Robert J. Dolan.",
                "Incentive Mechanisms for Priority Queueing Problems.",
                "Bell Journal of Economics, 9:421-436, 1978. [8] Joan Feigenbaum, Christos Papadimitriou, and Scott Shenker.",
                "Sharing the Cost of Multicast Transmissions.",
                "In Proceedings of Thirty-Second Annual ACM Symposium on Theory of Computing, 2000. [9] Herbert Hamers, Jeroen Suijs, Stef Tijs, and Peter Borm.",
                "The Split Core for Sequencing Games.",
                "Games and Economic Behavior, 15:165-176, 1996. [10] John C. Harsanyi.",
                "Contributions to Theory of Games IV, chapter A Bargaining Model for Cooperative n-person Games.",
                "Princeton University Press, 1959.",
                "Editors: A. W. Tucker, R. D. Luce. [11] Kamal Jain and Vijay Vazirani.",
                "Applications of Approximate Algorithms to Cooperative Games.",
                "In Proceedings of 33rd Symposium on Theory of Computing (STOC 01), 2001. [12] Kamal Jain and Vijay Vazirani.",
                "Equitable Cost Allocations via Primal-Dual Type Algorithms.",
                "In Proceedings of 34th Symposium on Theory of Computing (STOC 02), 2002. [13] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without a Completely Specified Initial Order.",
                "Report in Statistics and Operations Research, pages 1-17, 2002.",
                "Report 02-04. [14] Flip Klijn and Estela S´anchez.",
                "Sequencing Games without Initial Order.",
                "Working Paper, Universitat Aut´onoma de Barcelona, July 2004. [15] Franois Maniquet.",
                "A Characterization of the Shapley Value in Queueing Problems.",
                "Journal of Economic Theory, 109:90-103, 2003. [16] Debasis Mishra and Bharath Rangarajan.",
                "Cost sharing in a job scheduling problem.",
                "Working Paper, CORE, 2005. [17] Manipushpak Mitra.",
                "Essays on First Best Implementable Incentive Problems.",
                "Ph.D. Thesis, Indian Statistical Institute, New Delhi, 2000. [18] Manipushpak Mitra.",
                "Mechanism design in queueing problems.",
                "Economic Theory, 17(2):277-305, 2001. [19] Manipushpak Mitra.",
                "Achieving the first best in sequencing problems.",
                "Review of Economic Design, 7:75-91, 2002. [20] Herv´e Moulin.",
                "Handbook of Social Choice and Welfare, chapter Axiomatic Cost and Surplus Sharing.",
                "North-Holland, 2002.",
                "Publishers: Arrow, Sen, Suzumura. [21] Herv´e Moulin.",
                "On Scheduling Fees to Prevent 238 Merging, Splitting and Transferring of Jobs.",
                "Working Paper, Rice University, 2004. [22] Herv´e Moulin.",
                "Split-proof Probabilistic Scheduling.",
                "Working Paper, Rice University, 2004. [23] Herv´e Moulin and Rakesh Vohra.",
                "Characterization of Additive Cost Sharing Methods.",
                "Economic Letters, 80:399-407, 2003. [24] Martin P´al and ´Eva Tardos.",
                "Group Strategyproof Mechanisms via Primal-Dual Algorithms.",
                "In Proceedings of the 44th Annual IEEE Symposium on the Foundations of Computer Science (FOCS 03), 2003. [25] Lloyd S. Shapley.",
                "Contributions to the Theory of Games II, chapter A Value for n-person Games, pages 307-317.",
                "Annals of Mathematics Studies, 1953.",
                "Ediors: H. W. Kuhn, A. W. Tucker. [26] Wayne E. Smith.",
                "Various Optimizers for Single-Stage Production.",
                "Naval Research Logistics Quarterly, 3:59-66, 1956. [27] Jeroen Suijs.",
                "On incentive compatibility and budget balancedness in public decision making.",
                "Economic Design, 2, 2002. 239"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        }
    }
}