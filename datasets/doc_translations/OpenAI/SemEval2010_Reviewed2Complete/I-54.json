{
    "id": "I-54",
    "original_text": "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents. The agents have time constraints in the form of both deadlines and discount factors. There are m > 1 issues for negotiation where each issue is viewed as a pie of size one. The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent). Here different agents value different issues differently. Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities. For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties. Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting. In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium. We also analyze the relative error (i.e., the difference between the true optimum and the approximate). The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error. Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues. Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) . These approximate strategies also have polynomial time complexity. Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1. INTRODUCTION Negotiation is a key form of interaction in multiagent systems. It is a process in which disputing agents decide how to divide the gains from cooperation. Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them. Now, the simplest form of negotiation involves two agents and a single issue. For example, consider a scenario in which a buyer and a seller negotiate on the price of a good. To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement. Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome. However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers. That is, they must set the negotiation protocol [20]. On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation). Given this context, this work focuses on competitive scenarios with self-interested agents. For such cases, each participant defines its strategy so as to maximise its individual utility. However, in most bilateral negotiations, the parties involved need to settle more than one issue. For this case, the issues may be divisible or indivisible [4]. For the former, the problem for the agents is to decide how to split each issue between themselves [21]. For the latter, the individual issues cannot be divided. An issue, in its entirety, must be allocated to either of the two agents. Since the agents value different issues differently, they must come to terms about who will take which issue. To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6]. However, in many real-world settings, the issues are indivisible. Hence, our focus here is on negotiation for indivisible issues. Such negotiations are very common in multiagent systems. For example, consider the case of task allocation between two agents. There is a set of tasks to be carried out and different agents have different preferences for the tasks. The tasks cannot be partitioned; a task must be carried out by one agent. The problem then is for the agents to negotiate about who will carry out which task. A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies. An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers. However, such computational issues have so far received little attention. As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues. Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts. Thus, we consider negotiations in which there is incomplete information and time constraints. Incompleteness of information on the part of negotiators is a common feature of most practical negotiations. Also, agents typically have time constraints in the form of both deadlines and discount factors. Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit. Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation. Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues). Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents. For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting. Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium. We also analyze the relative error (i.e., the difference between the true optimum and the approximate). The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error. Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues. Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) . These approximate strategies also have polynomial time complexity. In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria. No previous work has determined these equilibria. Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents. The remainder of the paper is organised as follows. We begin by giving a brief overview of single-issue negotiation in Section 2. In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem. We then present an approximate equilibrium and evaluate its approximation error. Section 4 analyzes online multi-issue negotiation. Section 5 discusses the related literature and Section 6 concludes. 2. SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers. Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27]. Hence we use this basic single issue model and extend it to multiple issues. Before doing so, we give an overview of this model and its equilibrium strategies. There are two strategic agents: a and b. Each agent has time constraints in the form of deadlines and discount factors. The two agents negotiate over a single indivisible issue (i). This issue is a pie of size 1 and the agents want to determine who gets the pie. There is a deadline (i.e., a number of rounds by which negotiation must end). Let n ∈ N+ denote this deadline. The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods. One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b. Agent b can either accept or reject the offer. If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi. Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer. This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict). Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation. An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21]. Specifically, the decrease occurs at each step of offer and counteroffer. This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents. Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively. Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents. For the above setting, the agents reason as follows in order to determine what to offer at t = 1. We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period. Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie). To begin, consider the case where the deadline for both agents is n = 1. If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline). Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 . Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period. Now, consider the case where the deadline is n = 2. In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards. Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a. Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer. Hence, during the first time period, agent a offers [0, 1]. Agent b accepts this and an agreement occurs in the first time period. In general, if the deadline is n, negotiation proceeds as follows. As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards. Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers. Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal. However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1). Thus, we assume that b accepts as offer. 952 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period. This, in turn, depends on whether n is odd or even. Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd. Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period. Note that the equilibrium outcome depends on who makes the first move. Since we have two agents and either of them could move first, we get two possible equilibrium outcomes. On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem. We then present a time efficient approximate equilibrium. 3. MULTI-ISSUE NEGOTIATION We first analyse the complete information setting. This section forms the base which we extend to the case of information uncertainty in Section 4. Here a and b negotiate over m > 1 indivisible issues. These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves. Let S = {1, 2, . . . , m} denote the set of m pies. As before, each pie is of size 1. Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1. For each issue, let n denote each agents deadline. In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}. Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c). The shares for a and b are together represented as the package [xt , yt ]. As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12]. The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b. Here N+ denotes the set of positive integers. These vectors indicate how the agents value different issues. For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1. Likewise for agent b. In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them). In all the settings we study, the issues will be perfect substitutes. To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m). Now, multi-issue negotiation can be done using different procedures. Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel. Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6]. Hence we adopt it here. We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2). However, an offer for the package deal includes a proposal for each issue under negotiation. Thus, for m issues, an offer includes m divisions, one for each issue. Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer. An agreement can therefore take place either on all m issues or on none of them. As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards. However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities. For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively. We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues. Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively. Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one). Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs. We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs. We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}. Given this, the following theorem characterises the equilibrium for the package deal procedure. THEOREM 1. For the package deal procedure, the following strategies form a Nash equilibrium. The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1). PROOF. We look ahead to the last time period (i.e., t = n) and then reason backwards. To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent. Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem. In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period. During time period t, either a or b could be the offering agent. Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1). However, since there is more than one issue, there is more than one package that gives b this cumulative utility. From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser). Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable. Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package. If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b). The function TRADEOFFB for agent b is analogous to that for a. On the other hand, the equilibrium strategy for the agent that receives an offer is as follows. For time period t, let b denote the receiving agent. Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period. The equilibrium strategy for a as receiving agent is defined analogously. In this way, we reason backwards and obtain the offers for the first time period. Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem. The following example illustrates how the agents make tradeoffs using the above equilibrium strategies. EXAMPLE 1. Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2. Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5. Let agent a be the first mover. By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues. This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3. Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer. So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2. This gives a cumulative utility of 3 to a and 5 to b. Agent b accepts the package and an agreement takes place in the first time period. The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 . In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight. There is a knapsack with a given capacity. The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack. This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3). Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity. Example 1 was for two issues and so it was easy to find the equilibrium offers. But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1. The following theorem proves this. THEOREM 2. For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard. PROOF. Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4. Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10]. Hence we use these methods to find a solution to our negotiation problem. At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem. The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack. On the other hand, our negotiation problem involves two players and they are both strategic. Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium. The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example). In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating. Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem. Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms. There are two key issues in the design of approximate algorithms [1]: sack problem. The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17]. In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers. However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation. The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1]. The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one. In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms. An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1]. For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method. This method is based on dynamic programming. It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ . More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity). Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem. This is done as follows. For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method. The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous. For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively. We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues. Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one). Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation. THEOREM 3. For the package deal procedure, the following strategies form an approximate Nash equilibrium. The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1). An agreement takes place at t = 1. PROOF. As in the proof for Theorem 1, we use backward reasoning. We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues. Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it. For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB). These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem. These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4. Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5). Assume that a is the offering agent for t = n − 1. Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period). Recall that for the last time period, the offering agent gets a hundred percent of all the issues. Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues. Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1. On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package. In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1). By reasoning backwards, we obtain the offer for time period t = 1. If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). The receiving agent accepts the offer. This is because the relative error in its cumulative utility from the offer is at most . An agreement therefore takes place in the first time period. THEOREM 4. The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ). PROOF. The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )). In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times. Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ). This analysis was done in a complete information setting. However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins. For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own. This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents. All our analysis for the complete information setting still holds for The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility. Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4. ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future. In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues. As before, let m be the total number of issues that are up for negotiation. The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1]. This probability distribution, n, and m are common knowledge to the agents. However, the agents come to know ka c and kb c only just before negotiation for issue c begins. Once the agents reach an agreement on issue c, it cannot be re-negotiated. This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3]. We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve. In an online problem, data is given to the algorithm incrementally, one unit at a time [3]. The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output. Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution. Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance. In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input. An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs. The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution). Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium. The protocol is defined as follows. Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues). Step 1. For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge. Step 2. The agents settle issue c using the alternating offers protocol described in Section 2. Negotiation for issue c must end within n time periods from the start of negotiation on the issue. If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues. Step 3. The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition. However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m). In order to solve this online negotiation problem we draw analogy with the online knapsack problem. Before doing so, however, we give a brief overview of the online knapsack problem. In the online knapsack problem, there are m items. The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known). Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number. Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem. Our online negotiation problem is analogous to the online knapsack problem. This analogy is described in detail in the proof for Theorem 5. Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16]. Hence we use this solution and show that it forms an equilibrium. The following theorem characterizes an approximate equilibrium for online negotiation. Here the agents have to choose a strategy without knowing the features of the future issues. Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18]. However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem. Also, the online knapsack can only be solved approximately [16]. Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example). The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem. For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum. THEOREM 5. For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium. The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1). An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF. As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction. Let a be the offering agent for t = 1 for all the m issues. Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue). Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues. Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues. Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents. Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i . However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol). Hence, a computes UB(n) as follows. Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6). Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]). Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6). Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i. Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants. Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem. An algorithm to solve the online knapsack problem has already proposed in [16]. This algorithm is called the fixed-choice online algorithm. It has time complexity linear in the number of items (m) in the knapsack problem. We use this to solve our online negotiation problem. Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter. This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem. The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)). The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows. A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem. The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered. In more detail, the algorithm ONLINE-TRADEOFFA works as follows. It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one. Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1). If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal. Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1. Agent b accepts the offer. Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1. In the next time period (i.e., t = 2), negotiation proceeds to the next issue. The deadline for the second issue is n time periods from the start of negotiation on the issue. For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above. Agent offers bc at t = 2 and b accepts. Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2. This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts. As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i. On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously. Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6. The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF. The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16]. Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16]. Thus, it follows that this lower bound also holds for our negotiation problem. 5. RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues. We first describe the existing work for the case of divisible issues. Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues. However, most of this work has focussed on the sequential procedure [7, 2]. For this procedure, a key issue is the negotiation agenda. Here the term agenda refers to the order in which the issues are negotiated. The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change. Hence, the agents must decide what agenda they will use. Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous). For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda. A number of researchers have also studied negotiations with an endogenous agenda [2]. In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure. However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible. Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation. Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents. The problem of task allocation has been previously studied in the context of coalitions involving more than two agents. For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole. In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities. On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility. In contrast, our focuses on negotiation regarding who will carry out which task. Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6. CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints. The issues are indivisible and different agents value different issues differently. Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities. Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting. We then presented approximately optimal negotiation strategies and showed that they form an equilibrium. These strategies have polynomial time complexity. We also analysed the difference between the true optimum and the approximate optimum. Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues. Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error. These approximate strategies also have polynomial time complexity. There are several interesting directions for future work. First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed. It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions. Apart from this, we treated the number of issues as being common knowledge to the agents. In future, it will be interesting to treat the number of issues as uncertain. 7. REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi. Complexity and approximation: Combinatorial optimization problems and their approximability properties. Springer, 2003. [2] M. Bac and H. Raff. Issue-by-issue negotiations: the role of information and time preference. Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv. Online Computation and Competitive Analysis. Cambridge University Press, 1998. [4] S. J. Brams. Fair division: from cake cutting to dispute resolution. Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman. Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings. Multi-issue negotiation with deadlines. Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman. The importance of the agenda in bargaining. Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover. A multiphase dual algorithm for the zero-one integer programming problem. Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes. Adaptive limited-supply online auctions. In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim. Fast approximation algorithms for the knapsack and sum of subset problems. Journal of ACM, 22:463-468, 1975. [11] R. Inderst. Multi-issue bargaining with endogenous agenda. Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa. Decisions with Multiple Objectives: Preferences and Value Trade-offs. New York: John Wiley, 1976. [13] S. Kraus. Strategic negotiation in multi-agent environments. The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham. Truth revelation in approximately efficient combinatorial auctions. Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings. A classification scheme for negotiation in electronic commerce. International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis. Stochastic online knapsack problems. Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth. Knapsack problems: Algorithms and computer implementations. John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein. A Course in Game Theory. The MIT Press, 1994. [19] H. Raiffa. The Art and Science of Negotiation. Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin. Rules of Encounter. MIT Press, 1994. [21] A. Rubinstein. Perfect equilibrium in a bargaining model. Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser. Levelled commitment contracts and strategic breach. Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan. Bargaining with deadlines. In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling. An essay on bargaining. American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus. Methods for task allocation via agent coalition formation. Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman. Computing approximate Bayes Nash equilibria in tree games of incomplete information. In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl. Bargaining Theory. Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)",
    "original_translation": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad temporal polinómica. También analizamos la diferencia entre el óptimo real y el óptimo aproximado. Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad temporal polinómica. Hay varias direcciones interesantes para trabajos futuros. Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme. Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes. Además de esto, tratamos el número de problemas como conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como incierto. 7. REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones tema por tema: el papel de la información y la preferencia temporal. Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. \n\nCambridge University Press, 1998. [4] S. J. Brams. División justa: desde el corte de pasteles hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman. Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples temas con plazos. Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman. La importancia de la agenda en las negociaciones. Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover. Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno. Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos. Revista de ACM, 22:463-468, 1975. [11] R. Inderst. Negociación de múltiples temas con agenda endógena. Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias e intercambios de valor. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos multiagente. El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas de mochila en línea estocásticos. Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth. Problemas de la mochila: Algoritmos e implementaciones informáticas. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. El MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de Encuentro. MIT Press, 1994. [21] A. Rubinstein. \n\nMIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelado y ruptura estratégica. Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociando con plazos límite. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre la negociación. Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07)",
    "original_sentences": [
        "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
        "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
        "The agents have time constraints in the form of both deadlines and discount factors.",
        "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
        "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
        "Here different agents value different issues differently.",
        "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
        "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
        "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
        "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
        "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
        "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
        "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
        "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
        "These approximate strategies also have polynomial time complexity.",
        "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
        "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
        "It is a process in which disputing agents decide how to divide the gains from cooperation.",
        "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
        "Now, the simplest form of negotiation involves two agents and a single issue.",
        "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
        "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
        "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
        "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
        "That is, they must set the negotiation protocol [20].",
        "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
        "Given this context, this work focuses on competitive scenarios with self-interested agents.",
        "For such cases, each participant defines its strategy so as to maximise its individual utility.",
        "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
        "For this case, the issues may be divisible or indivisible [4].",
        "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
        "For the latter, the individual issues cannot be divided.",
        "An issue, in its entirety, must be allocated to either of the two agents.",
        "Since the agents value different issues differently, they must come to terms about who will take which issue.",
        "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
        "However, in many real-world settings, the issues are indivisible.",
        "Hence, our focus here is on negotiation for indivisible issues.",
        "Such negotiations are very common in multiagent systems.",
        "For example, consider the case of task allocation between two agents.",
        "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
        "The tasks cannot be partitioned; a task must be carried out by one agent.",
        "The problem then is for the agents to negotiate about who will carry out which task.",
        "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
        "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
        "However, such computational issues have so far received little attention.",
        "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
        "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
        "Thus, we consider negotiations in which there is incomplete information and time constraints.",
        "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
        "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
        "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
        "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
        "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
        "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
        "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
        "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
        "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
        "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
        "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
        "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
        "These approximate strategies also have polynomial time complexity.",
        "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
        "No previous work has determined these equilibria.",
        "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
        "The remainder of the paper is organised as follows.",
        "We begin by giving a brief overview of single-issue negotiation in Section 2.",
        "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
        "We then present an approximate equilibrium and evaluate its approximation error.",
        "Section 4 analyzes online multi-issue negotiation.",
        "Section 5 discusses the related literature and Section 6 concludes. 2.",
        "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
        "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
        "Hence we use this basic single issue model and extend it to multiple issues.",
        "Before doing so, we give an overview of this model and its equilibrium strategies.",
        "There are two strategic agents: a and b.",
        "Each agent has time constraints in the form of deadlines and discount factors.",
        "The two agents negotiate over a single indivisible issue (i).",
        "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
        "There is a deadline (i.e., a number of rounds by which negotiation must end).",
        "Let n ∈ N+ denote this deadline.",
        "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
        "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
        "Agent b can either accept or reject the offer.",
        "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
        "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
        "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
        "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
        "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
        "Specifically, the decrease occurs at each step of offer and counteroffer.",
        "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
        "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
        "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
        "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
        "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
        "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
        "To begin, consider the case where the deadline for both agents is n = 1.",
        "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
        "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
        "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
        "Now, consider the case where the deadline is n = 2.",
        "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
        "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
        "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
        "Hence, during the first time period, agent a offers [0, 1].",
        "Agent b accepts this and an agreement occurs in the first time period.",
        "In general, if the deadline is n, negotiation proceeds as follows.",
        "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
        "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
        "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
        "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
        "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
        "This, in turn, depends on whether n is odd or even.",
        "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
        "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
        "Note that the equilibrium outcome depends on who makes the first move.",
        "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
        "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
        "We then present a time efficient approximate equilibrium. 3.",
        "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
        "This section forms the base which we extend to the case of information uncertainty in Section 4.",
        "Here a and b negotiate over m > 1 indivisible issues.",
        "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
        "Let S = {1, 2, . . . , m} denote the set of m pies.",
        "As before, each pie is of size 1.",
        "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
        "For each issue, let n denote each agents deadline.",
        "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
        "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
        "The shares for a and b are together represented as the package [xt , yt ].",
        "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
        "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
        "Here N+ denotes the set of positive integers.",
        "These vectors indicate how the agents value different issues.",
        "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
        "Likewise for agent b.",
        "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
        "In all the settings we study, the issues will be perfect substitutes.",
        "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
        "Now, multi-issue negotiation can be done using different procedures.",
        "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
        "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
        "Hence we adopt it here.",
        "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
        "However, an offer for the package deal includes a proposal for each issue under negotiation.",
        "Thus, for m issues, an offer includes m divisions, one for each issue.",
        "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
        "An agreement can therefore take place either on all m issues or on none of them.",
        "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
        "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
        "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
        "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
        "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
        "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
        "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
        "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
        "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
        "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
        "THEOREM 1.",
        "For the package deal procedure, the following strategies form a Nash equilibrium.",
        "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
        "PROOF.",
        "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
        "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
        "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
        "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
        "During time period t, either a or b could be the offering agent.",
        "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
        "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
        "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
        "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
        "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
        "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
        "The function TRADEOFFB for agent b is analogous to that for a.",
        "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
        "For time period t, let b denote the receiving agent.",
        "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
        "The equilibrium strategy for a as receiving agent is defined analogously.",
        "In this way, we reason backwards and obtain the offers for the first time period.",
        "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
        "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
        "EXAMPLE 1.",
        "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
        "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
        "Let agent a be the first mover.",
        "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
        "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
        "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
        "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
        "This gives a cumulative utility of 3 to a and 5 to b.",
        "Agent b accepts the package and an agreement takes place in the first time period.",
        "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
        "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
        "There is a knapsack with a given capacity.",
        "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
        "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
        "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
        "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
        "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
        "The following theorem proves this.",
        "THEOREM 2.",
        "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
        "PROOF.",
        "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
        "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
        "Hence we use these methods to find a solution to our negotiation problem.",
        "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
        "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
        "On the other hand, our negotiation problem involves two players and they are both strategic.",
        "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
        "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
        "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
        "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
        "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
        "There are two key issues in the design of approximate algorithms [1]: sack problem.",
        "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
        "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
        "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
        "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
        "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
        "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
        "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
        "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
        "This method is based on dynamic programming.",
        "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
        "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
        "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
        "This is done as follows.",
        "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
        "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
        "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
        "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
        "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
        "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
        "THEOREM 3.",
        "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
        "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
        "An agreement takes place at t = 1.",
        "PROOF.",
        "As in the proof for Theorem 1, we use backward reasoning.",
        "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
        "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
        "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
        "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
        "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
        "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
        "Assume that a is the offering agent for t = n − 1.",
        "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
        "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
        "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
        "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
        "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
        "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
        "By reasoning backwards, we obtain the offer for time period t = 1.",
        "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
        "The receiving agent accepts the offer.",
        "This is because the relative error in its cumulative utility from the offer is at most .",
        "An agreement therefore takes place in the first time period.",
        "THEOREM 4.",
        "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
        "PROOF.",
        "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
        "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
        "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
        "This analysis was done in a complete information setting.",
        "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
        "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
        "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
        "All our analysis for the complete information setting still holds for The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
        "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
        "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
        "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
        "As before, let m be the total number of issues that are up for negotiation.",
        "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
        "This probability distribution, n, and m are common knowledge to the agents.",
        "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
        "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
        "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
        "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
        "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
        "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
        "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
        "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
        "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
        "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
        "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
        "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
        "The protocol is defined as follows.",
        "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
        "Step 1.",
        "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
        "Step 2.",
        "The agents settle issue c using the alternating offers protocol described in Section 2.",
        "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
        "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
        "Step 3.",
        "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
        "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
        "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
        "Before doing so, however, we give a brief overview of the online knapsack problem.",
        "In the online knapsack problem, there are m items.",
        "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
        "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
        "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
        "Our online negotiation problem is analogous to the online knapsack problem.",
        "This analogy is described in detail in the proof for Theorem 5.",
        "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
        "Hence we use this solution and show that it forms an equilibrium.",
        "The following theorem characterizes an approximate equilibrium for online negotiation.",
        "Here the agents have to choose a strategy without knowing the features of the future issues.",
        "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
        "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
        "Also, the online knapsack can only be solved approximately [16].",
        "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
        "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
        "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
        "THEOREM 5.",
        "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
        "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
        "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
        "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
        "Let a be the offering agent for t = 1 for all the m issues.",
        "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
        "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
        "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
        "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
        "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
        "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
        "Hence, a computes UB(n) as follows.",
        "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
        "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
        "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
        "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
        "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
        "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
        "An algorithm to solve the online knapsack problem has already proposed in [16].",
        "This algorithm is called the fixed-choice online algorithm.",
        "It has time complexity linear in the number of items (m) in the knapsack problem.",
        "We use this to solve our online negotiation problem.",
        "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
        "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
        "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
        "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
        "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
        "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
        "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
        "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
        "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
        "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
        "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
        "Agent b accepts the offer.",
        "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
        "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
        "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
        "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
        "Agent offers bc at t = 2 and b accepts.",
        "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
        "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
        "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
        "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
        "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
        "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
        "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
        "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
        "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
        "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
        "We first describe the existing work for the case of divisible issues.",
        "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
        "However, most of this work has focussed on the sequential procedure [7, 2].",
        "For this procedure, a key issue is the negotiation agenda.",
        "Here the term agenda refers to the order in which the issues are negotiated.",
        "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
        "Hence, the agents must decide what agenda they will use.",
        "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
        "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
        "A number of researchers have also studied negotiations with an endogenous agenda [2].",
        "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
        "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
        "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
        "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
        "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
        "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
        "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
        "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
        "In contrast, our focuses on negotiation regarding who will carry out which task.",
        "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
        "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
        "The issues are indivisible and different agents value different issues differently.",
        "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
        "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
        "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
        "These strategies have polynomial time complexity.",
        "We also analysed the difference between the true optimum and the approximate optimum.",
        "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
        "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
        "These approximate strategies also have polynomial time complexity.",
        "There are several interesting directions for future work.",
        "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
        "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
        "Apart from this, we treated the number of issues as being common knowledge to the agents.",
        "In future, it will be interesting to treat the number of issues as uncertain. 7.",
        "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
        "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
        "Springer, 2003. [2] M. Bac and H. Raff.",
        "Issue-by-issue negotiations: the role of information and time preference.",
        "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
        "Online Computation and Competitive Analysis.",
        "Cambridge University Press, 1998. [4] S. J. Brams.",
        "Fair division: from cake cutting to dispute resolution.",
        "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
        "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
        "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
        "Multi-issue negotiation with deadlines.",
        "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
        "The importance of the agenda in bargaining.",
        "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
        "A multiphase dual algorithm for the zero-one integer programming problem.",
        "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
        "Adaptive limited-supply online auctions.",
        "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
        "Fast approximation algorithms for the knapsack and sum of subset problems.",
        "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
        "Multi-issue bargaining with endogenous agenda.",
        "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
        "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
        "New York: John Wiley, 1976. [13] S. Kraus.",
        "Strategic negotiation in multi-agent environments.",
        "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
        "Truth revelation in approximately efficient combinatorial auctions.",
        "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
        "A classification scheme for negotiation in electronic commerce.",
        "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
        "Stochastic online knapsack problems.",
        "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
        "Knapsack problems: Algorithms and computer implementations.",
        "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
        "A Course in Game Theory.",
        "The MIT Press, 1994. [19] H. Raiffa.",
        "The Art and Science of Negotiation.",
        "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
        "Rules of Encounter.",
        "MIT Press, 1994. [21] A. Rubinstein.",
        "Perfect equilibrium in a bargaining model.",
        "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
        "Levelled commitment contracts and strategic breach.",
        "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
        "Bargaining with deadlines.",
        "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
        "An essay on bargaining.",
        "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
        "Methods for task allocation via agent coalition formation.",
        "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
        "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
        "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
        "Bargaining Theory.",
        "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
    ],
    "translated_text_sentences": [
        "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido.",
        "Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos.",
        "Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento.",
        "Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno.",
        "Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente).",
        "Aquí diferentes agentes valoran diferentes temas de manera distinta.",
        "Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales.",
        "Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes.",
        "Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa.",
        "Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio.",
        "También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado).",
        "La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo.",
        "Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas.",
        "Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m).",
        "Estas estrategias aproximadas también tienen complejidad temporal polinómica.",
        "Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1.",
        "INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes.",
        "Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación.",
        "Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles.",
        "Ahora, la forma más simple de negociación implica dos agentes y un solo tema.",
        "Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien.",
        "Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo.",
        "Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable.",
        "Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas.",
        "Es decir, deben establecer el protocolo de negociación [20].",
        "Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación).",
        "Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas.",
        "Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual.",
        "Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema.",
        "Para este caso, los problemas pueden ser divisibles o indivisibles [4].",
        "Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21].",
        "Para este último, los problemas individuales no pueden dividirse.",
        "Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes.",
        "Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema.",
        "Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6].",
        "Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles.",
        "Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles.",
        "Tales negociaciones son muy comunes en sistemas multiagentes.",
        "Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes.",
        "Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas.",
        "Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente.",
        "El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea.",
        "Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio.",
        "Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio.",
        "Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención.",
        "Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles.",
        "Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real.",
        "Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo.",
        "La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas.",
        "Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento.",
        "Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable.",
        "Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación.",
        "Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles).",
        "Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes.",
        "Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa.",
        "Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio.",
        "También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado).",
        "La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo.",
        "Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas.",
        "Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m).",
        "Estas estrategias aproximadas también tienen complejidad temporal polinómica.",
        "Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea.",
        "Ningún trabajo previo ha determinado estos equilibrios.",
        "Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados.",
        "El resto del documento está organizado de la siguiente manera.",
        "Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2.",
        "En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro.",
        "Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación.",
        "La sección 4 analiza la negociación en línea de múltiples temas.",
        "La sección 5 discute la literatura relacionada y la sección 6 concluye.",
        "NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas.",
        "Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27].",
        "Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas.",
        "Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio.",
        "Hay dos agentes estratégicos: a y b.",
        "Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento.",
        "Los dos agentes negocian sobre un único tema indivisible (i).",
        "Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel.",
        "Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar).",
        "Que n ∈ N+ denote este plazo.",
        "Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo.",
        "Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b.",
        "El agente b puede aceptar o rechazar la oferta.",
        "Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi.",
        "De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta.",
        "Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto).",
        "Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación.",
        "Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21].",
        "Específicamente, la disminución ocurre en cada paso de oferta y contraoferta.",
        "Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes.",
        "Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente.",
        "Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes.",
        "Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1.",
        "Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo.",
        "Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel).",
        "Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1.",
        "Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite).",
        "Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b.",
        "Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo.",
        "Ahora, considera el caso donde la fecha límite es n = 2.",
        "Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás.",
        "El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a.",
        "Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta.",
        "Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1].",
        "El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo.",
        "En general, si la fecha límite es n, la negociación procede de la siguiente manera.",
        "Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás.",
        "Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio.",
        "Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta.",
        "Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1).",
        "Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl.",
        "La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo.",
        "Esto, a su vez, depende de si n es impar o par.",
        "Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar.",
        "Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo.",
        "Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso.",
        "Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio.",
        "Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil.",
        "Luego presentamos un equilibrio aproximado eficiente en tiempo. 3.",
        "NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo.",
        "Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4.",
        "Aquí, a y b negocian sobre m > 1 temas indivisibles.",
        "Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos.",
        "Sea S = {1, 2, . . . , m} el conjunto de m pasteles.",
        "Como antes, cada pastel tiene un tamaño de 1.",
        "Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1.",
        "Para cada problema, dejemos que n denote la fecha límite de cada agente.",
        "En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}.",
        "Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c).",
        "Las acciones de a y b se representan juntas como el paquete [xt, yt].",
        "Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12].",
        "Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b.",
        "Aquí N+ denota el conjunto de números enteros positivos.",
        "Estos vectores indican cómo los agentes valoran diferentes temas.",
        "Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1.",
        "Igualmente para el agente b.",
        "En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos).",
        "En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos.",
        "Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m).",
        "Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos.",
        "En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo.",
        "Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6].",
        "Por lo tanto, lo adoptamos aquí.",
        "Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2).",
        "Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación.",
        "Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema.",
        "Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa.",
        "Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos.",
        "Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás.",
        "Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas.",
        "Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente.",
        "Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas.",
        "Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente.",
        "Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno).",
        "Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones.",
        "Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones.",
        "Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}.",
        "Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete.",
        "TEOREMA 1.",
        "Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash.",
        "La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
        "PRUEBA.",
        "Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás.",
        "Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente.",
        "Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema.",
        "En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo.",
        "Durante el período de tiempo t, tanto a como b podrían ser el agente oferente.",
        "Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1).",
        "Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa.",
        "De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad).",
        "Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable.",
        "Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente.",
        "Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b).",
        "La función TRADEOFFB para el agente b es análoga a la de a.",
        "Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente.",
        "Para el período de tiempo t, dejemos que b denote al agente receptor.",
        "Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo.",
        "La estrategia de equilibrio para un agente receptor a está definida de manera análoga.",
        "De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo.",
        "Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema.",
        "El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente.",
        "EJEMPLO 1.",
        "Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2.",
        "Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5.",
        "Que el agente a sea el primer movimiento.",
        "Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos.",
        "Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3.",
        "Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta.",
        "Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2.",
        "Esto otorga una utilidad acumulada de 3 a a y 5 a b.",
        "El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo.",
        "El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1.",
        "En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso.",
        "Hay una mochila con una capacidad dada.",
        "El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila.",
        "Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3).",
        "Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila.",
        "El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio.",
        "Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1.",
        "El siguiente teorema lo demuestra.",
        "TEOREMA 2.",
        "Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro.",
        "PRUEBA.",
        "Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4.",
        "Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10].",
        "Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación.",
        "En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación.",
        "El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila.",
        "Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos.",
        "Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio.",
        "El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo).",
        "En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse.",
        "Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación.",
        "Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación.",
        "Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila.",
        "El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17].",
        "Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos.",
        "Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación.",
        "La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1].",
        "El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima.",
        "En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa.",
        "Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1].",
        "Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico.",
        "Este método se basa en la programación dinámica.",
        "Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ .",
        "Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial).",
        "Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación.",
        "Esto se hace de la siguiente manera.",
        "Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim.",
        "El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo.",
        "Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente.",
        "Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas.",
        "Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno).",
        "Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas.",
        "TEOREMA 3.",
        "Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado.",
        "La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1).",
        "Un acuerdo tiene lugar en t = 1.",
        "PRUEBA.",
        "Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás.",
        "Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas.",
        "Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella.",
        "Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB).",
        "Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1.",
        "Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4.",
        "Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5).",
        "Suponga que a es el agente oferente para t = n − 1.",
        "El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo).",
        "Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas.",
        "Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas.",
        "Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1.",
        "Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado.",
        "De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1).",
        "Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1.",
        "Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
        "El agente receptor acepta la oferta.",
        "Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de .",
        "Por lo tanto, se llega a un acuerdo en el primer período de tiempo.",
        "TEOREMA 4.",
        "La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2).",
        "PRUEBA.",
        "La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2).",
        "Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces.",
        "Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2).",
        "Este análisis se realizó en un entorno de información completa.",
        "Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación.",
        "Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio.",
        "Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes.",
        "Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl.",
        "En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real.",
        "Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4.",
        "NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro.",
        "En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas.",
        "Como antes, sea m el número total de temas que están en negociación.",
        "Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1].",
        "Esta distribución de probabilidad, n y m son conocimiento común para los agentes.",
        "Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c.",
        "Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado.",
        "Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3].",
        "Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver.",
        "En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3].",
        "El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida.",
        "Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima.",
        "Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano.",
        "En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada.",
        "Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras.",
        "El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada).",
        "Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado.",
        "El protocolo se define de la siguiente manera.",
        "Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas).",
        "Paso 1.",
        "Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común.",
        "Paso 2.",
        "Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2.",
        "La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema.",
        "Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes.",
        "Paso 3.",
        "Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición.",
        "Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m).",
        "Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea.",
        "Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea.",
        "En el problema de la mochila en línea, hay m elementos.",
        "El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño).",
        "Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total.",
        "Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico.",
        "Nuestro problema de negociación en línea es análogo al problema de la mochila en línea.",
        "Esta analogía se describe en detalle en la demostración del Teorema 5.",
        "Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16].",
        "Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio.",
        "El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea.",
        "Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros.",
        "Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18].",
        "Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea.",
        "Además, la mochila en línea solo puede resolverse de forma aproximada [16].",
        "Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo).",
        "El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema.",
        "Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real.",
        "TEOREMA 5.",
        "Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes.",
        "La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1).",
        "Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA.",
        "Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás.",
        "Que a sea el agente oferente para t = 1 para todos los problemas m.",
        "Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema).",
        "Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas.",
        "Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m.",
        "Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes.",
        "Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i.",
        "Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea).",
        "Por lo tanto, a calcula UB(n) de la siguiente manera.",
        "La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6).",
        "Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]).",
        "Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6).",
        "Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i.",
        "Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes.",
        "Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea.",
        "Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16].",
        "Este algoritmo se llama algoritmo en línea de elección fija.",
        "Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila.",
        "Usamos esto para resolver nuestro problema de negociación en línea.",
        "Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último.",
        "Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente.",
        "La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)).",
        "El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente.",
        "Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1.",
        "El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos.",
        "Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera.",
        "Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno.",
        "Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1).",
        "Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta.",
        "Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1.",
        "El agente b acepta la oferta.",
        "Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1.",
        "En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema.",
        "La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema.",
        "Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba.",
        "El agente ofrece bc en t = 2 y b acepta.",
        "Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2.",
        "Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza.",
        "A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i.",
        "Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga.",
        "Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6.",
        "La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN.",
        "La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16].",
        "Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16].",
        "Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5.",
        "TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles.",
        "Primero describimos el trabajo existente para el caso de problemas divisibles.",
        "Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas.",
        "Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2].",
        "Para este procedimiento, un tema clave es la agenda de negociación.",
        "Aquí el término agenda se refiere al orden en el que se negocian los asuntos.",
        "La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian.",
        "Por lo tanto, los agentes deben decidir qué agenda utilizarán.",
        "Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena).",
        "Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena.",
        "Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2].",
        "A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas.",
        "Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible.",
        "Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea.",
        "El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes.",
        "El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes.",
        "Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad.",
        "Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales.",
        "Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente.",
        "Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea.",
        "Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6.",
        "CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo.",
        "Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente.",
        "Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales.",
        "Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa.",
        "Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio.",
        "Estas estrategias tienen complejidad temporal polinómica.",
        "También analizamos la diferencia entre el óptimo real y el óptimo aproximado.",
        "Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas.",
        "Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación.",
        "Estas estrategias aproximadas también tienen complejidad temporal polinómica.",
        "Hay varias direcciones interesantes para trabajos futuros.",
        "Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme.",
        "Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes.",
        "Además de esto, tratamos el número de problemas como conocimiento común para los agentes.",
        "En el futuro, será interesante tratar el número de problemas como incierto. 7.",
        "REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi.",
        "Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad.",
        "Springer, 2003. [2] M. Bac y H. Raff.",
        "Negociaciones tema por tema: el papel de la información y la preferencia temporal.",
        "Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv.",
        "Computación en línea y análisis competitivo.",
        "Cambridge University Press, 1998. [4] S. J. Brams. \n\nCambridge University Press, 1998. [4] S. J. Brams.",
        "División justa: desde el corte de pasteles hasta la resolución de disputas.",
        "Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman.",
        "Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas.",
        "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings.",
        "Negociación de múltiples temas con plazos.",
        "Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman.",
        "La importancia de la agenda en las negociaciones.",
        "Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover.",
        "Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno.",
        "Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes.",
        "Subastas en línea adaptativas de suministro limitado.",
        "En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim.",
        "Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos.",
        "Revista de ACM, 22:463-468, 1975. [11] R. Inderst.",
        "Negociación de múltiples temas con agenda endógena.",
        "Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa.",
        "Decisiones con múltiples objetivos: preferencias e intercambios de valor.",
        "Nueva York: John Wiley, 1976. [13] S. Kraus.",
        "Negociación estratégica en entornos multiagente.",
        "El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham.",
        "Revelación de la verdad en subastas combinatorias aproximadamente eficientes.",
        "Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings.",
        "Un esquema de clasificación para la negociación en el comercio electrónico.",
        "Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis.",
        "Problemas de mochila en línea estocásticos.",
        "Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth.",
        "Problemas de la mochila: Algoritmos e implementaciones informáticas.",
        "John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein.",
        "Un curso de teoría de juegos.",
        "El MIT Press, 1994. [19] H. Raiffa.",
        "El arte y la ciencia de la negociación.",
        "Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin.",
        "Reglas de Encuentro.",
        "MIT Press, 1994. [21] A. Rubinstein. \n\nMIT Press, 1994. [21] A. Rubinstein.",
        "Equilibrio perfecto en un modelo de negociación.",
        "Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser.",
        "Contratos de compromiso nivelado y ruptura estratégica.",
        "Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan.",
        "Negociando con plazos límite.",
        "En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
        "Un ensayo sobre la negociación.",
        "Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus.",
        "Métodos para la asignación de tareas a través de la formación de coaliciones de agentes.",
        "Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman.",
        "Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta.",
        "En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl.",
        "Teoría de la negociación.",
        "Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07)"
    ],
    "error_count": 2,
    "keys": {
        "negotiation": {
            "translated_key": "negociación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue <br>negotiation</br> Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue <br>negotiation</br> between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for <br>negotiation</br> where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for <br>negotiation</br> are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present <br>negotiation</br> strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the <br>negotiation</br> deadline and the relative error.",
                "Finally, we extend the analysis to online <br>negotiation</br> where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online <br>negotiation</br> and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION <br>negotiation</br> is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of <br>negotiation</br> involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the <br>negotiation</br> protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of <br>negotiation</br>).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue <br>negotiation</br> has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on <br>negotiation</br> for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue <br>negotiation</br> is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on <br>negotiation</br> for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since <br>negotiation</br> cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for <br>negotiation</br> are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the <br>negotiation</br> deadline and the relative error.",
                "Finally, we extend the analysis to online <br>negotiation</br> where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online <br>negotiation</br> and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue <br>negotiation</br> problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue <br>negotiation</br> in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue <br>negotiation</br> and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue <br>negotiation</br>.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE <br>negotiation</br> We adopt the single issue model of [27] because this is a model where, during <br>negotiation</br>, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which <br>negotiation</br> must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts <br>negotiation</br> in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, <br>negotiation</br> ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, <br>negotiation</br> proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits <br>negotiation</br> (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the <br>negotiation</br>.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if <br>negotiation</br> proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, <br>negotiation</br> proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and <br>negotiation</br> ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue <br>negotiation</br> with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE <br>negotiation</br> We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all <br>negotiation</br> parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue <br>negotiation</br> can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue <br>negotiation</br> (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under <br>negotiation</br>.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue <br>negotiation</br>, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if <br>negotiation</br> reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for <br>negotiation</br>, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if <br>negotiation</br> reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the <br>negotiation</br> problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our <br>negotiation</br> problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our <br>negotiation</br> problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our <br>negotiation</br> problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our <br>negotiation</br> problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our <br>negotiation</br> problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue <br>negotiation</br>.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the <br>negotiation</br> is done offline; i.e., the agents know their preference for each individual issue before <br>negotiation</br> begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline <br>negotiation</br>, we focus on online multi-issue <br>negotiation</br>. 4.",
                "ONLINE MULTI-ISSUE <br>negotiation</br> We now consider a more general and, arguably more realistic, version of multi-issue <br>negotiation</br>, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for <br>negotiation</br>.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before <br>negotiation</br> for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online <br>negotiation</br> since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the <br>negotiation</br> problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online <br>negotiation</br> and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "<br>negotiation</br> for issue c must end within n time periods from the start of <br>negotiation</br> on the issue.",
                "If an agreement is not reached within this time, then <br>negotiation</br> fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. <br>negotiation</br> for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online <br>negotiation</br> problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online <br>negotiation</br> problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online <br>negotiation</br>.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing <br>negotiation</br> on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the <br>negotiation</br> for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online <br>negotiation</br> problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, <br>negotiation</br> on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), <br>negotiation</br> proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of <br>negotiation</br> on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, <br>negotiation</br> on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As <br>negotiation</br> for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our <br>negotiation</br> problem. 5.",
                "RELATED WORK Work on multi-issue <br>negotiation</br> can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of <br>negotiation</br> depends on the choice of <br>negotiation</br> procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the <br>negotiation</br> agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of <br>negotiation</br> (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential <br>negotiation</br> with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential <br>negotiation</br>, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue <br>negotiation</br> or for online <br>negotiation</br>.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on <br>negotiation</br> regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue <br>negotiation</br> between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal <br>negotiation</br> strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online <br>negotiation</br> where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online <br>negotiation</br> and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online <br>negotiation</br>, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue <br>negotiation</br> with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic <br>negotiation</br> in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for <br>negotiation</br> in electronic commerce.",
                "International Journal of Group Decision and <br>negotiation</br>, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of <br>negotiation</br>.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "Approximate and Online Multi-Issue <br>negotiation</br> Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue <br>negotiation</br> between selfinterested autonomous agents.",
                "There are m > 1 issues for <br>negotiation</br> where each issue is viewed as a pie of size one.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for <br>negotiation</br> are known a priori to the parties.",
                "In order to overcome this computational complexity, we then present <br>negotiation</br> strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium."
            ],
            "translated_annotated_samples": [
                "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido.",
                "Este artículo analiza la <br>negociación</br> bilateral multi-tema entre agentes autónomos interesados en sí mismos.",
                "Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno.",
                "Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de <br>negociación</br> son conocidos de antemano por las partes.",
                "Para superar esta complejidad computacional, presentamos estrategias de <br>negociación</br> que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la <br>negociación</br> bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de <br>negociación</br> son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de <br>negociación</br> que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "key form of interaction": {
            "translated_key": "forma clave de interacción",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a <br>key form of interaction</br> in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "INTRODUCTION Negotiation is a <br>key form of interaction</br> in multiagent systems."
            ],
            "translated_annotated_samples": [
                "INTRODUCCIÓN La negociación es una <br>forma clave de interacción</br> en sistemas multiagentes."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una <br>forma clave de interacción</br> en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad temporal polinómica. También analizamos la diferencia entre el óptimo real y el óptimo aproximado. Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad temporal polinómica. Hay varias direcciones interesantes para trabajos futuros. Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme. Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes. Además de esto, tratamos el número de problemas como conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como incierto. 7. REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones tema por tema: el papel de la información y la preferencia temporal. Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. \n\nCambridge University Press, 1998. [4] S. J. Brams. División justa: desde el corte de pasteles hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman. Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples temas con plazos. Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman. La importancia de la agenda en las negociaciones. Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover. Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno. Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos. Revista de ACM, 22:463-468, 1975. [11] R. Inderst. Negociación de múltiples temas con agenda endógena. Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias e intercambios de valor. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos multiagente. El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas de mochila en línea estocásticos. Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth. Problemas de la mochila: Algoritmos e implementaciones informáticas. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. El MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de Encuentro. MIT Press, 1994. [21] A. Rubinstein. \n\nMIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelado y ruptura estratégica. Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociando con plazos límite. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre la negociación. Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "interaction key form": {
            "translated_key": "clave de interacción",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "multiagent system": {
            "translated_key": "sistemas multiagentes",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in <br>multiagent system</br>s.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in <br>multiagent system</br>s.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "INTRODUCTION Negotiation is a key form of interaction in <br>multiagent system</br>s.",
                "Such negotiations are very common in <br>multiagent system</br>s."
            ],
            "translated_annotated_samples": [
                "INTRODUCCIÓN La negociación es una forma clave de interacción en <br>sistemas multiagentes</br>.",
                "Tales negociaciones son muy comunes en <br>sistemas multiagentes</br>."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en <br>sistemas multiagentes</br>. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en <br>sistemas multiagentes</br>. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad temporal polinómica. También analizamos la diferencia entre el óptimo real y el óptimo aproximado. Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad temporal polinómica. Hay varias direcciones interesantes para trabajos futuros. Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme. Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes. Además de esto, tratamos el número de problemas como conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como incierto. 7. REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones tema por tema: el papel de la información y la preferencia temporal. Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. \n\nCambridge University Press, 1998. [4] S. J. Brams. División justa: desde el corte de pasteles hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman. Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples temas con plazos. Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman. La importancia de la agenda en las negociaciones. Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover. Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno. Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos. Revista de ACM, 22:463-468, 1975. [11] R. Inderst. Negociación de múltiples temas con agenda endógena. Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias e intercambios de valor. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos multiagente. El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas de mochila en línea estocásticos. Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth. Problemas de la mochila: Algoritmos e implementaciones informáticas. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. El MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de Encuentro. MIT Press, 1994. [21] A. Rubinstein. \n\nMIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelado y ruptura estratégica. Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociando con plazos límite. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre la negociación. Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "disputing agent": {
            "translated_key": "agentes en disputa",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which <br>disputing agent</br>s decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "It is a process in which <br>disputing agent</br>s decide how to divide the gains from cooperation."
            ],
            "translated_annotated_samples": [
                "Es un proceso en el que <br>agentes en disputa</br> deciden cómo dividir las ganancias de la cooperación."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que <br>agentes en disputa</br> deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad temporal polinómica. También analizamos la diferencia entre el óptimo real y el óptimo aproximado. Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad temporal polinómica. Hay varias direcciones interesantes para trabajos futuros. Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme. Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes. Además de esto, tratamos el número de problemas como conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como incierto. 7. REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones tema por tema: el papel de la información y la preferencia temporal. Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. \n\nCambridge University Press, 1998. [4] S. J. Brams. División justa: desde el corte de pasteles hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman. Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples temas con plazos. Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman. La importancia de la agenda en las negociaciones. Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover. Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno. Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos. Revista de ACM, 22:463-468, 1975. [11] R. Inderst. Negociación de múltiples temas con agenda endógena. Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias e intercambios de valor. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos multiagente. El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas de mochila en línea estocásticos. Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth. Problemas de la mochila: Algoritmos e implementaciones informáticas. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. El MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de Encuentro. MIT Press, 1994. [21] A. Rubinstein. \n\nMIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelado y ruptura estratégica. Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociando con plazos límite. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre la negociación. Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "gains from cooperation": {
            "translated_key": "las ganancias de la cooperación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the <br>gains from cooperation</br>.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "It is a process in which disputing agents decide how to divide the <br>gains from cooperation</br>."
            ],
            "translated_annotated_samples": [
                "Es un proceso en el que agentes en disputa deciden cómo dividir <br>las ganancias de la cooperación</br>."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir <br>las ganancias de la cooperación</br>. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad temporal polinómica. También analizamos la diferencia entre el óptimo real y el óptimo aproximado. Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad temporal polinómica. Hay varias direcciones interesantes para trabajos futuros. Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme. Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes. Además de esto, tratamos el número de problemas como conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como incierto. 7. REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones tema por tema: el papel de la información y la preferencia temporal. Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. \n\nCambridge University Press, 1998. [4] S. J. Brams. División justa: desde el corte de pasteles hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman. Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples temas con plazos. Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman. La importancia de la agenda en las negociaciones. Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover. Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno. Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos. Revista de ACM, 22:463-468, 1975. [11] R. Inderst. Negociación de múltiples temas con agenda endógena. Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias e intercambios de valor. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos multiagente. El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas de mochila en línea estocásticos. Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth. Problemas de la mochila: Algoritmos e implementaciones informáticas. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. El MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de Encuentro. MIT Press, 1994. [21] A. Rubinstein. \n\nMIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelado y ruptura estratégica. Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociando con plazos límite. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre la negociación. Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "protocol": {
            "translated_key": "protocolo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation <br>protocol</br> [20].",
                "On the basis of this <br>protocol</br>, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers <br>protocol</br> (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers <br>protocol</br>, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same <br>protocol</br> as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers <br>protocol</br>, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the <br>protocol</br> for online negotiation and then obtain an approximate equilibrium.",
                "The <br>protocol</br> is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers <br>protocol</br> described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online <br>protocol</br> that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online <br>protocol</br>).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online <br>protocol</br>), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "That is, they must set the negotiation <br>protocol</br> [20].",
                "On the basis of this <br>protocol</br>, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "The agents use an alternating offers <br>protocol</br> (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers <br>protocol</br>, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same <br>protocol</br> as for singleissue negotiation (described in Section 2)."
            ],
            "translated_annotated_samples": [
                "Es decir, deben establecer el <br>protocolo</br> de negociación [20].",
                "Con base en este <br>protocolo</br>, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación).",
                "Los agentes utilizan un <br>protocolo</br> de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo.",
                "Dado que a hace una oferta en t = 1 y los agentes utilizan el <br>protocolo de ofertas alternadas</br>, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar.",
                "Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo <br>protocolo</br> que para la negociación de un solo tema (descrito en la Sección 2)."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el <br>protocolo</br> de negociación [20]. Con base en este <br>protocolo</br>, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un <br>protocolo</br> de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el <br>protocolo de ofertas alternadas</br>, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo <br>protocolo</br> que para la negociación de un solo tema (descrito en la Sección 2). ",
            "candidates": [],
            "error": [
                [
                    "protocolo",
                    "protocolo",
                    "protocolo",
                    "protocolo de ofertas alternadas",
                    "protocolo"
                ]
            ]
        },
        "strategy": {
            "translated_key": "estrategia",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its <br>strategy</br> (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its <br>strategy</br> so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium <br>strategy</br> for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium <br>strategy</br> for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium <br>strategy</br> for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium <br>strategy</br> for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a <br>strategy</br> profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium <br>strategy</br> for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium <br>strategy</br> for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a <br>strategy</br> without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE <br>strategy</br> is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium <br>strategy</br> for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal <br>strategy</br> and that by the approximate <br>strategy</br> is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal <br>strategy</br> for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "On the basis of this protocol, each agent chooses its <br>strategy</br> (i.e., what offers it should make during the course of negotiation).",
                "For such cases, each participant defines its <br>strategy</br> so as to maximise its individual utility.",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium <br>strategy</br> for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "The equilibrium <br>strategy</br> for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "On the other hand, the equilibrium <br>strategy</br> for the agent that receives an offer is as follows."
            ],
            "translated_annotated_samples": [
                "Con base en este protocolo, cada agente elige su <br>estrategia</br> (es decir, qué ofertas debe hacer durante el transcurso de la negociación).",
                "Para tales casos, cada participante define su <br>estrategia</br> de manera que maximice su utilidad individual.",
                "Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la <br>estrategia</br> de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones.",
                "La <br>estrategia</br> de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las <br>estrategia</br>s de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional.",
                "Por otro lado, la <br>estrategia</br> de equilibrio para el agente que recibe una oferta es la siguiente."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su <br>estrategia</br> (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su <br>estrategia</br> de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la <br>estrategia</br> de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La <br>estrategia</br> de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las <br>estrategia</br>s de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la <br>estrategia</br> de equilibrio para el agente que recibe una oferta es la siguiente. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "indivisible issue": {
            "translated_key": "tema indivisible",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single <br>indivisible issue</br> (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "The two agents negotiate over a single <br>indivisible issue</br> (i)."
            ],
            "translated_annotated_samples": [
                "Los dos agentes negocian sobre un único <br>tema indivisible</br> (i)."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único <br>tema indivisible</br> (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad temporal polinómica. También analizamos la diferencia entre el óptimo real y el óptimo aproximado. Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad temporal polinómica. Hay varias direcciones interesantes para trabajos futuros. Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme. Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes. Además de esto, tratamos el número de problemas como conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como incierto. 7. REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones tema por tema: el papel de la información y la preferencia temporal. Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. \n\nCambridge University Press, 1998. [4] S. J. Brams. División justa: desde el corte de pasteles hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman. Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples temas con plazos. Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman. La importancia de la agenda en las negociaciones. Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover. Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno. Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos. Revista de ACM, 22:463-468, 1975. [11] R. Inderst. Negociación de múltiples temas con agenda endógena. Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias e intercambios de valor. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos multiagente. El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas de mochila en línea estocásticos. Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth. Problemas de la mochila: Algoritmos e implementaciones informáticas. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. El MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de Encuentro. MIT Press, 1994. [21] A. Rubinstein. \n\nMIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelado y ruptura estratégica. Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociando con plazos límite. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre la negociación. Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "equilibrium": {
            "translated_key": "equilibrio",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the <br>equilibrium</br> strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the <br>equilibrium</br> offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an <br>equilibrium</br>.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate <br>equilibrium</br> strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate <br>equilibrium</br> exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the <br>equilibrium</br> strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the <br>equilibrium</br> offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the <br>equilibrium</br> for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the <br>equilibrium</br> strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the <br>equilibrium</br> offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an <br>equilibrium</br>.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate <br>equilibrium</br> strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate <br>equilibrium</br> exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the <br>equilibrium</br> for multi-issue negotiation and show that finding <br>equilibrium</br> offers is an NP-hard problem.",
                "We then present an approximate <br>equilibrium</br> and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its <br>equilibrium</br> strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) <br>equilibrium</br> offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the <br>equilibrium</br> offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the <br>equilibrium</br> outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible <br>equilibrium</br> outcomes.",
                "On the basis of the above <br>equilibrium</br> for single-issue negotiation with complete information, we first obtain the <br>equilibrium</br> for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate <br>equilibrium</br>. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the <br>equilibrium</br> strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the <br>equilibrium</br> offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the <br>equilibrium</br> package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the <br>equilibrium</br> strategy for agent a (respectively b). 3.2 <br>equilibrium</br> strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the <br>equilibrium</br> for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash <br>equilibrium</br>.",
                "The <br>equilibrium</br> strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the <br>equilibrium</br> strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own <br>equilibrium</br> offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the <br>equilibrium</br> strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The <br>equilibrium</br> strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the <br>equilibrium</br> strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above <br>equilibrium</br> strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the <br>equilibrium</br> offers.",
                "But, in general, it is not computationally easy to find the <br>equilibrium</br> offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the <br>equilibrium</br> offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the <br>equilibrium</br> offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding <br>equilibrium</br> for the package deal is also NP-hard. 3.3 Approximate <br>equilibrium</br> Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an <br>equilibrium</br>.",
                "The traditional approach for overcoming the computational complexity in finding an <br>equilibrium</br> has been to use an approximate <br>equilibrium</br> (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash <br>equilibrium</br> if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate <br>equilibrium</br> to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate <br>equilibrium</br> offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the <br>equilibrium</br> package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate <br>equilibrium</br> strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate <br>equilibrium</br> for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash <br>equilibrium</br>.",
                "The <br>equilibrium</br> strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the <br>equilibrium</br> strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate <br>equilibrium</br> offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate <br>equilibrium</br> package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate <br>equilibrium</br> package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate <br>equilibrium</br> package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate <br>equilibrium</br> package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate <br>equilibrium</br> offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the <br>equilibrium</br> offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate <br>equilibrium</br> offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate <br>equilibrium</br>.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an <br>equilibrium</br>.",
                "The following theorem characterizes an approximate <br>equilibrium</br> for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant <br>equilibrium</br> solution is that of a Bayes Nash <br>equilibrium</br> (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant <br>equilibrium</br> solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this <br>equilibrium</br> using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash <br>equilibrium</br>.",
                "The <br>equilibrium</br> strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the <br>equilibrium</br> strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the <br>equilibrium</br> offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate <br>equilibrium</br> offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the <br>equilibrium</br> for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate <br>equilibrium</br> for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the <br>equilibrium</br> offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an <br>equilibrium</br>.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate <br>equilibrium</br> exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect <br>equilibrium</br> in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "For such negotiations, we first obtain the <br>equilibrium</br> strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the <br>equilibrium</br> offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an <br>equilibrium</br>.",
                "The time complexity of the approximate <br>equilibrium</br> strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Specifically, we show that an approximate <br>equilibrium</br> exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) ."
            ],
            "translated_annotated_samples": [
                "Para tales negociaciones, primero obtenemos las estrategias de <br>equilibrio</br> para el caso en el que los temas de negociación son conocidos de antemano por las partes.",
                "Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de <br>equilibrio</br> es un problema NP-duro, incluso en un entorno de información completa.",
                "Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un <br>equilibrio</br>.",
                "La complejidad temporal de las estrategias de <br>equilibrio</br> aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo.",
                "Específicamente, demostramos que existe un <br>equilibrio</br> aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m)."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de <br>equilibrio</br> para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de <br>equilibrio</br> es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un <br>equilibrio</br>. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de <br>equilibrio</br> aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un <br>equilibrio</br> aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "time constraint": {
            "translated_key": "restricciones de tiempo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have <br>time constraint</br>s in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and <br>time constraint</br>s.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have <br>time constraint</br>s in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has <br>time constraint</br>s in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with <br>time constraint</br>s.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "The agents have <br>time constraint</br>s in the form of both deadlines and discount factors.",
                "Thus, we consider negotiations in which there is incomplete information and <br>time constraint</br>s.",
                "Also, agents typically have <br>time constraint</br>s in the form of both deadlines and discount factors.",
                "Each agent has <br>time constraint</br>s in the form of deadlines and discount factors.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with <br>time constraint</br>s."
            ],
            "translated_annotated_samples": [
                "Los agentes tienen <br>restricciones de tiempo</br> en forma de plazos y factores de descuento.",
                "Por lo tanto, consideramos negociaciones en las que hay información incompleta y <br>restricciones de tiempo</br>.",
                "Además, los agentes suelen tener <br>restricciones de tiempo</br> en forma de plazos y factores de descuento.",
                "Cada agente tiene <br>restricciones de tiempo</br> en forma de plazos y factores de descuento.",
                "CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con <br>restricciones de tiempo</br>."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen <br>restricciones de tiempo</br> en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y <br>restricciones de tiempo</br>. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener <br>restricciones de tiempo</br> en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene <br>restricciones de tiempo</br> en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con <br>restricciones de tiempo</br>. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "relative error": {
            "translated_key": "error relativo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the <br>relative error</br> (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the <br>relative error</br>.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the <br>relative error</br> (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the <br>relative error</br>.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the <br>relative error</br> [3, 1].",
                "The <br>relative error</br> is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose <br>relative error</br> is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with <br>relative error</br> at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the <br>relative error</br> for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the <br>relative error</br> in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "We also analyze the <br>relative error</br> (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the <br>relative error</br>.",
                "We also analyze the <br>relative error</br> (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the <br>relative error</br>.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the <br>relative error</br> [3, 1]."
            ],
            "translated_annotated_samples": [
                "También analizamos el <br>error relativo</br> (es decir, la diferencia entre el óptimo real y el aproximado).",
                "La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el <br>error relativo</br>.",
                "También analizamos el <br>error relativo</br> (es decir, la diferencia entre el óptimo real y el aproximado).",
                "La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el <br>error relativo</br>.",
                "La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el <br>error relativo</br> [3, 1]."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el <br>error relativo</br> (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el <br>error relativo</br>. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el <br>error relativo</br> (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el <br>error relativo</br>. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el <br>error relativo</br> [3, 1]. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "game-theory": {
            "translated_key": "teoría de juegos",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "approximation": {
            "translated_key": "aproximación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its <br>approximation</br> error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an <br>approximation</br> forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie <br>approximation</br> algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the <br>approximation</br>.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial <br>approximation</br> algorithms.",
                "An <br>approximation</br> algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial <br>approximation</br> method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed <br>approximation</br> algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims <br>approximation</br> method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims <br>approximation</br> method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the <br>approximation</br> error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and <br>approximation</br>: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "Online Computation and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast <br>approximation</br> algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "We then present an approximate equilibrium and evaluate its <br>approximation</br> error.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an <br>approximation</br> forms an equilibrium.",
                "Before doing so, we give a brief overview of the key ideas that underlie <br>approximation</br> algorithms.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the <br>approximation</br>.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial <br>approximation</br> algorithms."
            ],
            "translated_annotated_samples": [
                "Luego presentamos un equilibrio aproximado y evaluamos su error de <br>aproximación</br>.",
                "Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha <br>aproximación</br> forma un equilibrio.",
                "Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de <br>aproximación</br>.",
                "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la <br>aproximación</br>.",
                "En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de <br>aproximación</br> polinómica completa."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de <br>aproximación</br>. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha <br>aproximación</br> forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de <br>aproximación</br>. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la <br>aproximación</br>. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de <br>aproximación</br> polinómica completa. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "online computation": {
            "translated_key": "computación en línea",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Approximate and Online Multi-Issue Negotiation Shaheen S. Fatima Department of Computer Science University of Liverpool Liverpool L69 3BX, UK.",
                "shaheen@csc.liv.ac.uk Michael Wooldridge Department of Computer Science University of Liverpool Liverpool L69 3BX, UK. mjw@csc.liv.ac.uk Nicholas R. Jennings School of Electronics and Computer Science University of Southampton Southampton SO17 1BJ, UK. nrj@ecs.soton.ac.uk ABSTRACT This paper analyzes bilateral multi-issue negotiation between selfinterested autonomous agents.",
                "The agents have time constraints in the form of both deadlines and discount factors.",
                "There are m > 1 issues for negotiation where each issue is viewed as a pie of size one.",
                "The issues are indivisible (i.e., individual issues cannot be split between the parties; each issue must be allocated in its entirety to either agent).",
                "Here different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "For such negotiations, we first obtain the equilibrium strategies for the case where the issues for negotiation are known a priori to the parties.",
                "Then, we analyse their time complexity and show that finding the equilibrium offers is an NP-hard problem, even in a complete information setting.",
                "In order to overcome this computational complexity, we then present negotiation strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "Categories and Subject Descriptors I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Design, Theory 1.",
                "INTRODUCTION Negotiation is a key form of interaction in multiagent systems.",
                "It is a process in which disputing agents decide how to divide the gains from cooperation.",
                "Since this decision is made jointly by the agents themselves [20, 19, 13, 15], each party can only obtain what the other is prepared to allow them.",
                "Now, the simplest form of negotiation involves two agents and a single issue.",
                "For example, consider a scenario in which a buyer and a seller negotiate on the price of a good.",
                "To begin, the two agents are likely to differ on the price at which they believe the trade should take place, but through a process of joint decision-making they either arrive at a price that is mutually acceptable or they fail to reach an agreement.",
                "Since agents are likely to begin with different prices, one or both of them must move toward the other, through a series of offers and counter offers, in order to obtain a mutually acceptable outcome.",
                "However, before the agents can actually perform such negotiations, they must decide the rules for making offers and counter offers.",
                "That is, they must set the negotiation protocol [20].",
                "On the basis of this protocol, each agent chooses its strategy (i.e., what offers it should make during the course of negotiation).",
                "Given this context, this work focuses on competitive scenarios with self-interested agents.",
                "For such cases, each participant defines its strategy so as to maximise its individual utility.",
                "However, in most bilateral negotiations, the parties involved need to settle more than one issue.",
                "For this case, the issues may be divisible or indivisible [4].",
                "For the former, the problem for the agents is to decide how to split each issue between themselves [21].",
                "For the latter, the individual issues cannot be divided.",
                "An issue, in its entirety, must be allocated to either of the two agents.",
                "Since the agents value different issues differently, they must come to terms about who will take which issue.",
                "To date, most of the existing work on multi-issue negotiation has focussed on the former case [7, 2, 5, 23, 11, 6].",
                "However, in many real-world settings, the issues are indivisible.",
                "Hence, our focus here is on negotiation for indivisible issues.",
                "Such negotiations are very common in multiagent systems.",
                "For example, consider the case of task allocation between two agents.",
                "There is a set of tasks to be carried out and different agents have different preferences for the tasks.",
                "The tasks cannot be partitioned; a task must be carried out by one agent.",
                "The problem then is for the agents to negotiate about who will carry out which task.",
                "A key problem in the study of multi-issue negotiation is to determine the equilibrium strategies.",
                "An equally important problem, especially in the context of software agents, is to find the time complexity of computing the equilibrium offers.",
                "However, such computational issues have so far received little attention.",
                "As we will show, this is mainly due to the fact that existing work (describe in Section 5) has mostly focused on negotiation for divisible issues 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS and finding the equilibrium for this case is computationally easier than that for the case of indivisible issues.",
                "Our primary objective is, therefore, to answer the computational questions for the latter case for the types of situations that are commonly faced by agents in real-world contexts.",
                "Thus, we consider negotiations in which there is incomplete information and time constraints.",
                "Incompleteness of information on the part of negotiators is a common feature of most practical negotiations.",
                "Also, agents typically have time constraints in the form of both deadlines and discount factors.",
                "Deadlines are an essential element since negotiation cannot go on indefinitely, rather it must end within a reasonable time limit.",
                "Likewise, discount factors are essential since the goods may be perishable or their value may decline due to inflation.",
                "Moreover, the strategic behaviour of agents with deadlines and discount factors differs from those without (see [21] for single issue bargaining without deadlines and [23, 13] for bargaining with deadlines and discount factors in the context of divisible issues).",
                "Given this, we consider indivisible issues and first analyze the strategic behaviour of agents to obtain the equilibrium strategies for the case where all the issues for negotiation are known a priori to both agents.",
                "For this case, we show that the problem of finding the equilibrium offers is NP-hard, even in a complete information setting.",
                "Then, in order to overcome the problem of time complexity, we present strategies that are approximately optimal but computationally efficient, and show that they form an equilibrium.",
                "We also analyze the relative error (i.e., the difference between the true optimum and the approximate).",
                "The time complexity of the approximate equilibrium strategies is O(nm/ 2 ) where n is the negotiation deadline and the relative error.",
                "Finally, we extend the analysis to online negotiation where different issues become available at different time points and the agents are uncertain about their valuations for these issues.",
                "Specifically, we show that an approximate equilibrium exists for online negotiation and show that the expected difference between the optimum and the approximate is O( √ m) .",
                "These approximate strategies also have polynomial time complexity.",
                "In so doing, our contribution lies in analyzing the computational complexity of the above multi-issue negotiation problem, and finding the approximate and online equilibria.",
                "No previous work has determined these equilibria.",
                "Since software agents have limited computational resources, our results are especially relevant to such resource bounded agents.",
                "The remainder of the paper is organised as follows.",
                "We begin by giving a brief overview of single-issue negotiation in Section 2.",
                "In Section 3, we obtain the equilibrium for multi-issue negotiation and show that finding equilibrium offers is an NP-hard problem.",
                "We then present an approximate equilibrium and evaluate its approximation error.",
                "Section 4 analyzes online multi-issue negotiation.",
                "Section 5 discusses the related literature and Section 6 concludes. 2.",
                "SINGLE-ISSUE NEGOTIATION We adopt the single issue model of [27] because this is a model where, during negotiation, the parties are allowed to make offers from a set of discrete offers.",
                "Since our focus is on indivisible issues (i.e., parties are allowed to make one of two possible offers: zero or one), our scenario fits in well with [27].",
                "Hence we use this basic single issue model and extend it to multiple issues.",
                "Before doing so, we give an overview of this model and its equilibrium strategies.",
                "There are two strategic agents: a and b.",
                "Each agent has time constraints in the form of deadlines and discount factors.",
                "The two agents negotiate over a single indivisible issue (i).",
                "This issue is a pie of size 1 and the agents want to determine who gets the pie.",
                "There is a deadline (i.e., a number of rounds by which negotiation must end).",
                "Let n ∈ N+ denote this deadline.",
                "The agents use an alternating offers protocol (as the one of Rubinstein [18]), which proceeds through a series of time periods.",
                "One of the agents, say a, starts negotiation in the first time period (i.e., t = 1) by making an offer (xi = 0 or 1) to b.",
                "Agent b can either accept or reject the offer.",
                "If it accepts, negotiation ends in an agreement with a getting xi and b getting yi = 1 − xi.",
                "Otherwise, negotiation proceeds to the next time period, in which agent b makes a counter-offer.",
                "This process of making offers continues until one of the agents either accepts an offer or quits negotiation (resulting in a conflict).",
                "Thus, there are three possible actions an agent can take during any time period: accept the last offer, make a new counter-offer, or quit the negotiation.",
                "An essential feature of negotiations involving alternating offers is that the agents utilities decrease with time [21].",
                "Specifically, the decrease occurs at each step of offer and counteroffer.",
                "This decrease is represented with a discount factor denoted 0 < δi ≤ 1 for both1 agents.",
                "Let [xt i, yt i ] denote the offer made at time period t where xt i and yt i denote the share for agent a and b respectively.",
                "Then, for a given pie, the set of possible offers is: {[xt i, yt i ] : xt i = 0 or 1, yt i = 0 or 1, and xt i + yt i = 1} At time t, if a and b receive a share of xt i and yt i respectively, then their utilities are: ua i (xt i, t) = j xt i × δt−1 if t ≤ n 0 otherwise ub i (yt i , t) = j yt i × δt−1 if t ≤ n 0 otherwise The conflict utility (i.e., the utility received in the event that no deal is struck) is zero for both agents.",
                "For the above setting, the agents reason as follows in order to determine what to offer at t = 1.",
                "We let A(1) (B(1)) denote as (bs) equilibrium offer for the first time period.",
                "Let agent a denote the first mover (i.e., at t = 1, a proposes to b who should get the pie).",
                "To begin, consider the case where the deadline for both agents is n = 1.",
                "If b accepts, the division occurs as agreed; if not, neither agent gets anything (since n = 1 is the deadline).",
                "Here, a is in a powerful position and is able to propose to keep 100 percent of the pie and give nothing to b 2 .",
                "Since the deadline is n = 1, b accepts this offer and agreement takes place in the first time period.",
                "Now, consider the case where the deadline is n = 2.",
                "In order to decide what to offer in the first round, a looks ahead to t = 2 and reasons backwards.",
                "Agent a reasons that if negotiation proceeds to the second round, b will take 100 percent of the pie by offering [0, 1] and leave nothing for a.",
                "Thus, in the first time period, if a offers b anything less than the whole pie, b will reject the offer.",
                "Hence, during the first time period, agent a offers [0, 1].",
                "Agent b accepts this and an agreement occurs in the first time period.",
                "In general, if the deadline is n, negotiation proceeds as follows.",
                "As before, agent a decides what to offer in the first round by looking ahead as far as t = n and then reasoning backwards.",
                "Agent as 1 Having a different discount factor for different agents only makes the presentation more involved without leading to any changes in the analysis of the strategic behaviour of the agents or the time complexity of finding the equilibrium offers.",
                "Hence we have a single discount factor for both agents. 2 It is possible that b may reject such a proposal.",
                "However, irrespective of whether b accepts or rejects the proposal, it gets zero utility (because the deadline is n = 1).",
                "Thus, we assume that b accepts as offer. 952 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) offer for t = 1 depends on who the offering agent is for the last time period.",
                "This, in turn, depends on whether n is odd or even.",
                "Since a makes an offer at t = 1 and the agents use the alternating offers protocol, the offering agent for the last time period is b if n is even and it is a if n is odd.",
                "Thus, depending on whether n is odd or even, a makes the following offer at t = 1: A(1) = j OFFER [1, 0] IF ODD n ACCEPT IF bs TURN B(1) = j OFFER [0, 1] IF EVEN n ACCEPT IF as TURN Agent b accepts this offer and negotiation ends in the first time period.",
                "Note that the equilibrium outcome depends on who makes the first move.",
                "Since we have two agents and either of them could move first, we get two possible equilibrium outcomes.",
                "On the basis of the above equilibrium for single-issue negotiation with complete information, we first obtain the equilibrium for multiple issues and then show that computing these offers is a hard problem.",
                "We then present a time efficient approximate equilibrium. 3.",
                "MULTI-ISSUE NEGOTIATION We first analyse the complete information setting.",
                "This section forms the base which we extend to the case of information uncertainty in Section 4.",
                "Here a and b negotiate over m > 1 indivisible issues.",
                "These issues are m distinct pies and the agents want to determine how to distribute the pies between themselves.",
                "Let S = {1, 2, . . . , m} denote the set of m pies.",
                "As before, each pie is of size 1.",
                "Let the discount factor for issue c, where 1 ≤ c ≤ m, be 0 < δc ≤ 1.",
                "For each issue, let n denote each agents deadline.",
                "In the offer for time period t (where 1 ≤ t ≤ n), agent as (bs) share for each of the m issues is now represented as an m element vector xt ∈ Bm (yt ∈ Bm ) where B denotes the set {0, 1}.",
                "Thus, if agent as share for issue c at time t is xt c, then agent bs share is yt c = (1−xt c).",
                "The shares for a and b are together represented as the package [xt , yt ].",
                "As is traditional in multi-issue utility theory, we define an agents cumulative utility using the standard additive form [12].",
                "The functions Ua : Bm × Bm × N+ → R and Ub : Bm × Bm × N+ → R give the cumulative utilities for a and b respectively at time t. These are defined as follows: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) if t ≤ n 0 otherwise (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) if t ≤ n 0 otherwise (2) where ka ∈ Nm + denotes an m element vector of constants for agent a and kb ∈ Nm + that for b.",
                "Here N+ denotes the set of positive integers.",
                "These vectors indicate how the agents value different issues.",
                "For example, if ka c > ka c+1, then agent a values issue c more than issue c + 1.",
                "Likewise for agent b.",
                "In other words, the m issues are perfect substitutes (i.e., all that matters to an agent is its total utility for all the m issues and not that for any subset of them).",
                "In all the settings we study, the issues will be perfect substitutes.",
                "To begin each agent has complete information about all negotiation parameters (i.e., n, m, ka c , kb c, and δc for 1 ≤ c ≤ m).",
                "Now, multi-issue negotiation can be done using different procedures.",
                "Broadly speaking, there are three key procedures for negotiating multiple issues [19]: 1. the package deal procedure where all the issues are settled together as a bundle, 2. the sequential procedure where the issues are discussed one after another, and 3. the simultaneous procedure where the issues are discussed in parallel.",
                "Between these three procedures, the package deal is known to generate Pareto optimal outcomes [19, 6].",
                "Hence we adopt it here.",
                "We first give a brief description of the procedure and then determine the equilibrium strategies for it. 3.1 The package deal procedure In this procedure, the agents use the same protocol as for singleissue negotiation (described in Section 2).",
                "However, an offer for the package deal includes a proposal for each issue under negotiation.",
                "Thus, for m issues, an offer includes m divisions, one for each issue.",
                "Agents are allowed to either accept a complete offer (i.e., all m issues) or reject a complete offer.",
                "An agreement can therefore take place either on all m issues or on none of them.",
                "As per the single-issue negotiation, an agent decides what to offer by looking ahead and reasoning backwards.",
                "However, since an offer for the package deal includes a share for all the m issues, the agents can now make tradeoffs across the issues in order to maximise their cumulative utilities.",
                "For 1 ≤ c ≤ m, the equilibrium offer for issue c at time t is denoted as [at c, bt c] where at c and bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [at , bt ] where at ∈ Bm (bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, for 1 ≤ c ≤ m, δc is the discount factor for issue c. The symbols 0 and 1 denote m element vectors of zeroes and ones respectively.",
                "Note that for 1 ≤ t ≤ n, at c + bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let A(t) (respectively B(t)) denote the equilibrium strategy for agent a (respectively b). 3.2 Equilibrium strategies As mentioned in Section 1, the package deal allows agents to make tradeoffs.",
                "We let TRADEOFFA (TRADEOFFB) denote agent as (bs) function for making tradeoffs.",
                "We let P denote a set of parameters to the procedure TRADEOFFA (TRADEOFFB) where P = {ka , kb , δ, m}.",
                "Given this, the following theorem characterises the equilibrium for the package deal procedure.",
                "THEOREM 1.",
                "For the package deal procedure, the following strategies form a Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 953 where UA(t) = Ua ([at+1 , bt+1 ], t + 1) and UB(t) = Ub ([at+1 , bt+1 ], t + 1).",
                "PROOF.",
                "We look ahead to the last time period (i.e., t = n) and then reason backwards.",
                "To begin, if negotiation reaches the deadline (n), then the agent whose turn it is takes everything and leaves nothing for its opponent.",
                "Hence, we get the strategies A(n) and B(n) as given in the statement of the theorem.",
                "In all the preceding time periods (t < n), the offering agent proposes a package that gives its opponent a cumulative utility equal to what the opponent would get from its own equilibrium offer for the next time period.",
                "During time period t, either a or b could be the offering agent.",
                "Consider the case where a makes an offer at t. The package that a offers at t gives b a cumulative utility of Ub ([at+1 , bt+1 ], t + 1).",
                "However, since there is more than one issue, there is more than one package that gives b this cumulative utility.",
                "From among these packages, a offers the one that maximises its own cumulative utility (because it is a utility maximiser).",
                "Thus, the problem for a is to find the package [at , bt ] so as to: maximize mX c=1 ka c (1 − bt c)δt−1 c (3) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m where UB(t), δt−1 c , ka c , and kb c are constants and bt c (1 ≤ c ≤ m) is a variable.",
                "Assume that the function TRADEOFFA takes parameters P, UB(t), and t, to solve the maximisation problem given in Equation 3 and returns the corresponding package.",
                "If there is more than one package that solves Equation 3, then TRADEOFFA returns any one of them (because agent a gets equal utility from all such packages and so does agent b).",
                "The function TRADEOFFB for agent b is analogous to that for a.",
                "On the other hand, the equilibrium strategy for the agent that receives an offer is as follows.",
                "For time period t, let b denote the receiving agent.",
                "Then, b accepts [xt , yt ] if UB(t) ≤ Ub ([xt , yt ], t), otherwise it rejects the offer because it can get a higher utility in the next time period.",
                "The equilibrium strategy for a as receiving agent is defined analogously.",
                "In this way, we reason backwards and obtain the offers for the first time period.",
                "Thus, we get the equilibrium strategies (A(t) and B(t)) given in the statement of the theorem.",
                "The following example illustrates how the agents make tradeoffs using the above equilibrium strategies.",
                "EXAMPLE 1.",
                "Assume there are m = 2 issues for negotiation, the deadline for both issues is n = 2, and the discount factor for both issues for both agents is δ = 1/2.",
                "Let ka 1 = 3, ka 2 = 1, kb 1 = 1, and kb 2 = 5.",
                "Let agent a be the first mover.",
                "By using backward reasoning, a knows that if negotiation reaches the second time period (which is the deadline), then b will get a hundred percent of both the issues.",
                "This gives b a cumulative utility of UB(2) = 1/2 + 5/2 = 3.",
                "Thus, in the first time period, if b gets anything less than a utility of 3, it will reject as offer.",
                "So, at t = 1, a offers the package where it gets issue 1 and b gets issue 2.",
                "This gives a cumulative utility of 3 to a and 5 to b.",
                "Agent b accepts the package and an agreement takes place in the first time period.",
                "The maximization problem in Equation 3 can be viewed as the 0-1 knapsack problem3 .",
                "In the 0-1 knapsack problem, we have a set 3 Note that for the case of divisible issues this is the fractional knapof m items where each item has a profit and a weight.",
                "There is a knapsack with a given capacity.",
                "The objective is to fill the knapsack with items so as to maximize the cumulative profit of the items in the knapsack.",
                "This problem is analogous to the negotiation problem we want to solve (i.e., the maximization problem of Equation 3).",
                "Since ka c and δt−1 c are constants, maximizing Pm c=1 ka c (1−bt c)δt−1 c is the same as minimizing Pm c=1 ka c bt c. Hence Equation 3 can be written as: minimize mX c=1 ka c bt c (4) such that mX c=1 bt ckb c ≥ UB(t) bt c = 0 or 1 for 1 ≤ c ≤ m Equation 4 is a minimization version of the standard 0-1 knapsack problem4 with m items where ka c represents the profit for item c, kb c the weight for item c, and UB(t) the knapsack capacity.",
                "Example 1 was for two issues and so it was easy to find the equilibrium offers.",
                "But, in general, it is not computationally easy to find the equilibrium offers of Theorem 1.",
                "The following theorem proves this.",
                "THEOREM 2.",
                "For the package deal procedure, the problem of finding the equilibrium offers given in Theorem 1 is NP-hard.",
                "PROOF.",
                "Finding the equilibrium offers given in Theorem 1 requires solving the 0-1 knapsack problem given in Equation 4.",
                "Since the 0-1 knapsack problem is NP-hard [17], the problem of finding equilibrium for the package deal is also NP-hard. 3.3 Approximate equilibrium Researchers in the area of algorithms have found time efficient methods for computing approximate solutions to 0-1 knapsack problems [10].",
                "Hence we use these methods to find a solution to our negotiation problem.",
                "At this stage, we would like to point out the main difference between solving the 0-1 knapsack problem and solving our negotiation problem.",
                "The 0-1 knapsack problem involves decision making by a single agent regarding which items to place in the knapsack.",
                "On the other hand, our negotiation problem involves two players and they are both strategic.",
                "Hence, in our case, it is not enough to just find an approximate solution to the knapsack problem, we must also show that such an approximation forms an equilibrium.",
                "The traditional approach for overcoming the computational complexity in finding an equilibrium has been to use an approximate equilibrium (see [14, 26] for example).",
                "In this approach, a strategy profile is said to form an approximate Nash equilibrium if neither agent can gain more than the constant by deviating.",
                "Hence, our aim is to use the solution to the 0-1 knapsack problem proposed in [10] and show that it forms an approximate equilibrium to our negotiation problem.",
                "Before doing so, we give a brief overview of the key ideas that underlie approximation algorithms.",
                "There are two key issues in the design of approximate algorithms [1]: sack problem.",
                "The factional knapsack problem is computationally easy; it can be solved in time polynomial in the number of items in the knapsack problem [17].",
                "In contrast, the 0-1 knapsack problem is computationally hard. 4 Note that for the standard 0-1 knapsack problem the weights, profits and the capacity are positive integers.",
                "However a 0-1 knapsack problem with fractions and non positive values can easily be transformed to one with positive integers in time linear in m using the methods given in [8, 17]. 954 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 1. the quality of their solution, and 2. the time taken to compute the approximation.",
                "The quality of an approximate algorithm is determined by comparing its performance to that of the optimal algorithm and measuring the relative error [3, 1].",
                "The relative error is defined as (z−z∗ )/z∗ where z is the approximate solution and z∗ the optimal one.",
                "In general, we are interested in finding approximate algorithms whose relative error is bounded from above by a certain constant , i.e., (z − z∗ )/z∗ ≤ (5) Regarding the second issue of time complexity, we are interested in finding fully polynomial approximation algorithms.",
                "An approximation algorithm is said to be fully polynomial if for any > 0 it finds a solution satisfying Equation 5 in time polynomially bounded by size of the problem (for the 0-1 knapsack problem, the problem size is equal to the number of items) and by 1/ [1].",
                "For the 0-1 knapsack problem, Ibarra and Kim [10] presented a fully polynomial approximation method.",
                "This method is based on dynamic programming.",
                "It is a parametric method that takes as a parameter and for any > 0, finds a heuristic solution z with relative error at most , such that the time and space complexity grow polynomially with the number of items m and 1/ .",
                "More specifically, the space and time complexity are both O(m/ 2 ) and hence polynomial in m and 1/ (see [10] for the detailed approximation algorithm and proof of time and space complexity).",
                "Since the Ibarra and Kim method is fully polynomial, we use it to solve our negotiation problem.",
                "This is done as follows.",
                "For agent a, let APRX-TRADEOFFA(P, UB(t), t, ) denote a procedure that returns an approximate solution to Equation 4 using the Ibarra and Kim method.",
                "The procedure APRX-TRADEOFFB(P, UA(t), t, ) for agent b is analogous.",
                "For 1 ≤ c ≤ m, the approximate equilibrium offer for issue c at time t is denoted as [¯at c,¯bt c] where ¯at c and ¯bt c denote the shares for agent a and b respectively.",
                "We denote the equilibrium package at time t as [¯at ,¯bt ] where ¯at ∈ Bm (¯bt ∈ Bm ) is an m element vector that denotes as (bs) share for each of the m issues.",
                "Also, as before, for 1 ≤ c ≤ m, δc is the discount factor for issue c. Note that for 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (i.e., the sum of the agents shares (at time t) for each pie is one).",
                "Finally, for time period t (for 1 ≤ t ≤ n) we let ¯A(t) (respectively ¯B(t)) denote the approximate equilibrium strategy for agent a (respectively b).The following theorem uses this notation and characterizes an approximate equilibrium for multi-issue negotiation.",
                "THEOREM 3.",
                "For the package deal procedure, the following strategies form an approximate Nash equilibrium.",
                "The equilibrium strategy for t = n is: ¯A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN ¯B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: ¯A(t) = 8 < : OFFER APRX-TRADEOFFA(P, UB(t), t, ) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN ¯B(t) = 8 < : OFFER APRX-TRADEOFFB(P, UA(t), t, ) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement takes place at t = 1.",
                "PROOF.",
                "As in the proof for Theorem 1, we use backward reasoning.",
                "We first obtain the strategies for the last time period t = n. It is straightforward to get these strategies; the offering agent gets a hundred percent of all the issues.",
                "Then for t = n − 1, the offering agent must solve the maximization problem of Equation 4 by substituting t = n−1 in it.",
                "For agent a (b), this is done by APPROX-TRADEOFFA (APPROX-TRADEOFFB).",
                "These two functions are nothing but the Ibarra and Kims approximation method for solving the 0-1 knapsack problem.",
                "These two functions take as a parameter and use the Ibarra and Kims approximation method to return a package that approximately maximizes Equation 4.",
                "Thus, the relative error for these two functions is the same as that for Ibarra and Kims method (i.e., it is at most where is given in Equation 5).",
                "Assume that a is the offering agent for t = n − 1.",
                "Agent a must offer a package that gives b a cumulative utility equal to what it would get from its own approximate equilibrium offer for the next time period (i.e., Ub ([¯at+1 ,¯bt+1 ], t + 1) where [¯at+1 ,¯bt+1 ] is the approximate equilibrium package for the next time period).",
                "Recall that for the last time period, the offering agent gets a hundred percent of all the issues.",
                "Since a is the offering agent for t = n − 1 and the agents use the alternating offers protocol, it is bs turn at t = n. Thus Ub ([¯at+1 ,¯bt+1 ], t + 1) is equal to bs cumulative utility from receiving a hundred percent of all the issues.",
                "Using this utility as the capacity of the knapsack, a uses APPROX-TRADEOFFA and obtains the approximate equilibrium package for t = n − 1.",
                "On the other hand, if b is the offering agent at t = n − 1, it uses APPROX-TRADEOFFB to obtain the approximate equilibrium package.",
                "In the same way for t < n − 1, the offering agent (say a) uses APPROX-TRADEOFFA to find an approximate equilibrium package that gives b a utility of Ub ([¯at+1 ,¯bt+1 ], t + 1).",
                "By reasoning backwards, we obtain the offer for time period t = 1.",
                "If a (b) is the offering agent, it proposes the offer APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )).",
                "The receiving agent accepts the offer.",
                "This is because the relative error in its cumulative utility from the offer is at most .",
                "An agreement therefore takes place in the first time period.",
                "THEOREM 4.",
                "The time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "PROOF.",
                "The time complexity of APPROX-TRADEOFFA and APPROXTRADEOFFB is the same as the time complexity of the Ibarra and Kim method [10] i.e., O(m/ 2 )).",
                "In order to find the equilibrium offer for the first time period using backward reasoning, APPROXTRADEOFFA (or APPROX- TRADEOFFB) is invoked n times.",
                "Hence the time complexity of finding the approximate equilibrium offer for the first time period is O(nm/ 2 ).",
                "This analysis was done in a complete information setting.",
                "However an extension of this analysis to an incomplete information setting where the agents have probability distributions over some uncertain parameter is straightforward, as long as the negotiation is done offline; i.e., the agents know their preference for each individual issue before negotiation begins.",
                "For instance, consider the case where different agents have different discount factors, and each agent is uncertain about its opponents discount factor although it knows its own.",
                "This uncertainty is modelled with a probability distribution over the possible values for the opponents discount factor and having this distribution as common knowledge to the agents.",
                "All our analysis for the complete information setting still holds for The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 955 this incomplete information setting, except for the fact that an agent must now use the given probability distribution and find its opponents expected utility instead of its actual utility.",
                "Hence, instead of analyzing an incomplete information setting for offline negotiation, we focus on online multi-issue negotiation. 4.",
                "ONLINE MULTI-ISSUE NEGOTIATION We now consider a more general and, arguably more realistic, version of multi-issue negotiation, where the agents are uncertain about the issues they will have to negotiate about in future.",
                "In this setting, when negotiating an issue, the agents know that they will negotiate more issues in the future, but they are uncertain about the details of those issues.",
                "As before, let m be the total number of issues that are up for negotiation.",
                "The agents have a probability distribution over the possible values of ka c and kb c. For 1 ≤ c ≤ m let ka c and kb c be uniformly distributed over [0,1].",
                "This probability distribution, n, and m are common knowledge to the agents.",
                "However, the agents come to know ka c and kb c only just before negotiation for issue c begins.",
                "Once the agents reach an agreement on issue c, it cannot be re-negotiated.",
                "This scenario requires online negotiation since the agents must make decisions about an issue prior to having the information about the future issues [3].",
                "We first give a brief introduction to online problems and then draw an analogy between the online knapsack problem and the negotiation problem we want to solve.",
                "In an online problem, data is given to the algorithm incrementally, one unit at a time [3].",
                "The online algorithm must also produce the output incrementally: after seeing i units of input it must output the ith unit of output.",
                "Since decisions about the output are made with incomplete knowledge about the entire input, an online algorithm often cannot produce an optimal solution.",
                "Such an algorithm can only approximate the performance of the optimal algorithm that sees all the inputs in advance.",
                "In the design of online algorithms, the main aim is to achieve a performance that is close to that of the optimal offline algorithm on each input.",
                "An online algorithm is said to be stochastic if it makes decisions on the basis of the probability distributions for the future inputs.",
                "The performance of stochastic online algorithms is assessed in terms of the expected difference between the optimum and the approximate solution (denoted E[z∗ m −zm] where z∗ m is the optimal and zm the approximate solution).",
                "Note that the subscript m is used to indicate the fact that this difference depends on m. We now describe the protocol for online negotiation and then obtain an approximate equilibrium.",
                "The protocol is defined as follows.",
                "Let agent a denote the first mover (since we focus on the package deal procedure, the first mover is the same for all the m issues).",
                "Step 1.",
                "For c = 1, the agents are given the values of ka c and kb c. These two values are now common5 knowledge.",
                "Step 2.",
                "The agents settle issue c using the alternating offers protocol described in Section 2.",
                "Negotiation for issue c must end within n time periods from the start of negotiation on the issue.",
                "If an agreement is not reached within this time, then negotiation fails on this and on all remaining issues.",
                "Step 3.",
                "The above steps are repeated for issues c = 2, 3, . . . , m. Negotiation for issue c (2 ≤ c ≤ m) begins in the time period following an agreement on issue c − 1. 5 We assume common knowledge because it simplifies exposition.",
                "However, if ka c (kb c) is as (bs) private knowledge, then our analysis will still hold but now an agent must find its opponents expected utility on the basis of the p.d.fs for ka c and kb c. Thus, during time period t, the problem for the offering agent (say a) is to find the optimal offer for issue c on the basis of ka c and kb c and the probability distribution for ka i and kb i (c < i ≤ m).",
                "In order to solve this online negotiation problem we draw analogy with the online knapsack problem.",
                "Before doing so, however, we give a brief overview of the online knapsack problem.",
                "In the online knapsack problem, there are m items.",
                "The agent must examine the m items one at a time according to the order they are input (i.e., as their profit and size coefficients become known).",
                "Hence, the algorithm is required to decide whether or not to include each item in the knapsack as soon as its weight and profit become known, without knowledge concerning the items still to be seen, except for their total number.",
                "Note that since the agents have a probability distribution over the weights and profits of the future items, this is a case of stochastic online knapsack problem.",
                "Our online negotiation problem is analogous to the online knapsack problem.",
                "This analogy is described in detail in the proof for Theorem 5.",
                "Again, researchers in algorithms have developed time efficient approximate solutions to the online knapsack problem [16].",
                "Hence we use this solution and show that it forms an equilibrium.",
                "The following theorem characterizes an approximate equilibrium for online negotiation.",
                "Here the agents have to choose a strategy without knowing the features of the future issues.",
                "Because of this information incompleteness, the relevant equilibrium solution is that of a Bayes Nash Equilibrium (BNE) in which each agent plays the best response to the other agents with respect to their expected utilities [18].",
                "However, finding an agents BNE strategy is analogous to solving the online 0-1 knapsack problem.",
                "Also, the online knapsack can only be solved approximately [16].",
                "Hence the relevant equilibrium solution concept is approximate BNE (see [26] for example).",
                "The following theorem finds this equilibrium using procedures ONLINE- TRADEOFFA and ONLINE-TRADEOFFB which are defined in the proof of the theorem.",
                "For a given time period, we let zm denote the approximately optimal solution generated by ONLINE-TRADEOFFA (or ONLINE-TRADEOFFB) and z∗ m the actual optimum.",
                "THEOREM 5.",
                "For the package deal procedure, the following strategies form an approximate Bayes Nash equilibrium.",
                "The equilibrium strategy for t = n is: A(n) = j OFFER [1, 0] IF as TURN ACCEPT IF bs TURN B(n) = j OFFER [0, 1] IF bs TURN ACCEPT IF as TURN For all preceding time periods t < n, if [xt , yt ] denotes the offer made at time t, then the equilibrium strategies are defined as follows: A(t) = 8 < : OFFER ONLINE-TRADEOFFA(P, UB(t), t) IF as TURN If (Ua ([xt , yt ], t) ≥ UA(t)) ACCEPT else REJECT IF bs TURN B(t) = 8 < : OFFER ONLINE-TRADEOFFB(P, UA(t), t) IF bs TURN If (Ub ([xt , yt ], t) ≥ UB(t)) ACCEPT else REJECT IF as TURN where UA(t) = Ua ([¯at+1 ,¯bt+1 ], t + 1) and UB(t) = Ub ([¯at+1 , ¯bt+1 ], t + 1).",
                "An agreement on issue c takes place at t = c. For a given time period, the expected difference between the solution generated by the optimal strategy and that by the approximate strategy is E[z∗ m − zm] = O( √ m). 956 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) PROOF.",
                "As in Theorem 1 we find the equilibrium offer for time period t = 1 using backward induction.",
                "Let a be the offering agent for t = 1 for all the m issues.",
                "Consider the last time period t = n (recall from Step 2 of the online protocol that n is the deadline for completing negotiation on the first issue).",
                "Since the first mover is the same for all the issues, and the agents make offers alternately, the offering agent for t = n is also the same for all the m issues.",
                "Assume that b is the offering agent for t = n. As in Section 3, the offering agent for t = n gets a hundred percent of all the m issues.",
                "Since b is the offering agent for t = n, his utility for this time period is: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recall that ka i and kb i (for c < i ≤ m) are not known to the agents.",
                "Hence, the agents can only find their expected utilities from the future issues on the basis of the probability distribution functions for ka i and kb i .",
                "However, during the negotiation for issue c the agents know ka c but not kb c (see Step 1 of the online protocol).",
                "Hence, a computes UB(n) as follows.",
                "Agent bs utility from issue c = 1 is kb 1δn−1 1 (which is the first term of Equation 6).",
                "Then, on the basis of the probability distribution functions for ka i and kb i , agent a computes bs expected utility from each future issue i as δ i(n−1) i /2 (since ka i and kb i are uniformly distributed on [0, 1]).",
                "Thus, bs expected cumulative utility from these m − c issues is 1/2 Pm i=2 δ i(n−1) i (which is the second term of Equation 6).",
                "Now, in order to decide what to offer for issue c = 1, the offering agent for t = n − 1 (i.e., agent a) must solve the following online knapsack problem: maximize Σm i=1ka i (1 − ¯bt i)δn−1 i (7) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The only variables in the above maximization problem are ¯bt i.",
                "Now, maximizing Σm i=1ka i (1−¯bt i)δn−1 i is the same as minimizing Σm i=1ka i ¯bt i since δn−1 i and ka i are constants.",
                "Thus, we write Equation 7 as: minimize Σm i=1ka i ¯bt i (8) such that Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 or 1 for 1 ≤ i ≤ m The above optimization problem is analogous to the online 0-1 knapsack problem.",
                "An algorithm to solve the online knapsack problem has already proposed in [16].",
                "This algorithm is called the fixed-choice online algorithm.",
                "It has time complexity linear in the number of items (m) in the knapsack problem.",
                "We use this to solve our online negotiation problem.",
                "Thus, our ONLINE-TRADEOFFA algorithm is nothing but the fixed-choice online algorithm and therefore has the same time complexity as the latter.",
                "This algorithm takes the values of ka i and kb i one at a time and generates an approximate solution to the above knapsack problem.",
                "The expected difference between the optimum and approximate solution is E[z∗ m − zm] = O( √ m) [16] (see [16] for the detailed fixed-choice online algorithm and a proof for E[z∗ m − zm] = O( √ m)).",
                "The fixed-choice online algorithm of [16] is a generalization of the basic greedy algorithm for the offline knapsack problem; the idea behind it is as follows.",
                "A threshold value is determined on the basis of the information regarding weights and profits for the 0-1 knapsack problem.",
                "The method then includes into the knapsack all items whose profit density (profit density of an item is its profit per unit weight) exceeds the threshold until either the knapsack is filled or all the m items have been considered.",
                "In more detail, the algorithm ONLINE-TRADEOFFA works as follows.",
                "It first gets the values of ka 1 and kb 1 and finds ¯bt c. Since we have a 0-1 knapsack problem, ¯bt c can be either zero or one.",
                "Now, if ¯bt c = 1 for t = n, then ¯bt c must be one for 1 ≤ t < n (i.e., a must offer ¯bt c = 1 at t = 1).",
                "If ¯bt c = 1 for t = n, but a offers ¯bt c = 0 at t = 1, then agent b gets less utility than what it expects from as offer and rejects the proposal.",
                "Thus, if ¯bt c = 1 for t = n, then the optimal strategy for a is to offer ¯bt c = 1 at t = 1.",
                "Agent b accepts the offer.",
                "Thus, negotiation on the first issue starts at t = 1 and an agreement on it is also reached at t = 1.",
                "In the next time period (i.e., t = 2), negotiation proceeds to the next issue.",
                "The deadline for the second issue is n time periods from the start of negotiation on the issue.",
                "For c = 2, the algorithm ONLINE-TRADEOFFA is given the values of ka 2 and kb 2 and finds ¯bt c as described above.",
                "Agent offers bc at t = 2 and b accepts.",
                "Thus, negotiation on the second issue starts at t = 2 and an agreement on it is also reached at t = 2.",
                "This process repeats for the remaining issues c = 3, . . . , m. Thus, each issue is agreed upon in the same time period in which it starts.",
                "As negotiation for the next issue starts in the following time period (see step 3 of the online protocol), agreement on issue i occurs at time t = i.",
                "On the other hand, if b is the offering agent at t = 1, he uses the algorithm ONLINE-TRADEOFFB which is defined analogously.",
                "Thus, irrespective of who makes the first move, all the m issues are settled at time t = m. THEOREM 6.",
                "The time complexity of finding the approximate equilibrium offers of Theorem 5 is linear in m. PROOF.",
                "The time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is the same as the time complexity of the fixed-choice online algorithm of [16].",
                "Since the latter has time complexity linear in m, the time complexity of ONLINE-TRADEOFFA and ONLINETRADEOFFB is also linear in m. It is worth noting that, for the 0-1 knapsack problem, the lower bound on the expected difference between the optimum and the solution found by any online algorithm is Ω(1) [16].",
                "Thus, it follows that this lower bound also holds for our negotiation problem. 5.",
                "RELATED WORK Work on multi-issue negotiation can be divided into two main types: that for indivisible issues and that for divisible issues.",
                "We first describe the existing work for the case of divisible issues.",
                "Since Schelling [24] first noted that the outcome of negotiation depends on the choice of negotiation procedure, much research effort has been devoted to the study of different procedures for negotiating multiple issues.",
                "However, most of this work has focussed on the sequential procedure [7, 2].",
                "For this procedure, a key issue is the negotiation agenda.",
                "Here the term agenda refers to the order in which the issues are negotiated.",
                "The agenda is important because each agents cumulative utility depends on the agenda; if we change the agenda then these utilities change.",
                "Hence, the agents must decide what agenda they will use.",
                "Now, the agenda can be decided before negotiating the issues (such an agenda is called exogenous) or it may be decided during the process of negotiation (such an agenda is called endogenous).",
                "For instance, Fershtman [7] analyze sequential negotiation with exogenous agenda.",
                "A number of researchers have also studied negotiations with an endogenous agenda [2].",
                "In contrast to the above work that mainly deals with sequential negotiation, [6] studies the equilibrium for the package deal procedure.",
                "However, all the above mentioned work differs from ours in that we focus on indivisible issues while others focus on the case The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 957 where each issue is divisible.",
                "Specifically, no previous work has determined an approximate equilibrium for multi-issue negotiation or for online negotiation.",
                "Existing work for the case of indivisible issues has mostly dealt with task allocation problems (for tasks that cannot be partioned) to a group of agents.",
                "The problem of task allocation has been previously studied in the context of coalitions involving more than two agents.",
                "For example [25] analyze the problem for the case where the agents act so as to maximize the benefit of the system as a whole.",
                "In contrast, our focus is on two agents where both of them are self-interested and want to maximize their individual utilities.",
                "On the other hand [22] focus on the use of contracts for task allocation to multiple self interested agents but this work concerns finding ways of decommitting contracts (after the initial allocation has been done) so as to improve an agents utility.",
                "In contrast, our focuses on negotiation regarding who will carry out which task.",
                "Finally, online and approximate mechanisms have been studied in the context of auctions [14, 9] but not for bilateral negotiations (which is the focus of our work). 6.",
                "CONCLUSIONS This paper has studied bilateral multi-issue negotiation between self-interested autonomous agents with time constraints.",
                "The issues are indivisible and different agents value different issues differently.",
                "Thus, the problem is for the agents to decide how to allocate the issues between themselves so as to maximize their individual utilities.",
                "Specifically, we first showed that finding the equilibrium offers is an NP-hard problem even in a complete information setting.",
                "We then presented approximately optimal negotiation strategies and showed that they form an equilibrium.",
                "These strategies have polynomial time complexity.",
                "We also analysed the difference between the true optimum and the approximate optimum.",
                "Finally, we extended the analysis to online negotiation where the issues become available at different time points and the agents are uncertain about the features of these issues.",
                "Specifically, we showed that an approximate equilibrium exists for online negotiation and analysed the approximation error.",
                "These approximate strategies also have polynomial time complexity.",
                "There are several interesting directions for future work.",
                "First, for online negotiation, we assumed that the constants ka c and kb c are both uniformly distributed.",
                "It will be interesting to analyze the case where ka c and kb c have other, possibly different, probability distributions.",
                "Apart from this, we treated the number of issues as being common knowledge to the agents.",
                "In future, it will be interesting to treat the number of issues as uncertain. 7.",
                "REFERENCES [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.",
                "Complexity and approximation: Combinatorial optimization problems and their approximability properties.",
                "Springer, 2003. [2] M. Bac and H. Raff.",
                "Issue-by-issue negotiations: the role of information and time preference.",
                "Games and Economic Behavior, 13:125-134, 1996. [3] A. Borodin and R. El-Yaniv.",
                "<br>online computation</br> and Competitive Analysis.",
                "Cambridge University Press, 1998. [4] S. J. Brams.",
                "Fair division: from cake cutting to dispute resolution.",
                "Cambridge University Press, 1996. [5] L. A. Busch and I. J. Horstman.",
                "Bargaining frictions, bargaining procedures and implied costs in multiple-issue bargaining.",
                "Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge, and N. R. Jennings.",
                "Multi-issue negotiation with deadlines.",
                "Journal of Artificial Intelligence Research, 27:381-417, 2006. [7] C. Fershtman.",
                "The importance of the agenda in bargaining.",
                "Games and Economic Behavior, 2:224-238, 1990. [8] F. Glover.",
                "A multiphase dual algorithm for the zero-one integer programming problem.",
                "Operations Research, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "In ACM Conference on Electronic Commerce (ACMEC-04), pages 71-80, New York, 2004. [10] O. H. Ibarra and C. E. Kim.",
                "Fast approximation algorithms for the knapsack and sum of subset problems.",
                "Journal of ACM, 22:463-468, 1975. [11] R. Inderst.",
                "Multi-issue bargaining with endogenous agenda.",
                "Games and Economic Behavior, 30:64-82, 2000. [12] R. Keeney and H. Raiffa.",
                "Decisions with Multiple Objectives: Preferences and Value Trade-offs.",
                "New York: John Wiley, 1976. [13] S. Kraus.",
                "Strategic negotiation in multi-agent environments.",
                "The MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. OCallaghan, and Y. Shoham.",
                "Truth revelation in approximately efficient combinatorial auctions.",
                "Journal of the ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge, and N. R. Jennings.",
                "A classification scheme for negotiation in electronic commerce.",
                "International Journal of Group Decision and Negotiation, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela and C. Vercellis.",
                "Stochastic online knapsack problems.",
                "Mathematical Programming, 68:73-104, 1995. [17] S. Martello and P. Toth.",
                "Knapsack problems: Algorithms and computer implementations.",
                "John Wiley and Sons, 1990. [18] M. J. Osborne and A. Rubinstein.",
                "A Course in Game Theory.",
                "The MIT Press, 1994. [19] H. Raiffa.",
                "The Art and Science of Negotiation.",
                "Harvard University Press, Cambridge, USA, 1982. [20] J. S. Rosenschein and G. Zlotkin.",
                "Rules of Encounter.",
                "MIT Press, 1994. [21] A. Rubinstein.",
                "Perfect equilibrium in a bargaining model.",
                "Econometrica, 50(1):97-109, January 1982. [22] T. Sandholm and V. Lesser.",
                "Levelled commitment contracts and strategic breach.",
                "Games and Economic Behavior: Special Issue on AI and Economics, 35:212-270, 2001. [23] T. Sandholm and N. Vulkan.",
                "Bargaining with deadlines.",
                "In AAAI-99, pages 44-51, Orlando, FL, 1999. [24] T. C. Schelling.",
                "An essay on bargaining.",
                "American Economic Review, 46:281-306, 1956. [25] O. Shehory and S. Kraus.",
                "Methods for task allocation via agent coalition formation.",
                "Artificial Intelligence Journal, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni, and M. Wellman.",
                "Computing approximate Bayes Nash equilibria in tree games of incomplete information.",
                "In Proceedings of the ACM Conference on Electronic Commerce ACM-EC, pages 81-90, New York, May 2004. [27] I. Stahl.",
                "Bargaining Theory.",
                "Economics Research Institute, Stockholm School of Economics, Stockholm, 1972. 958 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07)"
            ],
            "original_annotated_samples": [
                "<br>online computation</br> and Competitive Analysis."
            ],
            "translated_annotated_samples": [
                "Computación en línea y análisis competitivo."
            ],
            "translated_text": "Negociación Multi-Issue Aproximada y en Línea Shaheen S. Fatima Departamento de Ciencias de la Computación Universidad de Liverpool Liverpool L69 3BX, Reino Unido. Este artículo analiza la negociación bilateral multi-tema entre agentes autónomos interesados en sí mismos. Los agentes tienen restricciones de tiempo en forma de plazos y factores de descuento. Hay m > 1 temas para negociar donde cada tema se ve como un pastel de tamaño uno. Los problemas son indivisibles (es decir, los problemas individuales no pueden dividirse entre las partes; cada problema debe asignarse en su totalidad a uno u otro agente). Aquí diferentes agentes valoran diferentes temas de manera distinta. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Para tales negociaciones, primero obtenemos las estrategias de equilibrio para el caso en el que los temas de negociación son conocidos de antemano por las partes. Luego, analizamos su complejidad temporal y demostramos que encontrar las ofertas de equilibrio es un problema NP-duro, incluso en un entorno de información completa. Para superar esta complejidad computacional, presentamos estrategias de negociación que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Diseño, Teoría 1. INTRODUCCIÓN La negociación es una forma clave de interacción en sistemas multiagentes. Es un proceso en el que agentes en disputa deciden cómo dividir las ganancias de la cooperación. Dado que esta decisión es tomada conjuntamente por los agentes mismos [20, 19, 13, 15], cada parte solo puede obtener lo que la otra esté dispuesta a permitirles. Ahora, la forma más simple de negociación implica dos agentes y un solo tema. Por ejemplo, consideremos un escenario en el que un comprador y un vendedor negocian el precio de un bien. Para empezar, es probable que los dos agentes difieran en el precio en el que creen que debería tener lugar el intercambio, pero a través de un proceso de toma de decisiones conjunta, llegan a un precio que es mutuamente aceptable o no logran llegar a un acuerdo. Dado que es probable que los agentes comiencen con precios diferentes, uno o ambos deben acercarse al otro, a través de una serie de ofertas y contraofertas, para lograr un resultado mutuamente aceptable. Sin embargo, antes de que los agentes puedan llevar a cabo tales negociaciones, deben decidir las reglas para hacer ofertas y contraofertas. Es decir, deben establecer el protocolo de negociación [20]. Con base en este protocolo, cada agente elige su estrategia (es decir, qué ofertas debe hacer durante el transcurso de la negociación). Dado este contexto, este trabajo se centra en escenarios competitivos con agentes egoístas. Para tales casos, cada participante define su estrategia de manera que maximice su utilidad individual. Sin embargo, en la mayoría de las negociaciones bilaterales, las partes involucradas necesitan resolver más de un tema. Para este caso, los problemas pueden ser divisibles o indivisibles [4]. Para los agentes, el problema es decidir cómo dividir cada tema entre ellos [21]. Para este último, los problemas individuales no pueden dividirse. Un problema, en su totalidad, debe ser asignado a cualquiera de los dos agentes. Dado que los agentes valoran de manera diferente distintos temas, deben llegar a un acuerdo sobre quién se encargará de cada tema. Hasta la fecha, la mayoría de los trabajos existentes sobre negociación de múltiples temas se han centrado en el primer caso [7, 2, 5, 23, 11, 6]. Sin embargo, en muchos entornos del mundo real, los problemas son indivisibles. Por lo tanto, nuestro enfoque aquí está en la negociación de temas indivisibles. Tales negociaciones son muy comunes en sistemas multiagentes. Por ejemplo, consideremos el caso de la asignación de tareas entre dos agentes. Hay un conjunto de tareas que deben llevarse a cabo y diferentes agentes tienen diferentes preferencias por las tareas. Las tareas no pueden ser divididas; una tarea debe ser realizada por un solo agente. El problema entonces es que los agentes negocien sobre quién llevará a cabo qué tarea. Un problema clave en el estudio de la negociación de múltiples temas es determinar las estrategias de equilibrio. Un problema igualmente importante, especialmente en el contexto de agentes de software, es encontrar la complejidad temporal de calcular las ofertas de equilibrio. Sin embargo, hasta ahora estos problemas computacionales han recibido poca atención. Como mostraremos, esto se debe principalmente al hecho de que el trabajo existente (descrito en la Sección 5) se ha centrado principalmente en la negociación de problemas divisibles 951 978-81-904262-7-5 (RPS) c 2007 IFAAMAS y encontrar el equilibrio para este caso es computacionalmente más fácil que para el caso de problemas indivisibles. Nuestro objetivo principal es, por lo tanto, responder a las preguntas computacionales para este último caso, para los tipos de situaciones que comúnmente enfrentan los agentes en contextos del mundo real. Por lo tanto, consideramos negociaciones en las que hay información incompleta y restricciones de tiempo. La incompletitud de la información por parte de los negociadores es una característica común en la mayoría de las negociaciones prácticas. Además, los agentes suelen tener restricciones de tiempo en forma de plazos y factores de descuento. Los plazos son un elemento esencial ya que la negociación no puede prolongarse indefinidamente, sino que debe finalizar dentro de un límite de tiempo razonable. Asimismo, los factores de descuento son esenciales ya que los bienes pueden ser perecederos o su valor puede disminuir debido a la inflación. Además, el comportamiento estratégico de los agentes con plazos y factores de descuento difiere de aquellos sin ellos (ver [21] para la negociación de un solo tema sin plazos y [23, 13] para la negociación con plazos y factores de descuento en el contexto de temas divisibles). Dado esto, consideramos problemas indivisibles y primero analizamos el comportamiento estratégico de los agentes para obtener las estrategias de equilibrio para el caso en que todos los problemas de negociación son conocidos de antemano por ambos agentes. Para este caso, demostramos que el problema de encontrar las ofertas de equilibrio es NP-duro, incluso en un entorno de información completa. Entonces, para superar el problema de la complejidad temporal, presentamos estrategias que son aproximadamente óptimas pero computacionalmente eficientes, y demostramos que forman un equilibrio. También analizamos el error relativo (es decir, la diferencia entre el óptimo real y el aproximado). La complejidad temporal de las estrategias de equilibrio aproximado es O(nm/2), donde n es el plazo de negociación y el error relativo. Finalmente, extendemos el análisis a la negociación en línea donde diferentes temas están disponibles en diferentes momentos y los agentes tienen incertidumbre sobre sus valoraciones para estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y mostramos que la diferencia esperada entre el óptimo y el aproximado es O( √ m). Estas estrategias aproximadas también tienen complejidad temporal polinómica. Al hacerlo, nuestra contribución radica en analizar la complejidad computacional del problema de negociación multi-tema mencionado anteriormente, y encontrar los equilibrios aproximados y en línea. Ningún trabajo previo ha determinado estos equilibrios. Dado que los agentes de software tienen recursos computacionales limitados, nuestros resultados son especialmente relevantes para tales agentes con recursos limitados. El resto del documento está organizado de la siguiente manera. Comenzamos dando una breve descripción de la negociación de un solo tema en la Sección 2. En la Sección 3, obtenemos el equilibrio para la negociación de múltiples temas y demostramos que encontrar ofertas de equilibrio es un problema NP-duro. Luego presentamos un equilibrio aproximado y evaluamos su error de aproximación. La sección 4 analiza la negociación en línea de múltiples temas. La sección 5 discute la literatura relacionada y la sección 6 concluye. NEGOCIACIÓN DE UN SOLO TEMA Adoptamos el modelo de negociación de un solo tema de [27] porque es un modelo en el que, durante la negociación, se permite a las partes hacer ofertas de un conjunto de ofertas discretas. Dado que nuestro enfoque se centra en problemas indivisibles (es decir, se permite a las partes hacer una de dos ofertas posibles: cero o uno), nuestro escenario encaja bien con [27]. Por lo tanto, utilizamos este modelo básico de un solo problema y lo extendemos a múltiples problemas. Antes de hacerlo, damos una visión general de este modelo y sus estrategias de equilibrio. Hay dos agentes estratégicos: a y b. Cada agente tiene restricciones de tiempo en forma de plazos y factores de descuento. Los dos agentes negocian sobre un único tema indivisible (i). Este problema es un pastel de tamaño 1 y los agentes quieren determinar quién recibe el pastel. Hay un plazo límite (es decir, un número de rondas en las que la negociación debe finalizar). Que n ∈ N+ denote este plazo. Los agentes utilizan un protocolo de ofertas alternadas (como el de Rubinstein [18]), que avanza a través de una serie de períodos de tiempo. Uno de los agentes, digamos a, comienza la negociación en el primer período de tiempo (es decir, t = 1) haciendo una oferta (xi = 0 o 1) a b. El agente b puede aceptar o rechazar la oferta. Si se acepta, la negociación termina en un acuerdo con a recibiendo xi y b recibiendo yi = 1 − xi. De lo contrario, la negociación continúa en el siguiente período de tiempo, en el cual el agente b hace una contraoferta. Este proceso de hacer ofertas continúa hasta que uno de los agentes acepta una oferta o abandona la negociación (lo que resulta en un conflicto). Por lo tanto, hay tres acciones posibles que un agente puede tomar durante cualquier período de tiempo: aceptar la última oferta, hacer una nueva contraoferta o abandonar la negociación. Una característica esencial de las negociaciones que implican ofertas alternas es que las utilidades de los agentes disminuyen con el tiempo [21]. Específicamente, la disminución ocurre en cada paso de oferta y contraoferta. Esta disminución se representa con un factor de descuento denotado como 0 < δi ≤ 1 para ambos agentes. Que [xt i, yt i] denote la oferta realizada en el período de tiempo t donde xt i y yt i denotan la participación para el agente a y b respectivamente. Entonces, para un pastel dado, el conjunto de ofertas posibles es: {[xt i, yt i] : xt i = 0 o 1, yt i = 0 o 1, y xt i + yt i = 1}. En el tiempo t, si a y b reciben una parte de xt i y yt i respectivamente, entonces sus utilidades son: ua i (xt i, t) = j xt i × δt−1 si t ≤ n, 0 de lo contrario; ub i (yt i, t) = j yt i × δt−1 si t ≤ n, 0 de lo contrario. La utilidad de conflicto (es decir, la utilidad recibida en caso de que no se llegue a un acuerdo) es cero para ambos agentes. Para el escenario anterior, los agentes razonan de la siguiente manera para determinar qué ofrecer en t = 1. Dejamos que A(1) (B(1)) denote la oferta de equilibrio para el primer período de tiempo. Que el agente a denote al primer jugador (es decir, en t = 1, a propone a b quién debería recibir el pastel). Para empezar, considera el caso en el que la fecha límite para ambos agentes es n = 1. Si b acepta, la división se lleva a cabo según lo acordado; si no, ninguno de los agentes recibe nada (ya que n = 1 es el plazo límite). Aquí, a se encuentra en una posición poderosa y es capaz de proponer quedarse con el 100 por ciento del pastel y no darle nada a b. Dado que el plazo es n = 1, b acepta esta oferta y el acuerdo se lleva a cabo en el primer período de tiempo. Ahora, considera el caso donde la fecha límite es n = 2. Para decidir qué ofrecer en la primera ronda, A mira hacia adelante hasta t = 2 y razona hacia atrás. El agente a razona que si la negociación avanza a la segunda ronda, b se quedará con el 100 por ciento del pastel al ofrecer [0, 1] y no dejará nada para a. Por lo tanto, en el primer período de tiempo, si a le ofrece a b algo menos que toda la tarta, b rechazará la oferta. Por lo tanto, durante el primer período de tiempo, el agente a ofrece [0, 1]. El agente b acepta esto y se llega a un acuerdo en el primer período de tiempo. En general, si la fecha límite es n, la negociación procede de la siguiente manera. Como antes, el agente a decide qué ofrecer en la primera ronda mirando hacia adelante hasta t = n y luego razonando hacia atrás. Tener un factor de descuento diferente para diferentes agentes solo complica la presentación sin llevar a cambios en el análisis del comportamiento estratégico de los agentes o la complejidad temporal de encontrar las ofertas de equilibrio. Por lo tanto, tenemos un único factor de descuento para ambos agentes. Es posible que b rechace tal propuesta. Sin embargo, independientemente de si b acepta o rechaza la propuesta, obtiene una utilidad de cero (porque la fecha límite es n = 1). Por lo tanto, asumimos que b acepta la oferta. 952 The Sixth Intl. La oferta de la Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) para t = 1 depende de quién sea el agente oferente en el último período de tiempo. Esto, a su vez, depende de si n es impar o par. Dado que a hace una oferta en t = 1 y los agentes utilizan el protocolo de ofertas alternadas, el agente que realiza la oferta en el último período es b si n es par y es a si n es impar. Por lo tanto, dependiendo de si n es impar o par, a hace la siguiente oferta en t = 1: A(1) = j OFERTA [1, 0] SI n ES IMPAR ACEPTA SI bs SE DA LA VUELTA B(1) = j OFERTA [0, 1] SI n ES PAR ACEPTA SI as SE DA LA VUELTA El Agente b acepta esta oferta y la negociación termina en el primer período de tiempo. Ten en cuenta que el resultado del equilibrio depende de quién da el primer paso. Dado que tenemos dos agentes y cualquiera de ellos podría moverse primero, obtenemos dos posibles resultados de equilibrio. Sobre la base del equilibrio anterior para la negociación de un solo tema con información completa, primero obtenemos el equilibrio para múltiples temas y luego demostramos que calcular estas ofertas es un problema difícil. Luego presentamos un equilibrio aproximado eficiente en tiempo. 3. NEGOCIACIÓN DE MÚLTIPLES TEMAS Primero analizamos el escenario de información completo. Esta sección forma la base que extendemos al caso de la incertidumbre de la información en la Sección 4. Aquí, a y b negocian sobre m > 1 temas indivisibles. Estos problemas son m pasteles distintos y los agentes quieren determinar cómo distribuir los pasteles entre ellos mismos. Sea S = {1, 2, . . . , m} el conjunto de m pasteles. Como antes, cada pastel tiene un tamaño de 1. Que el factor de descuento para el problema c, donde 1 ≤ c ≤ m, sea 0 < δc ≤ 1. Para cada problema, dejemos que n denote la fecha límite de cada agente. En la oferta para el período de tiempo t (donde 1 ≤ t ≤ n), la participación del agente como (bs) para cada uno de los m temas ahora se representa como un vector de m elementos xt ∈ Bm (yt ∈ Bm) donde B denota el conjunto {0, 1}. Por lo tanto, si la participación del agente a para el problema c en el tiempo t es xt c, entonces la participación del agente b es yt c = (1−xt c). Las acciones de a y b se representan juntas como el paquete [xt, yt]. Como es tradicional en la teoría de utilidad de múltiples problemas, definimos la utilidad acumulativa de un agente utilizando la forma aditiva estándar [12]. Las funciones Ua : Bm × Bm × N+ → R y Ub : Bm × Bm × N+ → R dan las utilidades acumuladas para a y b respectivamente en el tiempo t. Estas se definen de la siguiente manera: Ua ([xt , yt ], t) = ( Σm c=1ka c ua c (xt c, t) si t ≤ n 0 de lo contrario (1) Ub ([xt , yt ], t) = ( Σm c=1kb cub c(yt c, t) si t ≤ n 0 de lo contrario (2) donde ka ∈ Nm + denota un vector de m elementos de constantes para el agente a y kb ∈ Nm + para b. Aquí N+ denota el conjunto de números enteros positivos. Estos vectores indican cómo los agentes valoran diferentes temas. Por ejemplo, si ka c > ka c+1, entonces el agente a valora el tema c más que el tema c + 1. Igualmente para el agente b. En otras palabras, los m problemas son sustitutos perfectos (es decir, todo lo que importa para un agente es su utilidad total para todos los m problemas y no para ningún subconjunto de ellos). En todos los escenarios que estudiamos, los problemas serán sustitutos perfectos. Para empezar, cada agente tiene información completa sobre todos los parámetros de negociación (es decir, n, m, ka c, kb c y δc para 1 ≤ c ≤ m). Ahora, la negociación de múltiples temas se puede realizar utilizando diferentes procedimientos. En términos generales, existen tres procedimientos clave para negociar múltiples temas [19]: 1. el procedimiento de acuerdo integral donde todos los temas se resuelven juntos como un paquete, 2. el procedimiento secuencial donde los temas se discuten uno tras otro, y 3. el procedimiento simultáneo donde los temas se discuten en paralelo. Entre estos tres procedimientos, se sabe que el paquete genera resultados óptimos de Pareto [19, 6]. Por lo tanto, lo adoptamos aquí. Primero damos una breve descripción del procedimiento y luego determinamos las estrategias de equilibrio para el mismo. 3.1 Procedimiento de paquete En este procedimiento, los agentes utilizan el mismo protocolo que para la negociación de un solo tema (descrito en la Sección 2). Sin embargo, una oferta para el paquete incluye una propuesta para cada tema en negociación. Por lo tanto, para m problemas, una oferta incluye m divisiones, una para cada problema. Los agentes tienen permitido aceptar una oferta completa (es decir, todas las m cuestiones) o rechazar una oferta completa. Un acuerdo puede tener lugar en todos los temas o en ninguno de ellos. Según la negociación de un solo tema, un agente decide qué ofrecer mirando hacia adelante y razonando hacia atrás. Sin embargo, dado que una oferta para el paquete incluye una participación en todos los problemas, los agentes ahora pueden hacer intercambios entre los problemas para maximizar sus utilidades acumulativas. Para 1 ≤ c ≤ m, la oferta de equilibrio para el problema c en el tiempo t se denota como [at c, bt c] donde at c y bt c representan las acciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [at, bt] donde at ∈ Bm (bt ∈ Bm) es un vector de m elementos que denota como (bs) la participación para cada uno de los m temas. Además, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Los símbolos 0 y 1 denotan vectores de m elementos de ceros y unos respectivamente. Ten en cuenta que para 1 ≤ t ≤ n, en c + bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que A(t) (respectivamente B(t)) denote la estrategia de equilibrio para el agente a (respectivamente b). 3.2 Estrategias de equilibrio Como se mencionó en la Sección 1, el paquete de transacciones permite a los agentes hacer compensaciones. Dejamos que TRADEOFFA (TRADEOFFB) denote agente como función (bs) para hacer compensaciones. Dejamos que P denote un conjunto de parámetros para el procedimiento TRADEOFFA (TRADEOFFB) donde P = {ka, kb, δ, m}. Dado esto, el siguiente teorema caracteriza el equilibrio para el procedimiento de paquete. TEOREMA 1. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash. La estrategia de equilibrio para t = n es: A(n) = j OFERTA [1, 0] SI en el TURNO ACEPTA SI en el TURNO B(n) = j OFERTA [0, 1] SI en el TURNO ACEPTA SI en el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFERTA COMPENSACIÓN A(P, UB(t), t) SI en el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO B(t) = 8 < : OFERTA COMPENSACIÓN B(P, UA(t), t) SI en el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTA de lo contrario RECHAZA SI en el TURNO La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 953 donde UA(t) = Ua ([at+1 , bt+1 ], t + 1) y UB(t) = Ub ([at+1 , bt+1 ], t + 1). PRUEBA. Miramos hacia adelante al último período de tiempo (es decir, t = n) y luego razonamos hacia atrás. Para empezar, si la negociación llega a la fecha límite (n), entonces el agente cuyo turno es toma todo y no deja nada para su oponente. Por lo tanto, obtenemos las estrategias A(n) y B(n) tal como se indican en la declaración del teorema. En todos los períodos de tiempo anteriores (t < n), el agente oferente propone un paquete que le otorga a su oponente una utilidad acumulativa igual a la que el oponente obtendría de su propia oferta de equilibrio para el próximo período de tiempo. Durante el período de tiempo t, tanto a como b podrían ser el agente oferente. Considera el caso en el que a hace una oferta en t. El paquete que a ofrece en t le da a b una utilidad acumulativa de Ub ([at+1, bt+1], t + 1). Sin embargo, dado que hay más de un problema, hay más de un paquete que proporciona esta utilidad acumulativa. De entre estos paquetes, uno ofrece el que maximiza su propia utilidad acumulativa (porque es un maximizador de utilidad). Por lo tanto, el problema para a es encontrar el paquete [at, bt] de manera que: maximice mX c=1 ka c (1 − bt c)δt−1 c (3) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m donde UB(t), δt−1 c, ka c y kb c son constantes y bt c (1 ≤ c ≤ m) es una variable. Suponga que la función TRADEOFFA toma los parámetros P, UB(t) y t, para resolver el problema de maximización dado en la Ecuación 3 y devuelve el paquete correspondiente. Si hay más de un paquete que resuelve la Ecuación 3, entonces TRADEOFFA devuelve cualquiera de ellos (porque el agente a obtiene la misma utilidad de todos esos paquetes y lo mismo sucede con el agente b). La función TRADEOFFB para el agente b es análoga a la de a. Por otro lado, la estrategia de equilibrio para el agente que recibe una oferta es la siguiente. Para el período de tiempo t, dejemos que b denote al agente receptor. Entonces, b acepta [xt, yt] si UB(t) ≤ Ub([xt, yt], t), de lo contrario rechaza la oferta porque puede obtener una utilidad mayor en el próximo período de tiempo. La estrategia de equilibrio para un agente receptor a está definida de manera análoga. De esta manera, razonamos hacia atrás y obtenemos las ofertas para el primer período de tiempo. Así, obtenemos las estrategias de equilibrio (A(t) y B(t)) dadas en la declaración del teorema. El siguiente ejemplo ilustra cómo los agentes hacen compensaciones utilizando las estrategias de equilibrio mencionadas anteriormente. EJEMPLO 1. Suponga que hay m = 2 temas para negociar, el plazo para ambos temas es n = 2, y el factor de descuento para ambos temas para ambos agentes es δ = 1/2. Que ka 1 = 3, ka 2 = 1, kb 1 = 1 y kb 2 = 5. Que el agente a sea el primer movimiento. Al utilizar el razonamiento hacia atrás, a sabe que si la negociación llega al segundo período de tiempo (que es la fecha límite), entonces b obtendrá el cien por ciento de ambos asuntos. Esto le da a b una utilidad acumulada de UB(2) = 1/2 + 5/2 = 3. Por lo tanto, en el primer período de tiempo, si b recibe una utilidad menor a 3, rechazará la oferta. Entonces, en t = 1, a ofrece el paquete donde recibe el ejemplar 1 y b recibe el ejemplar 2. Esto otorga una utilidad acumulada de 3 a a y 5 a b. El agente b acepta el paquete y se llega a un acuerdo en el primer período de tiempo. El problema de maximización en la Ecuación 3 se puede ver como el problema de la mochila 0-1. En el problema de la mochila 0-1, tenemos un conjunto de 3 elementos. Tenga en cuenta que para el caso de problemas divisibles, esto es la mochila fraccional de m elementos donde cada elemento tiene un beneficio y un peso. Hay una mochila con una capacidad dada. El objetivo es llenar la mochila con artículos para maximizar la ganancia acumulada de los artículos en la mochila. Este problema es análogo al problema de negociación que queremos resolver (es decir, el problema de maximización de la Ecuación 3). Dado que ka c y δt−1 c son constantes, maximizar Pm c=1 ka c (1−bt c)δt−1 c es lo mismo que minimizar Pm c=1 ka c bt c. Por lo tanto, la Ecuación 3 se puede escribir como: minimizar mX c=1 ka c bt c (4) tal que mX c=1 bt ckb c ≥ UB(t) bt c = 0 o 1 para 1 ≤ c ≤ m La Ecuación 4 es una versión de minimización del problema de la mochila 0-1 estándar con m elementos donde ka c representa la ganancia para el elemento c, kb c el peso para el elemento c y UB(t) la capacidad de la mochila. El ejemplo 1 fue para dos problemas, por lo que fue fácil encontrar las ofertas de equilibrio. Pero, en general, no es fácil computacionalmente encontrar las ofertas de equilibrio del Teorema 1. El siguiente teorema lo demuestra. TEOREMA 2. Para el procedimiento de paquete, el problema de encontrar las ofertas de equilibrio presentadas en el Teorema 1 es NP-duro. PRUEBA. Encontrar los equilibrios ofrecidos en el Teorema 1 requiere resolver el problema de la mochila 0-1 dado en la Ecuación 4. Dado que el problema de la mochila 0-1 es NP-duro [17], el problema de encontrar el equilibrio para el paquete también es NP-duro. 3.3 Equilibrio aproximado Los investigadores en el área de algoritmos han encontrado métodos eficientes en tiempo para calcular soluciones aproximadas a problemas de mochila 0-1 [10]. Por lo tanto, utilizamos estos métodos para encontrar una solución a nuestro problema de negociación. En esta etapa, nos gustaría señalar la principal diferencia entre resolver el problema de la mochila 0-1 y resolver nuestro problema de negociación. El problema de la mochila 0-1 implica la toma de decisiones por parte de un único agente sobre qué elementos colocar en la mochila. Por otro lado, nuestro problema de negociación implica dos jugadores y ambos son estratégicos. Por lo tanto, en nuestro caso, no es suficiente encontrar solo una solución aproximada al problema de la mochila, también debemos demostrar que dicha aproximación forma un equilibrio. El enfoque tradicional para superar la complejidad computacional en la búsqueda de un equilibrio ha sido utilizar un equilibrio aproximado (ver [14, 26] por ejemplo). En este enfoque, se dice que un perfil estratégico forma un equilibrio de Nash aproximado si ninguno de los agentes puede obtener más que la constante al desviarse. Por lo tanto, nuestro objetivo es utilizar la solución al problema de la mochila 0-1 propuesto en [10] y demostrar que forma un equilibrio aproximado a nuestro problema de negociación. Antes de hacerlo, damos una breve descripción de las ideas clave que subyacen a los algoritmos de aproximación. Hay dos problemas clave en el diseño de algoritmos aproximados [1]: el problema de la mochila. El problema de la mochila fraccional es computacionalmente fácil; puede resolverse en tiempo polinómico en el número de elementos en el problema de la mochila [17]. Por el contrario, el problema de la mochila 0-1 es computacionalmente difícil. Cabe destacar que para el problema estándar de la mochila 0-1, los pesos, las ganancias y la capacidad son enteros positivos. Sin embargo, un problema de la mochila de 0-1 con fracciones y valores no positivos puede ser fácilmente transformado en uno con enteros positivos en tiempo lineal en m utilizando los métodos dados en [8, 17]. 954 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 1. la calidad de su solución, y 2. el tiempo necesario para calcular la aproximación. La calidad de un algoritmo aproximado se determina al comparar su rendimiento con el del algoritmo óptimo y medir el error relativo [3, 1]. El error relativo se define como (z−z∗ )/z∗ donde z es la solución aproximada y z∗ la óptima. En general, estamos interesados en encontrar algoritmos aproximados cuyo error relativo esté acotado por encima por una cierta constante, es decir, (z − z∗ )/z∗ ≤ (5). En cuanto al segundo tema de complejidad temporal, estamos interesados en encontrar algoritmos de aproximación polinómica completa. Un algoritmo de aproximación se dice que es totalmente polinomial si para cualquier > 0 encuentra una solución que satisface la Ecuación 5 en un tiempo limitado polinómicamente por el tamaño del problema (para el problema de la mochila 0-1, el tamaño del problema es igual al número de elementos) y por 1/ [1]. Para el problema de la mochila 0-1, Ibarra y Kim [10] presentaron un método de aproximación completamente polinómico. Este método se basa en la programación dinámica. Es un método paramétrico que toma como parámetro y para cualquier > 0, encuentra una solución heurística z con un error relativo de a lo sumo , de modo que la complejidad temporal y espacial crece de forma polinómica con el número de elementos m y 1/ . Más específicamente, la complejidad temporal y espacial son ambas O(m/2) y, por lo tanto, polinomiales en m y 1/(consulte [10] para obtener el algoritmo de aproximación detallado y la prueba de la complejidad temporal y espacial). Dado que el método de Ibarra y Kim es completamente polinomial, lo utilizamos para resolver nuestro problema de negociación. Esto se hace de la siguiente manera. Para el agente a, permita que APRX-TRADEOFFA(P, UB(t), t, ) denote un procedimiento que devuelve una solución aproximada a la Ecuación 4 utilizando el método de Ibarra y Kim. El procedimiento APRX-TRADEOFFB(P, UA(t), t, ) para el agente b es análogo. Para 1 ≤ c ≤ m, la oferta de equilibrio aproximada para el problema c en el tiempo t se denota como [¯at c,¯bt c] donde ¯at c y ¯bt c representan las participaciones para el agente a y b respectivamente. Denotamos el paquete de equilibrio en el tiempo t como [¯at ,¯bt ] donde ¯at ∈ Bm (¯bt ∈ Bm ) es un vector de m elementos que denota la participación (bs) para cada uno de los m temas. Además, como antes, para 1 ≤ c ≤ m, δc es el factor de descuento para el problema c. Tenga en cuenta que para 1 ≤ t ≤ n, ¯at c + ¯bt c = 1 (es decir, la suma de las participaciones de los agentes (en el tiempo t) para cada pastel es uno). Finalmente, para el período de tiempo t (para 1 ≤ t ≤ n) permitimos que ¯A(t) (respectivamente ¯B(t)) denote la estrategia de equilibrio aproximada para el agente a (respectivamente b). El siguiente teorema utiliza esta notación y caracteriza un equilibrio aproximado para la negociación de múltiples temas. TEOREMA 3. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado. La estrategia de equilibrio para t = n es: ¯A(n) = j OFRECER [1, 0] SI es el TURNO ACEPTAR SI es el TURNO ¯B(n) = j OFRECER [0, 1] SI es el TURNO ACEPTAR SI es el TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: ¯A(t) = 8 < : OFRECER APRX-TRADEOFFA(P, UB(t), t, ) SI es el TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO ¯B(t) = 8 < : OFRECER APRX-TRADEOFFB(P, UA(t), t, ) SI es el TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI es el TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo tiene lugar en t = 1. PRUEBA. Como en la demostración del Teorema 1, utilizamos el razonamiento hacia atrás. Primero obtenemos las estrategias para el último período de tiempo t = n. Es sencillo obtener estas estrategias; el agente oferente recibe el cien por ciento de todos los problemas. Entonces, para t = n − 1, el agente oferente debe resolver el problema de maximización de la Ecuación 4 sustituyendo t = n−1 en ella. Para el agente a (b), esto se hace mediante APROX-TRADEOFFA (APROX-TRADEOFFB). Estas dos funciones no son más que el método de aproximación de Ibarra y Kims para resolver el problema de la mochila 0-1. Estas dos funciones toman como parámetro y utilizan el método de aproximación de Ibarra y Kims para devolver un paquete que maximiza aproximadamente la Ecuación 4. Por lo tanto, el error relativo para estas dos funciones es el mismo que el método de Ibarra y Kim (es decir, es a lo sumo donde se da en la Ecuación 5). Suponga que a es el agente oferente para t = n − 1. El agente A debe ofrecer un paquete que brinde a B una utilidad acumulativa igual a la que obtendría de su propia oferta de equilibrio aproximado para el próximo período de tiempo (es decir, Ub ([¯at+1 ,¯bt+1 ], t + 1) donde [¯at+1 ,¯bt+1 ] es el paquete de equilibrio aproximado para el próximo período de tiempo). Recuerde que para el último período de tiempo, el agente oferente recibe el cien por ciento de todos los problemas. Dado que a es el agente que realiza la oferta para t = n − 1 y los agentes utilizan el protocolo de ofertas alternadas, es el turno de b en t = n. Por lo tanto, Ub ([¯at+1 ,¯bt+1 ], t + 1) es igual a la utilidad acumulada de b al recibir el cien por ciento de todos los temas. Utilizando esta utilidad como la capacidad de la mochila, un usuario utiliza APROX-TRADEOFFA y obtiene el paquete de equilibrio aproximado para t = n − 1. Por otro lado, si b es el agente oferente en t = n − 1, utiliza APROX-TRADEOFFB para obtener el paquete de equilibrio aproximado. De la misma manera, para t < n − 1, el agente oferente (digamos a) utiliza APROX-TRADEOFFA para encontrar un paquete de equilibrio aproximado que le otorga a b una utilidad de Ub ([¯at+1 ,¯bt+1 ], t + 1). Al razonar hacia atrás, obtenemos la oferta para el período de tiempo t = 1. Si un (b) es el agente oferente, propone la oferta APPROX-TRADEOFFA(P, UB(1), 1, ) (APPROX-TRADEOFFB(P, UA(1), 1, )). El agente receptor acepta la oferta. Esto se debe a que el error relativo en su utilidad acumulada de la oferta es como máximo de . Por lo tanto, se llega a un acuerdo en el primer período de tiempo. TEOREMA 4. La complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). PRUEBA. La complejidad temporal de APPROX-TRADEOFFA y APPROXTRADEOFFB es la misma que la complejidad temporal del método de Ibarra y Kim [10], es decir, O(m/2). Para encontrar la oferta de equilibrio para el primer período utilizando el razonamiento hacia atrás, se invoca a APPROXTRADEOFFA (o APPROX-TRADEOFFB) n veces. Por lo tanto, la complejidad temporal de encontrar la oferta de equilibrio aproximada para el primer período de tiempo es O(nm/2). Este análisis se realizó en un entorno de información completa. Sin embargo, una extensión de este análisis a un entorno de información incompleta donde los agentes tienen distribuciones de probabilidad sobre algún parámetro incierto es directa, siempre y cuando la negociación se realice fuera de línea; es decir, los agentes conocen sus preferencias para cada tema individual antes de que comience la negociación. Por ejemplo, consideremos el caso en el que diferentes agentes tienen diferentes factores de descuento, y cada agente tiene incertidumbre sobre el factor de descuento de sus oponentes aunque conoce el suyo propio. Esta incertidumbre se modela con una distribución de probabilidad sobre los posibles valores del factor de descuento de los oponentes y teniendo esta distribución como conocimiento común de los agentes. Todos nuestros análisis para la configuración de información completa siguen siendo válidos para The Sixth Intl. En esta configuración de información incompleta, excepto por el hecho de que un agente ahora debe usar la distribución de probabilidad dada y encontrar la utilidad esperada de sus oponentes en lugar de su utilidad real. Por lo tanto, en lugar de analizar un escenario de información incompleta para la negociación offline, nos enfocamos en la negociación en línea de múltiples temas. 4. NEGOCIACIÓN EN LÍNEA DE MÚLTIPLES TEMAS Ahora consideramos una versión más general y, posiblemente más realista, de la negociación de múltiples temas, donde los agentes tienen incertidumbre sobre los temas sobre los que tendrán que negociar en el futuro. En este contexto, al negociar un tema, los agentes saben que negociarán más temas en el futuro, pero tienen incertidumbre sobre los detalles de esos temas. Como antes, sea m el número total de temas que están en negociación. Los agentes tienen una distribución de probabilidad sobre los posibles valores de ka c y kb c. Para 1 ≤ c ≤ m, ka c y kb c se distribuyen uniformemente en el intervalo [0,1]. Esta distribución de probabilidad, n y m son conocimiento común para los agentes. Sin embargo, los agentes solo llegan a conocer ka c y kb c justo antes de que comience la negociación sobre el tema c. Una vez que los agentes llegan a un acuerdo sobre el tema c, no puede ser renegociado. Este escenario requiere negociación en línea ya que los agentes deben tomar decisiones sobre un problema antes de tener la información sobre los problemas futuros [3]. Primero damos una breve introducción a los problemas en línea y luego establecemos una analogía entre el problema de la mochila en línea y el problema de negociación que queremos resolver. En un problema en línea, los datos se proporcionan al algoritmo de forma incremental, una unidad a la vez [3]. El algoritmo en línea también debe producir la salida de forma incremental: después de ver i unidades de entrada, debe producir la i-ésima unidad de salida. Dado que las decisiones sobre la salida se toman con un conocimiento incompleto sobre la entrada completa, un algoritmo en línea a menudo no puede producir una solución óptima. Un algoritmo así solo puede aproximar el rendimiento del algoritmo óptimo que ve todos los datos de entrada de antemano. En el diseño de algoritmos en línea, el objetivo principal es lograr un rendimiento que esté cerca del del algoritmo óptimo fuera de línea en cada entrada. Un algoritmo en línea se dice que es estocástico si toma decisiones en función de las distribuciones de probabilidad de las entradas futuras. El rendimiento de los algoritmos en línea estocásticos se evalúa en términos de la diferencia esperada entre la solución óptima y la solución aproximada (denotada como E[z∗ m −zm] donde z∗ m es la solución óptima y zm es la solución aproximada). Se debe tener en cuenta que el subíndice m se utiliza para indicar que esta diferencia depende de m. Ahora describimos el protocolo para la negociación en línea y luego obtenemos un equilibrio aproximado. El protocolo se define de la siguiente manera. Que el agente a denote al primer jugador (ya que nos enfocamos en el procedimiento de paquete, el primer jugador es el mismo para todos los m temas). Paso 1. Para c = 1, a los agentes se les dan los valores de ka c y kb c. Estos dos valores son ahora conocimiento común. Paso 2. Los agentes resuelven el problema c utilizando el protocolo de ofertas alternadas descrito en la Sección 2. La negociación para el tema c debe finalizar dentro de n períodos de tiempo a partir del inicio de la negociación sobre el tema. Si no se llega a un acuerdo dentro de este tiempo, entonces la negociación falla en este y en todos los temas restantes. Paso 3. Los pasos anteriores se repiten para los problemas c = 2, 3, . . . , m. La negociación para el problema c (2 ≤ c ≤ m) comienza en el período de tiempo siguiente a un acuerdo sobre el problema c − 1. Suponemos conocimiento común porque simplifica la exposición. Sin embargo, si ka c (kb c) es un conocimiento privado (bs), entonces nuestro análisis seguirá siendo válido, pero ahora un agente debe encontrar la utilidad esperada de sus oponentes en función de las funciones de densidad de probabilidad para ka c y kb c. Por lo tanto, durante el período de tiempo t, el problema para el agente oferente (digamos a) es encontrar la oferta óptima para el tema c en función de ka c y kb c y la distribución de probabilidad para ka i y kb i (c < i ≤ m). Para resolver este problema de negociación en línea, establecemos una analogía con el problema de la mochila en línea. Antes de hacerlo, sin embargo, ofrecemos una breve descripción del problema de la mochila en línea. En el problema de la mochila en línea, hay m elementos. El agente debe examinar los m elementos uno por uno de acuerdo al orden en que son introducidos (es decir, a medida que se conocen sus coeficientes de ganancia y tamaño). Por lo tanto, el algoritmo debe decidir si incluir o no cada elemento en la mochila tan pronto como se conozca su peso y beneficio, sin tener conocimiento sobre los elementos que aún faltan por ver, excepto por su número total. Ten en cuenta que dado que los agentes tienen una distribución de probabilidad sobre los pesos y beneficios de los elementos futuros, este es un caso de problema de la mochila en línea estocástico. Nuestro problema de negociación en línea es análogo al problema de la mochila en línea. Esta analogía se describe en detalle en la demostración del Teorema 5. Una vez más, los investigadores en algoritmos han desarrollado soluciones aproximadas eficientes en tiempo para el problema de la mochila en línea [16]. Por lo tanto, utilizamos esta solución y demostramos que forma un equilibrio. El siguiente teorema caracteriza un equilibrio aproximado para la negociación en línea. Aquí los agentes tienen que elegir una estrategia sin conocer las características de los problemas futuros. Debido a esta incompletitud de la información, la solución de equilibrio relevante es la de un Equilibrio de Bayes-Nash (BNE) en el que cada agente juega la mejor respuesta a los otros agentes con respecto a sus utilidades esperadas [18]. Sin embargo, encontrar la estrategia BNE de un agente es análogo a resolver el problema de la mochila 0-1 en línea. Además, la mochila en línea solo puede resolverse de forma aproximada [16]. Por lo tanto, el concepto relevante de solución de equilibrio es el NEA aproximado (ver [26] por ejemplo). El siguiente teorema encuentra este equilibrio utilizando los procedimientos ONLINE-TRADEOFFA y ONLINE-TRADEOFFB que están definidos en la demostración del teorema. Para un período de tiempo dado, dejamos que zm denote la solución aproximadamente óptima generada por ONLINE-TRADEOFFA (o ONLINE-TRADEOFFB) y z∗ m el óptimo real. TEOREMA 5. Para el procedimiento de paquete, las siguientes estrategias forman un equilibrio de Nash aproximado de Bayes. La estrategia de equilibrio para t = n es: A(n) = j OFRECER [1, 0] SI en el TURNO a es ACEPTAR SI b es TURNO B(n) = j OFRECER [0, 1] SI b es TURNO ACEPTAR SI a es TURNO Para todos los períodos de tiempo anteriores t < n, si [xt, yt] denota la oferta realizada en el tiempo t, entonces las estrategias de equilibrio se definen de la siguiente manera: A(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA A(P, UB(t), t) SI a es TURNO Si (Ua ([xt, yt], t) ≥ UA(t)) ACEPTAR de lo contrario RECHAZAR SI b es TURNO B(t) = 8 < : OFRECER COMPENSACIÓN EN LÍNEA B(P, UA(t), t) SI b es TURNO Si (Ub ([xt, yt], t) ≥ UB(t)) ACEPTAR de lo contrario RECHAZAR SI a es TURNO donde UA(t) = Ua ([¯at+1, ¯bt+1], t + 1) y UB(t) = Ub ([¯at+1, ¯bt+1], t + 1). Un acuerdo sobre el tema c tiene lugar en t = c. Para un período de tiempo dado, la diferencia esperada entre la solución generada por la estrategia óptima y la generada por la estrategia aproximada es E[z∗ m − zm] = O( √ m). 956 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) PRUEBA. Como en el Teorema 1 encontramos la oferta de equilibrio para el período de tiempo t = 1 utilizando la inducción hacia atrás. Que a sea el agente oferente para t = 1 para todos los problemas m. Considera el último período de tiempo t = n (recuerda del Paso 2 del protocolo en línea que n es la fecha límite para completar la negociación sobre el primer tema). Dado que el primer agente es el mismo para todos los temas, y los agentes hacen ofertas alternativamente, el agente oferente para t = n también es el mismo para todos los m temas. Se asume que b es el agente oferente para t = n. Como se indica en la Sección 3, el agente oferente para t = n recibe el cien por ciento de todos los problemas m. Dado que b es el agente oferente para t = n, su utilidad para este período de tiempo es: UB(n) = kb 1δn−1 1 + 1/2 mX i=2 δ i(n−1) i (6) Recuerde que ka i y kb i (para c < i ≤ m) no son conocidos por los agentes. Por lo tanto, los agentes solo pueden encontrar sus utilidades esperadas de los problemas futuros en función de las funciones de distribución de probabilidad para ka i y kb i. Sin embargo, durante la negociación para el tema c, los agentes conocen ka c pero no kb c (ver Paso 1 del protocolo en línea). Por lo tanto, a calcula UB(n) de la siguiente manera. La utilidad del agente b del problema c = 1 es kb 1δn−1 1 (que es el primer término de la Ecuación 6). Entonces, sobre la base de las funciones de distribución de probabilidad para ka i y kb i, el agente a calcula la utilidad esperada de bs para cada problema futuro i como δ i(n−1) i /2 (ya que ka i y kb i están distribuidos uniformemente en [0, 1]). Por lo tanto, se espera que la utilidad acumulada de estos problemas m − c sea 1/2 Pm i=2 δ i(n−1) i (que es el segundo término de la Ecuación 6). Ahora, para decidir qué ofrecer para el problema c = 1, el agente oferente para t = n − 1 (es decir, el agente a) debe resolver el siguiente problema de la mochila en línea: maximizar Σm i=1ka i (1 − ¯bt i)δn−1 i (7) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m. Las únicas variables en el problema de maximización anterior son ¯bt i. Ahora, maximizar Σm i=1ka i (1−¯bt i)δn−1 i es lo mismo que minimizar Σm i=1ka i ¯bt i ya que δn−1 i y ka i son constantes. Por lo tanto, escribimos la Ecuación 7 como: minimizar Σm i=1ka i ¯bt i (8) tal que Σm i=1kb i ¯bt i ≥ UB(n) ¯bt i = 0 o 1 para 1 ≤ i ≤ m El problema de optimización anterior es análogo al problema de la mochila 0-1 en línea. Un algoritmo para resolver el problema de la mochila en línea ya ha sido propuesto en [16]. Este algoritmo se llama algoritmo en línea de elección fija. Tiene complejidad temporal lineal en el número de elementos (m) en el problema de la mochila. Usamos esto para resolver nuestro problema de negociación en línea. Por lo tanto, nuestro algoritmo ONLINE-TRADEOFFA no es más que el algoritmo en línea de elección fija y, por lo tanto, tiene la misma complejidad temporal que este último. Este algoritmo toma los valores de ka i y kb i uno a la vez y genera una solución aproximada al problema de la mochila mencionado anteriormente. La diferencia esperada entre la solución óptima y la solución aproximada es E[z∗ m − zm] = O( √ m) [16] (ver [16] para el algoritmo en línea de elección fija detallado y una demostración de E[z∗ m − zm] = O( √ m)). El algoritmo en línea de elección fija de [16] es una generalización del algoritmo codicioso básico para el problema de la mochila fuera de línea; la idea detrás de esto es la siguiente. Se determina un valor umbral en base a la información sobre los pesos y beneficios para el problema de la mochila 0-1. El método luego incluye en la mochila todos los elementos cuya densidad de beneficio (la densidad de beneficio de un elemento es su beneficio por unidad de peso) excede el umbral hasta que la mochila esté llena o se hayan considerado todos los m elementos. Con más detalle, el algoritmo ONLINE-TRADEOFFA funciona de la siguiente manera. Primero obtiene los valores de ka 1 y kb 1 y encuentra ¯bt c. Dado que tenemos un problema de mochila 0-1, ¯bt c puede ser cero o uno. Ahora, si ¯bt c = 1 para t = n, entonces ¯bt c debe ser uno para 1 ≤ t < n (es decir, a debe ofrecer ¯bt c = 1 en t = 1). Si ¯bt c = 1 para t = n, pero a ofrece ¯bt c = 0 en t = 1, entonces el agente b recibe menos utilidad de lo que espera de la oferta de a y rechaza la propuesta. Por lo tanto, si ¯bt c = 1 para t = n, entonces la estrategia óptima para a es ofrecer ¯bt c = 1 en t = 1. El agente b acepta la oferta. Por lo tanto, la negociación sobre el primer tema comienza en t = 1 y también se llega a un acuerdo sobre él en t = 1. En el próximo período de tiempo (es decir, t = 2), la negociación avanza hacia el siguiente tema. La fecha límite para el segundo número es n períodos de tiempo desde el inicio de la negociación sobre el tema. Para c = 2, el algoritmo ONLINE-TRADEOFFA recibe los valores de ka 2 y kb 2 y encuentra ¯bt c como se describe arriba. El agente ofrece bc en t = 2 y b acepta. Por lo tanto, la negociación sobre el segundo tema comienza en t = 2 y también se llega a un acuerdo sobre él en t = 2. Este proceso se repite para los problemas restantes c = 3, . . . , m. Por lo tanto, cada problema se acuerda en el mismo período de tiempo en el que comienza. A medida que comienza la negociación para el próximo problema en el siguiente período de tiempo (ver paso 3 del protocolo en línea), el acuerdo sobre el problema i ocurre en el tiempo t = i. Por otro lado, si b es el agente oferente en t = 1, utiliza el algoritmo ONLINE-TRADEOFFB que está definido de manera análoga. Por lo tanto, independientemente de quién dé el primer paso, todos los m problemas se resuelven en el tiempo t = m. TEOREMA 6. La complejidad temporal de encontrar las ofertas de equilibrio aproximado del Teorema 5 es lineal en m. DEMOSTRACIÓN. La complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB es la misma que la complejidad temporal del algoritmo en línea de elección fija de [16]. Dado que este último tiene una complejidad temporal lineal en m, la complejidad temporal de ONLINE-TRADEOFFA y ONLINETRADEOFFB también es lineal en m. Cabe destacar que, para el problema de la mochila 0-1, el límite inferior de la diferencia esperada entre el óptimo y la solución encontrada por cualquier algoritmo en línea es Ω(1) [16]. Por lo tanto, se deduce que este límite inferior también se aplica a nuestro problema de negociación. 5. TRABAJO RELACIONADO El trabajo sobre negociación de múltiples temas se puede dividir en dos tipos principales: el de temas indivisibles y el de temas divisibles. Primero describimos el trabajo existente para el caso de problemas divisibles. Desde que Schelling [24] señaló por primera vez que el resultado de una negociación depende de la elección del procedimiento de negociación, se ha dedicado mucho esfuerzo de investigación al estudio de diferentes procedimientos para negociar múltiples temas. Sin embargo, la mayor parte de este trabajo se ha centrado en el procedimiento secuencial [7, 2]. Para este procedimiento, un tema clave es la agenda de negociación. Aquí el término agenda se refiere al orden en el que se negocian los asuntos. La agenda es importante porque la utilidad acumulativa de cada agente depende de la agenda; si cambiamos la agenda, entonces estas utilidades cambian. Por lo tanto, los agentes deben decidir qué agenda utilizarán. Ahora, la agenda puede ser decidida antes de negociar los temas (una agenda así se llama exógena) o puede ser decidida durante el proceso de negociación (una agenda así se llama endógena). Por ejemplo, Fershtman [7] analiza la negociación secuencial con agenda exógena. Un número de investigadores también ha estudiado negociaciones con una agenda endógena [2]. A diferencia del trabajo anterior que se ocupa principalmente de la negociación secuencial, [6] estudia el equilibrio para el procedimiento de paquete de ofertas. Sin embargo, todo el trabajo mencionado anteriormente difiere del nuestro en que nos enfocamos en problemas indivisibles mientras que otros se centran en el caso The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 957 donde cada problema es divisible. Específicamente, ningún trabajo previo ha determinado un equilibrio aproximado para la negociación de múltiples temas o para la negociación en línea. El trabajo existente para el caso de problemas indivisibles ha tratado principalmente con problemas de asignación de tareas (para tareas que no pueden ser divididas) a un grupo de agentes. El problema de la asignación de tareas ha sido estudiado previamente en el contexto de coaliciones que involucran a más de dos agentes. Por ejemplo [25], analiza el problema para el caso en el que los agentes actúan para maximizar el beneficio del sistema en su totalidad. Por el contrario, nuestro enfoque se centra en dos agentes donde ambos son egoístas y quieren maximizar sus utilidades individuales. Por otro lado, [22] se centra en el uso de contratos para la asignación de tareas a múltiples agentes con intereses propios, pero este trabajo se refiere a encontrar formas de desvincular los contratos (después de que se haya realizado la asignación inicial) para mejorar la utilidad de un agente. Por el contrario, nos enfocamos en la negociación respecto a quién llevará a cabo qué tarea. Finalmente, se han estudiado mecanismos en línea y aproximados en el contexto de subastas [14, 9], pero no para negociaciones bilaterales (que es el enfoque de nuestro trabajo). 6. CONCLUSIONES Este documento ha estudiado la negociación bilateral de múltiples temas entre agentes autónomos interesados en sí mismos con restricciones de tiempo. Los problemas son indivisibles y diferentes agentes valoran los problemas de manera diferente. Por lo tanto, el problema consiste en que los agentes decidan cómo asignar los problemas entre ellos mismos para maximizar sus utilidades individuales. Específicamente, primero demostramos que encontrar las ofertas de equilibrio es un problema NP-duro incluso en un entorno de información completa. Luego presentamos estrategias de negociación aproximadamente óptimas y demostramos que forman un equilibrio. Estas estrategias tienen complejidad temporal polinómica. También analizamos la diferencia entre el óptimo real y el óptimo aproximado. Finalmente, extendimos el análisis a la negociación en línea donde los temas se vuelven disponibles en diferentes momentos y los agentes tienen incertidumbre sobre las características de estos temas. Específicamente, demostramos que existe un equilibrio aproximado para la negociación en línea y analizamos el error de aproximación. Estas estrategias aproximadas también tienen complejidad temporal polinómica. Hay varias direcciones interesantes para trabajos futuros. Primero, para la negociación en línea, asumimos que las constantes ka c y kb c están distribuidas de forma uniforme. Será interesante analizar el caso en el que ka c y kb c tengan otras distribuciones de probabilidad, posiblemente diferentes. Además de esto, tratamos el número de problemas como conocimiento común para los agentes. En el futuro, será interesante tratar el número de problemas como incierto. 7. REFERENCIAS [1] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela y M. Protasi. Complejidad y aproximación: Problemas de optimización combinatoria y sus propiedades de aproximabilidad. Springer, 2003. [2] M. Bac y H. Raff. Negociaciones tema por tema: el papel de la información y la preferencia temporal. Juegos y Comportamiento Económico, 13:125-134, 1996. [3] A. Borodin y R. El-Yaniv. Computación en línea y análisis competitivo. Cambridge University Press, 1998. [4] S. J. Brams. \n\nCambridge University Press, 1998. [4] S. J. Brams. División justa: desde el corte de pasteles hasta la resolución de disputas. Cambridge University Press, 1996. [5] L. A. Busch y I. J. Horstman. Fricciones en la negociación, procedimientos de negociación y costos implícitos en la negociación de múltiples temas. Economica, 64:669-680, 1997. [6] S. S. Fatima, M. Wooldridge y N. R. Jennings. Negociación de múltiples temas con plazos. Revista de Investigación en Inteligencia Artificial, 27:381-417, 2006. [7] C. Fershtman. La importancia de la agenda en las negociaciones. Juegos y Comportamiento Económico, 2:224-238, 1990. [8] F. Glover. Un algoritmo dual de múltiples fases para el problema de programación entera de cero-uno. Investigación de Operaciones, 13:879-919, 1965. [9] M. T. Hajiaghayi, R. Kleinberg y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. En la Conferencia ACM sobre Comercio Electrónico (ACMEC-04), páginas 71-80, Nueva York, 2004. [10] O. H. Ibarra y C. E. Kim. Algoritmos de aproximación rápida para el problema de la mochila y el problema de la suma de subconjuntos. Revista de ACM, 22:463-468, 1975. [11] R. Inderst. Negociación de múltiples temas con agenda endógena. Juegos y Comportamiento Económico, 30:64-82, 2000. [12] R. Keeney y H. Raiffa. Decisiones con múltiples objetivos: preferencias e intercambios de valor. Nueva York: John Wiley, 1976. [13] S. Kraus. Negociación estratégica en entornos multiagente. El MIT Press, Cambridge, Massachusetts, 2001. [14] D. Lehman, L. I. O'Callaghan y Y. Shoham. Revelación de la verdad en subastas combinatorias aproximadamente eficientes. Revista de la ACM, 49(5):577-602, 2002. [15] A. Lomuscio, M. Wooldridge y N. R. Jennings. Un esquema de clasificación para la negociación en el comercio electrónico. Revista Internacional de Decisión de Grupo y Negociación, 12(1):31-56, 2003. [16] A. Marchetti-Spaccamela y C. Vercellis. Problemas de mochila en línea estocásticos. Programación Matemática, 68:73-104, 1995. [17] S. Martello y P. Toth. Problemas de la mochila: Algoritmos e implementaciones informáticas. John Wiley and Sons, 1990. [18] M. J. Osborne y A. Rubinstein. Un curso de teoría de juegos. El MIT Press, 1994. [19] H. Raiffa. El arte y la ciencia de la negociación. Harvard University Press, Cambridge, EE. UU., 1982. [20] J. S. Rosenschein y G. Zlotkin. Reglas de Encuentro. MIT Press, 1994. [21] A. Rubinstein. \n\nMIT Press, 1994. [21] A. Rubinstein. Equilibrio perfecto en un modelo de negociación. Econometrica, 50(1):97-109, enero de 1982. [22] T. Sandholm y V. Lesser. Contratos de compromiso nivelado y ruptura estratégica. Juegos y Comportamiento Económico: Edición Especial sobre IA y Economía, 35:212-270, 2001. [23] T. Sandholm y N. Vulkan. Negociando con plazos límite. En AAAI-99, páginas 44-51, Orlando, FL, 1999. [24] T. C. Schelling. Un ensayo sobre la negociación. Revista Económica Americana, 46:281-306, 1956. [25] O. Shehory y S. Kraus. Métodos para la asignación de tareas a través de la formación de coaliciones de agentes. Revista de Inteligencia Artificial, 101(1-2):165-200, 1998. [26] S. Singh, V. Soni y M. Wellman. Calculando equilibrios de Nash de Bayes aproximados en juegos de árbol de información incompleta. En Actas de la Conferencia ACM sobre Comercio Electrónico ACM-EC, páginas 81-90, Nueva York, mayo de 2004. [27] I. Stahl. Teoría de la negociación. Instituto de Investigación Económica, Escuela de Economía de Estocolmo, Estocolmo, 1972. 958 El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) ",
            "candidates": [],
            "error": [
                []
            ]
        }
    }
}