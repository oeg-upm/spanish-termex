{
    "id": "C-34",
    "original_text": "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks. A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed. By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes. Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected. Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works. Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications. General Terms: Security. 1. INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data. As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques. However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC). Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14]. Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1]. In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key. Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme. The q-composite scheme requires any two sensors share at least q pre-distributed keys. The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2]. Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4]. The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2]. Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme. A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques. The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool. The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials. Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key. A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5]. Rather than on Blundos scheme their approach is based on Bloms scheme [6]. In some cases, it is essentially equivalent to the one in [4]. All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme. However, the pairwise key establishment problem in sensor networks is still not well solved. For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly. As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3]. Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4]. For the random subset assignment scheme, it suffers higher communication and computation overheads. In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube. The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises. Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes. Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other. This strong assumption is impractical in most of the actual applications of the sensor networks. In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme. The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks. Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key. The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance. We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model. The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented. In section 4, a new Hierarchical Hypercube model is proposed. In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed. In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described. Finally, section 8 presents a conclusion. 2. PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution. Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them. Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak. Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3. MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes. Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster. We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster. Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks. Figure.1 An actual model of clusters deployed sensor networks. From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster. But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4. HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j. So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A. Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n. Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5. Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance. Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5. MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model. Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively. Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6. H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models. The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds. Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1. Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods. Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm). If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm). If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster. Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in. Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in). So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm. Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm. Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm). So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B. According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B. And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm). If d>1, then there exists a path key between nodes A and B. Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b. Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster. So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes. In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes. For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube. Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes. In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes. So, it is obvious that there exists a path key between nodes A and B. According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm). Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key. From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network. Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment. Figure.2 Key path establishment example. For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically. That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes. Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm). Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1. So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B. If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand. And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network. From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] . Figure.3 Alternative key path establishment example. For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B. Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently. In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks. Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s. Output: A correct key path from node A to B in H(k,u,m,v,n). Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1]. Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10]. Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II. Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]). Step 4: Algorithm exits. If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B. Otherwise, node A fails to establish an indirect pairwise key with node B. And node A will tries again to establish an indirect pairwise key with node B some time later. 7. ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn . Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm. Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A. And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A. Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A. So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all. Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed. Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model. Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2. Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N. Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm. From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1). According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1). Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1). Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2. When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0. So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1). Therefore, the conclusion of the theorem stands. As for the conclusion of theorem 4, we give an example to illustrate. Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1). Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models. From Figure.5, it is easy to know that the theorem 5 stands. Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model. Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster. Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model. According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment. Attacks against a Pair of sensor nodes 1. Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v. Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes. But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2. Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key. Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial. Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key. Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network. Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share. Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share. So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares. However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected. And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes. Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models. From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models. Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme. Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx . Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8. CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks. And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes. The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need. So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper. Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9. ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10. REFERENCES [1] L. Eschenauer and V. Gligor. A key-management scheme for distribute sensor networks. In Proceedings of the 9th ACM Conference on Computer and Communication Security. ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song. Random key predistribution schemes for sensor networks. In IEEE Symposium on Security and Privacy. IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung. Perfectly-secure key distribution for dynamic conferences. Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning. Establishing pairwise keys in distributed sensor networks. In Proceedings of the 10th ACM Conference on Computer and Communications Security. ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney. A pairwise key pre-distribution scheme for wireless sensor networks. In Proceedings of the Tenth ACM Conference on Computer and Communications Security. Washingtion, DC, USA,2003, 4251. [6] R. Blom. An optimal class of symmetric key generation systems. Advances in Cryptology: Proceedings of EUROCRYPT 84. Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks. ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng. A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network. Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network. Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks. Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks. ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A.; Agrawal,D.P. TEEN: a routing protocol for enhanced efficiency in wireless sensor networks]. In Proceedings of 15th Parallel and Distributed Processing Symposium]. IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker. Modelling Data-Centric Routing in Wireless Sensor Networks. In Proceedings of IEEE Infocom, 2002. 61",
    "original_translation": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la red de sensores incluye N nodos y se despliega a través de k rondas diferentes. Luego podemos predistribuir claves para cada nodo sensor basándonos en el modelo H(k,u,m,v,n) de la siguiente manera: Paso 1: El servidor de configuración de claves genera aleatoriamente un conjunto de polinomios bivariados como el siguiente: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} con vn *m*um-1 +[N/vn ]*n*vn-1 diferentes polinomios bivariados de grado t sobre un campo finito Fq, y luego asigna un ID de polinomio único a cada polinomio bivariado en F. Paso 2: En cada ronda, el servidor de configuración de claves asigna un ID de nodo único: (i1i2…in,j1j2…jm) a cada nodo sensor de menor a mayor, donde 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1. Paso 3: el servidor de configuración de claves asigna un ID de clúster único: l a todos los nodos sensores desplegados en la misma ronda, donde 1 ≤ l ≤ k. Paso 4: el servidor de configuración de claves predistribuye polinomios bivariados m+n { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } y los IDs de polinomios correspondientes al nodo sensor desplegado en la ronda l y con ID (i1i2…in, j1j2…jm). 6.2 Descubrimiento directo de claves de pares Si el nodo A(i1i2…in,j1j2…jm) en la red de sensores desea establecer una clave de par con un nodo B (i1i2…in,j1j2…jm), entonces el nodo A puede establecer una clave de par con el nodo B a través de los siguientes métodos. En primer lugar, el nodo A calcula la distancia entre sí mismo y el nodo B: d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces el nodo A obtiene la clave directa de pares entre él mismo y el nodo B de acuerdo con el siguiente teorema 1: Teorema 1: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia 56 entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces existe una clave directa entre los nodos A y B. Prueba: Dado que d=1, entonces existe d1=1, d2=0, o d1=0, d2=1. 1) Si d1=1, d2=0: A partir de d2=0, los nodos A y B pertenecen al mismo clúster. Suponiendo que los nodos A y B pertenecen al mismo clúster l, entonces de d1=1 ⇒ Solo hay una posición diferente entre i1i2…in e i1i2…in. Déjalo=lo, cuando 1 ≤ t ≤ n-1, y en ≠ en ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in). Por lo tanto, existe una clave directa de pares f n iiil n >< −121 ,...,,, (in,in) entre los nodos A y B. 2) Si d1=0, d2=1: Desde d2=1 ⇒ Solo hay una posición diferente entre j1j2…jm y j1j2…jm. Que jt sea igual a jt, cuando 1 ≤ t ≤ m1, y jm no sea igual a jm. Dado que d1=0 ⇒ i1i2…in es igual a i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm). Entonces, existe una clave directa de pares de llaves f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) entre los nodos A y B. Según el teorema 1, presentamos la descripción detallada del algoritmo de descubrimiento de clave directa por pares de manera directa de la siguiente manera: Paso 1: Obtener los IDs de nodo y los IDs de clúster del nodo fuente A y del nodo destino B; Paso 2: Calcular la distancia entre los nodos A y B: d= d1+ d2; Paso 3: Si d1=1, d2=0, entonces seleccionar un polinomio común compartido de los nodos A y B de { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } para establecer una clave directa por pares; Paso 4: Si d1=0, d2=1, entonces seleccionar un polinomio común compartido de los nodos A y B de { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } para establecer una clave directa por pares; Paso 5: De lo contrario, no existe una clave directa por pares entre los nodos A y B. Y luego pasar al siguiente proceso clave de descubrimiento de ruta. 6.3 Descubrimiento de Clave de Ruta Si d>1, entonces el nodo A puede establecer una clave de ruta con el nodo B de acuerdo con el siguiente teorema 2: Teorema 2: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d>1, entonces existe una clave de ruta entre los nodos A y B. Prueba: Sea d1=a, d2=b, entonces podemos pensar que it ≠ it, cuando 1 ≤ t ≤ a; pero it=it, cuando t>a; y jt ≠ jt, cuando 1 ≤ t ≤ b; pero jt=jt, cuando t>b. Obviamente, los nodos A(i1i2…in, j1j2…jm), (i1i2 i3…in, j1j2…jm), (i1i2 i3…in, j1j2…jm),…, (i1i2…in, j1j2…jm) pertenecen al mismo clúster. Por lo tanto, según la condición supuesta de que los nodos en el mismo clúster forman un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Para los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), dado que tienen los mismos códigos de nodo de hipercubo de salida con el nodo B(i1i2…in,j1j2…jm), los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) y el nodo B pertenecen a un mismo hipercubo lógico. Obviamente, a partir de la condición supuesta de que toda la red de sensores forma un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Por lo tanto, es obvio que existe una clave de ruta entre los nodos A y B. Según el teorema 2, presentamos la descripción detallada del algoritmo de descubrimiento de clave de ruta de la siguiente manera: Paso 1: Calcular los nodos intermedios (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) desde el nodo fuente A(i1i2…in,j1j2…jm) hasta el nodo destino B (i1i2…in,j1j2…jm). Paso 2: En esos nodos de la serie A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), los nodos vecinos seleccionan su parte polinómica común para establecer una clave directa de forma pareja. A partir del teorema 2, es fácil saber que cualquier nodo fuente A puede calcular un camino clave P hacia el nodo de destino B de acuerdo con el algoritmo anterior, cuando no hay nodos comprometidos en la red de sensores. Una vez que se calcula la ruta clave P, el nodo A puede enviar mensajes a B a lo largo de la ruta P para establecer una clave de forma indirecta con el nodo B. La Figura 2 presenta un ejemplo de establecimiento de ruta clave. Figura 2. Ejemplo de establecimiento de ruta clave. Por ejemplo: En la Figura 2 anterior, el nodo A((012),(1234)) puede establecer una clave de forma pareja con el nodo B((121),(2334)) a través de la siguiente ruta de clave: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), donde el nodo F deberá enrutar a través de los nodos G, H, I, J para establecer una clave de forma pareja directa con el nodo B. Según las propiedades del modelo H(k,u,m,v,n), podemos demostrar el siguiente teorema combinando la prueba del teorema 2: Teorema 3: Suponiendo que no existen nodos comprometidos en la red de sensores, y la distancia entre el nodo A y B, entonces existe una ruta de clave más corta con una distancia k entre el nodo A y B lógicamente. Es decir, el nodo A puede establecer una clave de enlace indirecto con el nodo B a través de t-1 nodos intermedios. Prueba: Suponiendo que la distancia entre el nodo A(i1i2…in, j1j2…jm) y B(i1i2…in, j1j2…jm) es d=d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Dado que d=t, de acuerdo con las propiedades de construcción de H(k,u,m,v,n), es fácil saber que existen t-1 nodos intermedios I1,…,It-1, en el espacio lógico H(k,u,m,v,n), que satisfacen que la distancia entre cualquier par de nodos vecinos en la serie de nodos A, I1,…,It-1, B es igual a 1. Según el teorema 1, podemos saber que los nodos A, I1,…,It-1, B forman un camino de clave correcto entre el nodo A y B. Si dos nodos vecinos en la serie de nodos A, I1,…,It-1, B pueden comunicarse directamente, entonces el nodo A puede establecer una clave de par indirecta con el nodo B a través de esos t-1 nodos intermedios. 6.4 Descubrimiento de Clave de Ruta Dinámica El algoritmo de descubrimiento de clave de ruta propuesto en la sección anterior puede establecer una ruta de clave correctamente, solo cuando no existen nodos comprometidos en toda la red de sensores, ya que la ruta de clave se calcula de antemano. Y el algoritmo propuesto no puede encontrar una ruta de clave alternativa cuando existen nodos comprometidos o nodos intermedios que no están dentro del radio de comunicación, incluso si existen otras rutas de clave alternativas en la red de sensores. A partir del siguiente ejemplo, podemos saber que hay muchos caminos paralelos en el modelo H(k,u,m,v,n) para cualquier par de nodos de origen y destino dados, ya que el modelo H(k,u,m,v,n) es altamente tolerante a fallos[9,10]. Figura 3. Ejemplo de establecimiento de ruta clave alternativa. Por ejemplo: Considerando el ejemplo de establecimiento de ruta clave dado en la sección anterior basado en la Figura 2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), suponiendo que el nodo F((121),(2234)) ha sido comprometido, entonces a partir de la Figura 3, podemos saber que existe otra ruta clave alternativa como A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → M((121),(1334)) → B((121),(2334)), la cual puede ser utilizada para establecer la clave de forma indirecta entre los nodos A y B, donde el nodo E deberá pasar por los nodos D y K para establecer la clave de forma directa con el nodo M, y el nodo M deberá pasar por los nodos N, O, G, H, I, J para establecer la clave de forma directa con el nodo B. Dado que los sensores tienen limitaciones de energía, es fácil que se agoten o salgan del radio de comunicación, por lo tanto, el algoritmo propuesto en la sección anterior no puede garantizar establecer de manera eficiente la ruta de claves correcta. En esta sección, propondremos un algoritmo de descubrimiento de clave de ruta dinámica como sigue, el cual puede mejorar de manera efectiva la probabilidad de la ruta clave: Algoritmo I: Algoritmo de establecimiento de ruta clave dinámica basado en el modelo H(k,u,m,v,n) para redes de sensores desplegadas en clústeres. Red traducida: Red de sub-sensores H(k,u,m,v,n), que tiene algunos sensores comprometidos/fallidos y enlaces defectuosos. Y dos nodos alcanzables A(a1…an,a1…am) y B(b1…bn,b1…bm) en H(k,u,m,v,n), donde at ≠ bt, t∈[1,s], at=bt, t >s. Una ruta de clave correcta desde el nodo A hasta B en H(k,u,m,v,n). Paso 1: Obtener las cadenas de código de los nodos A y B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), donde aj, bj [0,∈ u-1], aj, bj [0,∈ v-1]. Paso 2: Si a1...am = b1...bm, entonces el nodo A puede encontrar una ruta hacia B de acuerdo con los algoritmos de enrutamiento del hipercubo [9-10]. Paso 3: De lo contrario, el nodo A puede encontrar una ruta hacia C(b1…bn, a1…am) según el Algoritmo I o el Algoritmo II. Entonces, sea I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), y cada nodo It en la serie de nodos anterior encuentra una ruta hacia su nodo vecino It+1 en base a la información de ubicación (Los algoritmos de enrutamiento detallados basados en información de ubicación se pueden ver en las referencias [11-14]). Paso 4: El algoritmo sale. Si existe un tipo de ruta de clave correcta, a través de qué nodo A puede establecer una clave de par indirecta con el nodo B. De lo contrario, el nodo A no logra establecer una clave de enlace indirecta con el nodo B. Y el nodo A intentará nuevamente establecer una clave de par indirecta con el nodo B en algún momento posterior. 7. ANÁLISIS DEL ALGORITMO 7.1 Análisis Práctico Según la descripción y análisis anteriores, es fácil saber que el algoritmo recién propuesto tiene las siguientes propiedades: Propiedad 3: Cuando no existen nodos defectuosos ni comprometidos, al utilizar un nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), donde N es el número total de nodos en la red de sensores, y N=um * vn. Prueba: Dado que las claves preasignadas por pares para cualquier nodo FA = { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } en el algoritmo recién propuesto. Obviamente, en el hipercubo lógico formado por los nodos en el mismo clúster del nodo A, hay n(v-1) nodos, de los cuales 58 tienen una clave directa de par a par con el nodo A. Y en el hipercubo lógico formado por los nodos en diferentes clústeres al de nodo A, hay m(u-1) nodos, que tienen una clave directa en pares con el nodo A. Por lo tanto, hay un total de m(u-1)+n(v-1) nodos que tienen una clave directa de par a par con el nodo A. Por lo tanto, la probabilidad de establecimiento de clave entre pares de nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), dado que toda la red de sensores tiene en total N nodos sensores. La Figura 4 presenta la comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Número de Dimensión Probabilidad de Establecer Clave Directa N = 8000 N=10000 N=20000 N=30000 Figura 4 Comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). A partir de la Figura 4, es fácil saber que al utilizar el nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la escala de las redes de sensores, y además, la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la dimensión n, cuando la escala de la red de sensores está fija. Teorema 4: Suponiendo que el total de sensores es N en la red de sensores, entonces cuando u ≥ v2, la probabilidad de establecimiento directo de claves entre pares entre dos nodos, al utilizar el esquema de distribución de claves basado en el modelo de hipercubo H(v,p), es menor que cuando se utiliza el esquema de distribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que u ≥ v, podemos dejar u=vt, donde t ≥ 2. Dado que el número total de nodos en H(v,p) es vp = N, el número total de nodos en H(k,u,m,v,n) es um * vn = N. Sea p=x+n, entonces hay um * vn = vx * vn ⇒ um =vx ⇒ x=tm. A partir de la propiedad 3, es fácil saber que la probabilidad de establecimiento directo de clave entre cualquier par de nodos se puede estimar como P=(m(u-1)+n(v-1))/(N-1). Según la descripción en [7], es bien sabido que la probabilidad de establecimiento directo de claves entre cualquier par de nodos puede estimarse como P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1). A continuación, demostraremos que m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1). Construye una función como f(t) = vt -1- t(v-1), donde t ≥ 2. Cuando t=2, es obvio que hay f(t)= vt -2v+1=( v-1)2 ≥ 0 y f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0. Entonces, hay f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1). Por lo tanto, la conclusión del teorema se mantiene. En cuanto a la conclusión del teorema 4, damos un ejemplo para ilustrar. Suponiendo que el número total de nodos en la red de sensores es N=214, y H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), entonces la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) es P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), pero la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p) es P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1). Suponiendo que el número total de nodos en la red de sensores es N, la Figura 5 ilustra la comparación entre la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) y la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p), cuando u=4 y v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 escala de la red de sensores Probabilidad de Establecer Clave Directa Modelo basado en H(k,u,m,v,n) Modelo basado en H(v,p) Figura 5 Comparación entre la probabilidad de establecimiento directo de claves entre los modelos H(v,n) y H(k,u,m,v,n). A partir de la Figura 5, es fácil saber que el teorema 5 se cumple. Teorema 5: Suponiendo que el total de sensores es N en la red de sensores, entonces el esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) es solo un caso especial del esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n). Prueba: En cuanto al esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n), tomemos k=1 (u=1, m=0), lo que significa que la red de sensores total incluye solo un clúster. Entonces, obviamente, el modelo H(k,u,m,v,n) se degradará en el modelo H(v,n). Según los análisis anteriores en este documento y la definición del esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) en [7], es fácil saber que la conclusión del teorema se mantiene. 59 7.2 Análisis de Seguridad Al utilizar el algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n), los intrusos pueden lanzar dos tipos de ataques: 1) Los atacantes pueden apuntar a la clave por pares entre dos nodos de sensor particulares, con el fin de comprometer la clave por pares entre ellos o evitar que establezcan una clave por pares. 2) Los atacantes pueden atacar toda la red de sensores, con el fin de disminuir la probabilidad de establecimiento de claves por pares o aumentar el costo del establecimiento de claves por pares. Ataques contra un par de nodos sensores 1. Suponiendo que los intrusos quieren atacar dos nodos de sensor específicos u,v, donde u,v son nodos no comprometidos, pero los intrusos quieren comprometer la clave de par entre ellos. 1) Si u,v pueden establecer una clave de par directa, entonces la única forma de comprometer la clave es comprometer el polinomio bivariado común f(x,y) entre u,v. Dado que el grado del polinomio bivariado f(x,y) es t, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado f(x,y). 2) Si u,v pueden establecer una clave de par indirecta a través de nodos intermedios, entonces los intrusos necesitan comprometer al menos un nodo intermedio, o comprometer el polinomio bivariado común f(x,y) entre dos nodos intermedios vecinos. Pero incluso si los intrusos logran hacer eso, los nodos u y v aún pueden restablecer la clave de pares indirecta a través de nodos intermedios alternativos. 2. Suponiendo que los intrusos quieran atacar dos nodos de sensor específicos u, v, donde u, v son nodos no comprometidos, pero los intrusos quieren evitar que establezcan la clave de forma pareja. Entonces, los intrusos necesitan comprometer todos los polinomios bivariados de grado m+n del nodo u o v. Dado que el grado del polinomio bivariado f(x,y) es t, para el polinomio bivariado, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado dado. Por lo tanto, los intrusos necesitan comprometer en total (m+n)(t+1) nodos sensores para evitar que u,v establezcan la clave de forma pareja. Ataques contra la red de sensores. Suponiendo que los atacantes conocen la distribución de los polinomios sobre los nodos de sensores, pueden atacar sistemáticamente la red comprometiendo los polinomios en F uno por uno para comprometer toda la red. Suponga que la fracción de polinomios comprometidos es pc, entonces hay hasta N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) nodos sensores que tienen al menos una parte de polinomio comprometida. Entre todos los N nodos sensores restantes, ninguno incluye una parte polinómica comprometida. Por lo tanto, los nodos sensores restantes N- N pueden establecer una clave directa de forma pareja utilizando cualquiera de sus partes polinómicas. Sin embargo, las claves de emparejamiento indirecto en los nodos sensores restantes N-N pueden verse afectadas. Y es posible que necesiten restablecer una nueva clave de enlace indirecto entre ellos seleccionando nodos intermedios alternativos que no pertenezcan a los N nodos comprometidos. Suponiendo que la escala de la red de sensores es N=10000, la Figura 6 presenta la comparación entre la pc y el número de nodos de sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). En la Figura 6, es fácil saber que, cuando la escala de la red de sensores está fija, el número de nodos de sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 Fracción de Polinomios Bivariados Comprometidos Nodos de Sensor con al menos un Polinomio Comprometido Compartido H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figura 6 la comparación entre pc y el número de nodos de sensor con al menos un polinomio comprometido compartido en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). Teorema 6: Suponiendo que el total de sensores es N en la red de sensores, y la fracción de nodos comprometidos es pc, entonces cuando u>v, el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es mayor que el del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) es pc ××N (m+n), y se ha demostrado en [7] que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es pc ××N p. Sea p=x+n, entonces um * vn = vx * vn ⇒ um =vx. Dado que u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Suponiendo que la escala de la red de sensores es N=10000, la Figura 7 presenta la comparación entre pc y el número de nodos de sensor con al menos una parte polinómica comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). A partir de la Figura 7, es fácil saber que la conclusión del teorema 9 es correcta, y el número de nodos sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos, cuando la escala de la red de sensores está fija. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fracción de Polinomios Bivariados Comprometidos NodosSensorconalmenosunPolinomioComprometidoCompartido H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figura 7 la comparación entre pc y el número de nodos sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). 8. CONCLUSIÓN Se propone un nuevo modelo jerárquico de hipercubo llamado H(k,u,m,v,n), que puede ser utilizado para la predistribución de claves por pares en redes de sensores desplegadas en clústeres. Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de Clave Polinómica y de Piscina de Claves. El nuevo algoritmo utiliza las buenas características de los códigos de nodo y la alta tolerancia a fallos del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7]. Por lo tanto, el algoritmo tradicional de predistribución de claves en pares basado en el modelo de hipercubo [7] es solo un caso especial del nuevo algoritmo propuesto en este artículo. Los análisis teóricos y experimentales muestran que el nuevo algoritmo propuesto es un eficiente algoritmo de establecimiento de claves por pares que es adecuado para las redes de sensores desplegadas en clústeres. AGRADECIMIENTOS Nuestro agradecimiento a ACM SIGCHI por permitirnos modificar las plantillas que habían desarrollado, y al fondo de ciencia natural de la provincia de Fujian de la República Popular de China bajo la subvención No. A0510024. 10. REFERENCIAS [1] L. Eschenauer y V. Gligor. Un esquema de gestión de claves para redes de sensores distribuidos. En Actas de la 9ª Conferencia ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington DC, EE. UU., 2002, 41-47. [2] H. Chan, A. Perrig y D. Song. Esquemas de predistribución de claves aleatorias para redes de sensores. En el Simposio de Seguridad y Privacidad de IEEE. IEEE Computer Society, California, EE. UU., 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro y M. Yung. Distribución de claves perfectamente segura para conferencias dinámicas. Notas de conferencia en Ciencias de la Computación. 1993, 740, 471-486. [4] D. Liu y P. Ning. Estableciendo claves de forma pareja en redes de sensores distribuidos. En Actas de la 10ª Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington, DC, EE. UU., 2003, 52-61. [5] W. Du, J. Deng, Y. Han y P. Varshney. Un esquema de pre-distribución de claves por pares para redes de sensores inalámbricos. En Actas de la Décima Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. Washington, DC, EE. UU., 2003, 4251. [6] R. Blom. Una clase óptima de sistemas de generación de claves simétricas. Avances en Criptología: Actas de EUROCRYPT 84. Notas de conferencia en Ciencias de la Computación. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establecimiento de claves de pares en redes de sensores distribuidos. Nombre de la revista ACM, 2004, 20, 1-35. [8] L. Fang, W. Du y N. Peng. Un esquema de descubrimiento de ubicación sin baliza para redes de sensores inalámbricos, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallas basado en matriz de camino de máxima seguridad para redes de interconexión de hipercubos. Revista de software. 2004, 15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallos basado en vector de ruta de máxima seguridad para redes de interconexión de hipercubos. Revista del Instituto de Comunicaciones de China. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Algoritmo de enrutamiento de conglomeración de datos jerárquicos basado en información de ubicación para redes de sensores. Revista China de electrónica. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik y H. Balakrishnan, Protocolos basados en negociación para la difusión de información en redes de sensores inalámbricos. Redes inalámbricas ACM. 2002, 8, 169-185. [13] Manjeshwar, A.; Agrawal, D.P. TEEN: un protocolo de enrutamiento para mejorar la eficiencia en redes de sensores inalámbricos. En Actas del 15º Simposio de Procesamiento Paralelo y Distribuido. IEEE Computer Society, San Francisco, EE. UU., 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin y S. Wicker. Modelado de enrutamiento centrado en datos en redes de sensores inalámbricos. En Actas de IEEE Infocom, 2002. 61",
    "original_sentences": [
        "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
        "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
        "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
        "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
        "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
        "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
        "General Terms: Security. 1.",
        "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
        "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
        "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
        "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
        "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
        "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
        "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
        "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
        "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
        "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
        "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
        "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
        "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
        "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
        "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
        "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
        "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
        "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
        "In some cases, it is essentially equivalent to the one in [4].",
        "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
        "However, the pairwise key establishment problem in sensor networks is still not well solved.",
        "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
        "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
        "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
        "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
        "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
        "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
        "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
        "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
        "This strong assumption is impractical in most of the actual applications of the sensor networks.",
        "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
        "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
        "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
        "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
        "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
        "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
        "In section 4, a new Hierarchical Hypercube model is proposed.",
        "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
        "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
        "Finally, section 8 presents a conclusion. 2.",
        "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
        "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
        "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
        "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
        "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
        "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
        "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
        "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
        "Figure.1 An actual model of clusters deployed sensor networks.",
        "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
        "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
        "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
        "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
        "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
        "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
        "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
        "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
        "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
        "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
        "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
        "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
        "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
        "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
        "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
        "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
        "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
        "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
        "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
        "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
        "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
        "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
        "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
        "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
        "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
        "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
        "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
        "If d>1, then there exists a path key between nodes A and B.",
        "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
        "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
        "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
        "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
        "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
        "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
        "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
        "So, it is obvious that there exists a path key between nodes A and B.",
        "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
        "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
        "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
        "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
        "Figure.2 Key path establishment example.",
        "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
        "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
        "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
        "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
        "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
        "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
        "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
        "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
        "Figure.3 Alternative key path establishment example.",
        "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
        "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
        "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
        "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
        "Output: A correct key path from node A to B in H(k,u,m,v,n).",
        "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
        "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
        "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
        "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
        "Step 4: Algorithm exits.",
        "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
        "Otherwise, node A fails to establish an indirect pairwise key with node B.",
        "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
        "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
        "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
        "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
        "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
        "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
        "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
        "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
        "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
        "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
        "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
        "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
        "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
        "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
        "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
        "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
        "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
        "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
        "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
        "Therefore, the conclusion of the theorem stands.",
        "As for the conclusion of theorem 4, we give an example to illustrate.",
        "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
        "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
        "From Figure.5, it is easy to know that the theorem 5 stands.",
        "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
        "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
        "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
        "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
        "Attacks against a Pair of sensor nodes 1.",
        "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
        "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
        "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
        "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
        "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
        "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
        "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
        "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
        "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
        "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
        "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
        "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
        "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
        "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
        "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
        "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
        "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
        "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
        "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
        "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
        "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
        "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
        "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
        "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
        "REFERENCES [1] L. Eschenauer and V. Gligor.",
        "A key-management scheme for distribute sensor networks.",
        "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
        "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
        "Random key predistribution schemes for sensor networks.",
        "In IEEE Symposium on Security and Privacy.",
        "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
        "Perfectly-secure key distribution for dynamic conferences.",
        "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
        "Establishing pairwise keys in distributed sensor networks.",
        "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
        "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
        "A pairwise key pre-distribution scheme for wireless sensor networks.",
        "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
        "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
        "An optimal class of symmetric key generation systems.",
        "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
        "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
        "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
        "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
        "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
        "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
        "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
        "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
        "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
        "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
        "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
        "Modelling Data-Centric Routing in Wireless Sensor Networks.",
        "In Proceedings of IEEE Infocom, 2002. 61"
    ],
    "translated_text_sentences": [
        "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos.",
        "Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n).",
        "Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios.",
        "Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto.",
        "El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores.",
        "Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas.",
        "Términos generales: Seguridad. 1.",
        "La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos.",
        "Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas.",
        "Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC).",
        "Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14].",
        "Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1].",
        "En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común.",
        "Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares.",
        "El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas.",
        "El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2].",
        "Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4].",
        "La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2].",
        "Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas.",
        "Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores.",
        "El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios.",
        "El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes.",
        "Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par.",
        "Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5].",
        "En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6].",
        "En algunos casos, es esencialmente equivalente al de [4].",
        "Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas.",
        "Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto.",
        "Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente.",
        "Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3].",
        "Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4].",
        "Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación.",
        "En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional.",
        "El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos.",
        "Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores.",
        "Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí.",
        "Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores.",
        "En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares.",
        "Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores.",
        "Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares.",
        "La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad.",
        "Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo.",
        "La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres.",
        "En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico.",
        "En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico.",
        "En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados.",
        "Finalmente, la sección 8 presenta una conclusión. 2.",
        "Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves.",
        "Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos.",
        "Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak.",
        "Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo.",
        "MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones.",
        "Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster.",
        "Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster.",
        "Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos.",
        "Figura 1. Un modelo real de redes de sensores desplegadas en grupos.",
        "A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster.",
        "Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4.",
        "Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j.",
        "Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
        "Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A.",
        "Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n.",
        "Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5.",
        "Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming.",
        "Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5.",
        "MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles.",
        "Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente.",
        "En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6.",
        "Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios.",
        "El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la red de sensores incluye N nodos y se despliega a través de k rondas diferentes.",
        "Luego podemos predistribuir claves para cada nodo sensor basándonos en el modelo H(k,u,m,v,n) de la siguiente manera: Paso 1: El servidor de configuración de claves genera aleatoriamente un conjunto de polinomios bivariados como el siguiente: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} con vn *m*um-1 +[N/vn ]*n*vn-1 diferentes polinomios bivariados de grado t sobre un campo finito Fq, y luego asigna un ID de polinomio único a cada polinomio bivariado en F. Paso 2: En cada ronda, el servidor de configuración de claves asigna un ID de nodo único: (i1i2…in,j1j2…jm) a cada nodo sensor de menor a mayor, donde 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
        "Paso 3: el servidor de configuración de claves asigna un ID de clúster único: l a todos los nodos sensores desplegados en la misma ronda, donde 1 ≤ l ≤ k. Paso 4: el servidor de configuración de claves predistribuye polinomios bivariados m+n { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } y los IDs de polinomios correspondientes al nodo sensor desplegado en la ronda l y con ID (i1i2…in, j1j2…jm). 6.2 Descubrimiento directo de claves de pares Si el nodo A(i1i2…in,j1j2…jm) en la red de sensores desea establecer una clave de par con un nodo B (i1i2…in,j1j2…jm), entonces el nodo A puede establecer una clave de par con el nodo B a través de los siguientes métodos.",
        "En primer lugar, el nodo A calcula la distancia entre sí mismo y el nodo B: d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm).",
        "Si d=1, entonces el nodo A obtiene la clave directa de pares entre él mismo y el nodo B de acuerdo con el siguiente teorema 1: Teorema 1: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia 56 entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm).",
        "Si d=1, entonces existe una clave directa entre los nodos A y B. Prueba: Dado que d=1, entonces existe d1=1, d2=0, o d1=0, d2=1. 1) Si d1=1, d2=0: A partir de d2=0, los nodos A y B pertenecen al mismo clúster.",
        "Suponiendo que los nodos A y B pertenecen al mismo clúster l, entonces de d1=1 ⇒ Solo hay una posición diferente entre i1i2…in e i1i2…in.",
        "Déjalo=lo, cuando 1 ≤ t ≤ n-1, y en ≠ en ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
        "Por lo tanto, existe una clave directa de pares f n iiil n >< −121 ,...,,, (in,in) entre los nodos A y B. 2) Si d1=0, d2=1: Desde d2=1 ⇒ Solo hay una posición diferente entre j1j2…jm y j1j2…jm.",
        "Que jt sea igual a jt, cuando 1 ≤ t ≤ m1, y jm no sea igual a jm.",
        "Dado que d1=0 ⇒ i1i2…in es igual a i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
        "Entonces, existe una clave directa de pares de llaves f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) entre los nodos A y B.",
        "Según el teorema 1, presentamos la descripción detallada del algoritmo de descubrimiento de clave directa por pares de manera directa de la siguiente manera: Paso 1: Obtener los IDs de nodo y los IDs de clúster del nodo fuente A y del nodo destino B; Paso 2: Calcular la distancia entre los nodos A y B: d= d1+ d2; Paso 3: Si d1=1, d2=0, entonces seleccionar un polinomio común compartido de los nodos A y B de { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } para establecer una clave directa por pares; Paso 4: Si d1=0, d2=1, entonces seleccionar un polinomio común compartido de los nodos A y B de { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } para establecer una clave directa por pares; Paso 5: De lo contrario, no existe una clave directa por pares entre los nodos A y B.",
        "Y luego pasar al siguiente proceso clave de descubrimiento de ruta. 6.3 Descubrimiento de Clave de Ruta Si d>1, entonces el nodo A puede establecer una clave de ruta con el nodo B de acuerdo con el siguiente teorema 2: Teorema 2: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm).",
        "Si d>1, entonces existe una clave de ruta entre los nodos A y B.",
        "Prueba: Sea d1=a, d2=b, entonces podemos pensar que it ≠ it, cuando 1 ≤ t ≤ a; pero it=it, cuando t>a; y jt ≠ jt, cuando 1 ≤ t ≤ b; pero jt=jt, cuando t>b.",
        "Obviamente, los nodos A(i1i2…in, j1j2…jm), (i1i2 i3…in, j1j2…jm), (i1i2 i3…in, j1j2…jm),…, (i1i2…in, j1j2…jm) pertenecen al mismo clúster.",
        "Por lo tanto, según la condición supuesta de que los nodos en el mismo clúster forman un grafo conectado, existe una ruta entre esos nodos.",
        "Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos.",
        "Para los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), dado que tienen los mismos códigos de nodo de hipercubo de salida con el nodo B(i1i2…in,j1j2…jm), los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) y el nodo B pertenecen a un mismo hipercubo lógico.",
        "Obviamente, a partir de la condición supuesta de que toda la red de sensores forma un grafo conectado, existe una ruta entre esos nodos.",
        "Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos.",
        "Por lo tanto, es obvio que existe una clave de ruta entre los nodos A y B.",
        "Según el teorema 2, presentamos la descripción detallada del algoritmo de descubrimiento de clave de ruta de la siguiente manera: Paso 1: Calcular los nodos intermedios (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) desde el nodo fuente A(i1i2…in,j1j2…jm) hasta el nodo destino B (i1i2…in,j1j2…jm).",
        "Paso 2: En esos nodos de la serie A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), los nodos vecinos seleccionan su parte polinómica común para establecer una clave directa de forma pareja.",
        "A partir del teorema 2, es fácil saber que cualquier nodo fuente A puede calcular un camino clave P hacia el nodo de destino B de acuerdo con el algoritmo anterior, cuando no hay nodos comprometidos en la red de sensores.",
        "Una vez que se calcula la ruta clave P, el nodo A puede enviar mensajes a B a lo largo de la ruta P para establecer una clave de forma indirecta con el nodo B. La Figura 2 presenta un ejemplo de establecimiento de ruta clave.",
        "Figura 2. Ejemplo de establecimiento de ruta clave.",
        "Por ejemplo: En la Figura 2 anterior, el nodo A((012),(1234)) puede establecer una clave de forma pareja con el nodo B((121),(2334)) a través de la siguiente ruta de clave: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), donde el nodo F deberá enrutar a través de los nodos G, H, I, J para establecer una clave de forma pareja directa con el nodo B. Según las propiedades del modelo H(k,u,m,v,n), podemos demostrar el siguiente teorema combinando la prueba del teorema 2: Teorema 3: Suponiendo que no existen nodos comprometidos en la red de sensores, y la distancia entre el nodo A y B, entonces existe una ruta de clave más corta con una distancia k entre el nodo A y B lógicamente.",
        "Es decir, el nodo A puede establecer una clave de enlace indirecto con el nodo B a través de t-1 nodos intermedios.",
        "Prueba: Suponiendo que la distancia entre el nodo A(i1i2…in, j1j2…jm) y B(i1i2…in, j1j2…jm) es d=d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm).",
        "Dado que d=t, de acuerdo con las propiedades de construcción de H(k,u,m,v,n), es fácil saber que existen t-1 nodos intermedios I1,…,It-1, en el espacio lógico H(k,u,m,v,n), que satisfacen que la distancia entre cualquier par de nodos vecinos en la serie de nodos A, I1,…,It-1, B es igual a 1.",
        "Según el teorema 1, podemos saber que los nodos A, I1,…,It-1, B forman un camino de clave correcto entre el nodo A y B.",
        "Si dos nodos vecinos en la serie de nodos A, I1,…,It-1, B pueden comunicarse directamente, entonces el nodo A puede establecer una clave de par indirecta con el nodo B a través de esos t-1 nodos intermedios. 6.4 Descubrimiento de Clave de Ruta Dinámica El algoritmo de descubrimiento de clave de ruta propuesto en la sección anterior puede establecer una ruta de clave correctamente, solo cuando no existen nodos comprometidos en toda la red de sensores, ya que la ruta de clave se calcula de antemano.",
        "Y el algoritmo propuesto no puede encontrar una ruta de clave alternativa cuando existen nodos comprometidos o nodos intermedios que no están dentro del radio de comunicación, incluso si existen otras rutas de clave alternativas en la red de sensores.",
        "A partir del siguiente ejemplo, podemos saber que hay muchos caminos paralelos en el modelo H(k,u,m,v,n) para cualquier par de nodos de origen y destino dados, ya que el modelo H(k,u,m,v,n) es altamente tolerante a fallos[9,10].",
        "Figura 3. Ejemplo de establecimiento de ruta clave alternativa.",
        "Por ejemplo: Considerando el ejemplo de establecimiento de ruta clave dado en la sección anterior basado en la Figura 2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), suponiendo que el nodo F((121),(2234)) ha sido comprometido, entonces a partir de la Figura 3, podemos saber que existe otra ruta clave alternativa como A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → M((121),(1334)) → B((121),(2334)), la cual puede ser utilizada para establecer la clave de forma indirecta entre los nodos A y B, donde el nodo E deberá pasar por los nodos D y K para establecer la clave de forma directa con el nodo M, y el nodo M deberá pasar por los nodos N, O, G, H, I, J para establecer la clave de forma directa con el nodo B.",
        "Dado que los sensores tienen limitaciones de energía, es fácil que se agoten o salgan del radio de comunicación, por lo tanto, el algoritmo propuesto en la sección anterior no puede garantizar establecer de manera eficiente la ruta de claves correcta.",
        "En esta sección, propondremos un algoritmo de descubrimiento de clave de ruta dinámica como sigue, el cual puede mejorar de manera efectiva la probabilidad de la ruta clave: Algoritmo I: Algoritmo de establecimiento de ruta clave dinámica basado en el modelo H(k,u,m,v,n) para redes de sensores desplegadas en clústeres.",
        "Red traducida: Red de sub-sensores H(k,u,m,v,n), que tiene algunos sensores comprometidos/fallidos y enlaces defectuosos. Y dos nodos alcanzables A(a1…an,a1…am) y B(b1…bn,b1…bm) en H(k,u,m,v,n), donde at ≠ bt, t∈[1,s], at=bt, t >s.",
        "Una ruta de clave correcta desde el nodo A hasta B en H(k,u,m,v,n).",
        "Paso 1: Obtener las cadenas de código de los nodos A y B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), donde aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
        "Paso 2: Si a1...am = b1...bm, entonces el nodo A puede encontrar una ruta hacia B de acuerdo con los algoritmos de enrutamiento del hipercubo [9-10].",
        "Paso 3: De lo contrario, el nodo A puede encontrar una ruta hacia C(b1…bn, a1…am) según el Algoritmo I o el Algoritmo II.",
        "Entonces, sea I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), y cada nodo It en la serie de nodos anterior encuentra una ruta hacia su nodo vecino It+1 en base a la información de ubicación (Los algoritmos de enrutamiento detallados basados en información de ubicación se pueden ver en las referencias [11-14]).",
        "Paso 4: El algoritmo sale.",
        "Si existe un tipo de ruta de clave correcta, a través de qué nodo A puede establecer una clave de par indirecta con el nodo B.",
        "De lo contrario, el nodo A no logra establecer una clave de enlace indirecta con el nodo B.",
        "Y el nodo A intentará nuevamente establecer una clave de par indirecta con el nodo B en algún momento posterior. 7.",
        "ANÁLISIS DEL ALGORITMO 7.1 Análisis Práctico Según la descripción y análisis anteriores, es fácil saber que el algoritmo recién propuesto tiene las siguientes propiedades: Propiedad 3: Cuando no existen nodos defectuosos ni comprometidos, al utilizar un nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), donde N es el número total de nodos en la red de sensores, y N=um * vn.",
        "Prueba: Dado que las claves preasignadas por pares para cualquier nodo FA = { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } en el algoritmo recién propuesto.",
        "Obviamente, en el hipercubo lógico formado por los nodos en el mismo clúster del nodo A, hay n(v-1) nodos, de los cuales 58 tienen una clave directa de par a par con el nodo A.",
        "Y en el hipercubo lógico formado por los nodos en diferentes clústeres al de nodo A, hay m(u-1) nodos, que tienen una clave directa en pares con el nodo A.",
        "Por lo tanto, hay un total de m(u-1)+n(v-1) nodos que tienen una clave directa de par a par con el nodo A.",
        "Por lo tanto, la probabilidad de establecimiento de clave entre pares de nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), dado que toda la red de sensores tiene en total N nodos sensores.",
        "La Figura 4 presenta la comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Número de Dimensión Probabilidad de Establecer Clave Directa N = 8000 N=10000 N=20000 N=30000 Figura 4 Comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n).",
        "A partir de la Figura 4, es fácil saber que al utilizar el nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la escala de las redes de sensores, y además, la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la dimensión n, cuando la escala de la red de sensores está fija.",
        "Teorema 4: Suponiendo que el total de sensores es N en la red de sensores, entonces cuando u ≥ v2, la probabilidad de establecimiento directo de claves entre pares entre dos nodos, al utilizar el esquema de distribución de claves basado en el modelo de hipercubo H(v,p), es menor que cuando se utiliza el esquema de distribución de claves basado en el modelo H(k,u,m,v,n).",
        "Prueba: Dado que u ≥ v, podemos dejar u=vt, donde t ≥ 2.",
        "Dado que el número total de nodos en H(v,p) es vp = N, el número total de nodos en H(k,u,m,v,n) es um * vn = N.",
        "Sea p=x+n, entonces hay um * vn = vx * vn ⇒ um =vx ⇒ x=tm.",
        "A partir de la propiedad 3, es fácil saber que la probabilidad de establecimiento directo de clave entre cualquier par de nodos se puede estimar como P=(m(u-1)+n(v-1))/(N-1).",
        "Según la descripción en [7], es bien sabido que la probabilidad de establecimiento directo de claves entre cualquier par de nodos puede estimarse como P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
        "A continuación, demostraremos que m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
        "Construye una función como f(t) = vt -1- t(v-1), donde t ≥ 2.",
        "Cuando t=2, es obvio que hay f(t)= vt -2v+1=( v-1)2 ≥ 0 y f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
        "Entonces, hay f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
        "Por lo tanto, la conclusión del teorema se mantiene.",
        "En cuanto a la conclusión del teorema 4, damos un ejemplo para ilustrar.",
        "Suponiendo que el número total de nodos en la red de sensores es N=214, y H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), entonces la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) es P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), pero la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p) es P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
        "Suponiendo que el número total de nodos en la red de sensores es N, la Figura 5 ilustra la comparación entre la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) y la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p), cuando u=4 y v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 escala de la red de sensores Probabilidad de Establecer Clave Directa Modelo basado en H(k,u,m,v,n) Modelo basado en H(v,p) Figura 5 Comparación entre la probabilidad de establecimiento directo de claves entre los modelos H(v,n) y H(k,u,m,v,n).",
        "A partir de la Figura 5, es fácil saber que el teorema 5 se cumple.",
        "Teorema 5: Suponiendo que el total de sensores es N en la red de sensores, entonces el esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) es solo un caso especial del esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n).",
        "Prueba: En cuanto al esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n), tomemos k=1 (u=1, m=0), lo que significa que la red de sensores total incluye solo un clúster.",
        "Entonces, obviamente, el modelo H(k,u,m,v,n) se degradará en el modelo H(v,n).",
        "Según los análisis anteriores en este documento y la definición del esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) en [7], es fácil saber que la conclusión del teorema se mantiene. 59 7.2 Análisis de Seguridad Al utilizar el algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n), los intrusos pueden lanzar dos tipos de ataques: 1) Los atacantes pueden apuntar a la clave por pares entre dos nodos de sensor particulares, con el fin de comprometer la clave por pares entre ellos o evitar que establezcan una clave por pares. 2) Los atacantes pueden atacar toda la red de sensores, con el fin de disminuir la probabilidad de establecimiento de claves por pares o aumentar el costo del establecimiento de claves por pares.",
        "Ataques contra un par de nodos sensores 1.",
        "Suponiendo que los intrusos quieren atacar dos nodos de sensor específicos u,v, donde u,v son nodos no comprometidos, pero los intrusos quieren comprometer la clave de par entre ellos. 1) Si u,v pueden establecer una clave de par directa, entonces la única forma de comprometer la clave es comprometer el polinomio bivariado común f(x,y) entre u,v.",
        "Dado que el grado del polinomio bivariado f(x,y) es t, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado f(x,y). 2) Si u,v pueden establecer una clave de par indirecta a través de nodos intermedios, entonces los intrusos necesitan comprometer al menos un nodo intermedio, o comprometer el polinomio bivariado común f(x,y) entre dos nodos intermedios vecinos.",
        "Pero incluso si los intrusos logran hacer eso, los nodos u y v aún pueden restablecer la clave de pares indirecta a través de nodos intermedios alternativos. 2.",
        "Suponiendo que los intrusos quieran atacar dos nodos de sensor específicos u, v, donde u, v son nodos no comprometidos, pero los intrusos quieren evitar que establezcan la clave de forma pareja.",
        "Entonces, los intrusos necesitan comprometer todos los polinomios bivariados de grado m+n del nodo u o v. Dado que el grado del polinomio bivariado f(x,y) es t, para el polinomio bivariado, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado dado.",
        "Por lo tanto, los intrusos necesitan comprometer en total (m+n)(t+1) nodos sensores para evitar que u,v establezcan la clave de forma pareja.",
        "Ataques contra la red de sensores. Suponiendo que los atacantes conocen la distribución de los polinomios sobre los nodos de sensores, pueden atacar sistemáticamente la red comprometiendo los polinomios en F uno por uno para comprometer toda la red.",
        "Suponga que la fracción de polinomios comprometidos es pc, entonces hay hasta N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) nodos sensores que tienen al menos una parte de polinomio comprometida.",
        "Entre todos los N nodos sensores restantes, ninguno incluye una parte polinómica comprometida.",
        "Por lo tanto, los nodos sensores restantes N- N pueden establecer una clave directa de forma pareja utilizando cualquiera de sus partes polinómicas.",
        "Sin embargo, las claves de emparejamiento indirecto en los nodos sensores restantes N-N pueden verse afectadas.",
        "Y es posible que necesiten restablecer una nueva clave de enlace indirecto entre ellos seleccionando nodos intermedios alternativos que no pertenezcan a los N nodos comprometidos.",
        "Suponiendo que la escala de la red de sensores es N=10000, la Figura 6 presenta la comparación entre la pc y el número de nodos de sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n).",
        "En la Figura 6, es fácil saber que, cuando la escala de la red de sensores está fija, el número de nodos de sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 Fracción de Polinomios Bivariados Comprometidos Nodos de Sensor con al menos un Polinomio Comprometido Compartido H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figura 6 la comparación entre pc y el número de nodos de sensor con al menos un polinomio comprometido compartido en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n).",
        "Teorema 6: Suponiendo que el total de sensores es N en la red de sensores, y la fracción de nodos comprometidos es pc, entonces cuando u>v, el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es mayor que el del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n).",
        "Prueba: Dado que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) es pc ××N (m+n), y se ha demostrado en [7] que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es pc ××N p. Sea p=x+n, entonces um * vn = vx * vn ⇒ um =vx.",
        "Dado que u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Suponiendo que la escala de la red de sensores es N=10000, la Figura 7 presenta la comparación entre pc y el número de nodos de sensor con al menos una parte polinómica comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p).",
        "A partir de la Figura 7, es fácil saber que la conclusión del teorema 9 es correcta, y el número de nodos sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos, cuando la escala de la red de sensores está fija. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fracción de Polinomios Bivariados Comprometidos NodosSensorconalmenosunPolinomioComprometidoCompartido H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figura 7 la comparación entre pc y el número de nodos sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). 8.",
        "CONCLUSIÓN Se propone un nuevo modelo jerárquico de hipercubo llamado H(k,u,m,v,n), que puede ser utilizado para la predistribución de claves por pares en redes de sensores desplegadas en clústeres.",
        "Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de Clave Polinómica y de Piscina de Claves.",
        "El nuevo algoritmo utiliza las buenas características de los códigos de nodo y la alta tolerancia a fallos del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7].",
        "Por lo tanto, el algoritmo tradicional de predistribución de claves en pares basado en el modelo de hipercubo [7] es solo un caso especial del nuevo algoritmo propuesto en este artículo.",
        "Los análisis teóricos y experimentales muestran que el nuevo algoritmo propuesto es un eficiente algoritmo de establecimiento de claves por pares que es adecuado para las redes de sensores desplegadas en clústeres.",
        "AGRADECIMIENTOS Nuestro agradecimiento a ACM SIGCHI por permitirnos modificar las plantillas que habían desarrollado, y al fondo de ciencia natural de la provincia de Fujian de la República Popular de China bajo la subvención No. A0510024. 10.",
        "REFERENCIAS [1] L. Eschenauer y V. Gligor.",
        "Un esquema de gestión de claves para redes de sensores distribuidos.",
        "En Actas de la 9ª Conferencia ACM sobre Seguridad Informática y de Comunicaciones.",
        "ACM Press, Washington DC, EE. UU., 2002, 41-47. [2] H. Chan, A. Perrig y D. Song.",
        "Esquemas de predistribución de claves aleatorias para redes de sensores.",
        "En el Simposio de Seguridad y Privacidad de IEEE.",
        "IEEE Computer Society, California, EE. UU., 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro y M. Yung.",
        "Distribución de claves perfectamente segura para conferencias dinámicas.",
        "Notas de conferencia en Ciencias de la Computación. 1993, 740, 471-486. [4] D. Liu y P. Ning.",
        "Estableciendo claves de forma pareja en redes de sensores distribuidos.",
        "En Actas de la 10ª Conferencia de ACM sobre Seguridad Informática y de Comunicaciones.",
        "ACM Press, Washington, DC, EE. UU., 2003, 52-61. [5] W. Du, J. Deng, Y. Han y P. Varshney.",
        "Un esquema de pre-distribución de claves por pares para redes de sensores inalámbricos.",
        "En Actas de la Décima Conferencia de ACM sobre Seguridad Informática y de Comunicaciones.",
        "Washington, DC, EE. UU., 2003, 4251. [6] R. Blom.",
        "Una clase óptima de sistemas de generación de claves simétricas.",
        "Avances en Criptología: Actas de EUROCRYPT 84.",
        "Notas de conferencia en Ciencias de la Computación. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establecimiento de claves de pares en redes de sensores distribuidos.",
        "Nombre de la revista ACM, 2004, 20, 1-35. [8] L. Fang, W. Du y N. Peng.",
        "Un esquema de descubrimiento de ubicación sin baliza para redes de sensores inalámbricos, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallas basado en matriz de camino de máxima seguridad para redes de interconexión de hipercubos.",
        "Revista de software. 2004, 15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallos basado en vector de ruta de máxima seguridad para redes de interconexión de hipercubos.",
        "Revista del Instituto de Comunicaciones de China. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Algoritmo de enrutamiento de conglomeración de datos jerárquicos basado en información de ubicación para redes de sensores.",
        "Revista China de electrónica. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik y H. Balakrishnan, Protocolos basados en negociación para la difusión de información en redes de sensores inalámbricos.",
        "Redes inalámbricas ACM. 2002, 8, 169-185. [13] Manjeshwar, A.; Agrawal, D.P.",
        "TEEN: un protocolo de enrutamiento para mejorar la eficiencia en redes de sensores inalámbricos.",
        "En Actas del 15º Simposio de Procesamiento Paralelo y Distribuido.",
        "IEEE Computer Society, San Francisco, EE. UU., 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin y S. Wicker.",
        "Modelado de enrutamiento centrado en datos en redes de sensores inalámbricos.",
        "En Actas de IEEE Infocom, 2002. 61"
    ],
    "error_count": 6,
    "keys": {
        "sensor network": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many <br>sensor network</br> applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed <br>sensor network</br> and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed <br>sensor network</br> can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the <br>sensor network</br> can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole <br>sensor network</br> has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the <br>sensor network</br> includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the <br>sensor network</br> wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the <br>sensor network</br>, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the <br>sensor network</br>, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole <br>sensor network</br> forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the <br>sensor network</br>.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the <br>sensor network</br>, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole <br>sensor network</br>, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the <br>sensor network</br>.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-<br>sensor network</br> H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the <br>sensor network</br>, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole <br>sensor network</br> has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the <br>sensor network</br> has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the <br>sensor network</br> has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the <br>sensor network</br> is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the <br>sensor network</br>, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the <br>sensor network</br> is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the <br>sensor network</br> is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the <br>sensor network</br>, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total <br>sensor network</br> includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole <br>sensor network</br>, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the <br>sensor network</br> Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the <br>sensor network</br> is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the <br>sensor network</br> is fixed, the number of the affected sensor nodes in the <br>sensor network</br> increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the <br>sensor network</br>, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the <br>sensor network</br> is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the <br>sensor network</br> increases with the increasing of the number of compromised nodes, when the scale of the <br>sensor network</br> is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "INTRODUCTION Security communication is an important requirement in many <br>sensor network</br> applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "In section 5, the mapping relationship between the clusters deployed <br>sensor network</br> and Hierarchical Hypercube model is discussed.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed <br>sensor network</br> can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the <br>sensor network</br> can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Consequently, the whole <br>sensor network</br> has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the <br>sensor network</br> includes N nodes, and is deployed through k different rounds."
            ],
            "translated_annotated_samples": [
                "La comunicación segura es un requisito importante en muchas aplicaciones de <br>redes de sensores</br>, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos.",
                "En la sección 5, se discute la relación de mapeo entre los clústeres de la <br>red de sensores</br> desplegada y el modelo de Hipercubo Jerárquico.",
                "MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de <br>redes de sensores</br> desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles.",
                "En consecuencia, toda la <br>red de sensores</br> ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6.",
                "El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la <br>red de sensores</br> incluye N nodos y se despliega a través de k rondas diferentes."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de <br>redes de sensores</br>, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la <br>red de sensores</br> desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de <br>redes de sensores</br> desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la <br>red de sensores</br> ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la <br>red de sensores</br> incluye N nodos y se despliega a través de k rondas diferentes. ",
            "candidates": [],
            "error": [
                [
                    "redes de sensores",
                    "red de sensores",
                    "redes de sensores",
                    "red de sensores",
                    "red de sensores"
                ]
            ]
        },
        "key pool": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a <br>key pool</br> before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the <br>key pool</br> idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a <br>key pool</br> in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and <br>key pool</br>-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and <br>key pool</br> encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "In the scheme, each sensor node randomly picks a set of keys from a <br>key pool</br> before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the <br>key pool</br> idea used in [1]] and [2].",
                "A polynomial pool is used in those schemes, instead of using a <br>key pool</br> in the previous techniques.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and <br>key pool</br>-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and <br>key pool</br> encryption schemes."
            ],
            "translated_annotated_samples": [
                "En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un <br>grupo de claves</br> antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común.",
                "La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de <br>piscina de claves</br> utilizada en [1] y [2].",
                "Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un <br>pool de claves</br> en las técnicas anteriores.",
                "Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios.",
                "Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de Clave Polinómica y de Piscina de Claves."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un <br>grupo de claves</br> antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de <br>piscina de claves</br> utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un <br>pool de claves</br> en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la red de sensores incluye N nodos y se despliega a través de k rondas diferentes. Luego podemos predistribuir claves para cada nodo sensor basándonos en el modelo H(k,u,m,v,n) de la siguiente manera: Paso 1: El servidor de configuración de claves genera aleatoriamente un conjunto de polinomios bivariados como el siguiente: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} con vn *m*um-1 +[N/vn ]*n*vn-1 diferentes polinomios bivariados de grado t sobre un campo finito Fq, y luego asigna un ID de polinomio único a cada polinomio bivariado en F. Paso 2: En cada ronda, el servidor de configuración de claves asigna un ID de nodo único: (i1i2…in,j1j2…jm) a cada nodo sensor de menor a mayor, donde 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1. Paso 3: el servidor de configuración de claves asigna un ID de clúster único: l a todos los nodos sensores desplegados en la misma ronda, donde 1 ≤ l ≤ k. Paso 4: el servidor de configuración de claves predistribuye polinomios bivariados m+n { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } y los IDs de polinomios correspondientes al nodo sensor desplegado en la ronda l y con ID (i1i2…in, j1j2…jm). 6.2 Descubrimiento directo de claves de pares Si el nodo A(i1i2…in,j1j2…jm) en la red de sensores desea establecer una clave de par con un nodo B (i1i2…in,j1j2…jm), entonces el nodo A puede establecer una clave de par con el nodo B a través de los siguientes métodos. En primer lugar, el nodo A calcula la distancia entre sí mismo y el nodo B: d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces el nodo A obtiene la clave directa de pares entre él mismo y el nodo B de acuerdo con el siguiente teorema 1: Teorema 1: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia 56 entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces existe una clave directa entre los nodos A y B. Prueba: Dado que d=1, entonces existe d1=1, d2=0, o d1=0, d2=1. 1) Si d1=1, d2=0: A partir de d2=0, los nodos A y B pertenecen al mismo clúster. Suponiendo que los nodos A y B pertenecen al mismo clúster l, entonces de d1=1 ⇒ Solo hay una posición diferente entre i1i2…in e i1i2…in. Déjalo=lo, cuando 1 ≤ t ≤ n-1, y en ≠ en ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in). Por lo tanto, existe una clave directa de pares f n iiil n >< −121 ,...,,, (in,in) entre los nodos A y B. 2) Si d1=0, d2=1: Desde d2=1 ⇒ Solo hay una posición diferente entre j1j2…jm y j1j2…jm. Que jt sea igual a jt, cuando 1 ≤ t ≤ m1, y jm no sea igual a jm. Dado que d1=0 ⇒ i1i2…in es igual a i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm). Entonces, existe una clave directa de pares de llaves f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) entre los nodos A y B. Según el teorema 1, presentamos la descripción detallada del algoritmo de descubrimiento de clave directa por pares de manera directa de la siguiente manera: Paso 1: Obtener los IDs de nodo y los IDs de clúster del nodo fuente A y del nodo destino B; Paso 2: Calcular la distancia entre los nodos A y B: d= d1+ d2; Paso 3: Si d1=1, d2=0, entonces seleccionar un polinomio común compartido de los nodos A y B de { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } para establecer una clave directa por pares; Paso 4: Si d1=0, d2=1, entonces seleccionar un polinomio común compartido de los nodos A y B de { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } para establecer una clave directa por pares; Paso 5: De lo contrario, no existe una clave directa por pares entre los nodos A y B. Y luego pasar al siguiente proceso clave de descubrimiento de ruta. 6.3 Descubrimiento de Clave de Ruta Si d>1, entonces el nodo A puede establecer una clave de ruta con el nodo B de acuerdo con el siguiente teorema 2: Teorema 2: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d>1, entonces existe una clave de ruta entre los nodos A y B. Prueba: Sea d1=a, d2=b, entonces podemos pensar que it ≠ it, cuando 1 ≤ t ≤ a; pero it=it, cuando t>a; y jt ≠ jt, cuando 1 ≤ t ≤ b; pero jt=jt, cuando t>b. Obviamente, los nodos A(i1i2…in, j1j2…jm), (i1i2 i3…in, j1j2…jm), (i1i2 i3…in, j1j2…jm),…, (i1i2…in, j1j2…jm) pertenecen al mismo clúster. Por lo tanto, según la condición supuesta de que los nodos en el mismo clúster forman un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Para los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), dado que tienen los mismos códigos de nodo de hipercubo de salida con el nodo B(i1i2…in,j1j2…jm), los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) y el nodo B pertenecen a un mismo hipercubo lógico. Obviamente, a partir de la condición supuesta de que toda la red de sensores forma un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Por lo tanto, es obvio que existe una clave de ruta entre los nodos A y B. Según el teorema 2, presentamos la descripción detallada del algoritmo de descubrimiento de clave de ruta de la siguiente manera: Paso 1: Calcular los nodos intermedios (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) desde el nodo fuente A(i1i2…in,j1j2…jm) hasta el nodo destino B (i1i2…in,j1j2…jm). Paso 2: En esos nodos de la serie A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), los nodos vecinos seleccionan su parte polinómica común para establecer una clave directa de forma pareja. A partir del teorema 2, es fácil saber que cualquier nodo fuente A puede calcular un camino clave P hacia el nodo de destino B de acuerdo con el algoritmo anterior, cuando no hay nodos comprometidos en la red de sensores. Una vez que se calcula la ruta clave P, el nodo A puede enviar mensajes a B a lo largo de la ruta P para establecer una clave de forma indirecta con el nodo B. La Figura 2 presenta un ejemplo de establecimiento de ruta clave. Figura 2. Ejemplo de establecimiento de ruta clave. Por ejemplo: En la Figura 2 anterior, el nodo A((012),(1234)) puede establecer una clave de forma pareja con el nodo B((121),(2334)) a través de la siguiente ruta de clave: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), donde el nodo F deberá enrutar a través de los nodos G, H, I, J para establecer una clave de forma pareja directa con el nodo B. Según las propiedades del modelo H(k,u,m,v,n), podemos demostrar el siguiente teorema combinando la prueba del teorema 2: Teorema 3: Suponiendo que no existen nodos comprometidos en la red de sensores, y la distancia entre el nodo A y B, entonces existe una ruta de clave más corta con una distancia k entre el nodo A y B lógicamente. Es decir, el nodo A puede establecer una clave de enlace indirecto con el nodo B a través de t-1 nodos intermedios. Prueba: Suponiendo que la distancia entre el nodo A(i1i2…in, j1j2…jm) y B(i1i2…in, j1j2…jm) es d=d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Dado que d=t, de acuerdo con las propiedades de construcción de H(k,u,m,v,n), es fácil saber que existen t-1 nodos intermedios I1,…,It-1, en el espacio lógico H(k,u,m,v,n), que satisfacen que la distancia entre cualquier par de nodos vecinos en la serie de nodos A, I1,…,It-1, B es igual a 1. Según el teorema 1, podemos saber que los nodos A, I1,…,It-1, B forman un camino de clave correcto entre el nodo A y B. Si dos nodos vecinos en la serie de nodos A, I1,…,It-1, B pueden comunicarse directamente, entonces el nodo A puede establecer una clave de par indirecta con el nodo B a través de esos t-1 nodos intermedios. 6.4 Descubrimiento de Clave de Ruta Dinámica El algoritmo de descubrimiento de clave de ruta propuesto en la sección anterior puede establecer una ruta de clave correctamente, solo cuando no existen nodos comprometidos en toda la red de sensores, ya que la ruta de clave se calcula de antemano. Y el algoritmo propuesto no puede encontrar una ruta de clave alternativa cuando existen nodos comprometidos o nodos intermedios que no están dentro del radio de comunicación, incluso si existen otras rutas de clave alternativas en la red de sensores. A partir del siguiente ejemplo, podemos saber que hay muchos caminos paralelos en el modelo H(k,u,m,v,n) para cualquier par de nodos de origen y destino dados, ya que el modelo H(k,u,m,v,n) es altamente tolerante a fallos[9,10]. Figura 3. Ejemplo de establecimiento de ruta clave alternativa. Por ejemplo: Considerando el ejemplo de establecimiento de ruta clave dado en la sección anterior basado en la Figura 2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), suponiendo que el nodo F((121),(2234)) ha sido comprometido, entonces a partir de la Figura 3, podemos saber que existe otra ruta clave alternativa como A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → M((121),(1334)) → B((121),(2334)), la cual puede ser utilizada para establecer la clave de forma indirecta entre los nodos A y B, donde el nodo E deberá pasar por los nodos D y K para establecer la clave de forma directa con el nodo M, y el nodo M deberá pasar por los nodos N, O, G, H, I, J para establecer la clave de forma directa con el nodo B. Dado que los sensores tienen limitaciones de energía, es fácil que se agoten o salgan del radio de comunicación, por lo tanto, el algoritmo propuesto en la sección anterior no puede garantizar establecer de manera eficiente la ruta de claves correcta. En esta sección, propondremos un algoritmo de descubrimiento de clave de ruta dinámica como sigue, el cual puede mejorar de manera efectiva la probabilidad de la ruta clave: Algoritmo I: Algoritmo de establecimiento de ruta clave dinámica basado en el modelo H(k,u,m,v,n) para redes de sensores desplegadas en clústeres. Red traducida: Red de sub-sensores H(k,u,m,v,n), que tiene algunos sensores comprometidos/fallidos y enlaces defectuosos. Y dos nodos alcanzables A(a1…an,a1…am) y B(b1…bn,b1…bm) en H(k,u,m,v,n), donde at ≠ bt, t∈[1,s], at=bt, t >s. Una ruta de clave correcta desde el nodo A hasta B en H(k,u,m,v,n). Paso 1: Obtener las cadenas de código de los nodos A y B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), donde aj, bj [0,∈ u-1], aj, bj [0,∈ v-1]. Paso 2: Si a1...am = b1...bm, entonces el nodo A puede encontrar una ruta hacia B de acuerdo con los algoritmos de enrutamiento del hipercubo [9-10]. Paso 3: De lo contrario, el nodo A puede encontrar una ruta hacia C(b1…bn, a1…am) según el Algoritmo I o el Algoritmo II. Entonces, sea I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), y cada nodo It en la serie de nodos anterior encuentra una ruta hacia su nodo vecino It+1 en base a la información de ubicación (Los algoritmos de enrutamiento detallados basados en información de ubicación se pueden ver en las referencias [11-14]). Paso 4: El algoritmo sale. Si existe un tipo de ruta de clave correcta, a través de qué nodo A puede establecer una clave de par indirecta con el nodo B. De lo contrario, el nodo A no logra establecer una clave de enlace indirecta con el nodo B. Y el nodo A intentará nuevamente establecer una clave de par indirecta con el nodo B en algún momento posterior. 7. ANÁLISIS DEL ALGORITMO 7.1 Análisis Práctico Según la descripción y análisis anteriores, es fácil saber que el algoritmo recién propuesto tiene las siguientes propiedades: Propiedad 3: Cuando no existen nodos defectuosos ni comprometidos, al utilizar un nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), donde N es el número total de nodos en la red de sensores, y N=um * vn. Prueba: Dado que las claves preasignadas por pares para cualquier nodo FA = { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } en el algoritmo recién propuesto. Obviamente, en el hipercubo lógico formado por los nodos en el mismo clúster del nodo A, hay n(v-1) nodos, de los cuales 58 tienen una clave directa de par a par con el nodo A. Y en el hipercubo lógico formado por los nodos en diferentes clústeres al de nodo A, hay m(u-1) nodos, que tienen una clave directa en pares con el nodo A. Por lo tanto, hay un total de m(u-1)+n(v-1) nodos que tienen una clave directa de par a par con el nodo A. Por lo tanto, la probabilidad de establecimiento de clave entre pares de nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), dado que toda la red de sensores tiene en total N nodos sensores. La Figura 4 presenta la comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Número de Dimensión Probabilidad de Establecer Clave Directa N = 8000 N=10000 N=20000 N=30000 Figura 4 Comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). A partir de la Figura 4, es fácil saber que al utilizar el nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la escala de las redes de sensores, y además, la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la dimensión n, cuando la escala de la red de sensores está fija. Teorema 4: Suponiendo que el total de sensores es N en la red de sensores, entonces cuando u ≥ v2, la probabilidad de establecimiento directo de claves entre pares entre dos nodos, al utilizar el esquema de distribución de claves basado en el modelo de hipercubo H(v,p), es menor que cuando se utiliza el esquema de distribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que u ≥ v, podemos dejar u=vt, donde t ≥ 2. Dado que el número total de nodos en H(v,p) es vp = N, el número total de nodos en H(k,u,m,v,n) es um * vn = N. Sea p=x+n, entonces hay um * vn = vx * vn ⇒ um =vx ⇒ x=tm. A partir de la propiedad 3, es fácil saber que la probabilidad de establecimiento directo de clave entre cualquier par de nodos se puede estimar como P=(m(u-1)+n(v-1))/(N-1). Según la descripción en [7], es bien sabido que la probabilidad de establecimiento directo de claves entre cualquier par de nodos puede estimarse como P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1). A continuación, demostraremos que m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1). Construye una función como f(t) = vt -1- t(v-1), donde t ≥ 2. Cuando t=2, es obvio que hay f(t)= vt -2v+1=( v-1)2 ≥ 0 y f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0. Entonces, hay f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1). Por lo tanto, la conclusión del teorema se mantiene. En cuanto a la conclusión del teorema 4, damos un ejemplo para ilustrar. Suponiendo que el número total de nodos en la red de sensores es N=214, y H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), entonces la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) es P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), pero la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p) es P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1). Suponiendo que el número total de nodos en la red de sensores es N, la Figura 5 ilustra la comparación entre la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) y la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p), cuando u=4 y v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 escala de la red de sensores Probabilidad de Establecer Clave Directa Modelo basado en H(k,u,m,v,n) Modelo basado en H(v,p) Figura 5 Comparación entre la probabilidad de establecimiento directo de claves entre los modelos H(v,n) y H(k,u,m,v,n). A partir de la Figura 5, es fácil saber que el teorema 5 se cumple. Teorema 5: Suponiendo que el total de sensores es N en la red de sensores, entonces el esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) es solo un caso especial del esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n). Prueba: En cuanto al esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n), tomemos k=1 (u=1, m=0), lo que significa que la red de sensores total incluye solo un clúster. Entonces, obviamente, el modelo H(k,u,m,v,n) se degradará en el modelo H(v,n). Según los análisis anteriores en este documento y la definición del esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) en [7], es fácil saber que la conclusión del teorema se mantiene. 59 7.2 Análisis de Seguridad Al utilizar el algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n), los intrusos pueden lanzar dos tipos de ataques: 1) Los atacantes pueden apuntar a la clave por pares entre dos nodos de sensor particulares, con el fin de comprometer la clave por pares entre ellos o evitar que establezcan una clave por pares. 2) Los atacantes pueden atacar toda la red de sensores, con el fin de disminuir la probabilidad de establecimiento de claves por pares o aumentar el costo del establecimiento de claves por pares. Ataques contra un par de nodos sensores 1. Suponiendo que los intrusos quieren atacar dos nodos de sensor específicos u,v, donde u,v son nodos no comprometidos, pero los intrusos quieren comprometer la clave de par entre ellos. 1) Si u,v pueden establecer una clave de par directa, entonces la única forma de comprometer la clave es comprometer el polinomio bivariado común f(x,y) entre u,v. Dado que el grado del polinomio bivariado f(x,y) es t, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado f(x,y). 2) Si u,v pueden establecer una clave de par indirecta a través de nodos intermedios, entonces los intrusos necesitan comprometer al menos un nodo intermedio, o comprometer el polinomio bivariado común f(x,y) entre dos nodos intermedios vecinos. Pero incluso si los intrusos logran hacer eso, los nodos u y v aún pueden restablecer la clave de pares indirecta a través de nodos intermedios alternativos. 2. Suponiendo que los intrusos quieran atacar dos nodos de sensor específicos u, v, donde u, v son nodos no comprometidos, pero los intrusos quieren evitar que establezcan la clave de forma pareja. Entonces, los intrusos necesitan comprometer todos los polinomios bivariados de grado m+n del nodo u o v. Dado que el grado del polinomio bivariado f(x,y) es t, para el polinomio bivariado, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado dado. Por lo tanto, los intrusos necesitan comprometer en total (m+n)(t+1) nodos sensores para evitar que u,v establezcan la clave de forma pareja. Ataques contra la red de sensores. Suponiendo que los atacantes conocen la distribución de los polinomios sobre los nodos de sensores, pueden atacar sistemáticamente la red comprometiendo los polinomios en F uno por uno para comprometer toda la red. Suponga que la fracción de polinomios comprometidos es pc, entonces hay hasta N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) nodos sensores que tienen al menos una parte de polinomio comprometida. Entre todos los N nodos sensores restantes, ninguno incluye una parte polinómica comprometida. Por lo tanto, los nodos sensores restantes N- N pueden establecer una clave directa de forma pareja utilizando cualquiera de sus partes polinómicas. Sin embargo, las claves de emparejamiento indirecto en los nodos sensores restantes N-N pueden verse afectadas. Y es posible que necesiten restablecer una nueva clave de enlace indirecto entre ellos seleccionando nodos intermedios alternativos que no pertenezcan a los N nodos comprometidos. Suponiendo que la escala de la red de sensores es N=10000, la Figura 6 presenta la comparación entre la pc y el número de nodos de sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). En la Figura 6, es fácil saber que, cuando la escala de la red de sensores está fija, el número de nodos de sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 Fracción de Polinomios Bivariados Comprometidos Nodos de Sensor con al menos un Polinomio Comprometido Compartido H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figura 6 la comparación entre pc y el número de nodos de sensor con al menos un polinomio comprometido compartido en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). Teorema 6: Suponiendo que el total de sensores es N en la red de sensores, y la fracción de nodos comprometidos es pc, entonces cuando u>v, el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es mayor que el del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) es pc ××N (m+n), y se ha demostrado en [7] que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es pc ××N p. Sea p=x+n, entonces um * vn = vx * vn ⇒ um =vx. Dado que u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Suponiendo que la escala de la red de sensores es N=10000, la Figura 7 presenta la comparación entre pc y el número de nodos de sensor con al menos una parte polinómica comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). A partir de la Figura 7, es fácil saber que la conclusión del teorema 9 es correcta, y el número de nodos sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos, cuando la escala de la red de sensores está fija. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fracción de Polinomios Bivariados Comprometidos NodosSensorconalmenosunPolinomioComprometidoCompartido H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figura 7 la comparación entre pc y el número de nodos sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). 8. CONCLUSIÓN Se propone un nuevo modelo jerárquico de hipercubo llamado H(k,u,m,v,n), que puede ser utilizado para la predistribución de claves por pares en redes de sensores desplegadas en clústeres. Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de Clave Polinómica y de Piscina de Claves. ",
            "candidates": [],
            "error": [
                [
                    "grupo de claves",
                    "piscina de claves",
                    "pool de claves"
                ]
            ]
        },
        "key predistribution": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise <br>key predistribution</br> and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic <br>key predistribution</br> scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two <br>key predistribution</br> schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based <br>key predistribution</br> [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite <br>key predistribution</br> schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise <br>key predistribution</br> scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (<br>key predistribution</br>): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called <br>key predistribution</br>.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE <br>key predistribution</br> ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based <br>key predistribution</br> algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and <br>key predistribution</br>, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and <br>key predistribution</br> Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise <br>key predistribution</br> scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise <br>key predistribution</br> scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise <br>key predistribution</br> scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise <br>key predistribution</br> scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based <br>key predistribution</br> scheme, is bigger than that of the H(k,u,m,v,n) model based <br>key predistribution</br> scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based <br>key predistribution</br> scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based <br>key predistribution</br> scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise <br>key predistribution</br> for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise <br>key predistribution</br> scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise <br>key predistribution</br> algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random <br>key predistribution</br> schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise <br>key predistribution</br> and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Eschenauer and Gligor proposed a basic probabilistic <br>key predistribution</br> scheme for pairwise key establishment [1].",
                "Chan et al. further extended this idea and presented two <br>key predistribution</br> schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based <br>key predistribution</br> [4].",
                "For the basic probabilistic and the q-composite <br>key predistribution</br> schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly."
            ],
            "translated_annotated_samples": [
                "Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la <br>predistribución de claves</br> por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios.",
                "Eschenauer y Gligor propusieron un esquema básico de <br>predistribución de claves</br> probabilísticas para el establecimiento de claves por pares [1].",
                "Chan et al. ampliaron aún más esta idea y presentaron dos <br>esquemas clave de predistribución</br> clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares.",
                "Inspirados por los estudios anteriores y el protocolo de <br>pre-distribución de claves</br> basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de <br>pre-distribución de claves</br> basado en grupos de polinomios [4].",
                "Para los esquemas de <br>predistribución de claves</br> probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la <br>predistribución de claves</br> por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de <br>predistribución de claves</br> probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos <br>esquemas clave de predistribución</br> clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de <br>pre-distribución de claves</br> basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de <br>pre-distribución de claves</br> basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de <br>predistribución de claves</br> probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. ",
            "candidates": [],
            "error": [
                [
                    "predistribución de claves",
                    "predistribución de claves",
                    "esquemas clave de predistribución",
                    "pre-distribución de claves",
                    "pre-distribución de claves",
                    "predistribución de claves"
                ]
            ]
        },
        "hierarchical hypercube model": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative <br>hierarchical hypercube model</br> - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based <br>hierarchical hypercube model</br> to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our <br>hierarchical hypercube model</br>.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new <br>hierarchical hypercube model</br> is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and <br>hierarchical hypercube model</br> is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the <br>hierarchical hypercube model</br> and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "<br>hierarchical hypercube model</br> Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- <br>hierarchical hypercube model</br> as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- <br>hierarchical hypercube model</br>.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- <br>hierarchical hypercube model</br>. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new <br>hierarchical hypercube model</br> named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative <br>hierarchical hypercube model</br> - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "Based on the topology, we propose a novel cluster distribution based <br>hierarchical hypercube model</br> to establish the pairwise key.",
                "We develop a kind of new pairwise key establishment algorithm with our <br>hierarchical hypercube model</br>.",
                "In section 4, a new <br>hierarchical hypercube model</br> is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and <br>hierarchical hypercube model</br> is discussed."
            ],
            "translated_annotated_samples": [
                "Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador <br>modelo jerárquico de hipercubo</br> - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n).",
                "Basándonos en la topología, proponemos un <br>modelo jerárquico de hipercubo basado en la distribución de clústeres</br> para establecer la clave de pares.",
                "Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro <br>modelo jerárquico de hipercubo</br>.",
                "En la sección 4, se propone un nuevo <br>modelo de Hipercubo Jerárquico</br>.",
                "En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el <br>modelo de Hipercubo Jerárquico</br>."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador <br>modelo jerárquico de hipercubo</br> - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un <br>modelo jerárquico de hipercubo basado en la distribución de clústeres</br> para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro <br>modelo jerárquico de hipercubo</br>. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo <br>modelo de Hipercubo Jerárquico</br>. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el <br>modelo de Hipercubo Jerárquico</br>. ",
            "candidates": [],
            "error": [
                [
                    "modelo jerárquico de hipercubo",
                    "modelo jerárquico de hipercubo basado en la distribución de clústeres",
                    "modelo jerárquico de hipercubo",
                    "modelo de Hipercubo Jerárquico",
                    "modelo de Hipercubo Jerárquico"
                ]
            ]
        },
        "security": {
            "translated_key": "seguridad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT <br>security</br> schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on <br>security</br> issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: <br>security</br>. 1.",
                "INTRODUCTION <br>security</br> communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental <br>security</br> services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the <br>security</br> over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above <br>security</br> problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of <br>security</br> is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect <br>security</br> against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good <br>security</br> performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 <br>security</br> Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication <br>security</br>.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on <br>security</br> and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications <br>security</br>.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications <br>security</br>.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT <br>security</br> schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on <br>security</br> issue in wireless sensor networks.",
                "General Terms: <br>security</br>. 1.",
                "INTRODUCTION <br>security</br> communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental <br>security</br> services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "All of those schemes above improve the <br>security</br> over the basic probabilistic key pre-distribution scheme."
            ],
            "translated_annotated_samples": [
                "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de <br>seguridad</br> de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de <br>seguridad</br> en redes de sensores inalámbricos.",
                "Términos generales: Seguridad. 1.",
                "La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos.",
                "Como uno de los servicios de <br>seguridad</br> más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas.",
                "Todos esos esquemas anteriores mejoran la <br>seguridad</br> sobre el esquema básico de pre-distribución de claves probabilísticas."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de <br>seguridad</br> de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de <br>seguridad</br> en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de <br>seguridad</br> más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la <br>seguridad</br> sobre el esquema básico de pre-distribución de claves probabilísticas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "pairwise key establishment algorithm": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new <br>pairwise key establishment algorithm</br> are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed <br>pairwise key establishment algorithm</br> is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new <br>pairwise key establishment algorithm</br> with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new <br>pairwise key establishment algorithm</br> are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and <br>pairwise key establishment algorithm</br>, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based <br>pairwise key establishment algorithm</br> includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the <br>pairwise key establishment algorithm</br> based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient <br>pairwise key establishment algorithm</br> that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new <br>pairwise key establishment algorithm</br> are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed <br>pairwise key establishment algorithm</br> is seriously inspected.",
                "We develop a kind of new <br>pairwise key establishment algorithm</br> with our hierarchical hypercube model.",
                "In section 6 and section 7, new <br>pairwise key establishment algorithm</br> are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and <br>pairwise key establishment algorithm</br>, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models."
            ],
            "translated_annotated_samples": [
                "Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo <br>algoritmo de establecimiento de claves por pares</br>, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios.",
                "Además, se inspecciona seriamente el rendimiento laboral del <br>algoritmo de establecimiento de claves por pares</br> recientemente propuesto.",
                "Desarrollamos un tipo de nuevo <br>algoritmo de establecimiento de claves por pares</br> con nuestro modelo jerárquico de hipercubo.",
                "En la sección 6 y la sección 7, se diseñan nuevos <br>algoritmos de establecimiento de claves por pares</br> basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados.",
                "Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un <br>algoritmo de establecimiento de claves por pares</br>, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo <br>algoritmo de establecimiento de claves por pares</br>, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del <br>algoritmo de establecimiento de claves por pares</br> recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo <br>algoritmo de establecimiento de claves por pares</br> con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos <br>algoritmos de establecimiento de claves por pares</br> basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un <br>algoritmo de establecimiento de claves por pares</br>, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. ",
            "candidates": [],
            "error": [
                [
                    "algoritmo de establecimiento de claves por pares",
                    "algoritmo de establecimiento de claves por pares",
                    "algoritmo de establecimiento de claves por pares",
                    "algoritmos de establecimiento de claves por pares",
                    "algoritmo de establecimiento de claves por pares"
                ]
            ]
        },
        "cluster-based distribution model": {
            "translated_key": "modelo de distribución basado en clústeres",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new <br>cluster-based distribution model</br> of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "In this paper, we present a kind of new <br>cluster-based distribution model</br> of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme."
            ],
            "translated_annotated_samples": [
                "En este artículo, presentamos un tipo de nuevo <br>modelo de distribución basado en clústeres</br> de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo <br>modelo de distribución basado en clústeres</br> de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la red de sensores incluye N nodos y se despliega a través de k rondas diferentes. Luego podemos predistribuir claves para cada nodo sensor basándonos en el modelo H(k,u,m,v,n) de la siguiente manera: Paso 1: El servidor de configuración de claves genera aleatoriamente un conjunto de polinomios bivariados como el siguiente: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} con vn *m*um-1 +[N/vn ]*n*vn-1 diferentes polinomios bivariados de grado t sobre un campo finito Fq, y luego asigna un ID de polinomio único a cada polinomio bivariado en F. Paso 2: En cada ronda, el servidor de configuración de claves asigna un ID de nodo único: (i1i2…in,j1j2…jm) a cada nodo sensor de menor a mayor, donde 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1. Paso 3: el servidor de configuración de claves asigna un ID de clúster único: l a todos los nodos sensores desplegados en la misma ronda, donde 1 ≤ l ≤ k. Paso 4: el servidor de configuración de claves predistribuye polinomios bivariados m+n { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } y los IDs de polinomios correspondientes al nodo sensor desplegado en la ronda l y con ID (i1i2…in, j1j2…jm). 6.2 Descubrimiento directo de claves de pares Si el nodo A(i1i2…in,j1j2…jm) en la red de sensores desea establecer una clave de par con un nodo B (i1i2…in,j1j2…jm), entonces el nodo A puede establecer una clave de par con el nodo B a través de los siguientes métodos. En primer lugar, el nodo A calcula la distancia entre sí mismo y el nodo B: d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces el nodo A obtiene la clave directa de pares entre él mismo y el nodo B de acuerdo con el siguiente teorema 1: Teorema 1: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia 56 entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces existe una clave directa entre los nodos A y B. Prueba: Dado que d=1, entonces existe d1=1, d2=0, o d1=0, d2=1. 1) Si d1=1, d2=0: A partir de d2=0, los nodos A y B pertenecen al mismo clúster. Suponiendo que los nodos A y B pertenecen al mismo clúster l, entonces de d1=1 ⇒ Solo hay una posición diferente entre i1i2…in e i1i2…in. Déjalo=lo, cuando 1 ≤ t ≤ n-1, y en ≠ en ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in). Por lo tanto, existe una clave directa de pares f n iiil n >< −121 ,...,,, (in,in) entre los nodos A y B. 2) Si d1=0, d2=1: Desde d2=1 ⇒ Solo hay una posición diferente entre j1j2…jm y j1j2…jm. Que jt sea igual a jt, cuando 1 ≤ t ≤ m1, y jm no sea igual a jm. Dado que d1=0 ⇒ i1i2…in es igual a i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm). Entonces, existe una clave directa de pares de llaves f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) entre los nodos A y B. Según el teorema 1, presentamos la descripción detallada del algoritmo de descubrimiento de clave directa por pares de manera directa de la siguiente manera: Paso 1: Obtener los IDs de nodo y los IDs de clúster del nodo fuente A y del nodo destino B; Paso 2: Calcular la distancia entre los nodos A y B: d= d1+ d2; Paso 3: Si d1=1, d2=0, entonces seleccionar un polinomio común compartido de los nodos A y B de { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } para establecer una clave directa por pares; Paso 4: Si d1=0, d2=1, entonces seleccionar un polinomio común compartido de los nodos A y B de { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } para establecer una clave directa por pares; Paso 5: De lo contrario, no existe una clave directa por pares entre los nodos A y B. Y luego pasar al siguiente proceso clave de descubrimiento de ruta. 6.3 Descubrimiento de Clave de Ruta Si d>1, entonces el nodo A puede establecer una clave de ruta con el nodo B de acuerdo con el siguiente teorema 2: Teorema 2: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d>1, entonces existe una clave de ruta entre los nodos A y B. Prueba: Sea d1=a, d2=b, entonces podemos pensar que it ≠ it, cuando 1 ≤ t ≤ a; pero it=it, cuando t>a; y jt ≠ jt, cuando 1 ≤ t ≤ b; pero jt=jt, cuando t>b. Obviamente, los nodos A(i1i2…in, j1j2…jm), (i1i2 i3…in, j1j2…jm), (i1i2 i3…in, j1j2…jm),…, (i1i2…in, j1j2…jm) pertenecen al mismo clúster. Por lo tanto, según la condición supuesta de que los nodos en el mismo clúster forman un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Para los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), dado que tienen los mismos códigos de nodo de hipercubo de salida con el nodo B(i1i2…in,j1j2…jm), los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) y el nodo B pertenecen a un mismo hipercubo lógico. Obviamente, a partir de la condición supuesta de que toda la red de sensores forma un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Por lo tanto, es obvio que existe una clave de ruta entre los nodos A y B. Según el teorema 2, presentamos la descripción detallada del algoritmo de descubrimiento de clave de ruta de la siguiente manera: Paso 1: Calcular los nodos intermedios (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) desde el nodo fuente A(i1i2…in,j1j2…jm) hasta el nodo destino B (i1i2…in,j1j2…jm). Paso 2: En esos nodos de la serie A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), los nodos vecinos seleccionan su parte polinómica común para establecer una clave directa de forma pareja. A partir del teorema 2, es fácil saber que cualquier nodo fuente A puede calcular un camino clave P hacia el nodo de destino B de acuerdo con el algoritmo anterior, cuando no hay nodos comprometidos en la red de sensores. Una vez que se calcula la ruta clave P, el nodo A puede enviar mensajes a B a lo largo de la ruta P para establecer una clave de forma indirecta con el nodo B. La Figura 2 presenta un ejemplo de establecimiento de ruta clave. Figura 2. Ejemplo de establecimiento de ruta clave. Por ejemplo: En la Figura 2 anterior, el nodo A((012),(1234)) puede establecer una clave de forma pareja con el nodo B((121),(2334)) a través de la siguiente ruta de clave: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), donde el nodo F deberá enrutar a través de los nodos G, H, I, J para establecer una clave de forma pareja directa con el nodo B. Según las propiedades del modelo H(k,u,m,v,n), podemos demostrar el siguiente teorema combinando la prueba del teorema 2: Teorema 3: Suponiendo que no existen nodos comprometidos en la red de sensores, y la distancia entre el nodo A y B, entonces existe una ruta de clave más corta con una distancia k entre el nodo A y B lógicamente. Es decir, el nodo A puede establecer una clave de enlace indirecto con el nodo B a través de t-1 nodos intermedios. Prueba: Suponiendo que la distancia entre el nodo A(i1i2…in, j1j2…jm) y B(i1i2…in, j1j2…jm) es d=d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Dado que d=t, de acuerdo con las propiedades de construcción de H(k,u,m,v,n), es fácil saber que existen t-1 nodos intermedios I1,…,It-1, en el espacio lógico H(k,u,m,v,n), que satisfacen que la distancia entre cualquier par de nodos vecinos en la serie de nodos A, I1,…,It-1, B es igual a 1. Según el teorema 1, podemos saber que los nodos A, I1,…,It-1, B forman un camino de clave correcto entre el nodo A y B. Si dos nodos vecinos en la serie de nodos A, I1,…,It-1, B pueden comunicarse directamente, entonces el nodo A puede establecer una clave de par indirecta con el nodo B a través de esos t-1 nodos intermedios. 6.4 Descubrimiento de Clave de Ruta Dinámica El algoritmo de descubrimiento de clave de ruta propuesto en la sección anterior puede establecer una ruta de clave correctamente, solo cuando no existen nodos comprometidos en toda la red de sensores, ya que la ruta de clave se calcula de antemano. Y el algoritmo propuesto no puede encontrar una ruta de clave alternativa cuando existen nodos comprometidos o nodos intermedios que no están dentro del radio de comunicación, incluso si existen otras rutas de clave alternativas en la red de sensores. A partir del siguiente ejemplo, podemos saber que hay muchos caminos paralelos en el modelo H(k,u,m,v,n) para cualquier par de nodos de origen y destino dados, ya que el modelo H(k,u,m,v,n) es altamente tolerante a fallos[9,10]. Figura 3. Ejemplo de establecimiento de ruta clave alternativa. Por ejemplo: Considerando el ejemplo de establecimiento de ruta clave dado en la sección anterior basado en la Figura 2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), suponiendo que el nodo F((121),(2234)) ha sido comprometido, entonces a partir de la Figura 3, podemos saber que existe otra ruta clave alternativa como A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → M((121),(1334)) → B((121),(2334)), la cual puede ser utilizada para establecer la clave de forma indirecta entre los nodos A y B, donde el nodo E deberá pasar por los nodos D y K para establecer la clave de forma directa con el nodo M, y el nodo M deberá pasar por los nodos N, O, G, H, I, J para establecer la clave de forma directa con el nodo B. Dado que los sensores tienen limitaciones de energía, es fácil que se agoten o salgan del radio de comunicación, por lo tanto, el algoritmo propuesto en la sección anterior no puede garantizar establecer de manera eficiente la ruta de claves correcta. En esta sección, propondremos un algoritmo de descubrimiento de clave de ruta dinámica como sigue, el cual puede mejorar de manera efectiva la probabilidad de la ruta clave: Algoritmo I: Algoritmo de establecimiento de ruta clave dinámica basado en el modelo H(k,u,m,v,n) para redes de sensores desplegadas en clústeres. Red traducida: Red de sub-sensores H(k,u,m,v,n), que tiene algunos sensores comprometidos/fallidos y enlaces defectuosos. Y dos nodos alcanzables A(a1…an,a1…am) y B(b1…bn,b1…bm) en H(k,u,m,v,n), donde at ≠ bt, t∈[1,s], at=bt, t >s. Una ruta de clave correcta desde el nodo A hasta B en H(k,u,m,v,n). Paso 1: Obtener las cadenas de código de los nodos A y B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), donde aj, bj [0,∈ u-1], aj, bj [0,∈ v-1]. Paso 2: Si a1...am = b1...bm, entonces el nodo A puede encontrar una ruta hacia B de acuerdo con los algoritmos de enrutamiento del hipercubo [9-10]. Paso 3: De lo contrario, el nodo A puede encontrar una ruta hacia C(b1…bn, a1…am) según el Algoritmo I o el Algoritmo II. Entonces, sea I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), y cada nodo It en la serie de nodos anterior encuentra una ruta hacia su nodo vecino It+1 en base a la información de ubicación (Los algoritmos de enrutamiento detallados basados en información de ubicación se pueden ver en las referencias [11-14]). Paso 4: El algoritmo sale. Si existe un tipo de ruta de clave correcta, a través de qué nodo A puede establecer una clave de par indirecta con el nodo B. De lo contrario, el nodo A no logra establecer una clave de enlace indirecta con el nodo B. Y el nodo A intentará nuevamente establecer una clave de par indirecta con el nodo B en algún momento posterior. 7. ANÁLISIS DEL ALGORITMO 7.1 Análisis Práctico Según la descripción y análisis anteriores, es fácil saber que el algoritmo recién propuesto tiene las siguientes propiedades: Propiedad 3: Cuando no existen nodos defectuosos ni comprometidos, al utilizar un nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), donde N es el número total de nodos en la red de sensores, y N=um * vn. Prueba: Dado que las claves preasignadas por pares para cualquier nodo FA = { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } en el algoritmo recién propuesto. Obviamente, en el hipercubo lógico formado por los nodos en el mismo clúster del nodo A, hay n(v-1) nodos, de los cuales 58 tienen una clave directa de par a par con el nodo A. Y en el hipercubo lógico formado por los nodos en diferentes clústeres al de nodo A, hay m(u-1) nodos, que tienen una clave directa en pares con el nodo A. Por lo tanto, hay un total de m(u-1)+n(v-1) nodos que tienen una clave directa de par a par con el nodo A. Por lo tanto, la probabilidad de establecimiento de clave entre pares de nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), dado que toda la red de sensores tiene en total N nodos sensores. La Figura 4 presenta la comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Número de Dimensión Probabilidad de Establecer Clave Directa N = 8000 N=10000 N=20000 N=30000 Figura 4 Comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). A partir de la Figura 4, es fácil saber que al utilizar el nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la escala de las redes de sensores, y además, la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la dimensión n, cuando la escala de la red de sensores está fija. Teorema 4: Suponiendo que el total de sensores es N en la red de sensores, entonces cuando u ≥ v2, la probabilidad de establecimiento directo de claves entre pares entre dos nodos, al utilizar el esquema de distribución de claves basado en el modelo de hipercubo H(v,p), es menor que cuando se utiliza el esquema de distribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que u ≥ v, podemos dejar u=vt, donde t ≥ 2. Dado que el número total de nodos en H(v,p) es vp = N, el número total de nodos en H(k,u,m,v,n) es um * vn = N. Sea p=x+n, entonces hay um * vn = vx * vn ⇒ um =vx ⇒ x=tm. A partir de la propiedad 3, es fácil saber que la probabilidad de establecimiento directo de clave entre cualquier par de nodos se puede estimar como P=(m(u-1)+n(v-1))/(N-1). Según la descripción en [7], es bien sabido que la probabilidad de establecimiento directo de claves entre cualquier par de nodos puede estimarse como P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1). A continuación, demostraremos que m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1). Construye una función como f(t) = vt -1- t(v-1), donde t ≥ 2. Cuando t=2, es obvio que hay f(t)= vt -2v+1=( v-1)2 ≥ 0 y f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0. Entonces, hay f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1). Por lo tanto, la conclusión del teorema se mantiene. En cuanto a la conclusión del teorema 4, damos un ejemplo para ilustrar. Suponiendo que el número total de nodos en la red de sensores es N=214, y H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), entonces la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) es P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), pero la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p) es P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1). Suponiendo que el número total de nodos en la red de sensores es N, la Figura 5 ilustra la comparación entre la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) y la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p), cuando u=4 y v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 escala de la red de sensores Probabilidad de Establecer Clave Directa Modelo basado en H(k,u,m,v,n) Modelo basado en H(v,p) Figura 5 Comparación entre la probabilidad de establecimiento directo de claves entre los modelos H(v,n) y H(k,u,m,v,n). A partir de la Figura 5, es fácil saber que el teorema 5 se cumple. Teorema 5: Suponiendo que el total de sensores es N en la red de sensores, entonces el esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) es solo un caso especial del esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n). Prueba: En cuanto al esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n), tomemos k=1 (u=1, m=0), lo que significa que la red de sensores total incluye solo un clúster. Entonces, obviamente, el modelo H(k,u,m,v,n) se degradará en el modelo H(v,n). Según los análisis anteriores en este documento y la definición del esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) en [7], es fácil saber que la conclusión del teorema se mantiene. 59 7.2 Análisis de Seguridad Al utilizar el algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n), los intrusos pueden lanzar dos tipos de ataques: 1) Los atacantes pueden apuntar a la clave por pares entre dos nodos de sensor particulares, con el fin de comprometer la clave por pares entre ellos o evitar que establezcan una clave por pares. 2) Los atacantes pueden atacar toda la red de sensores, con el fin de disminuir la probabilidad de establecimiento de claves por pares o aumentar el costo del establecimiento de claves por pares. Ataques contra un par de nodos sensores 1. Suponiendo que los intrusos quieren atacar dos nodos de sensor específicos u,v, donde u,v son nodos no comprometidos, pero los intrusos quieren comprometer la clave de par entre ellos. 1) Si u,v pueden establecer una clave de par directa, entonces la única forma de comprometer la clave es comprometer el polinomio bivariado común f(x,y) entre u,v. Dado que el grado del polinomio bivariado f(x,y) es t, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado f(x,y). 2) Si u,v pueden establecer una clave de par indirecta a través de nodos intermedios, entonces los intrusos necesitan comprometer al menos un nodo intermedio, o comprometer el polinomio bivariado común f(x,y) entre dos nodos intermedios vecinos. Pero incluso si los intrusos logran hacer eso, los nodos u y v aún pueden restablecer la clave de pares indirecta a través de nodos intermedios alternativos. 2. Suponiendo que los intrusos quieran atacar dos nodos de sensor específicos u, v, donde u, v son nodos no comprometidos, pero los intrusos quieren evitar que establezcan la clave de forma pareja. Entonces, los intrusos necesitan comprometer todos los polinomios bivariados de grado m+n del nodo u o v. Dado que el grado del polinomio bivariado f(x,y) es t, para el polinomio bivariado, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado dado. Por lo tanto, los intrusos necesitan comprometer en total (m+n)(t+1) nodos sensores para evitar que u,v establezcan la clave de forma pareja. Ataques contra la red de sensores. Suponiendo que los atacantes conocen la distribución de los polinomios sobre los nodos de sensores, pueden atacar sistemáticamente la red comprometiendo los polinomios en F uno por uno para comprometer toda la red. Suponga que la fracción de polinomios comprometidos es pc, entonces hay hasta N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) nodos sensores que tienen al menos una parte de polinomio comprometida. Entre todos los N nodos sensores restantes, ninguno incluye una parte polinómica comprometida. Por lo tanto, los nodos sensores restantes N- N pueden establecer una clave directa de forma pareja utilizando cualquiera de sus partes polinómicas. Sin embargo, las claves de emparejamiento indirecto en los nodos sensores restantes N-N pueden verse afectadas. Y es posible que necesiten restablecer una nueva clave de enlace indirecto entre ellos seleccionando nodos intermedios alternativos que no pertenezcan a los N nodos comprometidos. Suponiendo que la escala de la red de sensores es N=10000, la Figura 6 presenta la comparación entre la pc y el número de nodos de sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). En la Figura 6, es fácil saber que, cuando la escala de la red de sensores está fija, el número de nodos de sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 Fracción de Polinomios Bivariados Comprometidos Nodos de Sensor con al menos un Polinomio Comprometido Compartido H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figura 6 la comparación entre pc y el número de nodos de sensor con al menos un polinomio comprometido compartido en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). Teorema 6: Suponiendo que el total de sensores es N en la red de sensores, y la fracción de nodos comprometidos es pc, entonces cuando u>v, el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es mayor que el del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) es pc ××N (m+n), y se ha demostrado en [7] que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es pc ××N p. Sea p=x+n, entonces um * vn = vx * vn ⇒ um =vx. Dado que u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Suponiendo que la escala de la red de sensores es N=10000, la Figura 7 presenta la comparación entre pc y el número de nodos de sensor con al menos una parte polinómica comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). A partir de la Figura 7, es fácil saber que la conclusión del teorema 9 es correcta, y el número de nodos sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos, cuando la escala de la red de sensores está fija. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fracción de Polinomios Bivariados Comprometidos NodosSensorconalmenosunPolinomioComprometidoCompartido H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figura 7 la comparación entre pc y el número de nodos sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). 8. CONCLUSIÓN Se propone un nuevo modelo jerárquico de hipercubo llamado H(k,u,m,v,n), que puede ser utilizado para la predistribución de claves por pares en redes de sensores desplegadas en clústeres. Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de Clave Polinómica y de Piscina de Claves. El nuevo algoritmo utiliza las buenas características de los códigos de nodo y la alta tolerancia a fallos del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7]. Por lo tanto, el algoritmo tradicional de predistribución de claves en pares basado en el modelo de hipercubo [7] es solo un caso especial del nuevo algoritmo propuesto en este artículo. Los análisis teóricos y experimentales muestran que el nuevo algoritmo propuesto es un eficiente algoritmo de establecimiento de claves por pares que es adecuado para las redes de sensores desplegadas en clústeres. AGRADECIMIENTOS Nuestro agradecimiento a ACM SIGCHI por permitirnos modificar las plantillas que habían desarrollado, y al fondo de ciencia natural de la provincia de Fujian de la República Popular de China bajo la subvención No. A0510024. 10. REFERENCIAS [1] L. Eschenauer y V. Gligor. Un esquema de gestión de claves para redes de sensores distribuidos. En Actas de la 9ª Conferencia ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington DC, EE. UU., 2002, 41-47. [2] H. Chan, A. Perrig y D. Song. Esquemas de predistribución de claves aleatorias para redes de sensores. En el Simposio de Seguridad y Privacidad de IEEE. IEEE Computer Society, California, EE. UU., 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro y M. Yung. Distribución de claves perfectamente segura para conferencias dinámicas. Notas de conferencia en Ciencias de la Computación. 1993, 740, 471-486. [4] D. Liu y P. Ning. Estableciendo claves de forma pareja en redes de sensores distribuidos. En Actas de la 10ª Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington, DC, EE. UU., 2003, 52-61. [5] W. Du, J. Deng, Y. Han y P. Varshney. Un esquema de pre-distribución de claves por pares para redes de sensores inalámbricos. En Actas de la Décima Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. Washington, DC, EE. UU., 2003, 4251. [6] R. Blom. Una clase óptima de sistemas de generación de claves simétricas. Avances en Criptología: Actas de EUROCRYPT 84. Notas de conferencia en Ciencias de la Computación. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establecimiento de claves de pares en redes de sensores distribuidos. Nombre de la revista ACM, 2004, 20, 1-35. [8] L. Fang, W. Du y N. Peng. Un esquema de descubrimiento de ubicación sin baliza para redes de sensores inalámbricos, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallas basado en matriz de camino de máxima seguridad para redes de interconexión de hipercubos. Revista de software. 2004, 15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallos basado en vector de ruta de máxima seguridad para redes de interconexión de hipercubos. Revista del Instituto de Comunicaciones de China. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Algoritmo de enrutamiento de conglomeración de datos jerárquicos basado en información de ubicación para redes de sensores. Revista China de electrónica. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik y H. Balakrishnan, Protocolos basados en negociación para la difusión de información en redes de sensores inalámbricos. Redes inalámbricas ACM. 2002, 8, 169-185. [13] Manjeshwar, A.; Agrawal, D.P. TEEN: un protocolo de enrutamiento para mejorar la eficiencia en redes de sensores inalámbricos. En Actas del 15º Simposio de Procesamiento Paralelo y Distribuido. IEEE Computer Society, San Francisco, EE. UU., 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin y S. Wicker. Modelado de enrutamiento centrado en datos en redes de sensores inalámbricos. En Actas de IEEE Infocom, 2002. 61 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "polynomial key": {
            "translated_key": "Clave Polinómica",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the <br>polynomial key</br> and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the <br>polynomial key</br> and Key Pool encryption schemes."
            ],
            "translated_annotated_samples": [
                "Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de <br>Clave Polinómica</br> y de Piscina de Claves."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la red de sensores incluye N nodos y se despliega a través de k rondas diferentes. Luego podemos predistribuir claves para cada nodo sensor basándonos en el modelo H(k,u,m,v,n) de la siguiente manera: Paso 1: El servidor de configuración de claves genera aleatoriamente un conjunto de polinomios bivariados como el siguiente: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} con vn *m*um-1 +[N/vn ]*n*vn-1 diferentes polinomios bivariados de grado t sobre un campo finito Fq, y luego asigna un ID de polinomio único a cada polinomio bivariado en F. Paso 2: En cada ronda, el servidor de configuración de claves asigna un ID de nodo único: (i1i2…in,j1j2…jm) a cada nodo sensor de menor a mayor, donde 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1. Paso 3: el servidor de configuración de claves asigna un ID de clúster único: l a todos los nodos sensores desplegados en la misma ronda, donde 1 ≤ l ≤ k. Paso 4: el servidor de configuración de claves predistribuye polinomios bivariados m+n { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } y los IDs de polinomios correspondientes al nodo sensor desplegado en la ronda l y con ID (i1i2…in, j1j2…jm). 6.2 Descubrimiento directo de claves de pares Si el nodo A(i1i2…in,j1j2…jm) en la red de sensores desea establecer una clave de par con un nodo B (i1i2…in,j1j2…jm), entonces el nodo A puede establecer una clave de par con el nodo B a través de los siguientes métodos. En primer lugar, el nodo A calcula la distancia entre sí mismo y el nodo B: d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces el nodo A obtiene la clave directa de pares entre él mismo y el nodo B de acuerdo con el siguiente teorema 1: Teorema 1: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia 56 entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces existe una clave directa entre los nodos A y B. Prueba: Dado que d=1, entonces existe d1=1, d2=0, o d1=0, d2=1. 1) Si d1=1, d2=0: A partir de d2=0, los nodos A y B pertenecen al mismo clúster. Suponiendo que los nodos A y B pertenecen al mismo clúster l, entonces de d1=1 ⇒ Solo hay una posición diferente entre i1i2…in e i1i2…in. Déjalo=lo, cuando 1 ≤ t ≤ n-1, y en ≠ en ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in). Por lo tanto, existe una clave directa de pares f n iiil n >< −121 ,...,,, (in,in) entre los nodos A y B. 2) Si d1=0, d2=1: Desde d2=1 ⇒ Solo hay una posición diferente entre j1j2…jm y j1j2…jm. Que jt sea igual a jt, cuando 1 ≤ t ≤ m1, y jm no sea igual a jm. Dado que d1=0 ⇒ i1i2…in es igual a i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm). Entonces, existe una clave directa de pares de llaves f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) entre los nodos A y B. Según el teorema 1, presentamos la descripción detallada del algoritmo de descubrimiento de clave directa por pares de manera directa de la siguiente manera: Paso 1: Obtener los IDs de nodo y los IDs de clúster del nodo fuente A y del nodo destino B; Paso 2: Calcular la distancia entre los nodos A y B: d= d1+ d2; Paso 3: Si d1=1, d2=0, entonces seleccionar un polinomio común compartido de los nodos A y B de { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } para establecer una clave directa por pares; Paso 4: Si d1=0, d2=1, entonces seleccionar un polinomio común compartido de los nodos A y B de { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } para establecer una clave directa por pares; Paso 5: De lo contrario, no existe una clave directa por pares entre los nodos A y B. Y luego pasar al siguiente proceso clave de descubrimiento de ruta. 6.3 Descubrimiento de Clave de Ruta Si d>1, entonces el nodo A puede establecer una clave de ruta con el nodo B de acuerdo con el siguiente teorema 2: Teorema 2: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d>1, entonces existe una clave de ruta entre los nodos A y B. Prueba: Sea d1=a, d2=b, entonces podemos pensar que it ≠ it, cuando 1 ≤ t ≤ a; pero it=it, cuando t>a; y jt ≠ jt, cuando 1 ≤ t ≤ b; pero jt=jt, cuando t>b. Obviamente, los nodos A(i1i2…in, j1j2…jm), (i1i2 i3…in, j1j2…jm), (i1i2 i3…in, j1j2…jm),…, (i1i2…in, j1j2…jm) pertenecen al mismo clúster. Por lo tanto, según la condición supuesta de que los nodos en el mismo clúster forman un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Para los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), dado que tienen los mismos códigos de nodo de hipercubo de salida con el nodo B(i1i2…in,j1j2…jm), los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) y el nodo B pertenecen a un mismo hipercubo lógico. Obviamente, a partir de la condición supuesta de que toda la red de sensores forma un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Por lo tanto, es obvio que existe una clave de ruta entre los nodos A y B. Según el teorema 2, presentamos la descripción detallada del algoritmo de descubrimiento de clave de ruta de la siguiente manera: Paso 1: Calcular los nodos intermedios (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) desde el nodo fuente A(i1i2…in,j1j2…jm) hasta el nodo destino B (i1i2…in,j1j2…jm). Paso 2: En esos nodos de la serie A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), los nodos vecinos seleccionan su parte polinómica común para establecer una clave directa de forma pareja. A partir del teorema 2, es fácil saber que cualquier nodo fuente A puede calcular un camino clave P hacia el nodo de destino B de acuerdo con el algoritmo anterior, cuando no hay nodos comprometidos en la red de sensores. Una vez que se calcula la ruta clave P, el nodo A puede enviar mensajes a B a lo largo de la ruta P para establecer una clave de forma indirecta con el nodo B. La Figura 2 presenta un ejemplo de establecimiento de ruta clave. Figura 2. Ejemplo de establecimiento de ruta clave. Por ejemplo: En la Figura 2 anterior, el nodo A((012),(1234)) puede establecer una clave de forma pareja con el nodo B((121),(2334)) a través de la siguiente ruta de clave: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), donde el nodo F deberá enrutar a través de los nodos G, H, I, J para establecer una clave de forma pareja directa con el nodo B. Según las propiedades del modelo H(k,u,m,v,n), podemos demostrar el siguiente teorema combinando la prueba del teorema 2: Teorema 3: Suponiendo que no existen nodos comprometidos en la red de sensores, y la distancia entre el nodo A y B, entonces existe una ruta de clave más corta con una distancia k entre el nodo A y B lógicamente. Es decir, el nodo A puede establecer una clave de enlace indirecto con el nodo B a través de t-1 nodos intermedios. Prueba: Suponiendo que la distancia entre el nodo A(i1i2…in, j1j2…jm) y B(i1i2…in, j1j2…jm) es d=d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Dado que d=t, de acuerdo con las propiedades de construcción de H(k,u,m,v,n), es fácil saber que existen t-1 nodos intermedios I1,…,It-1, en el espacio lógico H(k,u,m,v,n), que satisfacen que la distancia entre cualquier par de nodos vecinos en la serie de nodos A, I1,…,It-1, B es igual a 1. Según el teorema 1, podemos saber que los nodos A, I1,…,It-1, B forman un camino de clave correcto entre el nodo A y B. Si dos nodos vecinos en la serie de nodos A, I1,…,It-1, B pueden comunicarse directamente, entonces el nodo A puede establecer una clave de par indirecta con el nodo B a través de esos t-1 nodos intermedios. 6.4 Descubrimiento de Clave de Ruta Dinámica El algoritmo de descubrimiento de clave de ruta propuesto en la sección anterior puede establecer una ruta de clave correctamente, solo cuando no existen nodos comprometidos en toda la red de sensores, ya que la ruta de clave se calcula de antemano. Y el algoritmo propuesto no puede encontrar una ruta de clave alternativa cuando existen nodos comprometidos o nodos intermedios que no están dentro del radio de comunicación, incluso si existen otras rutas de clave alternativas en la red de sensores. A partir del siguiente ejemplo, podemos saber que hay muchos caminos paralelos en el modelo H(k,u,m,v,n) para cualquier par de nodos de origen y destino dados, ya que el modelo H(k,u,m,v,n) es altamente tolerante a fallos[9,10]. Figura 3. Ejemplo de establecimiento de ruta clave alternativa. Por ejemplo: Considerando el ejemplo de establecimiento de ruta clave dado en la sección anterior basado en la Figura 2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), suponiendo que el nodo F((121),(2234)) ha sido comprometido, entonces a partir de la Figura 3, podemos saber que existe otra ruta clave alternativa como A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → M((121),(1334)) → B((121),(2334)), la cual puede ser utilizada para establecer la clave de forma indirecta entre los nodos A y B, donde el nodo E deberá pasar por los nodos D y K para establecer la clave de forma directa con el nodo M, y el nodo M deberá pasar por los nodos N, O, G, H, I, J para establecer la clave de forma directa con el nodo B. Dado que los sensores tienen limitaciones de energía, es fácil que se agoten o salgan del radio de comunicación, por lo tanto, el algoritmo propuesto en la sección anterior no puede garantizar establecer de manera eficiente la ruta de claves correcta. En esta sección, propondremos un algoritmo de descubrimiento de clave de ruta dinámica como sigue, el cual puede mejorar de manera efectiva la probabilidad de la ruta clave: Algoritmo I: Algoritmo de establecimiento de ruta clave dinámica basado en el modelo H(k,u,m,v,n) para redes de sensores desplegadas en clústeres. Red traducida: Red de sub-sensores H(k,u,m,v,n), que tiene algunos sensores comprometidos/fallidos y enlaces defectuosos. Y dos nodos alcanzables A(a1…an,a1…am) y B(b1…bn,b1…bm) en H(k,u,m,v,n), donde at ≠ bt, t∈[1,s], at=bt, t >s. Una ruta de clave correcta desde el nodo A hasta B en H(k,u,m,v,n). Paso 1: Obtener las cadenas de código de los nodos A y B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), donde aj, bj [0,∈ u-1], aj, bj [0,∈ v-1]. Paso 2: Si a1...am = b1...bm, entonces el nodo A puede encontrar una ruta hacia B de acuerdo con los algoritmos de enrutamiento del hipercubo [9-10]. Paso 3: De lo contrario, el nodo A puede encontrar una ruta hacia C(b1…bn, a1…am) según el Algoritmo I o el Algoritmo II. Entonces, sea I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), y cada nodo It en la serie de nodos anterior encuentra una ruta hacia su nodo vecino It+1 en base a la información de ubicación (Los algoritmos de enrutamiento detallados basados en información de ubicación se pueden ver en las referencias [11-14]). Paso 4: El algoritmo sale. Si existe un tipo de ruta de clave correcta, a través de qué nodo A puede establecer una clave de par indirecta con el nodo B. De lo contrario, el nodo A no logra establecer una clave de enlace indirecta con el nodo B. Y el nodo A intentará nuevamente establecer una clave de par indirecta con el nodo B en algún momento posterior. 7. ANÁLISIS DEL ALGORITMO 7.1 Análisis Práctico Según la descripción y análisis anteriores, es fácil saber que el algoritmo recién propuesto tiene las siguientes propiedades: Propiedad 3: Cuando no existen nodos defectuosos ni comprometidos, al utilizar un nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), donde N es el número total de nodos en la red de sensores, y N=um * vn. Prueba: Dado que las claves preasignadas por pares para cualquier nodo FA = { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } en el algoritmo recién propuesto. Obviamente, en el hipercubo lógico formado por los nodos en el mismo clúster del nodo A, hay n(v-1) nodos, de los cuales 58 tienen una clave directa de par a par con el nodo A. Y en el hipercubo lógico formado por los nodos en diferentes clústeres al de nodo A, hay m(u-1) nodos, que tienen una clave directa en pares con el nodo A. Por lo tanto, hay un total de m(u-1)+n(v-1) nodos que tienen una clave directa de par a par con el nodo A. Por lo tanto, la probabilidad de establecimiento de clave entre pares de nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), dado que toda la red de sensores tiene en total N nodos sensores. La Figura 4 presenta la comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Número de Dimensión Probabilidad de Establecer Clave Directa N = 8000 N=10000 N=20000 N=30000 Figura 4 Comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). A partir de la Figura 4, es fácil saber que al utilizar el nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la escala de las redes de sensores, y además, la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la dimensión n, cuando la escala de la red de sensores está fija. Teorema 4: Suponiendo que el total de sensores es N en la red de sensores, entonces cuando u ≥ v2, la probabilidad de establecimiento directo de claves entre pares entre dos nodos, al utilizar el esquema de distribución de claves basado en el modelo de hipercubo H(v,p), es menor que cuando se utiliza el esquema de distribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que u ≥ v, podemos dejar u=vt, donde t ≥ 2. Dado que el número total de nodos en H(v,p) es vp = N, el número total de nodos en H(k,u,m,v,n) es um * vn = N. Sea p=x+n, entonces hay um * vn = vx * vn ⇒ um =vx ⇒ x=tm. A partir de la propiedad 3, es fácil saber que la probabilidad de establecimiento directo de clave entre cualquier par de nodos se puede estimar como P=(m(u-1)+n(v-1))/(N-1). Según la descripción en [7], es bien sabido que la probabilidad de establecimiento directo de claves entre cualquier par de nodos puede estimarse como P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1). A continuación, demostraremos que m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1). Construye una función como f(t) = vt -1- t(v-1), donde t ≥ 2. Cuando t=2, es obvio que hay f(t)= vt -2v+1=( v-1)2 ≥ 0 y f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0. Entonces, hay f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1). Por lo tanto, la conclusión del teorema se mantiene. En cuanto a la conclusión del teorema 4, damos un ejemplo para ilustrar. Suponiendo que el número total de nodos en la red de sensores es N=214, y H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), entonces la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) es P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), pero la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p) es P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1). Suponiendo que el número total de nodos en la red de sensores es N, la Figura 5 ilustra la comparación entre la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) y la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p), cuando u=4 y v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 escala de la red de sensores Probabilidad de Establecer Clave Directa Modelo basado en H(k,u,m,v,n) Modelo basado en H(v,p) Figura 5 Comparación entre la probabilidad de establecimiento directo de claves entre los modelos H(v,n) y H(k,u,m,v,n). A partir de la Figura 5, es fácil saber que el teorema 5 se cumple. Teorema 5: Suponiendo que el total de sensores es N en la red de sensores, entonces el esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) es solo un caso especial del esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n). Prueba: En cuanto al esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n), tomemos k=1 (u=1, m=0), lo que significa que la red de sensores total incluye solo un clúster. Entonces, obviamente, el modelo H(k,u,m,v,n) se degradará en el modelo H(v,n). Según los análisis anteriores en este documento y la definición del esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) en [7], es fácil saber que la conclusión del teorema se mantiene. 59 7.2 Análisis de Seguridad Al utilizar el algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n), los intrusos pueden lanzar dos tipos de ataques: 1) Los atacantes pueden apuntar a la clave por pares entre dos nodos de sensor particulares, con el fin de comprometer la clave por pares entre ellos o evitar que establezcan una clave por pares. 2) Los atacantes pueden atacar toda la red de sensores, con el fin de disminuir la probabilidad de establecimiento de claves por pares o aumentar el costo del establecimiento de claves por pares. Ataques contra un par de nodos sensores 1. Suponiendo que los intrusos quieren atacar dos nodos de sensor específicos u,v, donde u,v son nodos no comprometidos, pero los intrusos quieren comprometer la clave de par entre ellos. 1) Si u,v pueden establecer una clave de par directa, entonces la única forma de comprometer la clave es comprometer el polinomio bivariado común f(x,y) entre u,v. Dado que el grado del polinomio bivariado f(x,y) es t, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado f(x,y). 2) Si u,v pueden establecer una clave de par indirecta a través de nodos intermedios, entonces los intrusos necesitan comprometer al menos un nodo intermedio, o comprometer el polinomio bivariado común f(x,y) entre dos nodos intermedios vecinos. Pero incluso si los intrusos logran hacer eso, los nodos u y v aún pueden restablecer la clave de pares indirecta a través de nodos intermedios alternativos. 2. Suponiendo que los intrusos quieran atacar dos nodos de sensor específicos u, v, donde u, v son nodos no comprometidos, pero los intrusos quieren evitar que establezcan la clave de forma pareja. Entonces, los intrusos necesitan comprometer todos los polinomios bivariados de grado m+n del nodo u o v. Dado que el grado del polinomio bivariado f(x,y) es t, para el polinomio bivariado, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado dado. Por lo tanto, los intrusos necesitan comprometer en total (m+n)(t+1) nodos sensores para evitar que u,v establezcan la clave de forma pareja. Ataques contra la red de sensores. Suponiendo que los atacantes conocen la distribución de los polinomios sobre los nodos de sensores, pueden atacar sistemáticamente la red comprometiendo los polinomios en F uno por uno para comprometer toda la red. Suponga que la fracción de polinomios comprometidos es pc, entonces hay hasta N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) nodos sensores que tienen al menos una parte de polinomio comprometida. Entre todos los N nodos sensores restantes, ninguno incluye una parte polinómica comprometida. Por lo tanto, los nodos sensores restantes N- N pueden establecer una clave directa de forma pareja utilizando cualquiera de sus partes polinómicas. Sin embargo, las claves de emparejamiento indirecto en los nodos sensores restantes N-N pueden verse afectadas. Y es posible que necesiten restablecer una nueva clave de enlace indirecto entre ellos seleccionando nodos intermedios alternativos que no pertenezcan a los N nodos comprometidos. Suponiendo que la escala de la red de sensores es N=10000, la Figura 6 presenta la comparación entre la pc y el número de nodos de sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). En la Figura 6, es fácil saber que, cuando la escala de la red de sensores está fija, el número de nodos de sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 Fracción de Polinomios Bivariados Comprometidos Nodos de Sensor con al menos un Polinomio Comprometido Compartido H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figura 6 la comparación entre pc y el número de nodos de sensor con al menos un polinomio comprometido compartido en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). Teorema 6: Suponiendo que el total de sensores es N en la red de sensores, y la fracción de nodos comprometidos es pc, entonces cuando u>v, el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es mayor que el del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) es pc ××N (m+n), y se ha demostrado en [7] que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es pc ××N p. Sea p=x+n, entonces um * vn = vx * vn ⇒ um =vx. Dado que u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Suponiendo que la escala de la red de sensores es N=10000, la Figura 7 presenta la comparación entre pc y el número de nodos de sensor con al menos una parte polinómica comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). A partir de la Figura 7, es fácil saber que la conclusión del teorema 9 es correcta, y el número de nodos sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos, cuando la escala de la red de sensores está fija. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fracción de Polinomios Bivariados Comprometidos NodosSensorconalmenosunPolinomioComprometidoCompartido H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figura 7 la comparación entre pc y el número de nodos sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). 8. CONCLUSIÓN Se propone un nuevo modelo jerárquico de hipercubo llamado H(k,u,m,v,n), que puede ser utilizado para la predistribución de claves por pares en redes de sensores desplegadas en clústeres. Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de <br>Clave Polinómica</br> y de Piscina de Claves. El nuevo algoritmo utiliza las buenas características de los códigos de nodo y la alta tolerancia a fallos del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7]. Por lo tanto, el algoritmo tradicional de predistribución de claves en pares basado en el modelo de hipercubo [7] es solo un caso especial del nuevo algoritmo propuesto en este artículo. Los análisis teóricos y experimentales muestran que el nuevo algoritmo propuesto es un eficiente algoritmo de establecimiento de claves por pares que es adecuado para las redes de sensores desplegadas en clústeres. AGRADECIMIENTOS Nuestro agradecimiento a ACM SIGCHI por permitirnos modificar las plantillas que habían desarrollado, y al fondo de ciencia natural de la provincia de Fujian de la República Popular de China bajo la subvención No. A0510024. 10. REFERENCIAS [1] L. Eschenauer y V. Gligor. Un esquema de gestión de claves para redes de sensores distribuidos. En Actas de la 9ª Conferencia ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington DC, EE. UU., 2002, 41-47. [2] H. Chan, A. Perrig y D. Song. Esquemas de predistribución de claves aleatorias para redes de sensores. En el Simposio de Seguridad y Privacidad de IEEE. IEEE Computer Society, California, EE. UU., 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro y M. Yung. Distribución de claves perfectamente segura para conferencias dinámicas. Notas de conferencia en Ciencias de la Computación. 1993, 740, 471-486. [4] D. Liu y P. Ning. Estableciendo claves de forma pareja en redes de sensores distribuidos. En Actas de la 10ª Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington, DC, EE. UU., 2003, 52-61. [5] W. Du, J. Deng, Y. Han y P. Varshney. Un esquema de pre-distribución de claves por pares para redes de sensores inalámbricos. En Actas de la Décima Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. Washington, DC, EE. UU., 2003, 4251. [6] R. Blom. Una clase óptima de sistemas de generación de claves simétricas. Avances en Criptología: Actas de EUROCRYPT 84. Notas de conferencia en Ciencias de la Computación. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establecimiento de claves de pares en redes de sensores distribuidos. Nombre de la revista ACM, 2004, 20, 1-35. [8] L. Fang, W. Du y N. Peng. Un esquema de descubrimiento de ubicación sin baliza para redes de sensores inalámbricos, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallas basado en matriz de camino de máxima seguridad para redes de interconexión de hipercubos. Revista de software. 2004, 15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallos basado en vector de ruta de máxima seguridad para redes de interconexión de hipercubos. Revista del Instituto de Comunicaciones de China. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Algoritmo de enrutamiento de conglomeración de datos jerárquicos basado en información de ubicación para redes de sensores. Revista China de electrónica. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik y H. Balakrishnan, Protocolos basados en negociación para la difusión de información en redes de sensores inalámbricos. Redes inalámbricas ACM. 2002, 8, 169-185. [13] Manjeshwar, A.; Agrawal, D.P. TEEN: un protocolo de enrutamiento para mejorar la eficiencia en redes de sensores inalámbricos. En Actas del 15º Simposio de Procesamiento Paralelo y Distribuido. IEEE Computer Society, San Francisco, EE. UU., 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin y S. Wicker. Modelado de enrutamiento centrado en datos en redes de sensores inalámbricos. En Actas de IEEE Infocom, 2002. 61 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "encryption": {
            "translated_key": "cifrado",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding <br>encryption</br> and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based <br>encryption</br> schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool <br>encryption</br> schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding <br>encryption</br> and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based <br>encryption</br> schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool <br>encryption</br> schemes."
            ],
            "translated_annotated_samples": [
                "Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de <br>cifrado</br> y des<br>cifrado</br> en los nodos sensores antes de su distribución, se llama Predistribución de Claves.",
                "Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de <br>cifrado</br> basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios.",
                "Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de <br>cifrado</br> de Clave Polinómica y de Piscina de Claves."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de <br>cifrado</br> y des<br>cifrado</br> en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de <br>cifrado</br> basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la red de sensores incluye N nodos y se despliega a través de k rondas diferentes. Luego podemos predistribuir claves para cada nodo sensor basándonos en el modelo H(k,u,m,v,n) de la siguiente manera: Paso 1: El servidor de configuración de claves genera aleatoriamente un conjunto de polinomios bivariados como el siguiente: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} con vn *m*um-1 +[N/vn ]*n*vn-1 diferentes polinomios bivariados de grado t sobre un campo finito Fq, y luego asigna un ID de polinomio único a cada polinomio bivariado en F. Paso 2: En cada ronda, el servidor de configuración de claves asigna un ID de nodo único: (i1i2…in,j1j2…jm) a cada nodo sensor de menor a mayor, donde 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1. Paso 3: el servidor de configuración de claves asigna un ID de clúster único: l a todos los nodos sensores desplegados en la misma ronda, donde 1 ≤ l ≤ k. Paso 4: el servidor de configuración de claves predistribuye polinomios bivariados m+n { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } y los IDs de polinomios correspondientes al nodo sensor desplegado en la ronda l y con ID (i1i2…in, j1j2…jm). 6.2 Descubrimiento directo de claves de pares Si el nodo A(i1i2…in,j1j2…jm) en la red de sensores desea establecer una clave de par con un nodo B (i1i2…in,j1j2…jm), entonces el nodo A puede establecer una clave de par con el nodo B a través de los siguientes métodos. En primer lugar, el nodo A calcula la distancia entre sí mismo y el nodo B: d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces el nodo A obtiene la clave directa de pares entre él mismo y el nodo B de acuerdo con el siguiente teorema 1: Teorema 1: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia 56 entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces existe una clave directa entre los nodos A y B. Prueba: Dado que d=1, entonces existe d1=1, d2=0, o d1=0, d2=1. 1) Si d1=1, d2=0: A partir de d2=0, los nodos A y B pertenecen al mismo clúster. Suponiendo que los nodos A y B pertenecen al mismo clúster l, entonces de d1=1 ⇒ Solo hay una posición diferente entre i1i2…in e i1i2…in. Déjalo=lo, cuando 1 ≤ t ≤ n-1, y en ≠ en ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in). Por lo tanto, existe una clave directa de pares f n iiil n >< −121 ,...,,, (in,in) entre los nodos A y B. 2) Si d1=0, d2=1: Desde d2=1 ⇒ Solo hay una posición diferente entre j1j2…jm y j1j2…jm. Que jt sea igual a jt, cuando 1 ≤ t ≤ m1, y jm no sea igual a jm. Dado que d1=0 ⇒ i1i2…in es igual a i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm). Entonces, existe una clave directa de pares de llaves f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) entre los nodos A y B. Según el teorema 1, presentamos la descripción detallada del algoritmo de descubrimiento de clave directa por pares de manera directa de la siguiente manera: Paso 1: Obtener los IDs de nodo y los IDs de clúster del nodo fuente A y del nodo destino B; Paso 2: Calcular la distancia entre los nodos A y B: d= d1+ d2; Paso 3: Si d1=1, d2=0, entonces seleccionar un polinomio común compartido de los nodos A y B de { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } para establecer una clave directa por pares; Paso 4: Si d1=0, d2=1, entonces seleccionar un polinomio común compartido de los nodos A y B de { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } para establecer una clave directa por pares; Paso 5: De lo contrario, no existe una clave directa por pares entre los nodos A y B. Y luego pasar al siguiente proceso clave de descubrimiento de ruta. 6.3 Descubrimiento de Clave de Ruta Si d>1, entonces el nodo A puede establecer una clave de ruta con el nodo B de acuerdo con el siguiente teorema 2: Teorema 2: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d>1, entonces existe una clave de ruta entre los nodos A y B. Prueba: Sea d1=a, d2=b, entonces podemos pensar que it ≠ it, cuando 1 ≤ t ≤ a; pero it=it, cuando t>a; y jt ≠ jt, cuando 1 ≤ t ≤ b; pero jt=jt, cuando t>b. Obviamente, los nodos A(i1i2…in, j1j2…jm), (i1i2 i3…in, j1j2…jm), (i1i2 i3…in, j1j2…jm),…, (i1i2…in, j1j2…jm) pertenecen al mismo clúster. Por lo tanto, según la condición supuesta de que los nodos en el mismo clúster forman un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Para los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), dado que tienen los mismos códigos de nodo de hipercubo de salida con el nodo B(i1i2…in,j1j2…jm), los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) y el nodo B pertenecen a un mismo hipercubo lógico. Obviamente, a partir de la condición supuesta de que toda la red de sensores forma un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Por lo tanto, es obvio que existe una clave de ruta entre los nodos A y B. Según el teorema 2, presentamos la descripción detallada del algoritmo de descubrimiento de clave de ruta de la siguiente manera: Paso 1: Calcular los nodos intermedios (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) desde el nodo fuente A(i1i2…in,j1j2…jm) hasta el nodo destino B (i1i2…in,j1j2…jm). Paso 2: En esos nodos de la serie A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), los nodos vecinos seleccionan su parte polinómica común para establecer una clave directa de forma pareja. A partir del teorema 2, es fácil saber que cualquier nodo fuente A puede calcular un camino clave P hacia el nodo de destino B de acuerdo con el algoritmo anterior, cuando no hay nodos comprometidos en la red de sensores. Una vez que se calcula la ruta clave P, el nodo A puede enviar mensajes a B a lo largo de la ruta P para establecer una clave de forma indirecta con el nodo B. La Figura 2 presenta un ejemplo de establecimiento de ruta clave. Figura 2. Ejemplo de establecimiento de ruta clave. Por ejemplo: En la Figura 2 anterior, el nodo A((012),(1234)) puede establecer una clave de forma pareja con el nodo B((121),(2334)) a través de la siguiente ruta de clave: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), donde el nodo F deberá enrutar a través de los nodos G, H, I, J para establecer una clave de forma pareja directa con el nodo B. Según las propiedades del modelo H(k,u,m,v,n), podemos demostrar el siguiente teorema combinando la prueba del teorema 2: Teorema 3: Suponiendo que no existen nodos comprometidos en la red de sensores, y la distancia entre el nodo A y B, entonces existe una ruta de clave más corta con una distancia k entre el nodo A y B lógicamente. Es decir, el nodo A puede establecer una clave de enlace indirecto con el nodo B a través de t-1 nodos intermedios. Prueba: Suponiendo que la distancia entre el nodo A(i1i2…in, j1j2…jm) y B(i1i2…in, j1j2…jm) es d=d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Dado que d=t, de acuerdo con las propiedades de construcción de H(k,u,m,v,n), es fácil saber que existen t-1 nodos intermedios I1,…,It-1, en el espacio lógico H(k,u,m,v,n), que satisfacen que la distancia entre cualquier par de nodos vecinos en la serie de nodos A, I1,…,It-1, B es igual a 1. Según el teorema 1, podemos saber que los nodos A, I1,…,It-1, B forman un camino de clave correcto entre el nodo A y B. Si dos nodos vecinos en la serie de nodos A, I1,…,It-1, B pueden comunicarse directamente, entonces el nodo A puede establecer una clave de par indirecta con el nodo B a través de esos t-1 nodos intermedios. 6.4 Descubrimiento de Clave de Ruta Dinámica El algoritmo de descubrimiento de clave de ruta propuesto en la sección anterior puede establecer una ruta de clave correctamente, solo cuando no existen nodos comprometidos en toda la red de sensores, ya que la ruta de clave se calcula de antemano. Y el algoritmo propuesto no puede encontrar una ruta de clave alternativa cuando existen nodos comprometidos o nodos intermedios que no están dentro del radio de comunicación, incluso si existen otras rutas de clave alternativas en la red de sensores. A partir del siguiente ejemplo, podemos saber que hay muchos caminos paralelos en el modelo H(k,u,m,v,n) para cualquier par de nodos de origen y destino dados, ya que el modelo H(k,u,m,v,n) es altamente tolerante a fallos[9,10]. Figura 3. Ejemplo de establecimiento de ruta clave alternativa. Por ejemplo: Considerando el ejemplo de establecimiento de ruta clave dado en la sección anterior basado en la Figura 2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), suponiendo que el nodo F((121),(2234)) ha sido comprometido, entonces a partir de la Figura 3, podemos saber que existe otra ruta clave alternativa como A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → M((121),(1334)) → B((121),(2334)), la cual puede ser utilizada para establecer la clave de forma indirecta entre los nodos A y B, donde el nodo E deberá pasar por los nodos D y K para establecer la clave de forma directa con el nodo M, y el nodo M deberá pasar por los nodos N, O, G, H, I, J para establecer la clave de forma directa con el nodo B. Dado que los sensores tienen limitaciones de energía, es fácil que se agoten o salgan del radio de comunicación, por lo tanto, el algoritmo propuesto en la sección anterior no puede garantizar establecer de manera eficiente la ruta de claves correcta. En esta sección, propondremos un algoritmo de descubrimiento de clave de ruta dinámica como sigue, el cual puede mejorar de manera efectiva la probabilidad de la ruta clave: Algoritmo I: Algoritmo de establecimiento de ruta clave dinámica basado en el modelo H(k,u,m,v,n) para redes de sensores desplegadas en clústeres. Red traducida: Red de sub-sensores H(k,u,m,v,n), que tiene algunos sensores comprometidos/fallidos y enlaces defectuosos. Y dos nodos alcanzables A(a1…an,a1…am) y B(b1…bn,b1…bm) en H(k,u,m,v,n), donde at ≠ bt, t∈[1,s], at=bt, t >s. Una ruta de clave correcta desde el nodo A hasta B en H(k,u,m,v,n). Paso 1: Obtener las cadenas de código de los nodos A y B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), donde aj, bj [0,∈ u-1], aj, bj [0,∈ v-1]. Paso 2: Si a1...am = b1...bm, entonces el nodo A puede encontrar una ruta hacia B de acuerdo con los algoritmos de enrutamiento del hipercubo [9-10]. Paso 3: De lo contrario, el nodo A puede encontrar una ruta hacia C(b1…bn, a1…am) según el Algoritmo I o el Algoritmo II. Entonces, sea I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), y cada nodo It en la serie de nodos anterior encuentra una ruta hacia su nodo vecino It+1 en base a la información de ubicación (Los algoritmos de enrutamiento detallados basados en información de ubicación se pueden ver en las referencias [11-14]). Paso 4: El algoritmo sale. Si existe un tipo de ruta de clave correcta, a través de qué nodo A puede establecer una clave de par indirecta con el nodo B. De lo contrario, el nodo A no logra establecer una clave de enlace indirecta con el nodo B. Y el nodo A intentará nuevamente establecer una clave de par indirecta con el nodo B en algún momento posterior. 7. ANÁLISIS DEL ALGORITMO 7.1 Análisis Práctico Según la descripción y análisis anteriores, es fácil saber que el algoritmo recién propuesto tiene las siguientes propiedades: Propiedad 3: Cuando no existen nodos defectuosos ni comprometidos, al utilizar un nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), donde N es el número total de nodos en la red de sensores, y N=um * vn. Prueba: Dado que las claves preasignadas por pares para cualquier nodo FA = { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } en el algoritmo recién propuesto. Obviamente, en el hipercubo lógico formado por los nodos en el mismo clúster del nodo A, hay n(v-1) nodos, de los cuales 58 tienen una clave directa de par a par con el nodo A. Y en el hipercubo lógico formado por los nodos en diferentes clústeres al de nodo A, hay m(u-1) nodos, que tienen una clave directa en pares con el nodo A. Por lo tanto, hay un total de m(u-1)+n(v-1) nodos que tienen una clave directa de par a par con el nodo A. Por lo tanto, la probabilidad de establecimiento de clave entre pares de nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), dado que toda la red de sensores tiene en total N nodos sensores. La Figura 4 presenta la comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Número de Dimensión Probabilidad de Establecer Clave Directa N = 8000 N=10000 N=20000 N=30000 Figura 4 Comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). A partir de la Figura 4, es fácil saber que al utilizar el nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la escala de las redes de sensores, y además, la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la dimensión n, cuando la escala de la red de sensores está fija. Teorema 4: Suponiendo que el total de sensores es N en la red de sensores, entonces cuando u ≥ v2, la probabilidad de establecimiento directo de claves entre pares entre dos nodos, al utilizar el esquema de distribución de claves basado en el modelo de hipercubo H(v,p), es menor que cuando se utiliza el esquema de distribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que u ≥ v, podemos dejar u=vt, donde t ≥ 2. Dado que el número total de nodos en H(v,p) es vp = N, el número total de nodos en H(k,u,m,v,n) es um * vn = N. Sea p=x+n, entonces hay um * vn = vx * vn ⇒ um =vx ⇒ x=tm. A partir de la propiedad 3, es fácil saber que la probabilidad de establecimiento directo de clave entre cualquier par de nodos se puede estimar como P=(m(u-1)+n(v-1))/(N-1). Según la descripción en [7], es bien sabido que la probabilidad de establecimiento directo de claves entre cualquier par de nodos puede estimarse como P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1). A continuación, demostraremos que m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1). Construye una función como f(t) = vt -1- t(v-1), donde t ≥ 2. Cuando t=2, es obvio que hay f(t)= vt -2v+1=( v-1)2 ≥ 0 y f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0. Entonces, hay f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1). Por lo tanto, la conclusión del teorema se mantiene. En cuanto a la conclusión del teorema 4, damos un ejemplo para ilustrar. Suponiendo que el número total de nodos en la red de sensores es N=214, y H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), entonces la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) es P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), pero la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p) es P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1). Suponiendo que el número total de nodos en la red de sensores es N, la Figura 5 ilustra la comparación entre la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) y la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p), cuando u=4 y v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 escala de la red de sensores Probabilidad de Establecer Clave Directa Modelo basado en H(k,u,m,v,n) Modelo basado en H(v,p) Figura 5 Comparación entre la probabilidad de establecimiento directo de claves entre los modelos H(v,n) y H(k,u,m,v,n). A partir de la Figura 5, es fácil saber que el teorema 5 se cumple. Teorema 5: Suponiendo que el total de sensores es N en la red de sensores, entonces el esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) es solo un caso especial del esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n). Prueba: En cuanto al esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n), tomemos k=1 (u=1, m=0), lo que significa que la red de sensores total incluye solo un clúster. Entonces, obviamente, el modelo H(k,u,m,v,n) se degradará en el modelo H(v,n). Según los análisis anteriores en este documento y la definición del esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) en [7], es fácil saber que la conclusión del teorema se mantiene. 59 7.2 Análisis de Seguridad Al utilizar el algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n), los intrusos pueden lanzar dos tipos de ataques: 1) Los atacantes pueden apuntar a la clave por pares entre dos nodos de sensor particulares, con el fin de comprometer la clave por pares entre ellos o evitar que establezcan una clave por pares. 2) Los atacantes pueden atacar toda la red de sensores, con el fin de disminuir la probabilidad de establecimiento de claves por pares o aumentar el costo del establecimiento de claves por pares. Ataques contra un par de nodos sensores 1. Suponiendo que los intrusos quieren atacar dos nodos de sensor específicos u,v, donde u,v son nodos no comprometidos, pero los intrusos quieren comprometer la clave de par entre ellos. 1) Si u,v pueden establecer una clave de par directa, entonces la única forma de comprometer la clave es comprometer el polinomio bivariado común f(x,y) entre u,v. Dado que el grado del polinomio bivariado f(x,y) es t, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado f(x,y). 2) Si u,v pueden establecer una clave de par indirecta a través de nodos intermedios, entonces los intrusos necesitan comprometer al menos un nodo intermedio, o comprometer el polinomio bivariado común f(x,y) entre dos nodos intermedios vecinos. Pero incluso si los intrusos logran hacer eso, los nodos u y v aún pueden restablecer la clave de pares indirecta a través de nodos intermedios alternativos. 2. Suponiendo que los intrusos quieran atacar dos nodos de sensor específicos u, v, donde u, v son nodos no comprometidos, pero los intrusos quieren evitar que establezcan la clave de forma pareja. Entonces, los intrusos necesitan comprometer todos los polinomios bivariados de grado m+n del nodo u o v. Dado que el grado del polinomio bivariado f(x,y) es t, para el polinomio bivariado, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado dado. Por lo tanto, los intrusos necesitan comprometer en total (m+n)(t+1) nodos sensores para evitar que u,v establezcan la clave de forma pareja. Ataques contra la red de sensores. Suponiendo que los atacantes conocen la distribución de los polinomios sobre los nodos de sensores, pueden atacar sistemáticamente la red comprometiendo los polinomios en F uno por uno para comprometer toda la red. Suponga que la fracción de polinomios comprometidos es pc, entonces hay hasta N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) nodos sensores que tienen al menos una parte de polinomio comprometida. Entre todos los N nodos sensores restantes, ninguno incluye una parte polinómica comprometida. Por lo tanto, los nodos sensores restantes N- N pueden establecer una clave directa de forma pareja utilizando cualquiera de sus partes polinómicas. Sin embargo, las claves de emparejamiento indirecto en los nodos sensores restantes N-N pueden verse afectadas. Y es posible que necesiten restablecer una nueva clave de enlace indirecto entre ellos seleccionando nodos intermedios alternativos que no pertenezcan a los N nodos comprometidos. Suponiendo que la escala de la red de sensores es N=10000, la Figura 6 presenta la comparación entre la pc y el número de nodos de sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). En la Figura 6, es fácil saber que, cuando la escala de la red de sensores está fija, el número de nodos de sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 Fracción de Polinomios Bivariados Comprometidos Nodos de Sensor con al menos un Polinomio Comprometido Compartido H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figura 6 la comparación entre pc y el número de nodos de sensor con al menos un polinomio comprometido compartido en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). Teorema 6: Suponiendo que el total de sensores es N en la red de sensores, y la fracción de nodos comprometidos es pc, entonces cuando u>v, el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es mayor que el del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) es pc ××N (m+n), y se ha demostrado en [7] que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es pc ××N p. Sea p=x+n, entonces um * vn = vx * vn ⇒ um =vx. Dado que u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Suponiendo que la escala de la red de sensores es N=10000, la Figura 7 presenta la comparación entre pc y el número de nodos de sensor con al menos una parte polinómica comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). A partir de la Figura 7, es fácil saber que la conclusión del teorema 9 es correcta, y el número de nodos sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos, cuando la escala de la red de sensores está fija. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fracción de Polinomios Bivariados Comprometidos NodosSensorconalmenosunPolinomioComprometidoCompartido H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figura 7 la comparación entre pc y el número de nodos sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). 8. CONCLUSIÓN Se propone un nuevo modelo jerárquico de hipercubo llamado H(k,u,m,v,n), que puede ser utilizado para la predistribución de claves por pares en redes de sensores desplegadas en clústeres. Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de <br>cifrado</br> de Clave Polinómica y de Piscina de Claves. El nuevo algoritmo utiliza las buenas características de los códigos de nodo y la alta tolerancia a fallos del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7]. Por lo tanto, el algoritmo tradicional de predistribución de claves en pares basado en el modelo de hipercubo [7] es solo un caso especial del nuevo algoritmo propuesto en este artículo. Los análisis teóricos y experimentales muestran que el nuevo algoritmo propuesto es un eficiente algoritmo de establecimiento de claves por pares que es adecuado para las redes de sensores desplegadas en clústeres. AGRADECIMIENTOS Nuestro agradecimiento a ACM SIGCHI por permitirnos modificar las plantillas que habían desarrollado, y al fondo de ciencia natural de la provincia de Fujian de la República Popular de China bajo la subvención No. A0510024. 10. REFERENCIAS [1] L. Eschenauer y V. Gligor. Un esquema de gestión de claves para redes de sensores distribuidos. En Actas de la 9ª Conferencia ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington DC, EE. UU., 2002, 41-47. [2] H. Chan, A. Perrig y D. Song. Esquemas de predistribución de claves aleatorias para redes de sensores. En el Simposio de Seguridad y Privacidad de IEEE. IEEE Computer Society, California, EE. UU., 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro y M. Yung. Distribución de claves perfectamente segura para conferencias dinámicas. Notas de conferencia en Ciencias de la Computación. 1993, 740, 471-486. [4] D. Liu y P. Ning. Estableciendo claves de forma pareja en redes de sensores distribuidos. En Actas de la 10ª Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington, DC, EE. UU., 2003, 52-61. [5] W. Du, J. Deng, Y. Han y P. Varshney. Un esquema de pre-distribución de claves por pares para redes de sensores inalámbricos. En Actas de la Décima Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. Washington, DC, EE. UU., 2003, 4251. [6] R. Blom. Una clase óptima de sistemas de generación de claves simétricas. Avances en Criptología: Actas de EUROCRYPT 84. Notas de conferencia en Ciencias de la Computación. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establecimiento de claves de pares en redes de sensores distribuidos. Nombre de la revista ACM, 2004, 20, 1-35. [8] L. Fang, W. Du y N. Peng. Un esquema de descubrimiento de ubicación sin baliza para redes de sensores inalámbricos, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallas basado en matriz de camino de máxima seguridad para redes de interconexión de hipercubos. Revista de software. 2004, 15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallos basado en vector de ruta de máxima seguridad para redes de interconexión de hipercubos. Revista del Instituto de Comunicaciones de China. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Algoritmo de enrutamiento de conglomeración de datos jerárquicos basado en información de ubicación para redes de sensores. Revista China de electrónica. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik y H. Balakrishnan, Protocolos basados en negociación para la difusión de información en redes de sensores inalámbricos. Redes inalámbricas ACM. 2002, 8, 169-185. [13] Manjeshwar, A.; Agrawal, D.P. TEEN: un protocolo de enrutamiento para mejorar la eficiencia en redes de sensores inalámbricos. En Actas del 15º Simposio de Procesamiento Paralelo y Distribuido. IEEE Computer Society, San Francisco, EE. UU., 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin y S. Wicker. Modelado de enrutamiento centrado en datos en redes de sensores inalámbricos. En Actas de IEEE Infocom, 2002. 61 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "node code": {
            "translated_key": "códigos de nodo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their <br>node code</br>s. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of <br>node code</br>s and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their <br>node code</br>s. 3.",
                "The new algorithm uses the good characteristics of <br>node code</br>s and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need."
            ],
            "translated_annotated_samples": [
                "Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus <br>códigos de nodo</br>.",
                "El nuevo algoritmo utiliza las buenas características de los <br>códigos de nodo</br> y la alta tolerancia a fallos del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7]."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus <br>códigos de nodo</br>. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la red de sensores incluye N nodos y se despliega a través de k rondas diferentes. Luego podemos predistribuir claves para cada nodo sensor basándonos en el modelo H(k,u,m,v,n) de la siguiente manera: Paso 1: El servidor de configuración de claves genera aleatoriamente un conjunto de polinomios bivariados como el siguiente: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} con vn *m*um-1 +[N/vn ]*n*vn-1 diferentes polinomios bivariados de grado t sobre un campo finito Fq, y luego asigna un ID de polinomio único a cada polinomio bivariado en F. Paso 2: En cada ronda, el servidor de configuración de claves asigna un ID de nodo único: (i1i2…in,j1j2…jm) a cada nodo sensor de menor a mayor, donde 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1. Paso 3: el servidor de configuración de claves asigna un ID de clúster único: l a todos los nodos sensores desplegados en la misma ronda, donde 1 ≤ l ≤ k. Paso 4: el servidor de configuración de claves predistribuye polinomios bivariados m+n { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } y los IDs de polinomios correspondientes al nodo sensor desplegado en la ronda l y con ID (i1i2…in, j1j2…jm). 6.2 Descubrimiento directo de claves de pares Si el nodo A(i1i2…in,j1j2…jm) en la red de sensores desea establecer una clave de par con un nodo B (i1i2…in,j1j2…jm), entonces el nodo A puede establecer una clave de par con el nodo B a través de los siguientes métodos. En primer lugar, el nodo A calcula la distancia entre sí mismo y el nodo B: d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces el nodo A obtiene la clave directa de pares entre él mismo y el nodo B de acuerdo con el siguiente teorema 1: Teorema 1: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia 56 entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces existe una clave directa entre los nodos A y B. Prueba: Dado que d=1, entonces existe d1=1, d2=0, o d1=0, d2=1. 1) Si d1=1, d2=0: A partir de d2=0, los nodos A y B pertenecen al mismo clúster. Suponiendo que los nodos A y B pertenecen al mismo clúster l, entonces de d1=1 ⇒ Solo hay una posición diferente entre i1i2…in e i1i2…in. Déjalo=lo, cuando 1 ≤ t ≤ n-1, y en ≠ en ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in). Por lo tanto, existe una clave directa de pares f n iiil n >< −121 ,...,,, (in,in) entre los nodos A y B. 2) Si d1=0, d2=1: Desde d2=1 ⇒ Solo hay una posición diferente entre j1j2…jm y j1j2…jm. Que jt sea igual a jt, cuando 1 ≤ t ≤ m1, y jm no sea igual a jm. Dado que d1=0 ⇒ i1i2…in es igual a i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm). Entonces, existe una clave directa de pares de llaves f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) entre los nodos A y B. Según el teorema 1, presentamos la descripción detallada del algoritmo de descubrimiento de clave directa por pares de manera directa de la siguiente manera: Paso 1: Obtener los IDs de nodo y los IDs de clúster del nodo fuente A y del nodo destino B; Paso 2: Calcular la distancia entre los nodos A y B: d= d1+ d2; Paso 3: Si d1=1, d2=0, entonces seleccionar un polinomio común compartido de los nodos A y B de { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } para establecer una clave directa por pares; Paso 4: Si d1=0, d2=1, entonces seleccionar un polinomio común compartido de los nodos A y B de { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } para establecer una clave directa por pares; Paso 5: De lo contrario, no existe una clave directa por pares entre los nodos A y B. Y luego pasar al siguiente proceso clave de descubrimiento de ruta. 6.3 Descubrimiento de Clave de Ruta Si d>1, entonces el nodo A puede establecer una clave de ruta con el nodo B de acuerdo con el siguiente teorema 2: Teorema 2: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d>1, entonces existe una clave de ruta entre los nodos A y B. Prueba: Sea d1=a, d2=b, entonces podemos pensar que it ≠ it, cuando 1 ≤ t ≤ a; pero it=it, cuando t>a; y jt ≠ jt, cuando 1 ≤ t ≤ b; pero jt=jt, cuando t>b. Obviamente, los nodos A(i1i2…in, j1j2…jm), (i1i2 i3…in, j1j2…jm), (i1i2 i3…in, j1j2…jm),…, (i1i2…in, j1j2…jm) pertenecen al mismo clúster. Por lo tanto, según la condición supuesta de que los nodos en el mismo clúster forman un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Para los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), dado que tienen los mismos códigos de nodo de hipercubo de salida con el nodo B(i1i2…in,j1j2…jm), los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) y el nodo B pertenecen a un mismo hipercubo lógico. Obviamente, a partir de la condición supuesta de que toda la red de sensores forma un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Por lo tanto, es obvio que existe una clave de ruta entre los nodos A y B. Según el teorema 2, presentamos la descripción detallada del algoritmo de descubrimiento de clave de ruta de la siguiente manera: Paso 1: Calcular los nodos intermedios (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) desde el nodo fuente A(i1i2…in,j1j2…jm) hasta el nodo destino B (i1i2…in,j1j2…jm). Paso 2: En esos nodos de la serie A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), los nodos vecinos seleccionan su parte polinómica común para establecer una clave directa de forma pareja. A partir del teorema 2, es fácil saber que cualquier nodo fuente A puede calcular un camino clave P hacia el nodo de destino B de acuerdo con el algoritmo anterior, cuando no hay nodos comprometidos en la red de sensores. Una vez que se calcula la ruta clave P, el nodo A puede enviar mensajes a B a lo largo de la ruta P para establecer una clave de forma indirecta con el nodo B. La Figura 2 presenta un ejemplo de establecimiento de ruta clave. Figura 2. Ejemplo de establecimiento de ruta clave. Por ejemplo: En la Figura 2 anterior, el nodo A((012),(1234)) puede establecer una clave de forma pareja con el nodo B((121),(2334)) a través de la siguiente ruta de clave: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), donde el nodo F deberá enrutar a través de los nodos G, H, I, J para establecer una clave de forma pareja directa con el nodo B. Según las propiedades del modelo H(k,u,m,v,n), podemos demostrar el siguiente teorema combinando la prueba del teorema 2: Teorema 3: Suponiendo que no existen nodos comprometidos en la red de sensores, y la distancia entre el nodo A y B, entonces existe una ruta de clave más corta con una distancia k entre el nodo A y B lógicamente. Es decir, el nodo A puede establecer una clave de enlace indirecto con el nodo B a través de t-1 nodos intermedios. Prueba: Suponiendo que la distancia entre el nodo A(i1i2…in, j1j2…jm) y B(i1i2…in, j1j2…jm) es d=d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Dado que d=t, de acuerdo con las propiedades de construcción de H(k,u,m,v,n), es fácil saber que existen t-1 nodos intermedios I1,…,It-1, en el espacio lógico H(k,u,m,v,n), que satisfacen que la distancia entre cualquier par de nodos vecinos en la serie de nodos A, I1,…,It-1, B es igual a 1. Según el teorema 1, podemos saber que los nodos A, I1,…,It-1, B forman un camino de clave correcto entre el nodo A y B. Si dos nodos vecinos en la serie de nodos A, I1,…,It-1, B pueden comunicarse directamente, entonces el nodo A puede establecer una clave de par indirecta con el nodo B a través de esos t-1 nodos intermedios. 6.4 Descubrimiento de Clave de Ruta Dinámica El algoritmo de descubrimiento de clave de ruta propuesto en la sección anterior puede establecer una ruta de clave correctamente, solo cuando no existen nodos comprometidos en toda la red de sensores, ya que la ruta de clave se calcula de antemano. Y el algoritmo propuesto no puede encontrar una ruta de clave alternativa cuando existen nodos comprometidos o nodos intermedios que no están dentro del radio de comunicación, incluso si existen otras rutas de clave alternativas en la red de sensores. A partir del siguiente ejemplo, podemos saber que hay muchos caminos paralelos en el modelo H(k,u,m,v,n) para cualquier par de nodos de origen y destino dados, ya que el modelo H(k,u,m,v,n) es altamente tolerante a fallos[9,10]. Figura 3. Ejemplo de establecimiento de ruta clave alternativa. Por ejemplo: Considerando el ejemplo de establecimiento de ruta clave dado en la sección anterior basado en la Figura 2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), suponiendo que el nodo F((121),(2234)) ha sido comprometido, entonces a partir de la Figura 3, podemos saber que existe otra ruta clave alternativa como A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → M((121),(1334)) → B((121),(2334)), la cual puede ser utilizada para establecer la clave de forma indirecta entre los nodos A y B, donde el nodo E deberá pasar por los nodos D y K para establecer la clave de forma directa con el nodo M, y el nodo M deberá pasar por los nodos N, O, G, H, I, J para establecer la clave de forma directa con el nodo B. Dado que los sensores tienen limitaciones de energía, es fácil que se agoten o salgan del radio de comunicación, por lo tanto, el algoritmo propuesto en la sección anterior no puede garantizar establecer de manera eficiente la ruta de claves correcta. En esta sección, propondremos un algoritmo de descubrimiento de clave de ruta dinámica como sigue, el cual puede mejorar de manera efectiva la probabilidad de la ruta clave: Algoritmo I: Algoritmo de establecimiento de ruta clave dinámica basado en el modelo H(k,u,m,v,n) para redes de sensores desplegadas en clústeres. Red traducida: Red de sub-sensores H(k,u,m,v,n), que tiene algunos sensores comprometidos/fallidos y enlaces defectuosos. Y dos nodos alcanzables A(a1…an,a1…am) y B(b1…bn,b1…bm) en H(k,u,m,v,n), donde at ≠ bt, t∈[1,s], at=bt, t >s. Una ruta de clave correcta desde el nodo A hasta B en H(k,u,m,v,n). Paso 1: Obtener las cadenas de código de los nodos A y B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), donde aj, bj [0,∈ u-1], aj, bj [0,∈ v-1]. Paso 2: Si a1...am = b1...bm, entonces el nodo A puede encontrar una ruta hacia B de acuerdo con los algoritmos de enrutamiento del hipercubo [9-10]. Paso 3: De lo contrario, el nodo A puede encontrar una ruta hacia C(b1…bn, a1…am) según el Algoritmo I o el Algoritmo II. Entonces, sea I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), y cada nodo It en la serie de nodos anterior encuentra una ruta hacia su nodo vecino It+1 en base a la información de ubicación (Los algoritmos de enrutamiento detallados basados en información de ubicación se pueden ver en las referencias [11-14]). Paso 4: El algoritmo sale. Si existe un tipo de ruta de clave correcta, a través de qué nodo A puede establecer una clave de par indirecta con el nodo B. De lo contrario, el nodo A no logra establecer una clave de enlace indirecta con el nodo B. Y el nodo A intentará nuevamente establecer una clave de par indirecta con el nodo B en algún momento posterior. 7. ANÁLISIS DEL ALGORITMO 7.1 Análisis Práctico Según la descripción y análisis anteriores, es fácil saber que el algoritmo recién propuesto tiene las siguientes propiedades: Propiedad 3: Cuando no existen nodos defectuosos ni comprometidos, al utilizar un nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), donde N es el número total de nodos en la red de sensores, y N=um * vn. Prueba: Dado que las claves preasignadas por pares para cualquier nodo FA = { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } en el algoritmo recién propuesto. Obviamente, en el hipercubo lógico formado por los nodos en el mismo clúster del nodo A, hay n(v-1) nodos, de los cuales 58 tienen una clave directa de par a par con el nodo A. Y en el hipercubo lógico formado por los nodos en diferentes clústeres al de nodo A, hay m(u-1) nodos, que tienen una clave directa en pares con el nodo A. Por lo tanto, hay un total de m(u-1)+n(v-1) nodos que tienen una clave directa de par a par con el nodo A. Por lo tanto, la probabilidad de establecimiento de clave entre pares de nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), dado que toda la red de sensores tiene en total N nodos sensores. La Figura 4 presenta la comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Número de Dimensión Probabilidad de Establecer Clave Directa N = 8000 N=10000 N=20000 N=30000 Figura 4 Comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). A partir de la Figura 4, es fácil saber que al utilizar el nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la escala de las redes de sensores, y además, la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la dimensión n, cuando la escala de la red de sensores está fija. Teorema 4: Suponiendo que el total de sensores es N en la red de sensores, entonces cuando u ≥ v2, la probabilidad de establecimiento directo de claves entre pares entre dos nodos, al utilizar el esquema de distribución de claves basado en el modelo de hipercubo H(v,p), es menor que cuando se utiliza el esquema de distribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que u ≥ v, podemos dejar u=vt, donde t ≥ 2. Dado que el número total de nodos en H(v,p) es vp = N, el número total de nodos en H(k,u,m,v,n) es um * vn = N. Sea p=x+n, entonces hay um * vn = vx * vn ⇒ um =vx ⇒ x=tm. A partir de la propiedad 3, es fácil saber que la probabilidad de establecimiento directo de clave entre cualquier par de nodos se puede estimar como P=(m(u-1)+n(v-1))/(N-1). Según la descripción en [7], es bien sabido que la probabilidad de establecimiento directo de claves entre cualquier par de nodos puede estimarse como P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1). A continuación, demostraremos que m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1). Construye una función como f(t) = vt -1- t(v-1), donde t ≥ 2. Cuando t=2, es obvio que hay f(t)= vt -2v+1=( v-1)2 ≥ 0 y f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0. Entonces, hay f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1). Por lo tanto, la conclusión del teorema se mantiene. En cuanto a la conclusión del teorema 4, damos un ejemplo para ilustrar. Suponiendo que el número total de nodos en la red de sensores es N=214, y H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), entonces la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) es P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), pero la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p) es P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1). Suponiendo que el número total de nodos en la red de sensores es N, la Figura 5 ilustra la comparación entre la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) y la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p), cuando u=4 y v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 escala de la red de sensores Probabilidad de Establecer Clave Directa Modelo basado en H(k,u,m,v,n) Modelo basado en H(v,p) Figura 5 Comparación entre la probabilidad de establecimiento directo de claves entre los modelos H(v,n) y H(k,u,m,v,n). A partir de la Figura 5, es fácil saber que el teorema 5 se cumple. Teorema 5: Suponiendo que el total de sensores es N en la red de sensores, entonces el esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) es solo un caso especial del esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n). Prueba: En cuanto al esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n), tomemos k=1 (u=1, m=0), lo que significa que la red de sensores total incluye solo un clúster. Entonces, obviamente, el modelo H(k,u,m,v,n) se degradará en el modelo H(v,n). Según los análisis anteriores en este documento y la definición del esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) en [7], es fácil saber que la conclusión del teorema se mantiene. 59 7.2 Análisis de Seguridad Al utilizar el algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n), los intrusos pueden lanzar dos tipos de ataques: 1) Los atacantes pueden apuntar a la clave por pares entre dos nodos de sensor particulares, con el fin de comprometer la clave por pares entre ellos o evitar que establezcan una clave por pares. 2) Los atacantes pueden atacar toda la red de sensores, con el fin de disminuir la probabilidad de establecimiento de claves por pares o aumentar el costo del establecimiento de claves por pares. Ataques contra un par de nodos sensores 1. Suponiendo que los intrusos quieren atacar dos nodos de sensor específicos u,v, donde u,v son nodos no comprometidos, pero los intrusos quieren comprometer la clave de par entre ellos. 1) Si u,v pueden establecer una clave de par directa, entonces la única forma de comprometer la clave es comprometer el polinomio bivariado común f(x,y) entre u,v. Dado que el grado del polinomio bivariado f(x,y) es t, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado f(x,y). 2) Si u,v pueden establecer una clave de par indirecta a través de nodos intermedios, entonces los intrusos necesitan comprometer al menos un nodo intermedio, o comprometer el polinomio bivariado común f(x,y) entre dos nodos intermedios vecinos. Pero incluso si los intrusos logran hacer eso, los nodos u y v aún pueden restablecer la clave de pares indirecta a través de nodos intermedios alternativos. 2. Suponiendo que los intrusos quieran atacar dos nodos de sensor específicos u, v, donde u, v son nodos no comprometidos, pero los intrusos quieren evitar que establezcan la clave de forma pareja. Entonces, los intrusos necesitan comprometer todos los polinomios bivariados de grado m+n del nodo u o v. Dado que el grado del polinomio bivariado f(x,y) es t, para el polinomio bivariado, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado dado. Por lo tanto, los intrusos necesitan comprometer en total (m+n)(t+1) nodos sensores para evitar que u,v establezcan la clave de forma pareja. Ataques contra la red de sensores. Suponiendo que los atacantes conocen la distribución de los polinomios sobre los nodos de sensores, pueden atacar sistemáticamente la red comprometiendo los polinomios en F uno por uno para comprometer toda la red. Suponga que la fracción de polinomios comprometidos es pc, entonces hay hasta N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) nodos sensores que tienen al menos una parte de polinomio comprometida. Entre todos los N nodos sensores restantes, ninguno incluye una parte polinómica comprometida. Por lo tanto, los nodos sensores restantes N- N pueden establecer una clave directa de forma pareja utilizando cualquiera de sus partes polinómicas. Sin embargo, las claves de emparejamiento indirecto en los nodos sensores restantes N-N pueden verse afectadas. Y es posible que necesiten restablecer una nueva clave de enlace indirecto entre ellos seleccionando nodos intermedios alternativos que no pertenezcan a los N nodos comprometidos. Suponiendo que la escala de la red de sensores es N=10000, la Figura 6 presenta la comparación entre la pc y el número de nodos de sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). En la Figura 6, es fácil saber que, cuando la escala de la red de sensores está fija, el número de nodos de sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 Fracción de Polinomios Bivariados Comprometidos Nodos de Sensor con al menos un Polinomio Comprometido Compartido H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figura 6 la comparación entre pc y el número de nodos de sensor con al menos un polinomio comprometido compartido en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). Teorema 6: Suponiendo que el total de sensores es N en la red de sensores, y la fracción de nodos comprometidos es pc, entonces cuando u>v, el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es mayor que el del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) es pc ××N (m+n), y se ha demostrado en [7] que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es pc ××N p. Sea p=x+n, entonces um * vn = vx * vn ⇒ um =vx. Dado que u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Suponiendo que la escala de la red de sensores es N=10000, la Figura 7 presenta la comparación entre pc y el número de nodos de sensor con al menos una parte polinómica comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). A partir de la Figura 7, es fácil saber que la conclusión del teorema 9 es correcta, y el número de nodos sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos, cuando la escala de la red de sensores está fija. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fracción de Polinomios Bivariados Comprometidos NodosSensorconalmenosunPolinomioComprometidoCompartido H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figura 7 la comparación entre pc y el número de nodos sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). 8. CONCLUSIÓN Se propone un nuevo modelo jerárquico de hipercubo llamado H(k,u,m,v,n), que puede ser utilizado para la predistribución de claves por pares en redes de sensores desplegadas en clústeres. Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de Clave Polinómica y de Piscina de Claves. El nuevo algoritmo utiliza las buenas características de los <br>códigos de nodo</br> y la alta tolerancia a fallos del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7]. Por lo tanto, el algoritmo tradicional de predistribución de claves en pares basado en el modelo de hipercubo [7] es solo un caso especial del nuevo algoritmo propuesto en este artículo. Los análisis teóricos y experimentales muestran que el nuevo algoritmo propuesto es un eficiente algoritmo de establecimiento de claves por pares que es adecuado para las redes de sensores desplegadas en clústeres. AGRADECIMIENTOS Nuestro agradecimiento a ACM SIGCHI por permitirnos modificar las plantillas que habían desarrollado, y al fondo de ciencia natural de la provincia de Fujian de la República Popular de China bajo la subvención No. A0510024. 10. REFERENCIAS [1] L. Eschenauer y V. Gligor. Un esquema de gestión de claves para redes de sensores distribuidos. En Actas de la 9ª Conferencia ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington DC, EE. UU., 2002, 41-47. [2] H. Chan, A. Perrig y D. Song. Esquemas de predistribución de claves aleatorias para redes de sensores. En el Simposio de Seguridad y Privacidad de IEEE. IEEE Computer Society, California, EE. UU., 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro y M. Yung. Distribución de claves perfectamente segura para conferencias dinámicas. Notas de conferencia en Ciencias de la Computación. 1993, 740, 471-486. [4] D. Liu y P. Ning. Estableciendo claves de forma pareja en redes de sensores distribuidos. En Actas de la 10ª Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington, DC, EE. UU., 2003, 52-61. [5] W. Du, J. Deng, Y. Han y P. Varshney. Un esquema de pre-distribución de claves por pares para redes de sensores inalámbricos. En Actas de la Décima Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. Washington, DC, EE. UU., 2003, 4251. [6] R. Blom. Una clase óptima de sistemas de generación de claves simétricas. Avances en Criptología: Actas de EUROCRYPT 84. Notas de conferencia en Ciencias de la Computación. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establecimiento de claves de pares en redes de sensores distribuidos. Nombre de la revista ACM, 2004, 20, 1-35. [8] L. Fang, W. Du y N. Peng. Un esquema de descubrimiento de ubicación sin baliza para redes de sensores inalámbricos, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallas basado en matriz de camino de máxima seguridad para redes de interconexión de hipercubos. Revista de software. 2004, 15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallos basado en vector de ruta de máxima seguridad para redes de interconexión de hipercubos. Revista del Instituto de Comunicaciones de China. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Algoritmo de enrutamiento de conglomeración de datos jerárquicos basado en información de ubicación para redes de sensores. Revista China de electrónica. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik y H. Balakrishnan, Protocolos basados en negociación para la difusión de información en redes de sensores inalámbricos. Redes inalámbricas ACM. 2002, 8, 169-185. [13] Manjeshwar, A.; Agrawal, D.P. TEEN: un protocolo de enrutamiento para mejorar la eficiencia en redes de sensores inalámbricos. En Actas del 15º Simposio de Procesamiento Paralelo y Distribuido. IEEE Computer Society, San Francisco, EE. UU., 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin y S. Wicker. Modelado de enrutamiento centrado en datos en redes de sensores inalámbricos. En Actas de IEEE Infocom, 2002. 61 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "high fault-tolerance": {
            "translated_key": "alta tolerancia a fallos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of Pairwise Key Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of pairwise key establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for pairwise key predistribution and a new pairwise key establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed pairwise key establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish pairwise key, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, pairwise key establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional pairwise key establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform pairwise key establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for pairwise key establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two pairwise key pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a pairwise key with another node, and if not, what intermediate nodes it can contact to indirectly establish the pairwise key.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the pairwise key establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based pairwise key predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new pairwise key pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the pairwise key.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new pairwise key establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new pairwise key establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (Pairwise Key): For any two nodes A and B, if they have a common key E, then the key E is called a pairwise key between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a pairwise key between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one pairwise key between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED PAIRWISE KEY PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and pairwise key establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based pairwise key establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct pairwise key discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct Pairwise Key Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish pairwise key with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct pairwise key between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct pairwise key between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct pairwise key f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct pairwise key f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct pairwise key discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct pairwise key; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct pairwise key between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct pairwise key.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect pairwise key with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish pairwise key with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct pairwise key with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect pairwise key with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect pairwise key with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect pairwise key between node A and B, where node E shall route through nodes D and K to establish direct pairwise key with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect pairwise key with node B.",
                "Otherwise, node A fails to establish an indirect pairwise key with node B.",
                "And node A will tries again to establish an indirect pairwise key with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct pairwise key with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct pairwise key with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct pairwise key with node A.",
                "So, the probability of pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new pairwise key predistribution scheme based on H(k,u,m,v,n) model, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct pairwise key establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct pairwise key establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct pairwise key establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct pairwise key establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct pairwise key establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the pairwise key distribution scheme based on the hypercube model H(v,p), is only a special case of the pairwise key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the pairwise key distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the pairwise key distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the pairwise key establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the pairwise key between them. 1) If u,v can establish direct pairwise key, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect pairwise key through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect pairwise key through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the pairwise key.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the pairwise key.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct pairwise key by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect pairwise key between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for pairwise key predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative pairwise key predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and <br>high fault-tolerance</br> of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional pairwise key predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient pairwise key establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A pairwise key pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "The new algorithm uses the good characteristics of node codes and <br>high fault-tolerance</br> of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need."
            ],
            "translated_annotated_samples": [
                "El nuevo algoritmo utiliza las buenas características de los códigos de nodo y la <br>alta tolerancia a fallos</br> del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7]."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de claves por pares, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de claves por pares y un nuevo algoritmo de establecimiento de claves por pares, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una clave de forma pareja, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. Sin embargo, debido a las limitadas capacidades computacionales de los nodos sensores, la energía de la batería y la memoria disponible, no es factible que utilicen técnicas tradicionales de establecimiento de claves en pares como la criptografía de clave pública y el centro de distribución de claves (KDC). Recientemente se han desarrollado varios enfoques alternativos para realizar el establecimiento de claves por pares en redes de sensores con recursos limitados sin involucrar el uso de criptografía tradicional [14]. Eschenauer y Gligor propusieron un esquema básico de predistribución de claves probabilísticas para el establecimiento de claves por pares [1]. En el esquema, cada nodo sensor elige aleatoriamente un conjunto de claves de un grupo de claves antes de la implementación para que cualquier par de nodos sensores tenga una cierta probabilidad de compartir al menos una clave común. Chan et al. ampliaron aún más esta idea y presentaron dos esquemas clave de predistribución clave: un esquema de predistribución de clave q-compuesta y un esquema de claves aleatorias por pares. El esquema q-compuesto requiere que cualquier par de sensores comparta al menos q claves pre-distribuidas. El esquema aleatorio elige al azar un par de sensores y asigna a cada par una clave aleatoria única [2]. Inspirados por los estudios anteriores y el protocolo de pre-distribución de claves basado en polinomios [3], Liu et al. desarrollaron aún más la idea abordada en los trabajos previos y propusieron un marco general de pre-distribución de claves basado en grupos de polinomios [4]. La idea básica se puede considerar como la combinación de la pre-distribución de claves basada en polinomios y la idea de piscina de claves utilizada en [1] y [2]. Basándose en dicho marco, presentaron dos esquemas de pre-distribución de claves por pares: un esquema de asignación de subconjuntos aleatorios y un esquema basado en cuadrículas. Un pool polinómico se utiliza en esos esquemas, en lugar de utilizar un pool de claves en las técnicas anteriores. El esquema de asignación de subconjuntos aleatorios asigna a cada nodo sensor los secretos generados a partir de un subconjunto aleatorio de polinomios en el grupo de polinomios. El esquema basado en cuadrícula asocia polinomios con las filas y las columnas de una cuadrícula artificial, asigna a cada nodo sensor una coordenada única en la cuadrícula y le otorga al nodo los secretos generados a partir de los polinomios de la fila y la columna correspondientes. Basándose en esta cuadrícula, cada nodo sensor puede identificar si puede establecer directamente una clave de par con otro nodo, y si no, qué nodos intermedios puede contactar para establecer indirectamente la clave de par. Un enfoque similar a los esquemas descritos por Liu et al fue desarrollado de forma independiente por Du et al. [5]. En lugar del esquema de Blundos, su enfoque se basa en el esquema de Bloms [6]. En algunos casos, es esencialmente equivalente al de [4]. Todos esos esquemas anteriores mejoran la seguridad sobre el esquema básico de pre-distribución de claves probabilísticas. Sin embargo, el problema de establecimiento de claves por pares en redes de sensores todavía no está bien resuelto. Para los esquemas de predistribución de claves probabilísticas básicas y q-compuestas, a medida que aumenta el número de nodos comprometidos, la fracción de claves de pares afectadas aumenta rápidamente. Como resultado, un pequeño número de nodos comprometidos puede afectar a una gran fracción de claves de pares [3]. Aunque el esquema de claves aleatorias por pares no sufre del problema de seguridad mencionado anteriormente, incurre en una alta sobrecarga de memoria, que aumenta linealmente con el número de nodos en la red si se mantiene constante el nivel de seguridad [2][4]. Para el esquema de asignación de subconjuntos aleatorios, sufre de mayores sobrecargas de comunicación y computación. En 2004, Liu propuso un nuevo esquema de predistribución de claves en pares basado en hipercubos [7], que extiende el esquema basado en cuadrículas de una cuadrícula bidimensional a un hipercubo multidimensional. El análisis muestra que el esquema basado en hipercubos mantiene algunas propiedades atractivas del esquema basado en cuadrículas, incluida la garantía de establecer claves de forma pareja y la resistencia a compromisos de nodos. Además, cuando se requiere una seguridad perfecta contra la compromisión de nodos, el esquema basado en hipercubos puede admitir una red más grande agregando más dimensiones en lugar de aumentar la sobrecarga de almacenamiento en los nodos sensores. Aunque el esquema basado en hipercubos (consideramos que el esquema basado en cuadrículas es un caso especial del esquema basado en hipercubos) tiene muchas propiedades atractivas, requiere que cualquier par de nodos en las redes de sensores puedan comunicarse directamente entre sí. Esta fuerte suposición es poco práctica en la mayoría de las aplicaciones reales de las redes de sensores. En este artículo, presentamos un tipo de nuevo modelo de distribución basado en clústeres de redes de sensores, para el cual proponemos un nuevo esquema de pre-distribución de claves por pares. Las principales contribuciones de este artículo son las siguientes: Combinando el conocimiento de despliegue de redes de sensores y la pre-distribución de claves basada en polinomios, establecemos una topología basada en clúster que es práctica con el despliegue real de redes de sensores. Basándonos en la topología, proponemos un modelo jerárquico de hipercubo basado en la distribución de clústeres para establecer la clave de pares. La contribución clave es que nuestro esquema no requiere la suposición de que todos los nodos puedan comunicarse directamente entre sí, como lo hacen los esquemas anteriores, y aún así mantiene una alta probabilidad de establecimiento de clave, bajo sobrecarga de memoria y un buen rendimiento de seguridad. Desarrollamos un tipo de nuevo algoritmo de establecimiento de claves por pares con nuestro modelo jerárquico de hipercubo. La estructura de este documento está organizada de la siguiente manera: En la sección 3, se presenta un nuevo modelo de distribución de redes de sensores desplegadas en clústeres. En la sección 4, se propone un nuevo modelo de Hipercubo Jerárquico. En la sección 5, se discute la relación de mapeo entre los clústeres de la red de sensores desplegada y el modelo de Hipercubo Jerárquico. En la sección 6 y la sección 7, se diseñan nuevos algoritmos de establecimiento de claves por pares basados en el modelo de Hipercubo Jerárquico y se describen análisis detallados. Finalmente, la sección 8 presenta una conclusión. 2. Definición PRELIMINAR 1 (Predistribución de Claves): El procedimiento, que se utiliza para codificar los algoritmos correspondientes de cifrado y descifrado en los nodos sensores antes de su distribución, se llama Predistribución de Claves. Definición 2 (Clave de Pareja): Para cualquier par de nodos A y B, si tienen una clave común E, entonces la clave E se llama clave de pareja entre ellos. Definición 3 (Ruta Clave): Para cualquier par de nodos A0 y Ak, cuando no hay una clave de forma pareja entre ellos, si existe una ruta A0,A1,A2,……,Ak-1,Ak, y existe al menos una clave de forma pareja entre los nodos Ai y Aj para 0≤i≤k-1 y 1≤j≤k, entonces la ruta compuesta por A0,A1,A2,……,Ak-1,Ak se llama una Ruta Clave entre A0 y Ak. Definición 4 (Hipercubo n-dimensional): Un Hipercubo n-dimensional (o n-cubo) H(v,n) es una topología con las siguientes propiedades: (1) Está compuesto por n·vn-1 aristas, (2) Cada nodo puede ser codificado como una cadena con n posiciones, como b1b2…bn, donde 0≤b1,b2,…,bn≤v-1, (3) Dos nodos cualesquiera son llamados vecinos, lo que significa que hay una arista entre ellos si y solo si hay una posición diferente entre sus códigos de nodo. MODELO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADOS En algunas aplicaciones actuales de redes de sensores, los sensores pueden ser desplegados a través de aviones. Suponiendo que las rondas de despliegue de los sensores son k, y el radio de comunicación de cualquier sensor es r, entonces los sensores desplegados en la misma ronda pueden considerarse como pertenecientes a un mismo clúster. Asignamos un número de clúster único l (1 ≤ l ≤ k) para cada clúster. Suponiendo que los sensores formen un grafo conectado en cualquier grupo después de ser desplegados a través de aviones, y luego la Fig.1 presenta un modelo real de redes de sensores desplegadas en grupos. Figura 1. Un modelo real de redes de sensores desplegadas en grupos. A partir de la Figura 1, es fácil saber que, para un nodo dado A, existen muchos nodos en el mismo clúster de A, que pueden comunicarse directamente con A, ya que los nodos están desplegados densamente en un clúster. Pero existen muchos menos nodos en un clúster vecino al clúster de A, que pueden comunicarse directamente con A, ya que los dos clústeres no están desplegados al mismo tiempo. 4. Definición 5 del modelo de hipercubo jerárquico (HIERARCHICAL HYPERCUBE MODEL): Supongamos que hay N nodos en total, entonces un hipercubo jerárquico de k niveles llamado H(k,u,m,v,n) se puede construir de la siguiente manera: 1) Los N nodos se dividen en k grupos de manera uniforme, y los [N/k] nodos en cualquier grupo se conectan en un hipercubo de n dimensiones: En el hipercubo de n dimensiones, cualquier nodo se codifica como i1i2…in, que se llaman Códigos de Nodo de Hipercubo Dentro del Grupo, donde 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] es igual a un entero no menor que j. Así podemos obtener k tipos diferentes de hipercubos. 2) Los k hipercubos diferentes obtenidos anteriormente se codifican como j1j2…jm, que se llaman Códigos de Nodos de Hipercubo de Clúster Externo, donde 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ]. Y los nodos en los k diferentes hipercubos están conectados en hipercubos m-dimensionales de acuerdo con las siguientes reglas: Los nodos con los mismos códigos de nodos de hipercubo interno y diferentes códigos de nodos de hipercubo externo están conectados en un hipercubo m-dimensional. (El grafo construido a través de los pasos anteriores se llama un Hipercubo Jerárquico de k niveles abreviado como H(k,u,m,v,n).) 3) Cualquier nodo A en H(k,u,m,v,n) puede ser codificado como (i, j), donde i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) es el código de nodo de hipercubo interno de nodo A, y j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) es el código de nodo de hipercubo externo de nodo A. Obviamente, el modelo H(k,u,m,v,n) tiene las siguientes propiedades favorables: Propiedad 1: El diámetro del modelo H(k,u,m,v,n) es m+n. Prueba: Dado que el diámetro del hipercubo de n dimensiones es n, y el diámetro del hipercubo de m dimensiones es m, es fácil saber que el diámetro del modelo H(k,u,m,v,n) es m+n según la definición 5. Propiedad 2: La distancia entre dos nodos A(i1, j1) y B(i2, j2) en el modelo H(k,u,m,v,n) es d(A,B)= dh(i1, i2)+dh(j1, j2), donde dh representa la distancia de Hamming. Prueba: Dado que la distancia entre dos nodos en un hipercubo es igual a la distancia de Hamming entre ellos, es obvio que la conclusión del teorema 2 se deduce de la definición 5.5. MAPEO DE AGRUPACIONES DE REDES DE SENSORES DESPLEGADAS A H(K,U,M,V,N) Obviamente, a partir de la descripción en las secciones 3 y 4, podemos saber que las agrupaciones de redes de sensores desplegadas pueden ser mapeadas en un modelo de hipercubo jerárquico de k niveles de la siguiente manera: En primer lugar, las k agrupaciones en la red de sensores pueden ser mapeadas en k niveles (o hipercubos) diferentes en el modelo de hipercubo jerárquico de k niveles. Entonces, los nodos sensores en cada clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Dentro del Clúster, y los nodos sensores en los k diferentes clústeres con los mismos Códigos de Nodos de Hipercubo Dentro del Clúster pueden ser codificados con los Códigos de Nodos de Hipercubo Fuera del Clúster según la definición 5 respectivamente. En consecuencia, toda la red de sensores ha sido mapeada en un modelo de hipercubo jerárquico de k niveles. 6. Para superar las desventajas de los algoritmos de predistribución de claves basados en polinomios y en grupos de claves polinómicas, este artículo propuso un innovador esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) y un algoritmo de establecimiento de claves por pares, que combina las ventajas de los esquemas de cifrado basados en polinomios y en grupos de claves, y se basa en los modelos de predistribución de claves KDC y de grupos de claves basados en polinomios. El nuevo algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n) incluye tres pasos principales: (1) Generación del conjunto de polinomios y predistribución de claves, (2) Descubrimiento directo de claves por pares, (3) Descubrimiento de claves de ruta. 6.1 Generación del conjunto de polinomios y predistribución de claves Suponiendo que la red de sensores incluye N nodos y se despliega a través de k rondas diferentes. Luego podemos predistribuir claves para cada nodo sensor basándonos en el modelo H(k,u,m,v,n) de la siguiente manera: Paso 1: El servidor de configuración de claves genera aleatoriamente un conjunto de polinomios bivariados como el siguiente: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} con vn *m*um-1 +[N/vn ]*n*vn-1 diferentes polinomios bivariados de grado t sobre un campo finito Fq, y luego asigna un ID de polinomio único a cada polinomio bivariado en F. Paso 2: En cada ronda, el servidor de configuración de claves asigna un ID de nodo único: (i1i2…in,j1j2…jm) a cada nodo sensor de menor a mayor, donde 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1. Paso 3: el servidor de configuración de claves asigna un ID de clúster único: l a todos los nodos sensores desplegados en la misma ronda, donde 1 ≤ l ≤ k. Paso 4: el servidor de configuración de claves predistribuye polinomios bivariados m+n { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } y los IDs de polinomios correspondientes al nodo sensor desplegado en la ronda l y con ID (i1i2…in, j1j2…jm). 6.2 Descubrimiento directo de claves de pares Si el nodo A(i1i2…in,j1j2…jm) en la red de sensores desea establecer una clave de par con un nodo B (i1i2…in,j1j2…jm), entonces el nodo A puede establecer una clave de par con el nodo B a través de los siguientes métodos. En primer lugar, el nodo A calcula la distancia entre sí mismo y el nodo B: d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces el nodo A obtiene la clave directa de pares entre él mismo y el nodo B de acuerdo con el siguiente teorema 1: Teorema 1: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia 56 entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d=1, entonces existe una clave directa entre los nodos A y B. Prueba: Dado que d=1, entonces existe d1=1, d2=0, o d1=0, d2=1. 1) Si d1=1, d2=0: A partir de d2=0, los nodos A y B pertenecen al mismo clúster. Suponiendo que los nodos A y B pertenecen al mismo clúster l, entonces de d1=1 ⇒ Solo hay una posición diferente entre i1i2…in e i1i2…in. Déjalo=lo, cuando 1 ≤ t ≤ n-1, y en ≠ en ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in). Por lo tanto, existe una clave directa de pares f n iiil n >< −121 ,...,,, (in,in) entre los nodos A y B. 2) Si d1=0, d2=1: Desde d2=1 ⇒ Solo hay una posición diferente entre j1j2…jm y j1j2…jm. Que jt sea igual a jt, cuando 1 ≤ t ≤ m1, y jm no sea igual a jm. Dado que d1=0 ⇒ i1i2…in es igual a i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm). Entonces, existe una clave directa de pares de llaves f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) entre los nodos A y B. Según el teorema 1, presentamos la descripción detallada del algoritmo de descubrimiento de clave directa por pares de manera directa de la siguiente manera: Paso 1: Obtener los IDs de nodo y los IDs de clúster del nodo fuente A y del nodo destino B; Paso 2: Calcular la distancia entre los nodos A y B: d= d1+ d2; Paso 3: Si d1=1, d2=0, entonces seleccionar un polinomio común compartido de los nodos A y B de { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } para establecer una clave directa por pares; Paso 4: Si d1=0, d2=1, entonces seleccionar un polinomio común compartido de los nodos A y B de { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } para establecer una clave directa por pares; Paso 5: De lo contrario, no existe una clave directa por pares entre los nodos A y B. Y luego pasar al siguiente proceso clave de descubrimiento de ruta. 6.3 Descubrimiento de Clave de Ruta Si d>1, entonces el nodo A puede establecer una clave de ruta con el nodo B de acuerdo con el siguiente teorema 2: Teorema 2: Para cualquier par de nodos de sensor A(i1i2…in,j1j2…jm) y B(i1i2…in,j1j2…jm) en la red de sensores, suponiendo que la distancia entre los nodos A y B es d= d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Si d>1, entonces existe una clave de ruta entre los nodos A y B. Prueba: Sea d1=a, d2=b, entonces podemos pensar que it ≠ it, cuando 1 ≤ t ≤ a; pero it=it, cuando t>a; y jt ≠ jt, cuando 1 ≤ t ≤ b; pero jt=jt, cuando t>b. Obviamente, los nodos A(i1i2…in, j1j2…jm), (i1i2 i3…in, j1j2…jm), (i1i2 i3…in, j1j2…jm),…, (i1i2…in, j1j2…jm) pertenecen al mismo clúster. Por lo tanto, según la condición supuesta de que los nodos en el mismo clúster forman un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Para los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), dado que tienen los mismos códigos de nodo de hipercubo de salida con el nodo B(i1i2…in,j1j2…jm), los nodos (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) y el nodo B pertenecen a un mismo hipercubo lógico. Obviamente, a partir de la condición supuesta de que toda la red de sensores forma un grafo conectado, existe una ruta entre esos nodos. Además, en esos nodos, la distancia entre cualquier par de nodos vecinos es 1, por lo que, a partir del teorema 1, es fácil saber que existe una clave directa entre cualquier par de nodos vecinos entre esos nodos. Por lo tanto, es obvio que existe una clave de ruta entre los nodos A y B. Según el teorema 2, presentamos la descripción detallada del algoritmo de descubrimiento de clave de ruta de la siguiente manera: Paso 1: Calcular los nodos intermedios (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) desde el nodo fuente A(i1i2…in,j1j2…jm) hasta el nodo destino B (i1i2…in,j1j2…jm). Paso 2: En esos nodos de la serie A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) y (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), los nodos vecinos seleccionan su parte polinómica común para establecer una clave directa de forma pareja. A partir del teorema 2, es fácil saber que cualquier nodo fuente A puede calcular un camino clave P hacia el nodo de destino B de acuerdo con el algoritmo anterior, cuando no hay nodos comprometidos en la red de sensores. Una vez que se calcula la ruta clave P, el nodo A puede enviar mensajes a B a lo largo de la ruta P para establecer una clave de forma indirecta con el nodo B. La Figura 2 presenta un ejemplo de establecimiento de ruta clave. Figura 2. Ejemplo de establecimiento de ruta clave. Por ejemplo: En la Figura 2 anterior, el nodo A((012),(1234)) puede establecer una clave de forma pareja con el nodo B((121),(2334)) a través de la siguiente ruta de clave: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), donde el nodo F deberá enrutar a través de los nodos G, H, I, J para establecer una clave de forma pareja directa con el nodo B. Según las propiedades del modelo H(k,u,m,v,n), podemos demostrar el siguiente teorema combinando la prueba del teorema 2: Teorema 3: Suponiendo que no existen nodos comprometidos en la red de sensores, y la distancia entre el nodo A y B, entonces existe una ruta de clave más corta con una distancia k entre el nodo A y B lógicamente. Es decir, el nodo A puede establecer una clave de enlace indirecto con el nodo B a través de t-1 nodos intermedios. Prueba: Suponiendo que la distancia entre el nodo A(i1i2…in, j1j2…jm) y B(i1i2…in, j1j2…jm) es d=d1+ d2, donde d1=dh(i1i2…in, i1i2…in) y d2=dh(j1j2…jm, j1j2…jm). Dado que d=t, de acuerdo con las propiedades de construcción de H(k,u,m,v,n), es fácil saber que existen t-1 nodos intermedios I1,…,It-1, en el espacio lógico H(k,u,m,v,n), que satisfacen que la distancia entre cualquier par de nodos vecinos en la serie de nodos A, I1,…,It-1, B es igual a 1. Según el teorema 1, podemos saber que los nodos A, I1,…,It-1, B forman un camino de clave correcto entre el nodo A y B. Si dos nodos vecinos en la serie de nodos A, I1,…,It-1, B pueden comunicarse directamente, entonces el nodo A puede establecer una clave de par indirecta con el nodo B a través de esos t-1 nodos intermedios. 6.4 Descubrimiento de Clave de Ruta Dinámica El algoritmo de descubrimiento de clave de ruta propuesto en la sección anterior puede establecer una ruta de clave correctamente, solo cuando no existen nodos comprometidos en toda la red de sensores, ya que la ruta de clave se calcula de antemano. Y el algoritmo propuesto no puede encontrar una ruta de clave alternativa cuando existen nodos comprometidos o nodos intermedios que no están dentro del radio de comunicación, incluso si existen otras rutas de clave alternativas en la red de sensores. A partir del siguiente ejemplo, podemos saber que hay muchos caminos paralelos en el modelo H(k,u,m,v,n) para cualquier par de nodos de origen y destino dados, ya que el modelo H(k,u,m,v,n) es altamente tolerante a fallos[9,10]. Figura 3. Ejemplo de establecimiento de ruta clave alternativa. Por ejemplo: Considerando el ejemplo de establecimiento de ruta clave dado en la sección anterior basado en la Figura 2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), suponiendo que el nodo F((121),(2234)) ha sido comprometido, entonces a partir de la Figura 3, podemos saber que existe otra ruta clave alternativa como A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → M((121),(1334)) → B((121),(2334)), la cual puede ser utilizada para establecer la clave de forma indirecta entre los nodos A y B, donde el nodo E deberá pasar por los nodos D y K para establecer la clave de forma directa con el nodo M, y el nodo M deberá pasar por los nodos N, O, G, H, I, J para establecer la clave de forma directa con el nodo B. Dado que los sensores tienen limitaciones de energía, es fácil que se agoten o salgan del radio de comunicación, por lo tanto, el algoritmo propuesto en la sección anterior no puede garantizar establecer de manera eficiente la ruta de claves correcta. En esta sección, propondremos un algoritmo de descubrimiento de clave de ruta dinámica como sigue, el cual puede mejorar de manera efectiva la probabilidad de la ruta clave: Algoritmo I: Algoritmo de establecimiento de ruta clave dinámica basado en el modelo H(k,u,m,v,n) para redes de sensores desplegadas en clústeres. Red traducida: Red de sub-sensores H(k,u,m,v,n), que tiene algunos sensores comprometidos/fallidos y enlaces defectuosos. Y dos nodos alcanzables A(a1…an,a1…am) y B(b1…bn,b1…bm) en H(k,u,m,v,n), donde at ≠ bt, t∈[1,s], at=bt, t >s. Una ruta de clave correcta desde el nodo A hasta B en H(k,u,m,v,n). Paso 1: Obtener las cadenas de código de los nodos A y B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), donde aj, bj [0,∈ u-1], aj, bj [0,∈ v-1]. Paso 2: Si a1...am = b1...bm, entonces el nodo A puede encontrar una ruta hacia B de acuerdo con los algoritmos de enrutamiento del hipercubo [9-10]. Paso 3: De lo contrario, el nodo A puede encontrar una ruta hacia C(b1…bn, a1…am) según el Algoritmo I o el Algoritmo II. Entonces, sea I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), y cada nodo It en la serie de nodos anterior encuentra una ruta hacia su nodo vecino It+1 en base a la información de ubicación (Los algoritmos de enrutamiento detallados basados en información de ubicación se pueden ver en las referencias [11-14]). Paso 4: El algoritmo sale. Si existe un tipo de ruta de clave correcta, a través de qué nodo A puede establecer una clave de par indirecta con el nodo B. De lo contrario, el nodo A no logra establecer una clave de enlace indirecta con el nodo B. Y el nodo A intentará nuevamente establecer una clave de par indirecta con el nodo B en algún momento posterior. 7. ANÁLISIS DEL ALGORITMO 7.1 Análisis Práctico Según la descripción y análisis anteriores, es fácil saber que el algoritmo recién propuesto tiene las siguientes propiedades: Propiedad 3: Cuando no existen nodos defectuosos ni comprometidos, al utilizar un nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), donde N es el número total de nodos en la red de sensores, y N=um * vn. Prueba: Dado que las claves preasignadas por pares para cualquier nodo FA = { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } en el algoritmo recién propuesto. Obviamente, en el hipercubo lógico formado por los nodos en el mismo clúster del nodo A, hay n(v-1) nodos, de los cuales 58 tienen una clave directa de par a par con el nodo A. Y en el hipercubo lógico formado por los nodos en diferentes clústeres al de nodo A, hay m(u-1) nodos, que tienen una clave directa en pares con el nodo A. Por lo tanto, hay un total de m(u-1)+n(v-1) nodos que tienen una clave directa de par a par con el nodo A. Por lo tanto, la probabilidad de establecimiento de clave entre pares de nodos puede estimarse como P=(m(u-1)+n(v-1))/(N-1), dado que toda la red de sensores tiene en total N nodos sensores. La Figura 4 presenta la comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Número de Dimensión Probabilidad de Establecer Clave Directa N = 8000 N=10000 N=20000 N=30000 Figura 4 Comparación entre la probabilidad de establecimiento directo de claves de pares entre cualquier par de nodos y la dimensión n, cuando la red de sensores tiene diferentes nodos totales, y utiliza el nuevo esquema de predistribución de claves de pares basado en el modelo H(8,2,3,v,n). A partir de la Figura 4, es fácil saber que al utilizar el nuevo esquema de predistribución de claves por pares basado en el modelo H(k,u,m,v,n), la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la escala de las redes de sensores, y además, la probabilidad de establecer claves por pares directamente entre dos nodos disminuye con el aumento de la dimensión n, cuando la escala de la red de sensores está fija. Teorema 4: Suponiendo que el total de sensores es N en la red de sensores, entonces cuando u ≥ v2, la probabilidad de establecimiento directo de claves entre pares entre dos nodos, al utilizar el esquema de distribución de claves basado en el modelo de hipercubo H(v,p), es menor que cuando se utiliza el esquema de distribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que u ≥ v, podemos dejar u=vt, donde t ≥ 2. Dado que el número total de nodos en H(v,p) es vp = N, el número total de nodos en H(k,u,m,v,n) es um * vn = N. Sea p=x+n, entonces hay um * vn = vx * vn ⇒ um =vx ⇒ x=tm. A partir de la propiedad 3, es fácil saber que la probabilidad de establecimiento directo de clave entre cualquier par de nodos se puede estimar como P=(m(u-1)+n(v-1))/(N-1). Según la descripción en [7], es bien sabido que la probabilidad de establecimiento directo de claves entre cualquier par de nodos puede estimarse como P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1). A continuación, demostraremos que m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1). Construye una función como f(t) = vt -1- t(v-1), donde t ≥ 2. Cuando t=2, es obvio que hay f(t)= vt -2v+1=( v-1)2 ≥ 0 y f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0. Entonces, hay f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1). Por lo tanto, la conclusión del teorema se mantiene. En cuanto a la conclusión del teorema 4, damos un ejemplo para ilustrar. Suponiendo que el número total de nodos en la red de sensores es N=214, y H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), entonces la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) es P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), pero la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p) es P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1). Suponiendo que el número total de nodos en la red de sensores es N, la Figura 5 ilustra la comparación entre la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(k,u,m,v,n) y la probabilidad de establecimiento directo de claves entre pares de nodos basada en el modelo H(v,p), cuando u=4 y v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 escala de la red de sensores Probabilidad de Establecer Clave Directa Modelo basado en H(k,u,m,v,n) Modelo basado en H(v,p) Figura 5 Comparación entre la probabilidad de establecimiento directo de claves entre los modelos H(v,n) y H(k,u,m,v,n). A partir de la Figura 5, es fácil saber que el teorema 5 se cumple. Teorema 5: Suponiendo que el total de sensores es N en la red de sensores, entonces el esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) es solo un caso especial del esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n). Prueba: En cuanto al esquema de distribución de claves por pares basado en el modelo H(k,u,m,v,n), tomemos k=1 (u=1, m=0), lo que significa que la red de sensores total incluye solo un clúster. Entonces, obviamente, el modelo H(k,u,m,v,n) se degradará en el modelo H(v,n). Según los análisis anteriores en este documento y la definición del esquema de distribución de claves por pares basado en el modelo de hipercubo H(v,p) en [7], es fácil saber que la conclusión del teorema se mantiene. 59 7.2 Análisis de Seguridad Al utilizar el algoritmo de establecimiento de claves por pares basado en el modelo H(k,u,m,v,n), los intrusos pueden lanzar dos tipos de ataques: 1) Los atacantes pueden apuntar a la clave por pares entre dos nodos de sensor particulares, con el fin de comprometer la clave por pares entre ellos o evitar que establezcan una clave por pares. 2) Los atacantes pueden atacar toda la red de sensores, con el fin de disminuir la probabilidad de establecimiento de claves por pares o aumentar el costo del establecimiento de claves por pares. Ataques contra un par de nodos sensores 1. Suponiendo que los intrusos quieren atacar dos nodos de sensor específicos u,v, donde u,v son nodos no comprometidos, pero los intrusos quieren comprometer la clave de par entre ellos. 1) Si u,v pueden establecer una clave de par directa, entonces la única forma de comprometer la clave es comprometer el polinomio bivariado común f(x,y) entre u,v. Dado que el grado del polinomio bivariado f(x,y) es t, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado f(x,y). 2) Si u,v pueden establecer una clave de par indirecta a través de nodos intermedios, entonces los intrusos necesitan comprometer al menos un nodo intermedio, o comprometer el polinomio bivariado común f(x,y) entre dos nodos intermedios vecinos. Pero incluso si los intrusos logran hacer eso, los nodos u y v aún pueden restablecer la clave de pares indirecta a través de nodos intermedios alternativos. 2. Suponiendo que los intrusos quieran atacar dos nodos de sensor específicos u, v, donde u, v son nodos no comprometidos, pero los intrusos quieren evitar que establezcan la clave de forma pareja. Entonces, los intrusos necesitan comprometer todos los polinomios bivariados de grado m+n del nodo u o v. Dado que el grado del polinomio bivariado f(x,y) es t, para el polinomio bivariado, los intrusos necesitan comprometer al menos t+1 nodos sensores que tengan una parte del polinomio bivariado dado. Por lo tanto, los intrusos necesitan comprometer en total (m+n)(t+1) nodos sensores para evitar que u,v establezcan la clave de forma pareja. Ataques contra la red de sensores. Suponiendo que los atacantes conocen la distribución de los polinomios sobre los nodos de sensores, pueden atacar sistemáticamente la red comprometiendo los polinomios en F uno por uno para comprometer toda la red. Suponga que la fracción de polinomios comprometidos es pc, entonces hay hasta N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) nodos sensores que tienen al menos una parte de polinomio comprometida. Entre todos los N nodos sensores restantes, ninguno incluye una parte polinómica comprometida. Por lo tanto, los nodos sensores restantes N- N pueden establecer una clave directa de forma pareja utilizando cualquiera de sus partes polinómicas. Sin embargo, las claves de emparejamiento indirecto en los nodos sensores restantes N-N pueden verse afectadas. Y es posible que necesiten restablecer una nueva clave de enlace indirecto entre ellos seleccionando nodos intermedios alternativos que no pertenezcan a los N nodos comprometidos. Suponiendo que la escala de la red de sensores es N=10000, la Figura 6 presenta la comparación entre la pc y el número de nodos de sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). En la Figura 6, es fácil saber que, cuando la escala de la red de sensores está fija, el número de nodos de sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 Fracción de Polinomios Bivariados Comprometidos Nodos de Sensor con al menos un Polinomio Comprometido Compartido H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figura 6 la comparación entre pc y el número de nodos de sensor con al menos un polinomio comprometido compartido en redes de sensores basadas en diferentes modelos de distribución H(k,u,m,v,n). Teorema 6: Suponiendo que el total de sensores es N en la red de sensores, y la fracción de nodos comprometidos es pc, entonces cuando u>v, el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es mayor que el del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n). Prueba: Dado que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(k,u,m,v,n) es pc ××N (m+n), y se ha demostrado en [7] que el número de nodos afectados del esquema de predistribución de claves basado en el modelo H(v,p) es pc ××N p. Sea p=x+n, entonces um * vn = vx * vn ⇒ um =vx. Dado que u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Suponiendo que la escala de la red de sensores es N=10000, la Figura 7 presenta la comparación entre pc y el número de nodos de sensor con al menos una parte polinómica comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). A partir de la Figura 7, es fácil saber que la conclusión del teorema 9 es correcta, y el número de nodos sensor afectados en la red de sensores aumenta con el aumento del número de nodos comprometidos, cuando la escala de la red de sensores está fija. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fracción de Polinomios Bivariados Comprometidos NodosSensorconalmenosunPolinomioComprometidoCompartido H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figura 7 la comparación entre pc y el número de nodos sensor con al menos una parte de polinomio comprometida en redes de sensores basadas en los modelos de distribución H(9,3,2,2,n) y H(2,p). 8. CONCLUSIÓN Se propone un nuevo modelo jerárquico de hipercubo llamado H(k,u,m,v,n), que puede ser utilizado para la predistribución de claves por pares en redes de sensores desplegadas en clústeres. Y basándose en el modelo H(k,u,m,v,n), se diseñan respectivamente un innovador esquema de predistribución de claves por pares y un algoritmo, combinando las buenas propiedades de los esquemas de cifrado de Clave Polinómica y de Piscina de Claves. El nuevo algoritmo utiliza las buenas características de los códigos de nodo y la <br>alta tolerancia a fallos</br> del modelo H(k,u,m,v,n) para enrutar y pre-distribuir claves en pares, en el cual los nodos no necesitan ser capaces de comunicarse directamente entre sí como lo requieren los algoritmos propuestos por [7]. Por lo tanto, el algoritmo tradicional de predistribución de claves en pares basado en el modelo de hipercubo [7] es solo un caso especial del nuevo algoritmo propuesto en este artículo. Los análisis teóricos y experimentales muestran que el nuevo algoritmo propuesto es un eficiente algoritmo de establecimiento de claves por pares que es adecuado para las redes de sensores desplegadas en clústeres. AGRADECIMIENTOS Nuestro agradecimiento a ACM SIGCHI por permitirnos modificar las plantillas que habían desarrollado, y al fondo de ciencia natural de la provincia de Fujian de la República Popular de China bajo la subvención No. A0510024. 10. REFERENCIAS [1] L. Eschenauer y V. Gligor. Un esquema de gestión de claves para redes de sensores distribuidos. En Actas de la 9ª Conferencia ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington DC, EE. UU., 2002, 41-47. [2] H. Chan, A. Perrig y D. Song. Esquemas de predistribución de claves aleatorias para redes de sensores. En el Simposio de Seguridad y Privacidad de IEEE. IEEE Computer Society, California, EE. UU., 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro y M. Yung. Distribución de claves perfectamente segura para conferencias dinámicas. Notas de conferencia en Ciencias de la Computación. 1993, 740, 471-486. [4] D. Liu y P. Ning. Estableciendo claves de forma pareja en redes de sensores distribuidos. En Actas de la 10ª Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. ACM Press, Washington, DC, EE. UU., 2003, 52-61. [5] W. Du, J. Deng, Y. Han y P. Varshney. Un esquema de pre-distribución de claves por pares para redes de sensores inalámbricos. En Actas de la Décima Conferencia de ACM sobre Seguridad Informática y de Comunicaciones. Washington, DC, EE. UU., 2003, 4251. [6] R. Blom. Una clase óptima de sistemas de generación de claves simétricas. Avances en Criptología: Actas de EUROCRYPT 84. Notas de conferencia en Ciencias de la Computación. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establecimiento de claves de pares en redes de sensores distribuidos. Nombre de la revista ACM, 2004, 20, 1-35. [8] L. Fang, W. Du y N. Peng. Un esquema de descubrimiento de ubicación sin baliza para redes de sensores inalámbricos, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallas basado en matriz de camino de máxima seguridad para redes de interconexión de hipercubos. Revista de software. 2004, 15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Algoritmo de enrutamiento tolerante a fallos basado en vector de ruta de máxima seguridad para redes de interconexión de hipercubos. Revista del Instituto de Comunicaciones de China. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Algoritmo de enrutamiento de conglomeración de datos jerárquicos basado en información de ubicación para redes de sensores. Revista China de electrónica. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik y H. Balakrishnan, Protocolos basados en negociación para la difusión de información en redes de sensores inalámbricos. Redes inalámbricas ACM. 2002, 8, 169-185. [13] Manjeshwar, A.; Agrawal, D.P. TEEN: un protocolo de enrutamiento para mejorar la eficiencia en redes de sensores inalámbricos. En Actas del 15º Simposio de Procesamiento Paralelo y Distribuido. IEEE Computer Society, San Francisco, EE. UU., 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin y S. Wicker. Modelado de enrutamiento centrado en datos en redes de sensores inalámbricos. En Actas de IEEE Infocom, 2002. 61 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "pairwise key": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Researches on Scheme of <br>pairwise key</br> Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of <br>pairwise key</br> establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "A new kind of cluster deployed sensor networks distribution model is presented, and based on which, an innovative Hierarchical Hypercube model - H(k,u,m,v,n) and the mapping relationship between cluster deployed sensor networks and the H(k,u,m,v,n) are proposed.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for <br>pairwise key</br> predistribution and a new <br>pairwise key</br> establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed <br>pairwise key</br> establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish <br>pairwise key</br>, compared with previous related works.",
                "Categories and Subject Descriptors C.2.4 [Computer-Communication-Networks]: Distributed Systems-Distributed applications.",
                "General Terms: Security. 1.",
                "INTRODUCTION Security communication is an important requirement in many sensor network applications, so shared secret keys are used between communicating nodes to encrypt data.",
                "As one of the most fundamental security services, <br>pairwise key</br> establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques.",
                "However, due to the sensor nodes limited computational capabilities, battery energy, and available memory, it is not feasible for them to use traditional <br>pairwise key</br> establishment techniques such as public key cryptography and key distribution center (KDC).",
                "Several alternative approaches have been developed recently to perform <br>pairwise key</br> establishment on resource-constrained sensor networks without involving the use of traditional cryptography [14].",
                "Eschenauer and Gligor proposed a basic probabilistic key predistribution scheme for <br>pairwise key</br> establishment [1].",
                "In the scheme, each sensor node randomly picks a set of keys from a key pool before the deployment so that any two of the sensor nodes have a certain probability to share at least one common key.",
                "Chan et al. further extended this idea and presented two key predistribution schemes: a q-composite key pre-distribution scheme and a random pairwise keys scheme.",
                "The q-composite scheme requires any two sensors share at least q pre-distributed keys.",
                "The random scheme randomly picks pair of sensors and assigns each pair a unique random key [2].",
                "Inspired by the studies above and the polynomial-based key pre-distribution protocol [3], Liu et al. further developed the idea addressed in the previous works and proposed a general framework of polynomial pool-based key predistribution [4].",
                "The basic idea can be considered as the combination of the polynomial-based key pre-distribution and the key pool idea used in [1]] and [2].",
                "Based on such a framework, they presented two <br>pairwise key</br> pre-distribution schemes: a random subset assignment scheme and a grid-based scheme.",
                "A polynomial pool is used in those schemes, instead of using a key pool in the previous techniques.",
                "The random subset assignment scheme assigns each sensor node the secrets generated from a random subset of polynomials in the polynomial pool.",
                "The gridbased scheme associates polynomials with the rows and the columns of an artificial grid, assigns each sensor node to a unique coordinate in the grid, and gives the node the secrets generated from the corresponding row and column polynomials.",
                "Based on this grid, each sensor node can then identify whether it can directly establish a <br>pairwise key</br> with another node, and if not, what intermediate nodes it can contact to indirectly establish the <br>pairwise key</br>.",
                "A similar approach to those schemes described by Liu et al was independently developed by Du et a. [5].",
                "Rather than on Blundos scheme their approach is based on Bloms scheme [6].",
                "In some cases, it is essentially equivalent to the one in [4].",
                "All of those schemes above improve the security over the basic probabilistic key pre-distribution scheme.",
                "However, the <br>pairwise key</br> establishment problem in sensor networks is still not well solved.",
                "For the basic probabilistic and the q-composite key predistribution schemes, as the number of compromised nodes increases, the fraction of affected pairwise keys increases quickly.",
                "As a result, a small number of compromised nodes may affect a large fraction of pairwise keys [3].",
                "Though the random pairwise keys scheme doses not suffer from the above security problem, it incurs a high memory overhead, which increases linearly with the number of nodes in the network if the level of security is kept constant [2][4].",
                "For the random subset assignment scheme, it suffers higher communication and computation overheads.",
                "In 2004, Liu proposed a new hypercube-based <br>pairwise key</br> predistribution scheme [7], which extends the grid-based scheme from a two dimensional grid to a multi-dimensional hypercube.",
                "The analysis shows that hypercube-based scheme keeps some attractive properties of the grid-based scheme, including the guarantee of establishing pairwise keys and the resilience to node compromises.",
                "Also, when perfect security against node compromise is required, the hypercube-based scheme can support a larger network by adding more dimensions instead of increasing the storage overhead on sensor nodes.",
                "Though hypercube-based scheme (we consider the grid-based scheme is a special case of hypercube-based scheme) has many attractive properties, it requires any two nodes in sensor networks can communication directly with each other.",
                "This strong assumption is impractical in most of the actual applications of the sensor networks.",
                "In this paper, we present a kind of new cluster-based distribution model of sensor networks, and for which, we propose a new <br>pairwise key</br> pre-distribution scheme.",
                "The main contributions of this paper are as follows: Combining the deployment knowledge of sensor networks and the polynomial pool-based key pre-distribution, we setup a clusterbased topology that is practical with the real deployment of sensor networks.",
                "Based on the topology, we propose a novel cluster distribution based hierarchical hypercube model to establish the <br>pairwise key</br>.",
                "The key contribution is that our scheme dose not require the assumption of all nodes can directly communicate with each other as the previous schemes do, and it still maintains high probability of key establishment, low memory overhead and good security performance.",
                "We develop a kind of new <br>pairwise key</br> establishment algorithm with our hierarchical hypercube model.",
                "The structure of this paper is arranged as follows: In section 3, a new distribution model of cluster deployed sensor networks is presented.",
                "In section 4, a new Hierarchical Hypercube model is proposed.",
                "In section 5, the mapping relationship between the clusters deployed sensor network and Hierarchical Hypercube model is discussed.",
                "In section 6 and section 7, new <br>pairwise key</br> establishment algorithm are designed based on the Hierarchical Hypercube model and detailed analyses are described.",
                "Finally, section 8 presents a conclusion. 2.",
                "PRELIMINARY Definition 1 (Key Predistribution): The procedure, which is used to encode the corresponding encryption and decryption algorithms in sensor nodes before distribution, is called Key Predistribution.",
                "Definition 2 (<br>pairwise key</br>): For any two nodes A and B, if they have a common key E, then the key E is called a <br>pairwise key</br> between them.",
                "Definition 3 (Key Path): For any two nodes A0 and Ak, when there has not a <br>pairwise key</br> between them, if there exists a path A0,A1,A2,……,Ak-1,Ak, and there exists at least one <br>pairwise key</br> between the nodes Ai and Aj for 0≤i≤k-1 and 1≤j≤k, then the path consisted of A0,A1,A2,……,Ak-1,Ak is called a Key Path between A0 and Ak.",
                "Definition 4 (n-dimensional Hypercube): An n-dimensional Hypercube (or n−cube) H(v,n) is a topology with the following properties: (1) It is consisted of n·vn-1 edges, (2) Each node can be coded as a string with n positions such as b1b2…bn, where 0≤b1,b2,…,bn≤v-1, (3) Any two nodes are called neighbors, which means that there is an edge between them, iff there is just one position different between their node codes. 3.",
                "MODEL OF CLUSTERS DEPLOYED SENSOR NETWORKS In some actual applications of sensor networks, sensors can be deployed through airplanes.",
                "Supposing that the deployment rounds of sensors are k, and the communication radius of any sensors is r, then the sensors deployed in the same round can be regarded as belonging to a same Cluster.",
                "We assign a unique cluster number l (1 ≤ l ≤ k) for each cluster.",
                "Supposing that the sensors form a connected graph in any cluster after deployment through airplanes, and then the Fig.1 presents an actual model of clusters deployed sensor networks.",
                "Figure.1 An actual model of clusters deployed sensor networks.",
                "From Figure.1, it is easy to know that, for a given node A, there exist lots of nodes in the same cluster of A, which can be communicated directly with A, since the nodes are deployed densely in a cluster.",
                "But there exist much less nodes in a cluster neighboring to the cluster of A, which can be communicated directly with A. since the two clusters are not deployed at the same time. 4.",
                "HIERARCHICAL HYPERCUBE MODEL Definition 5 (k-levels Hierarchical Hypercube): Let there are N nodes totally, then a k-levels Hierarchical Hypercube named H(k,u,m,v,n) can be constructed as follows: 1) The N nodes are divided into k clusters averagely, and the [N/k] nodes in any cluster are connected into an n-dimensional Hypercube: In the n-dimensional Hypercube, any node is encoded 55 as i1i2…in, which are called In-Cluster-Hypercube-Node-Codes, where 0 ≤ i1,i2,…in ≤ v-1,v=[ n kN / ],[j] equals to an integer not less than j.",
                "So we can obtain k such kind of different hypercubes. 2) The k different hypercubes obtained above are encoded as j1j2…jm, which are called Out-Cluster-Hypercube-Node-Codes, where 0 ≤ j1,j2,…jm ≤ u-1,u=[ m k ].",
                "And the nodes in the k different hypercubes are connected into m-dimensional hypercubes according to the following rules: The nodes with same In-Cluster-Hypercube-Node-Codes and different Out-ClusterHypercube-Node-Codes are connected into an m-dimensional hypercube. (The graph constructed through above steps is called a k-levels Hierarchical Hypercube abbreviated as H(k,u,m,v,n).) 3) Any node A in H(k,u,m,v,n) can be encoded as (i, j), where i(i=i1i2…in, 0 ≤ i1,i2,…in ≤ v-1) is the In-Cluster-HypercubeNode-Code of node A, and j(j=j1j2…jm, 0 ≤ j1,j2,…jm ≤ u-1) is the Out-Cluster-Hypercube-Node-Code of node A.",
                "Obviously, the H(k,u,m,v,n) model has the following good properties: Property 1: The diameter of H(k,u,m,v,n) model is m+n.",
                "Proof: Since the diameter of n-dimensional hypercube is n, and the diameter of m-dimensional hypercube is m, so it is easy to know that the diameter of H(k,u,m,v,n) model is m+n from the definition 5.",
                "Property 2: The distance between any two nodes A(i1, j1) and B(i2, j2) in H(k,u,m,v,n) model is d(A,B)= dh(i1, i2)+dh(j1, j2), where dh represents the Hamming distance.",
                "Proof: Since the distance between any two nodes in hypercube equals to the Hamming distance between them, so it is obvious that the theorem 2s conclusion stands from definition 5. 5.",
                "MAPPING CLUSTERS DEPLOYED SENSOR NETWORKS TO H(K,U,M,V,N) Obviously, from the description in section 3 and 4, we can know that the clusters deployed sensor network can be mapped into a klevels- hierarchical hypercube model as follows: At first, the k clusters in the sensor network can be mapped into k different levels (or hypercubes) in the k-levels- hierarchical hypercube model.",
                "Then, the sensor nodes in each cluster can be encoded with the In-Cluster-Hypercube-Node-Codes, and the sensor nodes in the k different clusters with the same In-ClusterHypercube-Node-Codes can be encoded with the Out-ClusterHypercube-Node-Codes according to the definition 5 respectively.",
                "Consequently, the whole sensor network has been mapped into a k-levels- hierarchical hypercube model. 6.",
                "H(K,U,M,V,N) MODEL-BASED <br>pairwise key</br> PREDISTRIBUTION ALGORITHM FOR SENSOR NETWORKS In order to overcome the drawbacks of polynomial-based and polynomial pool-based key predistribution algorithms, this paper proposed an innovative H(k,u,m,v,n) model-based key predistribution scheme and <br>pairwise key</br> establishment algorithm, which combines the advantages of polynomial-based and key pool-based encryption schemes, and is based on the KDC and polynomials pool-based key predistribution models.",
                "The new H(k,u,m,v,n) model-based <br>pairwise key</br> establishment algorithm includes three main steps: (1) Generation of the polynomials pool and key predistribution, (2) Direct <br>pairwise key</br> discovery, (3) Path key discovery. 6.1 Generation of Polynomials Pool and Key Predistribution Supposing that, the sensor network includes N nodes, and is deployed through k different rounds.",
                "Then we can predistribute keys for each sensor node on the basis of the H(k,u,m,v,n) model as follows: Step 1: Key setup server randomly generates a bivariate polynomials pool such as the following: F={ f i iiil n >< −121 ,...,,, (x,y), f j jjjinii m >< −121 ,...,,,,...,2,1 (x,y) | 0 ≤ iii n 121 ... −≤≤≤ ≤ v-1, 1 ≤ i ≤ n, 1 ≤ l ≤ k; 0 ≤ jjj m 121 ... −≤≤≤ ≤ u-1 , 1 ≤ j ≤ m} with vn *m*um-1 +[N/vn ]*n*vn-1 different t-degree bivariate polynomials over a finite field Fq, and then assigns a unique polynomial ID to each bivariate polynomial in F. Step 2: In each round, key setup server assigns a unique node ID: (i1i2…in,j1j2…jm) to each sensor node from small to big, where 0 ≤ i1,i2,…in ≤ v-1, 0 ≤ j1,j2,…jm ≤ u-1.",
                "Step 3: key setup server assigns a unique cluster ID: l to all the sensor nodes deployed in the same round, where 1 ≤ l ≤ k. Step 4: key setup server predistributes m+n bivariate polynomials { f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< ( j1,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } and the corresponding polynomial IDs to the sensor node deployed in the lth round and with ID (i1i2…in, j1j2…jm). 6.2 Direct <br>pairwise key</br> Discovery If the node A(i1i2…in,j1j2…jm) in the sensor network wants to establish <br>pairwise key</br> with a node B (i1i2…in,j1j2…jm), then node A can establish pairwise key with the node B trough the following methods.",
                "Firstly, node A computes out the distance between itself and node B: d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then node A obtains the direct <br>pairwise key</br> between itself and node B according to the following theorem 1: Theorem 1: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the 56 distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d=1, then there exists a direct <br>pairwise key</br> between nodes A and B. Poof: Since d=1, then there is d1=1, d2=0, or d1=0, d2=1. 1) If d1=1, d2=0: From d2=0, there is nodes A, B belong to the same cluster.",
                "Supposing that nodes A, B belong to the same cluster l, then from d1=1 ⇒ There is only one position different between i1i2…in and i1i2…in.",
                "Let it=it, when 1 ≤ t ≤ n-1, and in ≠ in ⇒ f n iiil n >< −121 ,...,,, (in,in)= f n iiil n >′′′< −121 ,...,,, (in,in).",
                "So, there exists a direct <br>pairwise key</br> f n iiil n >< −121 ,...,,, (in,in) between nodes A and B. 2) If d1=0, d2=1: From d2=1 ⇒ There is only one position different between j1j2…jm and j1j2…jm.",
                "Let jt=jt, when 1 ≤ t ≤ m1, and jm ≠ jm.",
                "Since d1=0 ⇒ i1i2…in equals to i1i2…in ⇒ f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm)= f m jjji nii m >′′′′′′< −121 ,...,,,,...,2,1 (jm,jm).",
                "So, there exists a direct <br>pairwise key</br> f m jjjinii m >< −121 ,...,,,,...,2,1 (jm, jm) between nodes A and B.",
                "According to theorem 1, we present the detailed description of the direct <br>pairwise key</br> discovery algorithm as follows: Step 1: Obtain the node IDs and cluster IDs of the source node A and destination node B; Step 2: Compute out the distance between nodes A and B: d= d1+ d2; Step 3: If d1=1, d2=0, then select out a common polynomial share of nodes A and B from { f iiil n 1 ,...,,, 32 >< ,..., f n iiil n >< −121 ,...,,, } to establish direct <br>pairwise key</br>; Step 4: If d1=0, d2=1, then select out a common polynomial share of nodes A and B from { f jjinii m 1 ,...,,,...,2,1 2 >< ,..., f m jjjinii m >< −121 ,...,,,,...,2,1 } to establish direct pairwise key; Step 5: Otherwise, there exists no direct pairwise key between nodes A and B.",
                "And then turn to the following path key discovery process. 6.3 Path Key Discovery If d>1, then node A can establish path key with node B according to the following theorem 2: Theorem 2: For any two sensor nodes A(i1i2…in,j1j2…jm) and B (i1i2…in,j1j2…jm) in the sensor network, supposing that the distance between nodes A and B is d= d1+ d2, where d1=dh(i1i2…in, i1i2…in) and d2=dh(j1j2…jm, j1j2…jm).",
                "If d>1, then there exists a path key between nodes A and B.",
                "Proof: Let d1=a, d2=b, then we can think that it ≠ it, when 1 ≤ t ≤ a; but it=it, when t>a; and jt ≠ jt, when 1 ≤ t ≤ b; but jt=jt, when t>b.",
                "Obviously, nodes A(i1i2…in, j1j2…jm) ,(i1i2 i3…in, j1j2…jm),(i1i2 i3…in, j1j2…jm),…,(i1i2…in, j1j2…jm) belong to the same cluster.",
                "So, according to the supposing condition of The nodes in the same cluster form a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct <br>pairwise key</br> between any two neighboring nodes among those nodes.",
                "For nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1jm), since they have the same Out-Cluster-Hypercube-Node-Codes with the node B(i1i2…in,j1j2…jm), so nodes (i1i2…in,j1j2…jm), (i1i2…in,j1 j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in,j1j2…jm-1 jm) and node B belong to a same logical hypercube.",
                "Obviously, from the supposing condition of The whole sensor network forms a connected graph, there is a route among those nodes.",
                "In addition, in those nodes, the distance between any two neighboring nodes is 1, so from theorem 1, it is easy to know that there exists direct <br>pairwise key</br> between any two neighboring nodes among those nodes.",
                "So, it is obvious that there exists a path key between nodes A and B.",
                "According to theorem 2, we present the detailed description of the path key discovery algorithm as follows: Step 1: Compute out the intermediate nodes (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in, j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…,(i1i2…in,j1j2…jm-1 jm) from the source node A(i1i2…in,j1j2…jm) and the destination node B (i1i2…in,j1j2…jm).",
                "Step 2: In those nodes series A(i1i2…in,j1j2…jm), (i1i2 i3…in,j1j2…jm), (i1i2 i3…in,j1j2…jm),…,(i1i2…in,j1j2…jm) and (i1i2…in,j1j2 j3…jm), (i1i2…in,j1j2 j3…jm-1 jm),…, (i1i2…in, j1j2…jm-1 jm), B (i1i2…in,j1j2…jm), the neighboring nodes select their common polynomial share to establish direct <br>pairwise key</br>.",
                "From theorem 2, it is easy to know that any source node A can compute out a key path P to the destination node B according to the above algorithm, when there are no compromised nodes in the sensor network.",
                "Once the key path P is computed out, then node A can send messages to B along the path P to establish indirect <br>pairwise key</br> with node B. Fig.2 presents a example of key path establishment.",
                "Figure.2 Key path establishment example.",
                "For example: In the above Figure.2, node A((012),(1234)) can establish <br>pairwise key</br> with node B((121),(2334)) through the following key path: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), where node F shall route through nodes G, H, I, J to establish direct <br>pairwise key</br> with node B. 57 According to the properties of H(k,u,m,v,n) model, we can prove that the following theorem by combing the proof of theorem 2: Theorem 3: Supposing that there exist no compromised nodes in the sensor network, and the distance between node A and B, then there exists a shortest key path with k distance between node A and B logically.",
                "That is to say, node A can establish indirect <br>pairwise key</br> with node B through t-1 intermediate nodes.",
                "Proof: Supposing that the distance between node A(i1i2…in, j1j2…jm) and B (i1i2…in, j1j2…jm) is d=d1+ d2, where d1=dh(i1i2…in, i1i2…in), d2=dh(j1j2…jm, j1j2…jm).",
                "Since d=t, according to the construction properties of H(k,u,m,v,n), it is easy to know that there exist t-1 intermediate nodes I1,…,It-1, in the logical space H(k,u,m,v,n), which satisfy that the distance between any two neighboring nodes in the nodes series A, I1,…,It1, B equals to 1.",
                "So according to the theorem 1, we can know that nodes A, I1,…,It-1, B form a correct key path between node A and B.",
                "If any two neighboring nodes in the nodes series A, I1,…,It-1, B can communicate directly, then node A can establish indirect <br>pairwise key</br> with node B through those t-1 intermediate nodes. 6.4 Dynamic Path Key Discovery The path key discovery algorithm proposed in the above section can establish a key path correctly, only when there exist no compromised nodes in the whole sensor network, since the key path is computed out beforehand.",
                "And the proposed algorithm cannot find an alternative key path when there exist some compromised nodes or some intermediate nodes not in the communication radius, even that there exists other alternative key paths in the sensor network.",
                "From the following example we can know that there are many parallel paths in the H(k,u,m,v,n) model for any two given source and destination nodes, since the H(k,u,m,v,n) model is high fault-tolerant[9,10] .",
                "Figure.3 Alternative key path establishment example.",
                "For example: Considering the key path establishment example given in the above section based on Figure.2: A((012),(1234)) → C((112),(1234)) → D((122),(1234)) → E((121),(1234)) → F((121),(2234)) → B((121),(2334)), supposing that node F((121),(2234)) has compromised, then from Figure.3, we can know that there exists another alternative key path as A((012),(1234)) → C((112),(1234)) → D((122),(1234)) →E((121),(1234)) → M((121),(1334)) → B((121),(2334)), which can be used to establish the indirect <br>pairwise key</br> between node A and B, where node E shall route through nodes D and K to establish direct <br>pairwise key</br> with node M, and node M shall route through nodes N, O, G, H, I, J to establish direct pairwise key with node B.",
                "Since the sensors are source limited, so they are easy to die or out of the communication radius, therefore the algorithm proposed in the above section cannot guarantee to establish correct key path efficiently.",
                "In this section, we will propose a dynamic path key discovery algorithm as follows, which can improve the probability of key path effectively: Algorithm I: Dynamic key path establishment algorithm based on H(k,u,m,v,n) model for cluster deployed sensor networks.",
                "Input: Sub-sensor network H(k,u,m,v,n), which has some compromised /fault sensors and fault links, And two reachable nodes A(a1…an,a1…am) and B(b1…bn,b1…bm) in H(k,u,m,v,n), where at ≠ bt, t∈[1,s], at=bt, t >s.",
                "Output: A correct key path from node A to B in H(k,u,m,v,n).",
                "Step 1: Obtain the code strings of node A and B: A ← (a1…an,a1…am), B ← (b1…bn,b1…bm), where aj, bj [0,∈ u-1], aj, bj [0,∈ v-1].",
                "Step 2: If a1…am = b1…bm, then node A can find a route to B according to the routing algorithms of hypercube [9-10].",
                "Step 3: Otherwise, node A can find a route to C(b1…bn, a1…am) according to the Algorithm I or Algorithm II.",
                "Then let I0=C(b1…bn,a1…am), I1=(b1…bn,b1 a2…am),…, Is=B(b1…bn,b1 b2…bs as+1…am), and each node It in the above nodes series find a route to its neighboring node It+1 on the basis of the location information (Detailed routing algorithms based on location information can see the references[11-14]).",
                "Step 4: Algorithm exits.",
                "If such kind of a correct key path exists, then through which node A can establish an indirect <br>pairwise key</br> with node B.",
                "Otherwise, node A fails to establish an indirect <br>pairwise key</br> with node B.",
                "And node A will tries again to establish an indirect <br>pairwise key</br> with node B some time later. 7.",
                "ALGORITHM ANALYSES 7.1 Practical Analyses According to the former description and analyses, it is easy to know that the above newly proposed algorithm has the following properties: Property 3: When there exist no fault and compromised nodes, by using new <br>pairwise key</br> predistribution scheme based on H(k,u,m,v,n) model, the probability of direct <br>pairwise key</br> establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), where N is the total number of nodes in the sensor network, and N=um * vn .",
                "Proof: Since the predistributed pairwise keys for any node FA ={ f iiil n 1 ,...,,, 32 >< (i1,y),…, f n iiil n >< −121 ,...,,, (in,y); f jjinii m 1 ,...,,,...,2,1 2 >< (j1 ,y),…, f m jjinii m >< −11 ,...,,,...,2,1 ( jm,y) } in the newly proposed algorithm.",
                "Obviously, in the logical hypercube formed by the nodes in the same cluster of node A, there are n(v-1) nodes, which 58 have direct <br>pairwise key</br> with node A.",
                "And in the logical hypercube formed by the nodes in different clusters from that of node A, there are m(u-1) nodes, which have direct <br>pairwise key</br> with node A.",
                "Therefore, there are totally m(u-1)+n(v-1) nodes, which have direct <br>pairwise key</br> with node A.",
                "So, the probability of <br>pairwise key</br> establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1), since the whole sensor network has N sensor nodes in all.",
                "Figure.4 presents the comparision between the probability of direct <br>pairwise key</br> establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new <br>pairwise key</br> predistribution scheme based on H(8,2,3,v,n) model. 2 3 4 5 6 7 8 9 10 0 0.002 0.004 0.006 0.008 0.01 Number of Dimension ProbabilitytoEstablishDirectKey N = 8000 N=10000 N=20000 N=30000 Figure.4 Comparision between the probability of direct pairwise key establishment between any two nodes and the dimension n, when the sensor network has different total nodes, and use the new pairwise key predistribution scheme based on H(8,2,3,v,n) model.",
                "From Figure.4, it is easy to know that by using new <br>pairwise key</br> predistribution scheme based on H(k,u,m,v,n) model, the probability of direct <br>pairwise key</br> establishment between any two nodes decreases with the increasing of the scale of the sensor networks, and in addition, the probability of direct pairwise key establishment between any two nodes decreases with the increasing of the dimension n, when the scale of the sensor network is fixed.",
                "Theorem 4: Supposing that the total sensors is N in the sensor network, then when u ≥ v2 , the probability of direct <br>pairwise key</br> establishment between any two nodes, when using the key distribution scheme based on the hypercube model H(v,p), is smaller than that when using the key distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: Since u ≥ v, then we can let u=vt , where t ≥ 2.",
                "Since the total number of nodes in H(v,p) is vp =N, the total number of nodes in H(k,u,m,v,n) is um * vn =N.",
                "Let p=x+n, then there is um *vn = vx * vn ⇒ um =vx ⇒ x=tm.",
                "From the property 3, it is easy to know that the probability of direct <br>pairwise key</br> establishment between any two nodes can be estimated as P=(m(u-1)+n(v-1))/(N-1).",
                "According to the description in [7], it is well know that the probability of direct <br>pairwise key</br> establishment between any two nodes can be estimated as P= p(v-1)/(N-1)= (x(v-1)+n(v-1))/(N-1).",
                "Next, we will prove that m(u-1) ≥ x(v-1): m(u-1)= m(vt -1), x(v-1)= tm(v-1).",
                "Construct a function as f(t)= vt -1- t(v-1), where t ≥ 2.",
                "When t=2, it is obvious that there is f(t)= vt -2v+1=( v-1)2 ≥ 0 and f(t)=t vt-1 - v+1 ≥ 2v- v+1= v+1>0.",
                "So, there is f(t) ≥ 0 ⇒ vt -1 ≥ t(v-1) ⇒ m(vt -1) ≥ tm(v-1) ⇒ m(u1) ≥ x(v-1).",
                "Therefore, the conclusion of the theorem stands.",
                "As for the conclusion of theorem 4, we give an example to illustrate.",
                "Supposing that the total number of nodes in the sensor network is N=214 , and H(k,u,m,v,n)=H(16,4,2,2,10), H(v,p)= H(10,14), then the probability of direct <br>pairwise key</br> establishment between any two nodes based on the H(k,u,m,v,n) model is P= (m(u-1)+n(v1))/(N-1)= (2(4-1)+10(2-1))/(214 -1)=16/(214 -1), but the probability of direct <br>pairwise key</br> establishment between any two nodes based on the H(v,p) model is P= p(v-1)/(N-1)=14(2-1)/(214 -1)= 14/(214 1).",
                "Supposing that the total number of nodes in the sensor network is N, Figure.5 illustrates the comparison between the probability of direct <br>pairwise key</br> establishment between any two nodes based on the H(k,u,m,v,n) model and the probability of direct <br>pairwise key</br> establishment between any two nodes based on the H(v,p) model, when u=4 and v=2. 1 2 3 4 5 6 7 8 9 10 0 0.5 1 1.5 x 10 -3 scaleofthesensornetwork ProbabilitytoEstablishDirectKey H(k,u,m,v,n)model-based H(v,p)model-based Figure.5 Comparison between the probability of direct pairwise key establishment between H(v,n) and H(k,u,m,v,n) models.",
                "From Figure.5, it is easy to know that the theorem 5 stands.",
                "Theorem 5: Supposing that the total sensors is N in the sensor network, then the <br>pairwise key</br> distribution scheme based on the hypercube model H(v,p), is only a special case of the <br>pairwise key</br> distribution scheme based on the H(k,u,m,v,n) model.",
                "Proof: As for the <br>pairwise key</br> distribution scheme based on the H(k,u,m,v,n) model, let k=1 (u=1, m=0), which means that the total sensor network includes only one cluster.",
                "Then obviously, the H(k,u,m,v,n) model will degrade into the H(v,n) model.",
                "According to the former anayses in this paper and the definition of the <br>pairwise key</br> distribution scheme based on the hypercube model H(v,p) in [7], it is easy to know that the conclusion of the theorem stands. 59 7.2 Security Analyses By using the <br>pairwise key</br> establishment algorithm based on the H(k,u,m,v,n) model, the intruders can launch two kinds of attacks: 1) The attackers may target the pairwise key between two particular sensor node, in order to compromise the pairwise key between them, or prevent them to establish pairwise key. 2) The attackers may attack against the whole sensor network, inorder to decrease the probability of the pairwise key establishment, or increase the cost of the pairwise key establishment.",
                "Attacks against a Pair of sensor nodes 1.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to compromise the <br>pairwise key</br> between them. 1) If u,v can establish direct <br>pairwise key</br>, then the only way to compromise the key is to compromise the common bivariate polynomial f(x,y) between u,v.",
                "Since the degree of the bivariate polynomial f(x,y) is t, so the intruders need to compromise at least t+1 sensor nodes that have a share of the bivariate polynomial f(x,y). 2) If u,v can establish indirect <br>pairwise key</br> through intermediate nodes, then the intruders need to compromise at least one intermediate node, or compromise the common bivariate polynomial f(x,y) between two neighboring intermediate nodes.",
                "But even if the intruders succeed to do that, node u and v can still reestablish indirect <br>pairwise key</br> through alternative intermediate nodes. 2.",
                "Supposing that the intruders want to attack two particular sensor nodes u,v, where u,v are all not compromised nodes, but the intruders want to prevent them to establish the <br>pairwise key</br>.",
                "Then, the intruders need to compromise all of the m+n bivariate polynomials of node u or v. Since the degree of the bivariate polynomial f(x,y) is t, so for bivariate polynomial, the intruders need to compromise at least t+1 sensor nodes that have a share of the given bivariate polynomial.",
                "Therefore, the intruders need to compromise (m+n)(t+1) sensor nodes altogether to prevent u,v to establish the <br>pairwise key</br>.",
                "Attacks against the sensor network Supposing that the Attackers know the distribution of the polynomials over sensor nodes, it may systematically attack the network by compromising the polynomials in F one by one in order to compromise the entire network.",
                "Assume the fraction of the compromised polynomials is pc, then there are up to N=pc × { vn v N umv n n mn ××+×× ][ }= pc ××N (m+n) Sensor nodes that have at least one compromised polynomial share.",
                "Among all of the remaining N- N sensor nodes, none of them includes a compromised polynomial share.",
                "So, the remaining N- N sensor nodes can establish direct <br>pairwise key</br> by using any one of their polynomial shares.",
                "However, the indirect pairwise keys in the remaining N- N sensor nodes may be affected.",
                "And they may need to re-establish a new indirect <br>pairwise key</br> between them by select alternative intermediate nodes that do not belong to the N compromised nodes.",
                "Supposing that the scale of the sensor network is N=10000, Figure.6 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "From Figure.6, it is easy to know that, when the scale of the sensor network is fixed, the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes. 0 0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0 1000 2000 3000 4000 5000 6000 7000 8000 F rac tion of C om prom is ed B ivariate P oly nom ialsSensorNodeswithatleastoneCompromisedPolynomialShare H (1,0,0,100,2) H (2,2,1,71,2) H (4,2,2,50,2) H (8,2,3,36,2) Figure.6 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on different H(k,u,m,v,n) distribution models.",
                "Theorem 6: Supposing that the total sensors is N in the sensor network, and the fraction of compromised nodes is pc, then when u>v, the number of affected nodes of the H(v,p) model based key predistribution scheme, is bigger than that of the H(k,u,m,v,n) model based key predistribution scheme.",
                "Proof: Since the number of affected nodes of the H(k,u,m,v,n) model based key predistribution scheme is pc ××N (m+n), and it is proved in [7] that the number of affected nodes of the H(v,p) model based key predistribution scheme is pc ××N p. Let p=x+n, then there is um * vn = vx * vn ⇒ um =vx .",
                "Since u>v ⇒ x>m ⇒ pc ××N (m+n)< pc ××N (x+n)= pc ××N p. Supposing that the scale of the sensor network is N=10000, Figure.7 presents the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models.",
                "From Figure.7, it is easy to know that the conclusion of theorem 9 is correct, and the number of the affected sensor nodes in the sensor network increases with the increasing of the number of compromised nodes, when the scale of the sensor network is fixed. 60 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 0.1 0.11 0 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 Fraction of Compromised Bivariate Polynomials SensorNodeswithatleastoneCompromisedPolynomialShare H(9,3,2,34,2) H(16,4,2,25,2) H(225,15,2,7,2) H(1296,36,2,3,2) H(2,14) Figure.7 the comparison between pc and the number of sensor nodes with at least one compromised polynomial share in sensor networks based on H(9,3,2,2,n) and H(2,p) distribution models. 8.",
                "CONCLUSION A new hierarchical hypercube model named H(k,u,m,v,n) is proposed, which can be used for <br>pairwise key</br> predistribution for cluster deployed sensor networks.",
                "And Based on the H(k,u,m,v,n) model, an innovative <br>pairwise key</br> predistribution scheme and algorithm are designed respectively, by combing the good properties of the Polynomial Key and Key Pool encryption schemes.",
                "The new algorithm uses the good characteristics of node codes and high fault-tolerance of H(k,u,m,v,n) model to route and predistribute pairwise keys, in which nodes are not needed to be able to communicate with each other directly such as that the algorithms proposed by [7] shall need.",
                "So, the traditional <br>pairwise key</br> predistribution algorithm based on hypercube model [7] is only a special case of the new algorithm proposed in this paper.",
                "Theoretical and experimental analyses show that the newly proposed algorithm is an efficient <br>pairwise key</br> establishment algorithm that is suitable for the cluster deployed sensor networks. 9.",
                "ACKNOWLEDGMENTS Our thanks to ACM SIGCHI for allowing us to modify templates they had developed, and to nature science fund of Fujian province of PR.China under grant No.A0510024. 10.",
                "REFERENCES [1] L. Eschenauer and V. Gligor.",
                "A key-management scheme for distribute sensor networks.",
                "In Proceedings of the 9th ACM Conference on Computer and Communication Security.",
                "ACM Press, Washington DC, USA, 2002, 41-47. [2] H. Chan, A. Perrig, and D. Song.",
                "Random key predistribution schemes for sensor networks.",
                "In IEEE Symposium on Security and Privacy.",
                "IEEE Computer Society, California, USA, 2003, 197-213. [3] C. Blundo, A. D. Santis, A. Herzberg, S. Kutten, U. Vaccaro, and M. Yung.",
                "Perfectly-secure key distribution for dynamic conferences.",
                "Lecture Notes in Computer Science. 1993, 740, 471-486. [4] D. Liu and P. Ning.",
                "Establishing pairwise keys in distributed sensor networks.",
                "In Proceedings of the 10th ACM Conference on Computer and Communications Security.",
                "ACM Press, Washingtion, DC, USA, 2003, 52-61. [5] W. Du, J. Deng, Y. Han, and P. Varshney.",
                "A <br>pairwise key</br> pre-distribution scheme for wireless sensor networks.",
                "In Proceedings of the Tenth ACM Conference on Computer and Communications Security.",
                "Washingtion, DC, USA,2003, 4251. [6] R. Blom.",
                "An optimal class of symmetric key generation systems.",
                "Advances in Cryptology: Proceedings of EUROCRYPT 84.",
                "Lecture Notes in Computer Science. 1985, 209, :335-338. [7] Donggang Liu, Peng Ning, Rongfang Li, Establishing Pairwise Keys in Distributed Sensor Networks.",
                "ACM Journal Name, 2004, 20, 1-35. [8] L. Fang, W. Du, and N. Peng.",
                "A Beacon-Less Location Discovery Scheme for Wireless Sensor Networks, INFOCOM 2005. [9] Wang Lei, Lin Ya-ping, Maximum safety path matrix based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of software. 2004,15(7), 994-1004. [10] Wang Lei, Lin Ya-ping, Maximum safety path vector based fault-tolerant routing algorithm for hypercube interconnection network.",
                "Journal of China Institute of Communications. 2004, 16(4), 130-137. [11] Lin Ya-ping, Wang Lei, Location information based hierarchical data congregation routing algorithm for sensor networks.",
                "Chinese Journal of electronics. 2004, 32(11), 1801-1805. [12] W. Heinzelman, J. Kulik, and H. Balakrishnan, Negotiation Based Protocols for Disseminating Information in Wireless Sensor Networks.",
                "ACM Wireless Networks. 2002, 8, 169185. [13] Manjeshwar,A. ; Agrawal,D.P.",
                "TEEN: a routing protocol for enhanced efficiency in wireless sensor networks].",
                "In Proceedings of 15th Parallel and Distributed Processing Symposium].",
                "IEEE Computer Society, San Francisco, USA, 2001, 2009-2015. [14] B. Krishnamachari, D. Estrin, and S. Wicker.",
                "Modelling Data-Centric Routing in Wireless Sensor Networks.",
                "In Proceedings of IEEE Infocom, 2002. 61"
            ],
            "original_annotated_samples": [
                "Researches on Scheme of <br>pairwise key</br> Establishment for DistributedSensor Networks Wang Lei Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com Chen Zhi-ping Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn Jiang Xin-hua Fujian University Technology Fuzhou,Funjian, PR.China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn ABSTRACT Security schemes of <br>pairwise key</br> establishment, which enable sensors to communicate with each other securely, play a fundamental role in research on security issue in wireless sensor networks.",
                "By utilizing nice properties of H(k,u,m,v,n) model, a new general framework for <br>pairwise key</br> predistribution and a new <br>pairwise key</br> establishment algorithm are designed, which combines the idea of KDC(Key Distribution Center) and polynomial pool schemes.",
                "Furthermore, the working performance of the newly proposed <br>pairwise key</br> establishment algorithm is seriously inspected.",
                "Theoretic analysis and experimental figures show that the new algorithm has better performance and provides higher possibilities for sensor to establish <br>pairwise key</br>, compared with previous related works.",
                "As one of the most fundamental security services, <br>pairwise key</br> establishment enables the sensor nodes to communicate securely with each other using cryptographic techniques."
            ],
            "translated_annotated_samples": [
                "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de <br>claves por pares</br>, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos.",
                "Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de <br>claves por pares</br> y un nuevo algoritmo de establecimiento de <br>claves por pares</br>, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios.",
                "Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto.",
                "El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una <br>clave de forma pareja</br>, en comparación con trabajos relacionados anteriores.",
                "Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas."
            ],
            "translated_text": "Investigaciones sobre el Esquema de Establecimiento de Claves por Pares para Redes de Sensores Distribuidos. Wang Lei, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 wanglei_hn@hn165.com. Chen Zhi-ping, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 jt_zpchen@hnu.cn. Jiang Xin-hua, Universidad de Tecnología de Fujian, Fuzhou, Fujian, República Popular China (+)86-591-8755-9001, 350014 xhj@csu.edu.cn. RESUMEN Los esquemas de seguridad de establecimiento de <br>claves por pares</br>, que permiten a los sensores comunicarse entre sí de forma segura, desempeñan un papel fundamental en la investigación sobre problemas de seguridad en redes de sensores inalámbricos. Se presenta un nuevo tipo de modelo de distribución de redes de sensores desplegadas en clústeres, sobre el cual se propone un innovador modelo jerárquico de hipercubo - H(k,u,m,v,n) y la relación de mapeo entre las redes de sensores desplegadas en clústeres y el H(k,u,m,v,n). Al utilizar las buenas propiedades del modelo H(k,u,m,v,n), se diseñó un nuevo marco general para la predistribución de <br>claves por pares</br> y un nuevo algoritmo de establecimiento de <br>claves por pares</br>, que combina la idea de un Centro de Distribución de Claves (KDC) y esquemas de polinomios. Además, se inspecciona seriamente el rendimiento laboral del algoritmo de establecimiento de claves por pares recientemente propuesto. El análisis teórico y las cifras experimentales muestran que el nuevo algoritmo tiene un mejor rendimiento y ofrece mayores posibilidades para que el sensor establezca una <br>clave de forma pareja</br>, en comparación con trabajos relacionados anteriores. Categorías y Descriptores de Asignaturas C.2.4 [Computadoras-Comunicación-Redes]: Sistemas Distribuidos-Aplicaciones Distribuidas. Términos generales: Seguridad. 1. La comunicación segura es un requisito importante en muchas aplicaciones de redes de sensores, por lo que se utilizan claves secretas compartidas entre nodos comunicantes para cifrar los datos. Como uno de los servicios de seguridad más fundamentales, el establecimiento de claves por pares permite a los nodos sensores comunicarse de forma segura entre sí utilizando técnicas criptográficas. ",
            "candidates": [],
            "error": [
                [
                    "claves por pares",
                    "claves por pares",
                    "claves por pares",
                    "clave de forma pareja"
                ]
            ]
        }
    }
}