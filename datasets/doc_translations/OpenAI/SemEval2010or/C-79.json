{
    "id": "C-79",
    "original_text": "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks. The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead. With these primitives, the paper addresses various load balancing techniques. Preliminary simulation results are also presented. Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1. INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications. Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions. As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities. One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology. However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes. Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs. Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes. These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features. This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1. Positive/negative feedback. Query packets are used to explore a route to other peers holding resources of interest. Optionally, advertisement packets are sent out to advertise routes from other peers about available resources. When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2. Sporadic random walk. As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available. Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes. Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets. These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing. With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay. The remainder of this paper is organized as follows. Related work is described in the next section. Section 3 describes the resource discovery scheme. Section 4 describes the resource distribution scheme. The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6. Section 7 concludes the paper. 2. RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches. A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols. For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively. Proem [3] is a high-level mobile computing platform for P2P systems over MANETs. It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate. With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based. In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion. Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage. Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models. Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time. In this way, the number of control packets on the network is constrained, thus providing good scalability. Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs. Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server. Data items or resources are never pushed into other nodes proactively. Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique. If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values. Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data. Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3. RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets. We assume that each resource is associated with a unique ID1 . Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource. Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource. Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node. In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction. To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table. The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol. The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value. This table is initially empty, and is updated by a reply packet generated by a successful query. Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors. When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet. For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively. If no such entry exists in the pheromone table, δ(r,n) is set to zero. Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor. In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive. Based on these probabilities, a next hop is selected to forward the query packet to. When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node. The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively. If such an entry does not exist, a new entry is added into the table. Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path. Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology. In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism. To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query. To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs. These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets. In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources. Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well. Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time. In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload. As a result, load balancing can be achieved via positive and negative feedback. A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4. RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery. In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files. Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well. Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers. An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away. In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas. For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a). To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource. A resource replication packet of type R is deployed by a node that is providing the resource R itself. Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone. When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back. The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another. For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future. In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy. Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b). If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure. Hence network bandwidth is more efficiently utilized. The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead. Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources. This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c). The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier. The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another. Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated. The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5. REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete. Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both. The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue. We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas. To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource. Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted. The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move. To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol. In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas. In addition, version number is used to distinguish new from old replicas when invalidating any stale replica. Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding. Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas. Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a). Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file. As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b). In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh. Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh. Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down. However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again. This time, its query packet follows the pheromone toward node G, where the updated file can be obtained. Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node. Initially, the node that originally holds the data is the focal node. As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node. We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes. For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node. In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh. If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to. Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search. Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well. To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh. Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh. Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node. Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet. For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh. Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move. Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6. PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes. However, due to space limitation only the performance of the replica invalidation is reported. In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 . Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer. We use the random-waypoint mobility model with a pause time of 1 second. Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively. Table 1 lists other parameter settings used in the simulation. Initially, there is one resource server node in network. Two nodes are randomly picked up every 10 seconds as clients. Every β seconds, we check the number of nodes, N, which have gotten data. Then we randomly pickup Min(γ,N) nodes from them to initiate data update. Each experiment is run for 10 minutes. Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average. All figures shown present the results with a 70% confidence interval. Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq. Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq. Figures 4, 5, 6, and 7 show the overhead versus various parameter values. In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets. However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets. In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used. Figure 5 shows that the overhead almost remains the same under various densities. That is attributed to only flooding over the mesh instead of the whole network. The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much. Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates. Thats because one more node just means one more flood over the mesh during update process so that the impact is limited. Figure 7 shows that if updates happen more frequently, the overhead is higher. This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets. Figures 8, 9, 10, and 11 show the delay versus various parameter values. From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability. When these clients want to update data, they will spend time to first search the mesh. The faster the speed, the more time clients need to spend to search the mesh. Figure 9 shows that delay is negligibly affected by the density. Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases. Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases. The larger the maximum number of concurrent updates is, the more nodes are picked up to do update. Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay. Figure 11 shows how the delay varies with the update frequency. When updates happen more frequently, the delay will higher. Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay. The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7. CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology. However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage. Specifically, overlay routing relies on the network-layer routing protocols. In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand. On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage. Either way, constructing an overlay will potentially suffer from the scalability problem. The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs. In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8. REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies. OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006",
    "original_translation": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006.",
    "original_sentences": [
        "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
        "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
        "With these primitives, the paper addresses various load balancing techniques.",
        "Preliminary simulation results are also presented.",
        "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
        "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
        "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
        "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
        "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
        "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
        "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
        "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
        "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
        "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
        "Positive/negative feedback.",
        "Query packets are used to explore a route to other peers holding resources of interest.",
        "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
        "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
        "Sporadic random walk.",
        "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
        "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
        "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
        "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
        "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
        "The remainder of this paper is organized as follows.",
        "Related work is described in the next section.",
        "Section 3 describes the resource discovery scheme.",
        "Section 4 describes the resource distribution scheme.",
        "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
        "Section 7 concludes the paper. 2.",
        "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
        "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
        "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
        "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
        "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
        "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
        "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
        "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
        "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
        "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
        "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
        "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
        "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
        "Data items or resources are never pushed into other nodes proactively.",
        "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
        "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
        "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
        "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
        "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
        "We assume that each resource is associated with a unique ID1 .",
        "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
        "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
        "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
        "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
        "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
        "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
        "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
        "This table is initially empty, and is updated by a reply packet generated by a successful query.",
        "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
        "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
        "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
        "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
        "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
        "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
        "Based on these probabilities, a next hop is selected to forward the query packet to.",
        "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
        "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
        "If such an entry does not exist, a new entry is added into the table.",
        "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
        "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
        "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
        "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
        "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
        "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
        "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
        "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
        "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
        "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
        "As a result, load balancing can be achieved via positive and negative feedback.",
        "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
        "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
        "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
        "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
        "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
        "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
        "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
        "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
        "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
        "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
        "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
        "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
        "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
        "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
        "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
        "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
        "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
        "Hence network bandwidth is more efficiently utilized.",
        "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
        "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
        "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
        "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
        "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
        "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
        "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
        "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
        "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
        "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
        "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
        "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
        "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
        "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
        "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
        "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
        "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
        "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
        "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
        "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
        "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
        "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
        "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
        "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
        "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
        "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
        "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
        "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
        "Initially, the node that originally holds the data is the focal node.",
        "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
        "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
        "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
        "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
        "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
        "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
        "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
        "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
        "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
        "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
        "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
        "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
        "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
        "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
        "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
        "However, due to space limitation only the performance of the replica invalidation is reported.",
        "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
        "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
        "We use the random-waypoint mobility model with a pause time of 1 second.",
        "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
        "Table 1 lists other parameter settings used in the simulation.",
        "Initially, there is one resource server node in network.",
        "Two nodes are randomly picked up every 10 seconds as clients.",
        "Every β seconds, we check the number of nodes, N, which have gotten data.",
        "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
        "Each experiment is run for 10 minutes.",
        "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
        "All figures shown present the results with a 70% confidence interval.",
        "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
        "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
        "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
        "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
        "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
        "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
        "Figure 5 shows that the overhead almost remains the same under various densities.",
        "That is attributed to only flooding over the mesh instead of the whole network.",
        "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
        "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
        "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
        "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
        "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
        "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
        "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
        "When these clients want to update data, they will spend time to first search the mesh.",
        "The faster the speed, the more time clients need to spend to search the mesh.",
        "Figure 9 shows that delay is negligibly affected by the density.",
        "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
        "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
        "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
        "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
        "Figure 11 shows how the delay varies with the update frequency.",
        "When updates happen more frequently, the delay will higher.",
        "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
        "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
        "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
        "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
        "Specifically, overlay routing relies on the network-layer routing protocols.",
        "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
        "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
        "Either way, constructing an overlay will potentially suffer from the scalability problem.",
        "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
        "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
        "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
        "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
    ],
    "translated_text_sentences": [
        "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc.",
        "El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga.",
        "Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga.",
        "También se presentan los resultados preliminares de la simulación.",
        "Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1.",
        "Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos.",
        "Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre.",
        "Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables.",
        "Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real.",
        "Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo.",
        "De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala.",
        "Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología.",
        "Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables.",
        "Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1.",
        "Retroalimentación positiva/negativa.",
        "Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés.",
        "Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles.",
        "Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas.",
        "Caminata aleatoria esporádica.",
        "A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles.",
        "La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas.",
        "Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio.",
        "Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga.",
        "Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición.",
        "El resto de este documento está organizado de la siguiente manera.",
        "El trabajo relacionado se describe en la siguiente sección.",
        "La sección 3 describe el esquema de descubrimiento de recursos.",
        "La sección 4 describe el esquema de distribución de recursos.",
        "El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6.",
        "La sección 7 concluye el artículo. 2.",
        "TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada.",
        "Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes.",
        "Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente.",
        "Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs.",
        "Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar.",
        "Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones.",
        "Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto.",
        "Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio.",
        "Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción.",
        "Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo.",
        "De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad.",
        "A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs.",
        "Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor.",
        "Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva.",
        "Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo.",
        "Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores.",
        "Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos.",
        "Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3.",
        "DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad.",
        "Suponemos que cada recurso está asociado con un ID único.",
        "Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado.",
        "Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta.",
        "Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo.",
        "Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional.",
        "Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor.",
        "La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos.",
        "La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona.",
        "Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa.",
        "La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos.",
        "Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta.",
        "Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente.",
        "Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero.",
        "Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino.",
        "Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo.",
        "Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta.",
        "Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta.",
        "El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente.",
        "Si no existe tal entrada, se añade una nueva entrada a la tabla.",
        "Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo.",
        "Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real.",
        "En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria.",
        "Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva.",
        "Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles.",
        "Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta.",
        "En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares.",
        "De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad.",
        "Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo.",
        "Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva.",
        "Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa.",
        "Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4.",
        "DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso.",
        "En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos.",
        "Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también.",
        "Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos.",
        "Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato.",
        "Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas.",
        "Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a).",
        "Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso.",
        "Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo.",
        "A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles.",
        "Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar.",
        "La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro.",
        "Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro.",
        "En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia.",
        "Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b).",
        "Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura.",
        "Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente.",
        "La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación.",
        "Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos.",
        "Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c).",
        "El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente.",
        "El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí.",
        "Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente.",
        "El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación.",
        "INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas.",
        "La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas.",
        "La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema.",
        "Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas.",
        "Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso.",
        "Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas.",
        "La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven.",
        "Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente.",
        "En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas.",
        "Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta.",
        "Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red.",
        "La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas.",
        "Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a).",
        "Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo.",
        "Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b).",
        "En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación.",
        "Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación.",
        "En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta.",
        "Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente.",
        "Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado.",
        "Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal.",
        "Inicialmente, el nodo que originalmente contiene los datos es el nodo focal.",
        "A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal.",
        "También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos.",
        "Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal.",
        "Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación.",
        "Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse.",
        "Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda.",
        "Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación.",
        "Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla.",
        "A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla.",
        "Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos.",
        "El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta.",
        "Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla.",
        "Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven.",
        "Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6.",
        "EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos.",
        "Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas.",
        "En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2.",
        "Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC.",
        "Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo.",
        "Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente.",
        "La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación.",
        "Inicialmente, hay un nodo de servidor de recursos en la red.",
        "Dos nodos son seleccionados al azar cada 10 segundos como clientes.",
        "Cada β segundos, verificamos el número de nodos, N, que han recibido datos.",
        "Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos.",
        "Cada experimento se ejecuta durante 10 minutos.",
        "Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio.",
        "Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%.",
        "Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia.",
        "Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec.",
        "Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros.",
        "En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda.",
        "Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes.",
        "En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación.",
        "La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades.",
        "Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red.",
        "El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho.",
        "La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas.",
        "Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado.",
        "La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor.",
        "Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda.",
        "Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros.",
        "A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta.",
        "Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla.",
        "Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla.",
        "La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad.",
        "El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye.",
        "La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes.",
        "Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización.",
        "Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso.",
        "La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización.",
        "Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor.",
        "Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso.",
        "Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7.",
        "CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs.",
        "Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda.",
        "Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red.",
        "En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda.",
        "Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda.",
        "De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad.",
        "El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs.",
        "En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga.",
        "REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas.",
        "OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006."
    ],
    "error_count": 4,
    "keys": {
        "manet": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As <br>manet</br> applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole <br>manet</br> P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a <br>manet</br> P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying <br>manet</br> routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing <br>manet</br> routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a <br>manet</br> routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying <br>manet</br> routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any <br>manet</br> routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "As <br>manet</br> applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "Adopting this paradigm, the whole <br>manet</br> P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "With collaboration among these entities, a <br>manet</br> P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying <br>manet</br> routing protocols.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing <br>manet</br> routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion."
            ],
            "translated_annotated_samples": [
                "Dado que las aplicaciones de <br>MANET</br> requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables.",
                "Adoptando este paradigma, todo el <br>sistema MANET</br> P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio.",
                "Con la colaboración entre estas entidades, un sistema <br>MANET</br> P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición.",
                "Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento <br>MANET</br> subyacentes.",
                "Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento <br>MANET</br> existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de <br>MANET</br> requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el <br>sistema MANET</br> P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema <br>MANET</br> P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento <br>MANET</br> subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento <br>MANET</br> existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. ",
            "candidates": [],
            "error": [
                [
                    "MANET",
                    "sistema MANET",
                    "MANET",
                    "MANET",
                    "MANET"
                ]
            ]
        },
        "manet p2p system": {
            "translated_key": "sistema MANET P2P",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole <br>manet p2p system</br> operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a <br>manet p2p system</br> is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "Adopting this paradigm, the whole <br>manet p2p system</br> operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "With collaboration among these entities, a <br>manet p2p system</br> is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay."
            ],
            "translated_annotated_samples": [
                "Adoptando este paradigma, todo el <br>sistema MANET P2P</br> opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio.",
                "Con la colaboración entre estas entidades, un <br>sistema MANET P2P</br> es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el <br>sistema MANET P2P</br> opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un <br>sistema MANET P2P</br> es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "hybrid discovery scheme": {
            "translated_key": "esquema de descubrimiento híbrido",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the <br>hybrid discovery scheme</br> neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "Since the <br>hybrid discovery scheme</br> neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology."
            ],
            "translated_annotated_samples": [
                "Dado que el <br>esquema de descubrimiento híbrido</br> no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el <br>esquema de descubrimiento híbrido</br> no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "neighbor discovery protocol": {
            "translated_key": "protocolo de descubrimiento de vecinos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a <br>neighbor discovery protocol</br>.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "The neighbor table maintains a list of all current neighbors obtained via a <br>neighbor discovery protocol</br>."
            ],
            "translated_annotated_samples": [
                "La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un <br>protocolo de descubrimiento de vecinos</br>."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un <br>protocolo de descubrimiento de vecinos</br>. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "negative feedback": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/<br>negative feedback</br>.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit <br>negative feedback</br> for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and <br>negative feedback</br>.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/<br>negative feedback</br> and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "Positive/<br>negative feedback</br>.",
                "Each node also performs an implicit <br>negative feedback</br> for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "As a result, load balancing can be achieved via positive and <br>negative feedback</br>.",
                "The paper describes a design paradigm that uses the functional primitives of positive/<br>negative feedback</br> and sporadic random walk to design robust resource discovery and distribution schemes over MANETs."
            ],
            "translated_annotated_samples": [
                "Retroalimentación positiva/negativa.",
                "Cada nodo también realiza una <br>retroalimentación negativa</br> implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo.",
                "Como resultado, el equilibrio de carga puede lograrse a través de <br>retroalimentación positiva y negativa</br>.",
                "El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de <br>retroalimentación positiva/negativa</br> y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una <br>retroalimentación negativa</br> implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de <br>retroalimentación positiva y negativa</br>. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de <br>retroalimentación positiva/negativa</br> y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                [
                    "retroalimentación negativa",
                    "retroalimentación positiva y negativa",
                    "retroalimentación positiva/negativa"
                ]
            ]
        },
        "query packet": {
            "translated_key": "paquete de consulta",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a <br>query packet</br>, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a <br>query packet</br> searching for a resource, it makes a decision to which neighbor it should forward the <br>query packet</br> by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the <br>query packet</br> to.",
                "When a <br>query packet</br> encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a <br>query packet</br> which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a <br>query packet</br> for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a <br>query packet</br> for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its <br>query packet</br> follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a <br>query packet</br>.",
                "For instance, in Figure 3(f), node H does not reply to any <br>query packet</br> before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "Upon receiving such a <br>query packet</br>, a reply packet is generated by the node providing the requested resource.",
                "When node A receives a <br>query packet</br> searching for a resource, it makes a decision to which neighbor it should forward the <br>query packet</br> by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "Based on these probabilities, a next hop is selected to forward the <br>query packet</br> to.",
                "When a <br>query packet</br> encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "Unlike a <br>query packet</br> which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone."
            ],
            "translated_annotated_samples": [
                "Al recibir un <br>paquete de consulta</br> de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta.",
                "Cuando el nodo A recibe un <br>paquete de consulta</br> buscando un recurso, toma la decisión de a qué vecino debe reenviar el <br>paquete de consulta</br> calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta.",
                "Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el <br>paquete de consulta</br>.",
                "Cuando un <br>paquete de consulta</br> encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta.",
                "A diferencia de un <br>paquete de consulta</br> que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un <br>paquete de consulta</br> de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un <br>paquete de consulta</br> buscando un recurso, toma la decisión de a qué vecino debe reenviar el <br>paquete de consulta</br> calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el <br>paquete de consulta</br>. Cuando un <br>paquete de consulta</br> encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un <br>paquete de consulta</br> que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "replica invalidation": {
            "translated_key": "invalidación de réplicas",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The <br>replica invalidation</br> scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "<br>replica invalidation</br> Although replicas improve accessibility and balance load, <br>replica invalidation</br> becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the <br>replica invalidation</br> problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform <br>replica invalidation</br> without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and <br>replica invalidation</br> schemes.",
                "However, due to space limitation only the performance of the <br>replica invalidation</br> is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the <br>replica invalidation</br> scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "The <br>replica invalidation</br> scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "<br>replica invalidation</br> Although replicas improve accessibility and balance load, <br>replica invalidation</br> becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the <br>replica invalidation</br> problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform <br>replica invalidation</br> without incurring network-wide flooding.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and <br>replica invalidation</br> schemes."
            ],
            "translated_annotated_samples": [
                "El esquema de <br>invalidación de réplicas</br> se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6.",
                "INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la <br>invalidación de réplicas</br> se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas.",
                "La mayoría de las soluciones existentes al problema de <br>invalidación de réplicas</br> imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas.",
                "Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la <br>invalidación de réplicas</br> sin incurrir en inundaciones en toda la red.",
                "EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e <br>invalidación de réplicas</br> descritos."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de <br>invalidación de réplicas</br> se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la <br>invalidación de réplicas</br> se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de <br>invalidación de réplicas</br> imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la <br>invalidación de réplicas</br> sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e <br>invalidación de réplicas</br> descritos. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "validation mesh": {
            "translated_key": "malla de validación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called <br>validation mesh</br> or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the <br>validation mesh</br> to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the <br>validation mesh</br> keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the <br>validation mesh</br> without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of <br>validation mesh</br> which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of <br>validation mesh</br> There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a <br>validation mesh</br> is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the <br>validation mesh</br>.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the <br>validation mesh</br>.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the <br>validation mesh</br> is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new <br>validation mesh</br> is established over nodes G, B, D, E, and H. To maintain a <br>validation mesh</br> among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the <br>validation mesh</br> with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the <br>validation mesh</br>.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the <br>validation mesh</br> so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the <br>validation mesh</br> as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the <br>validation mesh</br>, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although <br>validation mesh</br> provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called <br>validation mesh</br> or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the <br>validation mesh</br> to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the <br>validation mesh</br> keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the <br>validation mesh</br> without relying on any underlying MANET routing protocol.",
                "Figure 3 depicts the idea of <br>validation mesh</br> which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas."
            ],
            "translated_annotated_samples": [
                "Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada <br>malla de validación</br> o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso.",
                "Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la <br>malla de validación</br> para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas.",
                "La estructura (topología) de la <br>malla de validación</br> sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven.",
                "Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la <br>malla de validación</br> sin depender de ningún protocolo de enrutamiento MANET subyacente.",
                "La Figura 3 representa la idea de una <br>malla de validación</br> que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada <br>malla de validación</br> o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la <br>malla de validación</br> para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la <br>malla de validación</br> sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la <br>malla de validación</br> sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una <br>malla de validación</br> que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "invalidation packet": {
            "translated_key": "paquete de invalidación",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an <br>invalidation packet</br> will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an <br>invalidation packet</br> over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "Once a node has updated its replica, an <br>invalidation packet</br> will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an <br>invalidation packet</br> over the validation mesh."
            ],
            "translated_annotated_samples": [
                "Una vez que un nodo ha actualizado su réplica, un <br>paquete de invalidación</br> solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas.",
                "Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un <br>paquete de invalidación</br> a través de la malla de validación."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un <br>paquete de invalidación</br> solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un <br>paquete de invalidación</br> a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "manet routing protocol": {
            "translated_key": "protocolo de enrutamiento MANET",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a <br>manet routing protocol</br> nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying <br>manet routing protocol</br>.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "Since the hybrid discovery scheme neither relies on a <br>manet routing protocol</br> nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying <br>manet routing protocol</br>."
            ],
            "translated_annotated_samples": [
                "Dado que el esquema de descubrimiento híbrido no se basa ni en un <br>protocolo de enrutamiento MANET</br> ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real.",
                "Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún <br>protocolo de enrutamiento MANET</br> subyacente."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un <br>protocolo de enrutamiento MANET</br> ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún <br>protocolo de enrutamiento MANET</br> subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "route discovery message": {
            "translated_key": "mensajes de descubrimiento de ruta",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded <br>route discovery message</br> since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded <br>route discovery message</br> since the routing path in each routing step must be discovered on demand."
            ],
            "translated_annotated_samples": [
                "En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de <br>mensajes de descubrimiento de ruta</br> inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de <br>mensajes de descubrimiento de ruta</br> inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "concurrent update": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of <br>concurrent update</br> (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of <br>concurrent update</br> nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of <br>concurrent update</br> (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of <br>concurrent update</br> nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average."
            ],
            "translated_annotated_samples": [
                "Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                []
            ]
        },
        "resource discovery": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to <br>resource discovery</br> and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing <br>resource discovery</br> and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust <br>resource discovery</br> and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as <br>resource discovery</br>, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the <br>resource discovery</br> scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where <br>resource discovery</br> is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support <br>resource discovery</br>. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "<br>resource discovery</br> We propose a cross-layer, hybrid <br>resource discovery</br> scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to <br>resource discovery</br>, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the <br>resource discovery</br> mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the <br>resource discovery</br> mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described <br>resource discovery</br>, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate <br>resource discovery</br> and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust <br>resource discovery</br> and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive <br>resource discovery</br>, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "A Cross-Layer Approach to <br>resource discovery</br> and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over mobile ad-hoc networks.",
                "One approach to designing <br>resource discovery</br> and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust <br>resource discovery</br> and distribution schemes over MANETs. 1.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as <br>resource discovery</br>, routing, and load balancing.",
                "Section 3 describes the <br>resource discovery</br> scheme."
            ],
            "translated_annotated_samples": [
                "Un enfoque de capa cruzada para el <br>descubrimiento y distribución de recursos</br> en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc.",
                "Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real.",
                "Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de <br>descubrimiento y distribución de recursos</br> sobre MANETs. 1.",
                "Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el <br>descubrimiento de recursos</br>, enrutamiento y equilibrio de carga.",
                "La sección 3 describe el esquema de <br>descubrimiento de recursos</br>."
            ],
            "translated_text": "Un enfoque de capa cruzada para el <br>descubrimiento y distribución de recursos</br> en redes móviles ad-hoc Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre redes móviles ad-hoc. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de <br>descubrimiento y distribución de recursos</br> sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el <br>descubrimiento de recursos</br>, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de <br>descubrimiento de recursos</br>. ",
            "candidates": [],
            "error": [
                [
                    "descubrimiento y distribución de recursos",
                    "descubrimiento y distribución de recursos",
                    "descubrimiento de recursos",
                    "descubrimiento de recursos"
                ]
            ]
        },
        "mobile ad-hoc network": {
            "translated_key": "redes móviles ad-hoc",
            "is_in_text": true,
            "original_annotated_sentences": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over <br>mobile ad-hoc network</br>s.",
                "The design is based on simple functional primitives that allow routing at both P2P and network layers to be integrated to reduce overhead.",
                "With these primitives, the paper addresses various load balancing techniques.",
                "Preliminary simulation results are also presented.",
                "Categories and Subject Descriptors C.2.4 [Distributed Systems]: Distributed Applications General Terms Algorithms and design 1.",
                "INTRODUCTION Mobile ad-hoc networks (MANETs) consist of mobile nodes that autonomously establish connectivity via multi-hop wireless communications.",
                "Without relying on any existing, pre-configured network infrastructure or centralized control, MANETs are useful in situations where impromptu communication facilities are required, such as battlefield communications and disaster relief missions.",
                "As MANET applications demand collaborative processing and information sharing among mobile nodes, resource (service) discovery and distribution have become indispensable capabilities.",
                "One approach to designing resource discovery and distribution schemes over MANETs is to construct a peer-to-peer (P2P) system (or an overlay) which organizes peers of the system into a logical structure, on top of the actual network topology.",
                "However, deploying such P2P systems over MANETs may result in either a large number of flooding operations triggered by the reactive routing process, or inefficiency in terms of bandwidth utilization in proactive routing schemes.",
                "Either way, constructing an overlay will potentially create a scalability problem for large-scale MANETs.",
                "Due to the dynamic nature of MANETs, P2P systems should be robust by being scalable and adaptive to topology changes.",
                "These systems should also provide efficient and effective ways for peers to interact, as well as other desirable application specific features.",
                "This paper describes a design paradigm that uses the following two functional primitives to design robust resource discovery and distribution schemes over MANETs. 1.",
                "Positive/negative feedback.",
                "Query packets are used to explore a route to other peers holding resources of interest.",
                "Optionally, advertisement packets are sent out to advertise routes from other peers about available resources.",
                "When traversing a route, these control packets measure goodness of the route and leave feedback information on each node along the way to guide subsequent control packets to appropriate directions. 2.",
                "Sporadic random walk.",
                "As the network topology and/or the availability of resources change, existing routes may become stale while better routes become available.",
                "Sporadic random walk allows a control packet to explore different paths and opportunistically discover new and/or better routes.",
                "Adopting this paradigm, the whole MANET P2P system operates as a collection of autonomous entities which consist of different types of control packets such as query and advertisement packets.",
                "These packets work collaboratively, but indirectly, to achieve common tasks, such as resource discovery, routing, and load balancing.",
                "With collaboration among these entities, a MANET P2P system is able to learn the network dynamics by itself and adjust its behavior accordingly, without the overhead of organizing peers into an overlay.",
                "The remainder of this paper is organized as follows.",
                "Related work is described in the next section.",
                "Section 3 describes the resource discovery scheme.",
                "Section 4 describes the resource distribution scheme.",
                "The replica invalidation scheme is described in Section 5, followed by it performance evaluation in Section 6.",
                "Section 7 concludes the paper. 2.",
                "RELATED WORK For MANETs, P2P systems can be classified based on the design principle, into layered and cross-layer approaches.",
                "A layered approach adopts a P2P-like [1] solution, where resource discovery is facilitated as an application layer protocol and query/reply messages are delivered by the underlying MANET routing protocols.",
                "For instance, Konark [2] makes use of a underlying multicast protocol such that service providers and queriers advertise and search services via a predefined multicast group, respectively.",
                "Proem [3] is a high-level mobile computing platform for P2P systems over MANETs.",
                "It defines a transport protocol that sits on top of the existing TCP/IP stack, hence relying on an existing routing protocol to operate.",
                "With limited control over how control and data packets are routed in the network, it is difficult to avoid the inefficiency of the general-purpose routing protocols which are often reactive and flooding-based.",
                "In contrast, cross-layer approaches either relies on its own routing mechanism or augments existing MANET routing algorithms to support resource discovery. 7DS [4], which is the pioneering work deploying P2P system on mobile devices, exploits data locality and node mobility to dissemination data in a single-hop fashion.",
                "Hence, long search latency may be resulted as a 7DS node can get data of interest only if the node that holds the data is in its radio coverage.",
                "Mohan et al. [5] propose an adaptive service discovery algorithm that combines both push and pull models.",
                "Specifically, a service provider/querier broadcasts advertisement/query only when the number of nodes advertising or querying, which is estimated by received control packets, is below a threshold during a period of time.",
                "In this way, the number of control packets on the network is constrained, thus providing good scalability.",
                "Despite the mechanism to reduce control packets, high overhead may still be unavoidable, especially when there are many clients trying to locate different services, due to the fact that the algorithm relies on flooding, For resource replication, Yin and Cao [6] design and evaluate cooperative caching techniques for MANETs.",
                "Caching, however, is performed reactively by intermediate nodes when a querier requests data from a server.",
                "Data items or resources are never pushed into other nodes proactively.",
                "Thanedar et al. [7] propose a lightweight content replication scheme using an expanding ring technique.",
                "If a server detects the number of requests exceed a threshold within a time period, it begins to replicate its data onto nodes capable of storing replicas, whose hop counts from the server are of certain values.",
                "Since data replication is triggered by the request frequency alone, it is possible that there are replicas unnecessarily created in a large scope even though only nodes within a small range request this data.",
                "Our proposed resource replication mechanism, in contrast, attempts to replicate a data item in appropriate areas, instead of a large area around the server, where the item is requested frequently. 3.",
                "RESOURCE DISCOVERY We propose a cross-layer, hybrid resource discovery scheme that relies on the multiple interactions of query, reply and advertisement packets.",
                "We assume that each resource is associated with a unique ID1 .",
                "Initially, when a node wants to discover a resource, it deploys query packets, which carry the corresponding resource ID, and randomly explore the network to search for the requested resource.",
                "Upon receiving such a query packet, a reply packet is generated by the node providing the requested resource.",
                "Advertisement packets can also be used to proactively inform other nodes about what resources are available at each node.",
                "In addition to discovering the identity of the node providing the requested resource, it may be also necessary to discover a route leading to this node for further interaction.",
                "To allow intermediate nodes to make a decision on where to forward query packets, each node maintains two tables: neighbor 1 The assumption of unique ID is made for brevity in exposition, and resources could be specified via attribute-value assertions. table and pheromone table.",
                "The neighbor table maintains a list of all current neighbors obtained via a neighbor discovery protocol.",
                "The pheromone table maintains the mapping of a resource ID and a neighbor ID to a pheromone value.",
                "This table is initially empty, and is updated by a reply packet generated by a successful query.",
                "Figure 1 illustrates an example of a neighbor table and a pheromone table maintained by node A having four neighbors.",
                "When node A receives a query packet searching for a resource, it makes a decision to which neighbor it should forward the query packet by computing the desirability of each of the neighbors that have not been visited before by the same query packet.",
                "For a resource ID r, the desirability of choosing a neighbor n, δ(r,n), is obtained from the pheromone value of the entry whose neighbor and resource ID fields are n and r, respectively.",
                "If no such entry exists in the pheromone table, δ(r,n) is set to zero.",
                "Once the desirabilities of all valid next hops have been calculated, they are normalized to obtain the probability of choosing each neighbor.",
                "In addition, a small probability is also assigned to those neighbors with zero desirability to exercise the sporadic random walk primitive.",
                "Based on these probabilities, a next hop is selected to forward the query packet to.",
                "When a query packet encounters a node with a satisfying resource, a reply packet is returned to the querying node.",
                "The returning reply packet also updates the pheromone table at each node on its return trip by increasing the pheromone value in the entry whose resource ID and neighbor ID fields match the ID of the discovered resource and the previous hop, respectively.",
                "If such an entry does not exist, a new entry is added into the table.",
                "Therefore, subsequent query packets looking for the same resource, when encountering this pheromone information, are then guided toward the same destination with a small probability of taking an alternate path.",
                "Since the hybrid discovery scheme neither relies on a MANET routing protocol nor arranges nodes into a logical overlay, query packets are to traverse the actual network topology.",
                "In dense networks, relatively large nodal degrees can have potential impacts on this random exploring mechanism.",
                "To address this issue, the hybrid scheme also incorporates proactive advertisement in addition to the reactive query.",
                "To perform proactive advertisement, each node periodically deploys an advertising packet containing a list of its available resources IDs.",
                "These packets will traverse away from the advertising node in a random walk manner up to a limited number of hops and advertise resource information to surrounding nodes in the same way as reply packets.",
                "In the hybrid scheme, an increase of pheromone serves as a positive feedback which indirectly guides query packets looking for similar resources.",
                "Intuitively, the amount of pheromone increased is inversely proportional to the distance the reply packet has traveled back, and other metrics, such as quality of the resource, could contribute to this amount as well.",
                "Each node also performs an implicit negative feedback for resources that have not been given a positive feedback for some time by regularly decreasing the pheromone in all of its pheromone table entries over time.",
                "In addition, pheromone can be reduced by an explicit negative response, for instance, a reply packet returning from a node that is not willing to provide a resource due to excessive workload.",
                "As a result, load balancing can be achieved via positive and negative feedback.",
                "A node serving too many nodes can either return fewer responses to query packets or generate negative responses. 2 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 Figure 1: Example illustrating neighbor and pheromone tables maintained by node A: (a) wireless connectivity around A showing that it currently has four neighbors, (b) As neighbor table, and (c) a possible pheromone table of A Figure 2: Sample scenarios illustrating the three mechanisms supporting load-balancing: (a) resource replication, (b) resource relocation, and (c) resource division 4.",
                "RESOURCE DISTRIBUTION In addition to resource discovery, a querying node usually attempts to access and retrieve the contents of a resource after a successful discovery.",
                "In certain situations, it is also beneficial to make a resource readily available at multiple nodes when the resource can be relocated and/or replicated, such as data files.",
                "Furthermore, in MANETs, we should consider not only the amount of load handled by a resource provider, but also the load on those intermediate nodes that are located on the communication paths between the provider and other nodes as well.",
                "Hence, we describe a cross-layer, hybrid resource distribution scheme to achieve load balancing by incorporating the functionalities of resource relocation, resource replication, and resource division. 4.1 Resource Replication Multiple replicas of a resource in the network help prevent a single node, as well as nodes surrounding it, from being overloaded by a large number of requests and data transfers.",
                "An example is when a node has obtained a data file from another node, the requesting node and the intermediate nodes can cache the file and start sharing that file with other surrounding nodes right away.",
                "In addition, replicable resources can also be proactively replicated at other nodes which are located in certain strategic areas.",
                "For instance, to help nodes find a resource quickly, we could replicate the resource so that it becomes reachable by random walk for a specific number of hops from any node with some probability, as depicted in Figure 2(a).",
                "To realize this feature, the hybrid resource distribution scheme employs a different type of control packet, called resource replication packet, which is responsible for finding an appropriate place to create a replica of a resource.",
                "A resource replication packet of type R is deployed by a node that is providing the resource R itself.",
                "Unlike a query packet which follows higher pheromone upstream toward a resource it is looking for, a resource replication packet tends to be propelled away from similar resources by moving itself downstream toward weaker pheromone.",
                "When a resource replication packet finds itself in an area with sufficiently low pheromone, it makes a decision whether it should continue exploring or turn back.",
                "The decision depends on conditions such as current workload and/or remaining energy of the node being visited, as well as popularity of the resource itself. 4.2 Resource Relocation In certain situations, a resource may be required to transfer from one node to another.",
                "For example, a node may no longer want to possess a file due to the shortage of storage space, but it cannot simply delete the file since other nodes may still need it in the future.",
                "In this case, the node can choose to create replicas of the file by the aforementioned resource replication mechanism and then delete its own copy.",
                "Let us consider a situation where a majority of nodes requesting for a resource are located far away from a resource provider, as shown on the top of Figure 2(b).",
                "If the resource R is relocatable, it is preferred to be relocated to another area that is closer to those nodes, similar to the bottom of the same figure.",
                "Hence network bandwidth is more efficiently utilized.",
                "The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 3 The hybrid resource distribution scheme incorporates resource relocation algorithms that are adaptive to user requests and aim to reduce communication overhead.",
                "Specifically, by following the same pheromone maintenance concept, the hybrid resource distribution scheme introduces another type of pheromone which corresponds to user requests, instead of resources.",
                "This type of pheromone, called request pheromone, is setup by query packets that are in their exploring phases (not returning ones) to guide a resource to a new location. 4.3 Resource Division Certain types of resources can be divided into smaller subresources (e.g., a large file being broken into smaller files) and distributed to multiple locations to avoid overloading a single node, as depicted in Figure 2(c).",
                "The hybrid resource distribution scheme incorporates a resource division mechanism that operates at a thin layer right above all the other mechanisms described earlier.",
                "The resource division mechanism is responsible for decomposing divisible resources into sub-resources, and then adds an extra keyword to distinguish each sub-resource from one another.",
                "Therefore, each of these sub-resources will be seen by the other mechanisms as one single resource which can be independently discovered, replicated, and relocated.",
                "The resource division mechanism is also responsible for combining data from these subresources together (e.g., merging pieces of a file) and delivering the final result to the application. 5.",
                "REPLICA INVALIDATION Although replicas improve accessibility and balance load, replica invalidation becomes a critical issue when nodes caching updatable resources may concurrently update their own replicas, which renders replicas held by other nodes obsolete.",
                "Most existing solutions to the replica invalidation problem either impose constrains that only the data source could perform update and invalidate other replicas, or resort to network-wide flooding which results in heavy network traffic and leads to scalability problem, or both.",
                "The lack of infrastructure supports and frequent topology changes in MANETs further challenge the issue.",
                "We apply the same cross-layer paradigm to invalidating replicas in MANETs which allows concurrent updates performed by multiple replicas.",
                "To coordinate concurrent updates and disseminate replica invalidations, a special infrastructure, called validation mesh or mesh for short, is adaptively maintained among nodes possessing valid replicas of a resource.",
                "Once a node has updated its replica, an invalidation packet will only be disseminated over the validation mesh to inform other replica-possessing nodes that their replicas become invalid and should be deleted.",
                "The structure (topology) of the validation mesh keeps evolving (1) when nodes request and cache a resource, (2) when nodes update their respective replicas and invalidate other replicas, and (3) when nodes move.",
                "To accommodate the dynamics, our scheme integrates the components of swarm intelligence to adaptively maintain the validation mesh without relying on any underlying MANET routing protocol.",
                "In particular, the scheme takes into account concurrent updates initiated by multiple nodes to ensure the consistency among replicas.",
                "In addition, version number is used to distinguish new from old replicas when invalidating any stale replica.",
                "Simulation results show that the proposed scheme effectively facilitates concurrent replica updates and efficiently perform replica invalidation without incurring network-wide flooding.",
                "Figure 3 depicts the idea of validation mesh which maintains connectivity among nodes holding valid replicas of a resource to avoid network-wide flooding when invalidating replicas.",
                "Figure 3: Examples showing maintenance of validation mesh There are eight nodes in the sample network, and we start with only node A holding the valid file, as shown in Figure 3(a).",
                "Later on, node G issues a query packet for the file and eventually obtains the file from A via nodes B and D. Since intermediate nodes are allowed to cache forwarded data, nodes B, D, and G will now hold valid replicas of the file.",
                "As a result, a validation mesh is established among nodes A, B, D, and G, as depicted in Figure 3(b).",
                "In Figure 3(c), another node, H, has issued a query packet for the same file and obtained it from node Bs cache via node E. At this point, six nodes hold valid replicas and are connected through the validation mesh.",
                "Now we assume node G updates its replica of the file and informs the other nodes by sending an invalidation packet over the validation mesh.",
                "Consequently, all other nodes except G remove their replicas of the file from their storage and the validation mesh is torn down.",
                "However, query forwarding pheromone, as denoted by the dotted arrows in Figure 3(d), is setup at these nodes via the reverse paths in which the invalidation packets have traversed, so that future requests for this file will be forwarded to node G. In Figure 3(e), node H makes a new request for the file again.",
                "This time, its query packet follows the pheromone toward node G, where the updated file can be obtained.",
                "Eventually, a new validation mesh is established over nodes G, B, D, E, and H. To maintain a validation mesh among the nodes holding valid replicas, one of them is designated to be the focal node.",
                "Initially, the node that originally holds the data is the focal node.",
                "As nodes update replicas, the node that last (or most recently) updates a 4 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006 corresponding replica assumes the role of focal node.",
                "We also name nodes, such as G and H, who originate requests to replicate data as clients, and nodes B, D, and E who locally cache passing data as data nodes.",
                "For instance, in Figures 3(a), 3(b), and 3(c), node A is the focal node; in Figures 3(d), 3(e), and 3(f), node G becomes the focal node.",
                "In addition, to accommodate newly participating nodes and mobility of nodes, the focal node periodically floods the validation mesh with a keep-alive packet, so that nodes who can hear this packet are considered themselves to be part of the validation mesh.",
                "If a node holding a valid/updated replica doesnt hear a keep-alive packet for a certain time interval, it will deploy a search packet using the resource discovery mechanism described in Section 3 to find another node (termed attachment point) currently on the validation mesh so that it can attach itself to.",
                "Once an attachment point is found, a search_reply packet is returned to the disconnected node who originated the search.",
                "Intermediate nodes who forward the search_reply packet will become part of the validation mesh as well.",
                "To illustrate the effect of node mobility, in Figure 3(f), node H has moved to a location where it is not directly connected to the mesh.",
                "Via the resource discovery mechanism, node H relies on an intermediate node F to connect itself to the mesh.",
                "Here, node F, although part of the validation mesh, doesnt hold data replica, and hence is termed nondata node.",
                "Client and data node who keep hearing the keep-alive packets from the focal node act as if they are holding a valid replica, so that they can reply to query packets, like node B in Figure 3(c) replying a request from node H. While a disconnected node attempting to discover an attachment point to reattach itself to the mesh, the disconnected node cant reply to a query packet.",
                "For instance, in Figure 3(f), node H does not reply to any query packet before it reattaches itself to the mesh.",
                "Although validation mesh provides a conceptual topology that (1) connects all replicas together, (2) coordinates concurrent updates, and (3) disseminates invalidation packets, the technical issue is how such a mesh topology could be effectively and efficiently maintained and evolved when (a) nodes request and cache a resource, (b) when nodes update their respective replicas and invalidate other replicas, and (c) when nodes move.",
                "Without relying on any MANET routing protocols, the two primitives work together to facilitate efficient search and adaptive maintenance. 6.",
                "PERFORMANCE EVALUATION We have conducted simulation experiments using the QualNet simulator to evaluate the performance of the described resource discovery, resource distribution, and replica invalidation schemes.",
                "However, due to space limitation only the performance of the replica invalidation is reported.",
                "In our experiments, eighty nodes are uniformly distributed over a terrain of size 1000×1000 m2 .",
                "Each node has a communication range of approximately 250 m over a 2 Mbps wireless channel, using IEEE802.11 as the MAC layer.",
                "We use the random-waypoint mobility model with a pause time of 1 second.",
                "Nodes may move at the minimum and maximum speeds of 1 m/s and 5 m/s, respectively.",
                "Table 1 lists other parameter settings used in the simulation.",
                "Initially, there is one resource server node in network.",
                "Two nodes are randomly picked up every 10 seconds as clients.",
                "Every β seconds, we check the number of nodes, N, which have gotten data.",
                "Then we randomly pickup Min(γ,N) nodes from them to initiate data update.",
                "Each experiment is run for 10 minutes.",
                "Table 1: Simulation Settings HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 KEEPALIVE_INTERVAL 3 second NUM_SEARCH 1 ADVERTISE_INTERVAL 5 second EXPIRATION_INTERVAL 10 second Average Query Generation Rate 2 query/ 10 sec Max # of Concurrent Update (γ) 2 Frequency of Update (β) 3s We evaluate the performance under different mobility speed, the density, the maximum number of concurrent update nodes, and update frequency using two metrics: • Average overhead per update measures the average number of packets transmitted per update in the network. • Average delay per update measures how long our approach takes to finish an update on average.",
                "All figures shown present the results with a 70% confidence interval.",
                "Figure 4: Overhead vs. speed for 80 nodes Figure 5: Overhead vs. density Figure 6: Overhead vs. max #concurrent updates Figure 7: Overhead vs. freq.",
                "Figure 8: Delay vs. speed Figure 9: Delay vs. density The 3rd Conference on Mobile Technology, Applications and Systems - Mobility 2006 5 Figure 10: Delay vs. max #concurrent updates Figure 11: Delay vs. freq.",
                "Figures 4, 5, 6, and 7 show the overhead versus various parameter values.",
                "In Figure 4, the overhead increases as the speed increase, which is due to the fact that as the speed increase, nodes move out of mesh more frequently, and will send out more search packets.",
                "However, the overhead is not high, and even in speed 10m/sec, the overhead is below 100 packets.",
                "In contrast, the packets will be expected to be more than 200 packets at various speeds when flooding is used.",
                "Figure 5 shows that the overhead almost remains the same under various densities.",
                "That is attributed to only flooding over the mesh instead of the whole network.",
                "The size of mesh doesnt vary much on various densities, so that the overhead doesnt vary much.",
                "Figure 6 shows that overhead also almost remains the same under various maximum number of concurrent updates.",
                "Thats because one more node just means one more flood over the mesh during update process so that the impact is limited.",
                "Figure 7 shows that if updates happen more frequently, the overhead is higher.",
                "This is because the more quickly updates happen, (1) there will be more keep_alive message over the mesh between two updates, and (2) nodes move out of mesh more frequently and send out more search packets.",
                "Figures 8, 9, 10, and 11 show the delay versus various parameter values.",
                "From Figure 8, we know the delay increases as the speed increases, which is due to the fact that with increasing speed, clients will move out of mesh with higher probability.",
                "When these clients want to update data, they will spend time to first search the mesh.",
                "The faster the speed, the more time clients need to spend to search the mesh.",
                "Figure 9 shows that delay is negligibly affected by the density.",
                "Delay decreases slightly as the number of nodes increases, due to the fact that the more nodes in the network, the more nodes receives the advertisement packets which helps the search packet find the target so that the delay of update decreases.",
                "Figure 10 shows that delay decreases slightly as the maximum number of concurrent updates increases.",
                "The larger the maximum number of concurrent updates is, the more nodes are picked up to do update.",
                "Then with higher probability, one of these nodes is still in mesh and finishes the update immediately (dont need to search mesh first), which decreases the delay.",
                "Figure 11 shows how the delay varies with the update frequency.",
                "When updates happen more frequently, the delay will higher.",
                "Because the less frequently, the more time nodes in mesh have to move out of mesh then they need to take time to search the mesh when they do update, which increases the delay.",
                "The simulation results show that the replica invalidation scheme can significantly reduce the overhead with an acceptable delay. 7.",
                "CONCLUSION To facilitate resource discovery and distribution over MANETs, one approach is to designing peer-to-peer (P2P) systems over MANETs which constructs an overlay by organizing peers of the system into a logical structure on the top of MANETs physical topology.",
                "However, deploying overlay over MANETs may result in either a large number of flooding operations triggered by the routing process, or inefficiency in terms of bandwidth usage.",
                "Specifically, overlay routing relies on the network-layer routing protocols.",
                "In the case of a reactive routing protocol, routing on the overlay may cause a large number of flooded route discovery message since the routing path in each routing step must be discovered on demand.",
                "On the other hand, if a proactive routing protocol is adopted, each peer has to periodically broadcast control messages, which leads to poor efficiency in terms of bandwidth usage.",
                "Either way, constructing an overlay will potentially suffer from the scalability problem.",
                "The paper describes a design paradigm that uses the functional primitives of positive/negative feedback and sporadic random walk to design robust resource discovery and distribution schemes over MANETs.",
                "In particular, the scheme offers the features of (1) cross-layer design of P2P systems, which allows the routing process at both the P2P and the network layers to be integrated to reduce overhead, (2) scalability and mobility support, which minimizes the use of global flooding operations and adaptively combines proactive resource advertisement and reactive resource discovery, and (3) load balancing, which facilitates resource replication, relocation, and division to achieve load balancing. 8.",
                "REFERENCES [1] A. Oram, Peer-to-Peer: Harnessing the Power of Disruptive Technologies.",
                "OReilly, March 2000. [2] S. Helal, N. Desai, V. Verma, and C. Lee, Konark - A Service Discovery and Delivery Protocol for ad-hoc Networks, in the Third IEEE Conference on Wireless Communication Networks (WCNC), New Orleans, Louisiana, 2003. [3] G. Krotuem, Proem: A Peer-to-Peer Computing Platform for Mobile ad-hoc Networks, in Advanced Topic Workshop Middleware for Mobile Computing, Germany, 2001. [4] M. Papadopouli and H. Schulzrinne, A Performance Analysis of 7DS a Peer-to-Peer Data Dissemination and Prefetching Tool for Mobile Users, in Advances in wired and wireless communications, IEEE Sarnoff Symposium Digest, Ewing, NJ, 2001, (Best student paper & poster award). [5] U. Mohan, K. Almeroth, and E. Belding-Royer, Scalable Service Discovery in Mobile ad-hoc Networks, in IFIP Networking Conference, Athens, Greece, May 2004. [6] L. Yin and G. Cao, Supporting Cooperative Caching in Ad Hoc Networks, in IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth, and E. Belding-Royer, A Lightweight Content Replication Scheme for Mobile ad-hoc Environments, in IFIP Networking Conference, Athens, Greece, May 2004. 6 The 3rd International Conference on Mobile Technology, Applications and Systems - Mobility 2006"
            ],
            "original_annotated_samples": [
                "A Cross-Layer Approach to Resource Discovery and Distribution in Mobile ad-hoc Networks Chaiporn Jaikaeo Computer Engineering Kasetsart University, Thailand (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Computer and Information Sciences University of Delaware, USA (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Computer and Information Sciences University of Delaware, USA (+1) 302-831-1951 cshen@cis.udel.edu ABSTRACT This paper describes a cross-layer approach to designing robust P2P system over <br>mobile ad-hoc network</br>s."
            ],
            "translated_annotated_samples": [
                "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en <br>redes móviles ad-hoc</br> Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre <br>redes móviles ad-hoc</br>."
            ],
            "translated_text": "Un enfoque de capa cruzada para el descubrimiento y distribución de recursos en <br>redes móviles ad-hoc</br> Chaiporn Jaikaeo Ingeniería Informática Universidad de Kasetsart, Tailandia (+662) 942-8555 Ext 1424 cpj@cpe.ku.ac.th Xiang Cao Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1131 cao@cis.udel.edu Chien-Chung Shen Ciencias de la Computación e Información Universidad de Delaware, EE. UU. (+1) 302-831-1951 cshen@cis.udel.edu RESUMEN Este artículo describe un enfoque de capa cruzada para diseñar un sistema P2P robusto sobre <br>redes móviles ad-hoc</br>. El diseño se basa en primitivas funcionales simples que permiten integrar el enrutamiento en las capas P2P y de red para reducir la sobrecarga. Con estos primitivos, el artículo aborda diversas técnicas de equilibrio de carga. También se presentan los resultados preliminares de la simulación. Categorías y Descriptores de Asignaturas C.2.4 [Sistemas Distribuidos]: Aplicaciones Distribuidas Términos Generales Algoritmos y diseño 1. Las redes móviles ad-hoc (MANETs) consisten en nodos móviles que establecen autonomamente conectividad a través de comunicaciones inalámbricas de múltiples saltos. Sin depender de ninguna infraestructura de red existente preconfigurada o control centralizado, las MANET son útiles en situaciones donde se requieren instalaciones de comunicación improvisadas, como comunicaciones en el campo de batalla y misiones de ayuda en casos de desastre. Dado que las aplicaciones de MANET requieren procesamiento colaborativo y intercambio de información entre nodos móviles, el descubrimiento y distribución de recursos (servicios) se han convertido en capacidades indispensables. Un enfoque para diseñar esquemas de descubrimiento y distribución de recursos sobre MANETs es construir un sistema peer-to-peer (P2P) (o una superposición) que organiza a los pares del sistema en una estructura lógica, sobre la topología de red real. Sin embargo, implementar sistemas P2P en MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento reactivo, o ineficiencia en cuanto a la utilización del ancho de banda en esquemas de enrutamiento proactivo. De cualquier manera, construir una superposición potencialmente creará un problema de escalabilidad para MANETs a gran escala. Debido a la naturaleza dinámica de las MANETs, los sistemas P2P deben ser robustos al ser escalables y adaptables a los cambios de topología. Estos sistemas también deben proporcionar formas eficientes y efectivas para que los compañeros interactúen, así como otras características específicas de la aplicación deseables. Este documento describe un paradigma de diseño que utiliza los siguientes dos primitivos funcionales para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. 1. Retroalimentación positiva/negativa. Los paquetes de consulta se utilizan para explorar una ruta hacia otros pares que poseen recursos de interés. Opcionalmente, se envían paquetes de publicidad para anunciar rutas de otros pares sobre recursos disponibles. Al recorrer una ruta, estos paquetes de control miden la calidad de la ruta y dejan información de retroalimentación en cada nodo a lo largo del camino para guiar a los siguientes paquetes de control en direcciones apropiadas. Caminata aleatoria esporádica. A medida que la topología de la red y/o la disponibilidad de recursos cambian, las rutas existentes pueden volverse obsoletas mientras que rutas mejores están disponibles. La caminata aleatoria esporádica permite que un paquete de control explore diferentes rutas y descubra oportunísticamente nuevas y/o mejores rutas. Adoptando este paradigma, todo el sistema MANET P2P opera como una colección de entidades autónomas que consisten en diferentes tipos de paquetes de control, como paquetes de consulta y de anuncio. Estos paquetes trabajan colaborativamente, pero de forma indirecta, para lograr tareas comunes, como el descubrimiento de recursos, enrutamiento y equilibrio de carga. Con la colaboración entre estas entidades, un sistema MANET P2P es capaz de aprender la dinámica de la red por sí mismo y ajustar su comportamiento en consecuencia, sin la sobrecarga de organizar a los pares en una superposición. El resto de este documento está organizado de la siguiente manera. El trabajo relacionado se describe en la siguiente sección. La sección 3 describe el esquema de descubrimiento de recursos. La sección 4 describe el esquema de distribución de recursos. El esquema de invalidación de réplicas se describe en la Sección 5, seguido de su evaluación de rendimiento en la Sección 6. La sección 7 concluye el artículo. 2. TRABAJO RELACIONADO Para MANETs, los sistemas P2P pueden clasificarse según el principio de diseño, en enfoques por capas y enfoques de capa cruzada. Un enfoque en capas adopta una solución similar a P2P, donde el descubrimiento de recursos se facilita como un protocolo de capa de aplicación y los mensajes de consulta y respuesta son entregados por los protocolos de enrutamiento MANET subyacentes. Por ejemplo, Konark utiliza un protocolo de multidifusión subyacente de manera que los proveedores de servicios y los solicitantes publican y buscan servicios a través de un grupo de multidifusión predefinido, respectivamente. Proem [3] es una plataforma de computación móvil de alto nivel para sistemas P2P sobre MANETs. Define un protocolo de transporte que se sitúa encima del stack TCP/IP existente, por lo tanto, depende de un protocolo de enrutamiento existente para operar. Con un control limitado sobre cómo se enrutan los paquetes de control y datos en la red, es difícil evitar la ineficiencia de los protocolos de enrutamiento de propósito general que suelen ser reactivos y basados en inundaciones. Por el contrario, los enfoques de capas cruzadas se basan en su propio mecanismo de enrutamiento o mejoran los algoritmos de enrutamiento MANET existentes para admitir el descubrimiento de recursos. 7DS [4], que es el trabajo pionero en implementar un sistema P2P en dispositivos móviles, explota la localidad de los datos y la movilidad de los nodos para diseminar datos de manera de un solo salto. Por lo tanto, una larga latencia de búsqueda puede resultar en que un nodo 7DS solo pueda obtener datos de interés si el nodo que tiene los datos está dentro de su cobertura de radio. Mohan et al. [5] proponen un algoritmo adaptativo de descubrimiento de servicios que combina tanto modelos de empuje como de extracción. Específicamente, un proveedor de servicios/consultas transmite anuncios/consultas solo cuando el número de nodos que anuncian o consultan, estimado por los paquetes de control recibidos, está por debajo de un umbral durante un período de tiempo. De esta manera, se limita el número de paquetes de control en la red, lo que proporciona una buena escalabilidad. A pesar del mecanismo para reducir los paquetes de control, es posible que todavía exista un alto sobrecargo, especialmente cuando hay muchos clientes intentando localizar diferentes servicios, debido a que el algoritmo se basa en la inundación. Para la replicación de recursos, Yin y Cao [6] diseñan y evalúan técnicas de almacenamiento en caché cooperativo para MANETs. Sin embargo, el almacenamiento en caché se realiza de forma reactiva por nodos intermedios cuando un solicitante solicita datos a un servidor. Los elementos de datos o recursos nunca se envían a otros nodos de forma proactiva. Thanedar et al. [7] proponen un esquema de replicación de contenido ligero utilizando una técnica de anillo expansivo. Si un servidor detecta que el número de solicitudes excede un umbral dentro de un período de tiempo, comienza a replicar sus datos en nodos capaces de almacenar réplicas, cuyos recuentos de saltos desde el servidor son de ciertos valores. Dado que la replicación de datos se activa únicamente por la frecuencia de las solicitudes, es posible que se creen réplicas innecesarias en un amplio alcance, aunque solo los nodos dentro de un rango pequeño soliciten estos datos. Nuestro mecanismo propuesto de replicación de recursos, en contraste, intenta replicar un elemento de datos en áreas apropiadas, en lugar de en una gran área alrededor del servidor, donde el elemento es solicitado con frecuencia. 3. DESCUBRIMIENTO DE RECURSOS Proponemos un esquema de descubrimiento de recursos híbrido de capa cruzada que se basa en las múltiples interacciones de paquetes de consulta, respuesta y publicidad. Suponemos que cada recurso está asociado con un ID único. Inicialmente, cuando un nodo quiere descubrir un recurso, despliega paquetes de consulta, que llevan el ID del recurso correspondiente, y exploran aleatoriamente la red en busca del recurso solicitado. Al recibir un paquete de consulta de este tipo, el nodo que proporciona el recurso solicitado genera un paquete de respuesta. Los paquetes de publicidad también se pueden utilizar para informar de manera proactiva a otros nodos sobre los recursos disponibles en cada nodo. Además de descubrir la identidad del nodo que proporciona el recurso solicitado, también puede ser necesario descubrir una ruta que conduzca a este nodo para una interacción adicional. Para permitir que los nodos intermedios tomen una decisión sobre dónde reenviar los paquetes de consulta, cada nodo mantiene dos tablas: la tabla de vecinos y la tabla de feromonas. Se hace la suposición de un ID único para mayor brevedad en la exposición, y los recursos podrían especificarse a través de afirmaciones de atributo-valor. La tabla de vecinos mantiene una lista de todos los vecinos actuales obtenidos a través de un protocolo de descubrimiento de vecinos. La tabla de feromonas mantiene el mapeo de un ID de recurso y un ID de vecino a un valor de feromona. Esta tabla está inicialmente vacía y se actualiza con un paquete de respuesta generado por una consulta exitosa. La Figura 1 ilustra un ejemplo de una tabla de vecinos y una tabla de feromonas mantenidas por el nodo A que tiene cuatro vecinos. Cuando el nodo A recibe un paquete de consulta buscando un recurso, toma la decisión de a qué vecino debe reenviar el paquete de consulta calculando la deseabilidad de cada uno de los vecinos que no han sido visitados antes por el mismo paquete de consulta. Para un ID de recurso r, la deseabilidad de elegir un vecino n, δ(r,n), se obtiene del valor de feromona de la entrada cuyos campos de vecino e ID de recurso son n y r, respectivamente. Si no existe tal entrada en la tabla de feromonas, δ(r,n) se establece en cero. Una vez que se han calculado las deseabilidades de todos los próximos saltos válidos, se normalizan para obtener la probabilidad de elegir a cada vecino. Además, también se asigna una pequeña probabilidad a aquellos vecinos con cero deseabilidad para realizar el paseo aleatorio esporádico primitivo. Basándose en estas probabilidades, se selecciona un próximo salto para reenviar el paquete de consulta. Cuando un paquete de consulta encuentra un nodo con un recurso satisfactorio, se devuelve un paquete de respuesta al nodo que realiza la consulta. El paquete de respuesta que regresa también actualiza la tabla de feromonas en cada nodo en su viaje de regreso al aumentar el valor de feromona en la entrada cuyos campos de ID de recurso e ID de vecino coinciden con el ID del recurso descubierto y el salto anterior, respectivamente. Si no existe tal entrada, se añade una nueva entrada a la tabla. Por lo tanto, los paquetes de consulta subsecuentes que buscan el mismo recurso, al encontrar esta información de feromona, son luego guiados hacia el mismo destino con una pequeña probabilidad de tomar un camino alternativo. Dado que el esquema de descubrimiento híbrido no se basa ni en un protocolo de enrutamiento MANET ni organiza los nodos en una superposición lógica, los paquetes de consulta deben atravesar la topología de red real. En redes densas, los grados nodales relativamente grandes pueden tener impactos potenciales en este mecanismo de exploración aleatoria. Para abordar este problema, el esquema híbrido también incorpora publicidad proactiva además de la consulta reactiva. Para realizar publicidad proactiva, cada nodo despliega periódicamente un paquete publicitario que contiene una lista de los IDs de sus recursos disponibles. Estos paquetes se desplazarán lejos del nodo de publicidad de manera aleatoria hasta un número limitado de saltos y anunciarán información de recursos a los nodos circundantes de la misma manera que los paquetes de respuesta. En el esquema híbrido, un aumento de feromona actúa como un retroalimentación positiva que guía indirectamente los paquetes de consulta en busca de recursos similares. De manera intuitiva, la cantidad de feromona aumentada es inversamente proporcional a la distancia que ha recorrido el paquete de respuesta de regreso, y otros factores, como la calidad del recurso, también podrían contribuir a esta cantidad. Cada nodo también realiza una retroalimentación negativa implícita para los recursos que no han recibido una retroalimentación positiva durante algún tiempo al disminuir regularmente la feromona en todas las entradas de su tabla de feromonas con el tiempo. Además, la feromona puede ser reducida por una respuesta negativa explícita, por ejemplo, un paquete de respuesta que regresa de un nodo que no está dispuesto a proporcionar un recurso debido a una carga de trabajo excesiva. Como resultado, el equilibrio de carga puede lograrse a través de retroalimentación positiva y negativa. Un nodo que sirve a demasiados nodos puede devolver menos respuestas a los paquetes de consulta o generar respuestas negativas. 2 La 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 1: Ejemplo que ilustra las tablas de vecinos y feromonas mantenidas por el nodo A: (a) conectividad inalámbrica alrededor de A mostrando que actualmente tiene cuatro vecinos, (b) tabla de vecinos de A, y (c) una posible tabla de feromonas de A Figura 2: Escenarios de muestra que ilustran los tres mecanismos que respaldan el equilibrio de carga: (a) replicación de recursos, (b) reubicación de recursos y (c) división de recursos 4. DISTRIBUCIÓN DE RECURSOS Además del descubrimiento de recursos, un nodo de consulta generalmente intenta acceder y recuperar el contenido de un recurso después de un descubrimiento exitoso. En ciertas situaciones, también es beneficioso tener un recurso disponible fácilmente en múltiples nodos cuando el recurso puede ser reubicado y/o replicado, como en el caso de archivos de datos. Además, en las MANETs, debemos considerar no solo la cantidad de carga manejada por un proveedor de recursos, sino también la carga en esos nodos intermedios que se encuentran en los caminos de comunicación entre el proveedor y otros nodos también. Por lo tanto, describimos un esquema de distribución de recursos híbrido de capa cruzada para lograr el equilibrio de carga mediante la incorporación de las funcionalidades de reubicación de recursos, replicación de recursos y división de recursos. 4.1 Replicación de Recursos Múltiples réplicas de un recurso en la red ayudan a prevenir que un único nodo, así como los nodos que lo rodean, se sobrecarguen con un gran número de solicitudes y transferencias de datos. Un ejemplo es cuando un nodo ha obtenido un archivo de datos de otro nodo, el nodo solicitante y los nodos intermedios pueden almacenar en caché el archivo y comenzar a compartir ese archivo con otros nodos cercanos de inmediato. Además, los recursos replicables también pueden ser replicados de manera proactiva en otros nodos ubicados en ciertas áreas estratégicas. Por ejemplo, para ayudar a los nodos a encontrar un recurso rápidamente, podríamos replicar el recurso para que sea accesible mediante un recorrido aleatorio durante un número específico de saltos desde cualquier nodo con cierta probabilidad, como se muestra en la Figura 2(a). Para llevar a cabo esta característica, el esquema de distribución de recursos híbrido emplea un tipo diferente de paquete de control, llamado paquete de replicación de recursos, que es responsable de encontrar un lugar adecuado para crear una réplica de un recurso. Un paquete de replicación de recursos de tipo R es desplegado por un nodo que está proporcionando el recurso R en sí mismo. A diferencia de un paquete de consulta que sigue la feromona más alta aguas arriba hacia un recurso que busca, un paquete de replicación de recurso tiende a ser impulsado lejos de recursos similares al moverse aguas abajo hacia feromonas más débiles. Cuando un paquete de replicación de recursos se encuentra en un área con suficientemente baja concentración de feromonas, toma una decisión sobre si debe seguir explorando o regresar. La decisión depende de condiciones como la carga de trabajo actual y/o la energía restante del nodo visitado, así como la popularidad del recurso en sí mismo. 4.2 Reubicación de Recursos En ciertas situaciones, puede ser necesario transferir un recurso de un nodo a otro. Por ejemplo, un nodo puede ya no querer poseer un archivo debido a la escasez de espacio de almacenamiento, pero no puede simplemente eliminar el archivo ya que otros nodos aún pueden necesitarlo en el futuro. En este caso, el nodo puede optar por crear réplicas del archivo mediante el mecanismo de replicación de recursos mencionado anteriormente y luego eliminar su propia copia. Consideremos una situación en la que la mayoría de los nodos que solicitan un recurso se encuentran lejos del proveedor de recursos, como se muestra en la parte superior de la Figura 2(b). Si el recurso R es reubicable, se prefiere que sea trasladado a otra área que esté más cerca de esos nodos, similar a la parte inferior de la misma figura. Por lo tanto, el ancho de banda de la red se utiliza de manera más eficiente. La tercera Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006. El esquema híbrido de distribución de recursos incorpora algoritmos de reubicación de recursos que son adaptables a las solicitudes de los usuarios y tienen como objetivo reducir la sobrecarga de comunicación. Específicamente, siguiendo el mismo concepto de mantenimiento de feromonas, el esquema híbrido de distribución de recursos introduce otro tipo de feromona que corresponde a las solicitudes de los usuarios, en lugar de los recursos. Este tipo de feromona, llamada feromona de solicitud, es establecida por paquetes de consulta que se encuentran en sus fases de exploración (no de retorno) para guiar un recurso a una nueva ubicación. 4.3 División de Recursos Ciertos tipos de recursos pueden dividirse en subrecursos más pequeños (por ejemplo, un archivo grande dividido en archivos más pequeños) y distribuirse en múltiples ubicaciones para evitar sobrecargar un único nodo, como se muestra en la Figura 2(c). El esquema de distribución de recursos híbrido incorpora un mecanismo de división de recursos que opera en una capa delgada justo por encima de todos los otros mecanismos descritos anteriormente. El mecanismo de división de recursos es responsable de descomponer recursos divisibles en subrecursos, y luego agrega una palabra clave adicional para distinguir cada subrecurso entre sí. Por lo tanto, cada uno de estos subrecursos será visto por los otros mecanismos como un único recurso que puede ser descubierto, replicado y reubicado de forma independiente. El mecanismo de división de recursos también es responsable de combinar datos de estos subrecursos juntos (por ejemplo, fusionar partes de un archivo) y entregar el resultado final a la aplicación. INVALIDACIÓN DE REPLICA Aunque las réplicas mejoran la accesibilidad y equilibran la carga, la invalidación de réplicas se convierte en un problema crítico cuando los nodos que almacenan recursos actualizables pueden actualizar simultáneamente sus propias réplicas, lo que hace que las réplicas mantenidas por otros nodos queden obsoletas. La mayoría de las soluciones existentes al problema de invalidación de réplicas imponen restricciones que solo la fuente de datos podría realizar actualizaciones e invalidar otras réplicas, o recurren a inundaciones en toda la red que resultan en un tráfico de red pesado y conducen a problemas de escalabilidad, o ambas cosas. La falta de soporte de infraestructura y los frecuentes cambios de topología en MANETs complican aún más el problema. Aplicamos el mismo paradigma de capas cruzadas para invalidar réplicas en MANETs, lo que permite actualizaciones concurrentes realizadas por múltiples réplicas. Para coordinar actualizaciones concurrentes y diseminar invalidaciones de réplicas, se mantiene de forma adaptativa una infraestructura especial, llamada malla de validación o simplemente malla, entre los nodos que poseen réplicas válidas de un recurso. Una vez que un nodo ha actualizado su réplica, un paquete de invalidación solo se difundirá a través de la malla de validación para informar a otros nodos que poseen réplicas que sus réplicas se han vuelto inválidas y deben ser eliminadas. La estructura (topología) de la malla de validación sigue evolucionando (1) cuando los nodos solicitan y almacenan en caché un recurso, (2) cuando los nodos actualizan sus réplicas respectivas e invalidan otras réplicas, y (3) cuando los nodos se mueven. Para adaptarse a la dinámica, nuestro esquema integra los componentes de la inteligencia de enjambre para mantener de forma adaptativa la malla de validación sin depender de ningún protocolo de enrutamiento MANET subyacente. En particular, el esquema tiene en cuenta las actualizaciones concurrentes iniciadas por múltiples nodos para garantizar la consistencia entre réplicas. Además, el número de versión se utiliza para distinguir las réplicas nuevas de las antiguas al invalidar cualquier réplica obsoleta. Los resultados de la simulación muestran que el esquema propuesto facilita de manera efectiva las actualizaciones de réplicas concurrentes y realiza de manera eficiente la invalidación de réplicas sin incurrir en inundaciones en toda la red. La Figura 3 representa la idea de una malla de validación que mantiene la conectividad entre los nodos que contienen réplicas válidas de un recurso para evitar la inundación en toda la red al invalidar las réplicas. Figura 3: Ejemplos que muestran el mantenimiento de la malla de validación. Hay ocho nodos en la red de muestra, y comenzamos con solo el nodo A que tiene el archivo válido, como se muestra en la Figura 3(a). Más tarde, el nodo G emite un paquete de consulta para el archivo y finalmente obtiene el archivo de A a través de los nodos B y D. Dado que se permite a los nodos intermedios almacenar en caché los datos reenviados, los nodos B, D y G ahora tendrán réplicas válidas del archivo. Como resultado, se establece una malla de validación entre los nodos A, B, D y G, como se muestra en la Figura 3(b). En la Figura 3(c), otro nodo, H, ha emitido un paquete de consulta para el mismo archivo y lo ha obtenido del caché del nodo B a través del nodo E. En este punto, seis nodos tienen réplicas válidas y están conectados a través de la malla de validación. Ahora asumimos que el nodo G actualiza su réplica del archivo e informa a los otros nodos enviando un paquete de invalidación a través de la malla de validación. En consecuencia, todos los demás nodos excepto G eliminan sus réplicas del archivo de su almacenamiento y la malla de validación se desmonta. Sin embargo, el feromona de reenvío de consultas, como se indica por las flechas punteadas en la Figura 3(d), se configura en estos nodos a través de los caminos inversos por los cuales han transitado los paquetes de invalidación, para que las futuras solicitudes de este archivo sean reenviadas al nodo G. En la Figura 3(e), el nodo H realiza una nueva solicitud del archivo nuevamente. Esta vez, su paquete de consulta sigue la feromona hacia el nodo G, donde se puede obtener el archivo actualizado. Finalmente, se establece una nueva malla de validación sobre los nodos G, B, D, E y H. Para mantener una malla de validación entre los nodos que contienen réplicas válidas, se designa a uno de ellos como nodo focal. Inicialmente, el nodo que originalmente contiene los datos es el nodo focal. A medida que los nodos actualizan réplicas, el nodo que actualiza por última vez (o más recientemente) una réplica correspondiente a la 3ª Conferencia Internacional sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 asume el papel de nodo focal. También nombramos nodos, como G y H, que originan solicitudes para replicar datos como clientes, y nodos B, D y E que almacenan en caché localmente los datos que pasan como nodos de datos. Por ejemplo, en las Figuras 3(a), 3(b) y 3(c), el nodo A es el nodo focal; en las Figuras 3(d), 3(e) y 3(f), el nodo G se convierte en el nodo focal. Además, para dar cabida a los nodos recién participantes y a la movilidad de los nodos, el nodo focal inunda periódicamente la malla de validación con un paquete de mantenimiento de conexión, de modo que los nodos que pueden escuchar este paquete se consideran a sí mismos parte de la malla de validación. Si un nodo que contiene una réplica válida/actualizada no recibe un paquete de keep-alive durante un cierto intervalo de tiempo, desplegará un paquete de búsqueda utilizando el mecanismo de descubrimiento de recursos descrito en la Sección 3 para encontrar otro nodo (llamado punto de conexión) actualmente en la malla de validación al que pueda conectarse. Una vez que se encuentra un punto de conexión, se envía un paquete de respuesta de búsqueda al nodo desconectado que inició la búsqueda. Los nodos intermedios que reenvíen el paquete de respuesta de búsqueda también formarán parte de la malla de validación. Para ilustrar el efecto de la movilidad de los nodos, en la Figura 3(f), el nodo H se ha desplazado a una ubicación donde no está directamente conectado a la malla. A través del mecanismo de descubrimiento de recursos, el nodo H depende de un nodo intermedio F para conectarse a la malla. Aquí, el nodo F, aunque forma parte de la malla de validación, no contiene réplicas de datos y, por lo tanto, se le denomina nodo no de datos. El cliente y el nodo de datos que siguen escuchando los paquetes keep-alive del nodo focal actúan como si tuvieran una réplica válida, de modo que puedan responder a los paquetes de consulta, como el nodo B en la Figura 3(c) respondiendo a una solicitud del nodo H. Mientras un nodo desconectado intenta descubrir un punto de conexión para volver a unirse a la malla, el nodo desconectado no puede responder a un paquete de consulta. Por ejemplo, en la Figura 3(f), el nodo H no responde a ningún paquete de consulta antes de volver a conectarse a la malla. Aunque la malla de validación proporciona una topología conceptual que (1) conecta todas las réplicas entre sí, (2) coordina actualizaciones concurrentes y (3) disemina paquetes de invalidación, el problema técnico es cómo una topología de malla de este tipo podría mantenerse y evolucionar de manera efectiva y eficiente cuando (a) los nodos solicitan y almacenan en caché un recurso, (b) cuando los nodos actualizan sus respectivas réplicas e invalidan otras réplicas, y (c) cuando los nodos se mueven. Sin depender de ningún protocolo de enrutamiento MANET, las dos primitivas trabajan juntas para facilitar una búsqueda eficiente y un mantenimiento adaptativo. 6. EVALUACIÓN DE RENDIMIENTO Hemos realizado experimentos de simulación utilizando el simulador QualNet para evaluar el rendimiento de los esquemas de descubrimiento de recursos, distribución de recursos e invalidación de réplicas descritos. Sin embargo, debido a limitaciones de espacio, solo se informa sobre el rendimiento de la invalidación de réplicas. En nuestros experimentos, ochenta nodos están distribuidos uniformemente sobre un terreno de tamaño 1000×1000 m2. Cada nodo tiene un rango de comunicación de aproximadamente 250 m a través de un canal inalámbrico de 2 Mbps, utilizando IEEE802.11 como capa MAC. Utilizamos el modelo de movilidad de punto de destino aleatorio con un tiempo de pausa de 1 segundo. Los nodos pueden moverse a velocidades mínimas y máximas de 1 m/s y 5 m/s, respectivamente. La Tabla 1 enumera otros ajustes de parámetros utilizados en la simulación. Inicialmente, hay un nodo de servidor de recursos en la red. Dos nodos son seleccionados al azar cada 10 segundos como clientes. Cada β segundos, verificamos el número de nodos, N, que han recibido datos. Luego seleccionamos de forma aleatoria Min(γ,N) nodos de ellos para iniciar la actualización de datos. Cada experimento se ejecuta durante 10 minutos. Tabla 1: Configuración de la simulación HOP_LIMIT 10 ADVERTISE_HOP_LIMIT 1 INTERVALO_KEEPALIVE 3 segundos NUM_SEARCH 1 INTERVALO_ANUNCIO 5 segundos INTERVALO_EXPIRACIÓN 10 segundos Tasa de Generación Promedio de Consultas 2 consultas / 10 seg Número Máximo de Actualizaciones Concurrentes (γ) 2 Frecuencia de Actualización (β) 3s Evaluamos el rendimiento bajo diferentes velocidades de movilidad, densidad, número máximo de nodos de actualización concurrentes y frecuencia de actualización utilizando dos métricas: • La sobrecarga promedio por actualización mide el número promedio de paquetes transmitidos por actualización en la red. • El retraso promedio por actualización mide cuánto tiempo tarda nuestro enfoque en completar una actualización en promedio. Todas las cifras mostradas presentan los resultados con un intervalo de confianza del 70%. Figura 4: Sobrecarga vs. velocidad para 80 nodos Figura 5: Sobrecarga vs. densidad Figura 6: Sobrecarga vs. número máximo de actualizaciones concurrentes Figura 7: Sobrecarga vs. frecuencia. Figura 8: Retraso vs. velocidad Figura 9: Retraso vs. densidad La 3ª Conferencia sobre Tecnología Móvil, Aplicaciones y Sistemas - Movilidad 2006 Figura 10: Retraso vs. máx. #actualizaciones concurrentes Figura 11: Retraso vs. frec. Las figuras 4, 5, 6 y 7 muestran el costo indirecto versus varios valores de parámetros. En la Figura 4, los costos generales aumentan a medida que la velocidad aumenta, lo cual se debe al hecho de que a medida que la velocidad aumenta, los nodos se mueven fuera de la malla con más frecuencia y enviarán más paquetes de búsqueda. Sin embargo, el costo adicional no es alto, e incluso a una velocidad de 10m/seg, el costo adicional está por debajo de 100 paquetes. En contraste, se espera que los paquetes sean más de 200 paquetes a diferentes velocidades cuando se utiliza el enrutamiento por inundación. La Figura 5 muestra que el gasto general casi se mantiene igual bajo diversas densidades. Eso se atribuye solo a la inundación sobre la malla en lugar de toda la red. El tamaño de la malla no varía mucho en diversas densidades, por lo que los costos generales no varían mucho. La Figura 6 muestra que el costo indirecto también permanece casi igual bajo varios números máximos de actualizaciones simultáneas. Eso se debe a que un nodo más significa una inundación más en la malla durante el proceso de actualización, por lo que el impacto es limitado. La Figura 7 muestra que si las actualizaciones ocurren con más frecuencia, el costo adicional es mayor. Esto se debe a que cuanto más rápidamente ocurran las actualizaciones, (1) habrá más mensajes keep_alive sobre la malla entre dos actualizaciones, y (2) los nodos se mueven fuera de la malla con más frecuencia y envían más paquetes de búsqueda. Las figuras 8, 9, 10 y 11 muestran la demora versus varios valores de parámetros. A partir de la Figura 8, sabemos que la demora aumenta a medida que la velocidad aumenta, lo cual se debe al hecho de que con una velocidad creciente, los clientes se moverán fuera de la malla con una probabilidad más alta. Cuando estos clientes quieran actualizar los datos, dedicarán tiempo primero a buscar en la malla. Cuanto mayor sea la velocidad, más tiempo necesitarán los clientes para buscar la malla. La Figura 9 muestra que el retraso no se ve afectado de manera significativa por la densidad. El retraso disminuye ligeramente a medida que aumenta el número de nodos, debido a que cuantos más nodos haya en la red, más nodos reciben los paquetes de publicidad, lo que ayuda a que el paquete de búsqueda encuentre el objetivo y, por lo tanto, el retraso de la actualización disminuye. La Figura 10 muestra que la demora disminuye ligeramente a medida que aumenta el número máximo de actualizaciones concurrentes. Cuanto mayor sea el número máximo de actualizaciones concurrentes, más nodos se seleccionan para realizar la actualización. Entonces, con mayor probabilidad, uno de estos nodos todavía está en la malla y finaliza la actualización inmediatamente (no es necesario buscar primero en la malla), lo que disminuye el retraso. La Figura 11 muestra cómo varía el retraso con la frecuencia de actualización. Cuando las actualizaciones ocurren con más frecuencia, el retraso será mayor. Debido a que cuanto menos frecuentemente se mueven los nodos en la malla, más tiempo necesitan para salir de la malla y buscarla cuando se actualizan, lo que aumenta el retraso. Los resultados de la simulación muestran que el esquema de invalidación de réplicas puede reducir significativamente la sobrecarga con un retraso aceptable. 7. CONCLUSIÓN Para facilitar el descubrimiento y distribución de recursos en MANETs, un enfoque es diseñar sistemas peer-to-peer (P2P) sobre MANETs que construyan una superposición organizando a los pares del sistema en una estructura lógica sobre la topología física de MANETs. Sin embargo, implementar una superposición sobre MANETs puede resultar en un gran número de operaciones de inundación desencadenadas por el proceso de enrutamiento, o ineficiencia en cuanto al uso del ancho de banda. Específicamente, el enrutamiento de superposición se basa en los protocolos de enrutamiento de capa de red. En el caso de un protocolo de enrutamiento reactivo, el enrutamiento en la superposición puede causar un gran número de mensajes de descubrimiento de ruta inundados, ya que la ruta de enrutamiento en cada paso de enrutamiento debe ser descubierta bajo demanda. Por otro lado, si se adopta un protocolo de enrutamiento proactivo, cada par debe transmitir periódicamente mensajes de control, lo que conduce a una baja eficiencia en términos de uso del ancho de banda. De cualquier manera, construir una superposición potencialmente sufrirá del problema de escalabilidad. El artículo describe un paradigma de diseño que utiliza las primitivas funcionales de retroalimentación positiva/negativa y caminata aleatoria esporádica para diseñar esquemas robustos de descubrimiento y distribución de recursos sobre MANETs. En particular, el esquema ofrece las características de (1) diseño de capas cruzadas de sistemas P2P, que permite integrar el proceso de enrutamiento en las capas P2P y de red para reducir la sobrecarga, (2) escalabilidad y soporte de movilidad, que minimiza el uso de operaciones de inundación global y combina de forma adaptativa la publicidad de recursos proactiva y el descubrimiento reactivo de recursos, y (3) equilibrio de carga, que facilita la replicación, reubicación y división de recursos para lograr un equilibrio de carga. REFERENCIAS [1] A. Oram, Peer-to-Peer: Aprovechando el Poder de las Tecnologías Disruptivas. OReilly, marzo de 2000. [2] S. Helal, N. Desai, V. Verma y C. Lee, Konark - Un protocolo de descubrimiento y entrega de servicios para redes ad-hoc, en la Tercera Conferencia IEEE sobre Redes de Comunicación Inalámbrica (WCNC), Nueva Orleans, Luisiana, 2003. [3] G. Krotuem, Proem: Una plataforma de computación peer-to-peer para redes móviles ad-hoc, en el Taller de Temas Avanzados Middleware para Computación Móvil, Alemania, 2001. [4] M. Papadopouli y H. Schulzrinne, Un análisis de rendimiento de 7DS, una herramienta de difusión y precarga de datos peer-to-peer para usuarios móviles, en Avances en comunicaciones cableadas e inalámbricas, Simposio IEEE Sarnoff Digest, Ewing, NJ, 2001 (Mejor premio de papel y póster estudiantil). [5] U. Mohan, K. Almeroth y E. Belding-Royer, Descubrimiento de servicios escalable en redes móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. [6] L. Yin y G. Cao, Soporte para almacenamiento en caché cooperativo en redes ad-hoc, en IEEE INFOCOM, 2004. [7] V. Thanedar, K. Almeroth y E. Belding-Royer, Un esquema de replicación de contenido ligero para entornos móviles ad-hoc, en la Conferencia de Redes IFIP, Atenas, Grecia, mayo de 2004. 6 La 3ra Conferencia Internacional sobre Tecnología, Aplicaciones y Sistemas Móviles - Movilidad 2006. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        }
    }
}