{
    "id": "J-2",
    "original_text": "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit. However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0. If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer. However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents. In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property. In this paper, we extend this result in a restricted setting. We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].) Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents. All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit. The family includes the Bailey-Cavallo mechanism as a special case. We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program. We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case). Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties. Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1. INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems. In such problems, we want to allocate the resources (or items) to the agents that value them the most. Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit. One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items. There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof. One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.) Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems. It is efficient: the chosen allocation always maximizes the sum of the agents valuations. It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating. Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative. In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0. Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner. For example, the agents may be trying to allocate the right to use a shared good on a given day. Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained. If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it). Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment). Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment. Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21]. In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5]. Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties. One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties. In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism. For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid. The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid. In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result. We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit. For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2]. Here we propose the family of linear VCG redistribution mechanisms. All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit. The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well). We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis. Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case). For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case). Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties. Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency. It turns out that the resulting mechanisms are the same. Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective. For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2. PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units. We only consider the case where m < n (otherwise the problem becomes trivial). We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.) Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Let vi denote the true value of ai. Given that the mechanism is strategy-proof, we can assume vi = ˆvi. Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit. Thus, the total VCG payment equals mˆvm+1. When m = 1, this is the second-price or Vickrey auction. We modify the mechanism as follows. After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment. We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3. LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms. Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1. The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc. The mechanism is strategy-proof, because for all i, zi is independent of ˆvi. Also, the mechanism is anonymous. It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit. Hence, to obtain these properties, we need to place some constraints on the constants. To satisfy the individual rationality criterion, each agents utility should always be non-negative. An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment. An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment. Consider agent an, the agent with the lowest bid. Since this agent does not win an item (m < n), her utility is just her redistribution payment zn. Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative. If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason. Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0. Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0. If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector. Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative. If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility). Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0. To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment. So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1. We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property). We now give two examples of mechanisms in this family. Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i. Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent. Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1. Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.) Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i. In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents. Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational. Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed. Which of these two mechanisms is better? Is there another mechanism that is even better? This is what we study in the next section. 4. OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors. We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution. Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance. Best-case performance. One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves. Consider the previous two examples. For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1. Thus, this mechanism redistributes 100% of the total VCG payment in the best case. For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1. Thus, this mechanism also redistributes 100% of the total VCG payment in the best case. Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0. Dominance. Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector. For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases. It turns out that there is no mechanism in the family that dominates all other mechanisms in the family. For suppose such a mechanism exists. Then, it should dominate both examples above. Consider the remaining VCG payment (the VCG payment failed to be redistributed). The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0. Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function. The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function. But since the function must be linear (has degree at most 1), it follows that P = 0. Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.) Worst-case performance. Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees. For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1. So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n . For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities. When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance. On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance. Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case. This percentage is undefined when the total VCG payment is 0. To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.) This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5. TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations. Claim 1. If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof. First, let us prove that c0 = 0. Consider the bid vector in which ˆvi = 0 for all i. To obtain individual rationality, we must have c0 ≥ 0. To satisfy the non-deficit constraint, we must have c0 ≤ 0. Thus we know c0 = 0. Now, if ci = 0 for all i, there is nothing to prove. Otherwise, let j = min{i|ci = 0}. Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector. Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest. In this case zn = cj, so we must have cj ≥ 0. The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector. Consider the same bid vector as above. We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0. For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0. So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1. Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0. We also have n − j > 0 because j ≤ m < n. So cj ≤ 0. Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption. So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i. Thus, we are stuck with the VCG mechanism. From here on, we only consider the case where m < n − 1. Claim 2. The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1. Before proving this claim, we introduce the following lemma. Lemma 1. Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k). Proof. Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk. Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj). When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true. If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false. So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient. We are now ready to present the proof of Claim 2. Proof. The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector. By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1. Claim 3. The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof. The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci. The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning. The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program. Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit). In the table below, we present the results for a single unit (m = 1). We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits. Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case. Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows. Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2. Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 . Suppose the bid values are drawn from a uniform distribution over [0, 1]. The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3. Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 . So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) . For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case. Let us present the optimal solution for the case n = 5 in detail. By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 . That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents. The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed. Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%. Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30. These results are in Figure 1. We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism). When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7. ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution). It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint). Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i. So an optimal solution always exists. Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows. Theorem 1. For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique. For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1. It should be noted that we have proved ci = 0 for i ≤ m in Claim 1. Proof. We first rewrite the linear program as follows. We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1. The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ . Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1. This will prove the theorem. We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd. Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ . We next show that the nonnegativity constraints are satisfied by these settings as well. For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number). We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive. So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j. Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program. We proceed to show that it is in fact the unique optimal solution. First we prove the following claim: Claim 4. If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ . Proof of claim. Consider the first inequality. We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1. It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0). Now, consider the next inequality for i = 2. We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0). Now consider the next inequality for i = 3. We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0). Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even. Moreover, if one inequality is strict, then all subsequent inequalities are strict. Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ). We consider two cases: Case 1: n − m is even. We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1. We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1. Case 2: n − m is odd. In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1. This completes the proof of the claim. It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ . Hence no other feasible solution is as good as the one described in the theorem. Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits. First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver. Second, we can derive the following corollary. Corollary 1. If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . That is, in the limit, the percentage that is not redistributed halves for every additional agent.) We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent. The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1). We now present the proof of the corollary. Proof. When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) . When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) . For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i). Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8. WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint. Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss. To prove this theorem, we need the following lemma. This lemma is not new: it was informally stated by Cavallo [3]. For completeness, we present it here with a detailed proof. Lemma 2. A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors. Proof. First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors. If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn. Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors. Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same. So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}). Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi. That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn. Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3]. Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1). So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn). This completes the proof for the only if direction. For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism. To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof. Now we are ready to introduce the next theorem: Theorem 2. For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint. While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.) Proof. Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ . By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors. We first prove that f has the following properties. Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim. We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0. If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion). Consider the case where all agents bid 0, so that the total VCG payment is also 0. Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0. Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0. Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i. We proved t0 = 0. If tn−1 = 0, consider the bid vector where everyone bids 1. The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0. This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0. Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0). If j > m, the property is satisfied. If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i. Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj. Thus, the total redistribution payment is (n − j)tj. Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0. So tj = 0 (j ≤ m < n). But this is contrary to the definition of j. Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim. For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i. These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i. The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1. Thus, the total VCG redistribution is (n − m − 1)tm+1. The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m). The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm. Combining these two, we get the first inequality. The other inequalities can be obtained in the same way. We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi). Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ . Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case. So far we have only talked about the case where n ≥ m+2. For the purpose of completeness, we provide the following claim for the n = m + 1 case. Claim 7. For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint. We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family. However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties. Proof. Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0. This implies that the total redistribution payment of this mechanism is always nonnegative. By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors. We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0. First, consider the bid vector where ˆvi = 0 for all i. Here, each agent receives a redistribution payment f(0, 0, . . . , 0). The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0). It follows that f(0, 0, . . . , 0) = 0. Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i. For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0). By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0. Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1. Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables. Hence they all receive 0 by induction assumption. The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0). The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment. Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0. So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0. Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism. Incidentally, we obtain the following corollary: Corollary 2. No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance. This holds for any n ≥ m + 1. Proof. For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1. But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case. For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7. But the VCG mechanism is not (strongly) budget balanced. 9. CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit. However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0. If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer. However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents. In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property. In this paper, we extended this result in a restricted setting. We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].) Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents. All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit. The family includes the Bailey-Cavallo mechanism as a special case. We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program. We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case). Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties. One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand. However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0. In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria. Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible. Another direction for future research is to consider whether this mechanism has applications to collusion. For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17]. If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring. This work is part of a growing literature on designing mechanisms that obtain good results in the worst case. Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue). Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]). There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived. Such work often also takes a worst-case competitive analysis approach [14, 13]. It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case. Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10. REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan. Derandomization of auctions. STOC, 619-625, 2005. [2] M. J. Bailey. The demand revealing process: to distribute the surplus. Public Choice, 91:107-126, 1997. [3] R. Cavallo. Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments. AAMAS, 882-889, 2006. [4] E. H. Clarke. Multipart pricing of public goods. Public Choice, 11:17-33, 1971. [5] B. Faltings. A budget-balanced, incentive-compatible scheme for social choice. AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker. Sharing the cost of muliticast transmissions. JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes. Pricing WiFi at Starbucks - Issues in online mechanism design. EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright. Competitive auctions. Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright. Competitive auctions and digital goods. SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall. Collusive bidder behavior at single-object second-price and English auctions. Journal of Political Economy, 95(6):1217-1239, 1987. [11] J. Green and J.-J. Laffont. Characterization of satisfactory mechanisms for the revelation of preferences for public goods. Econometrica, 45:427-438, 1977. [12] T. Groves. Incentives in teams. Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes. Online auctions with re-usable goods. EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes. Adaptive limited-supply online auctions. EC, 71-80, 2004. [15] J. Hartline and R. McGrew. From optimal limited to unlimited supply auctions. EC, 175-182, 2005. [16] L. Hurwicz. On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975. Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz. Bidding clubs in first-price auctions. AAAI, 373-378, 2002. [18] E. Maskin and J. Riley. Optimal multi-unit auctions. In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335. Clarendon Press, Oxford, 1989. [19] H. Moulin. Efficient and strategy-proof assignment with a cheap residual claimant. Working paper, March 2007. [20] R. Myerson. Optimal auction design. Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite. Efficient mechanisms for bilateral trading. Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso. Achieving budget-balance with Vickrey-based payment schemes in exchanges. IJCAI, 1161-1168, 2001. [23] W. Vickrey. Counterspeculation, auctions, and competitive sealed tenders. Journal of Finance, 16:8-37, 1961. 39",
    "original_translation": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente. Considerar al agente an como el agente con la oferta más baja. Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn. Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo. Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón. Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0. Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0. Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original. Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo. Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes). Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0. Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG. Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1. Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit). Ahora damos dos ejemplos de mecanismos en esta familia. Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i. Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente. Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1. Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2). Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i. En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes. Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional. Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye. ¿Cuál de estos dos mecanismos es mejor? ¿Hay otro mecanismo que sea aún mejor? Esto es lo que estudiamos en la próxima sección. 4. Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta. Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada. A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso. Rendimiento en el mejor de los casos. Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra. Considera los dos ejemplos anteriores. Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos. Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0. Dominancia. Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta. Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos. Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia. Supongamos que tal mecanismo existe. Entonces, debería dominar ambos ejemplos anteriores. Considerar el pago VCG restante (el pago VCG no se pudo redistribuir). El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0. Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica. Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie. Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0. Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace). Rendimiento en el peor de los casos. Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza. Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1. Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades. Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso. Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso. Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos. Este porcentaje es indefinido cuando el pago total de VCG es 0. Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos). Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones. Reclamo 1. Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración. Primero, vamos a demostrar que c0 = 0. Considera el vector de oferta en el cual ˆvi = 0 para todo i. Para obtener racionalidad individual, debemos tener c0 ≥ 0. Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0. Así sabemos que c0 = 0. Ahora, si ci = 0 para todos los i, no hay nada que demostrar. De lo contrario, deja que j = min{i|ci = 0}. Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto. En este caso zn = cj, por lo que debemos tener cj ≥ 0. La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta. Considera el mismo vector de oferta que se mencionó anteriormente. Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0. Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0. Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1. Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0. También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0. Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición. Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i. Por lo tanto, estamos atrapados con el mecanismo VCG. A partir de aquí, solo consideramos el caso donde m < n − 1. Reclamo 2. La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Antes de demostrar esta afirmación, introducimos el siguiente lema. Lema 1. Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k). Prueba. Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk. Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos). Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera. Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa. Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente. Ahora estamos listos para presentar la prueba de la Afirmación 2. Prueba. La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Reclamo 3. La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración. La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci. La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento. La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal. Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit). En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1). Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el mecanismo óptimo en el peor caso) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos. De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del mecanismo óptimo en el peor caso (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El mecanismo óptimo en el peor caso supera significativamente al mecanismo de Bailey-Cavallo en el peor caso. Quizás de manera más sorprendente, el mecanismo óptimo en el peor de los casos a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo. Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2. Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1]. La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3. Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1. Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) . Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el mecanismo óptimo en el peor de los casos es de 3.62e−5 en el peor caso. Presentemos detalladamente la solución óptima para el caso n = 5. Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15. Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes. La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%. Finalmente, comparamos el mecanismo óptimo en el peor de los casos con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30. Estos resultados están en la Figura 1. Vemos que para cualquier m, cuando n = m + 2, el mecanismo óptimo en el peor de los casos tiene el mismo rendimiento en el peor de los casos que el mecanismo de Bailey-Cavallo (de hecho, en este caso, el mecanismo óptimo en el peor de los casos es idéntico al mecanismo de Bailey-Cavallo). Cuando n > m + 2, el mecanismo óptimo en el peor de los casos supera al mecanismo de Bailey-Cavallo (en el peor de los casos). 7. CARACTERIZACIÓN ANALÍTICA DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible). Es fácil ver que k está acotado por arriba por 1 (redistribuir más del 100% viola la restricción de no déficit). Además, siempre existe una solución factible, por ejemplo, k = 0 y ci = 0 para todo i. Entonces, siempre existe una solución óptima. Observe que el modelo del programa lineal depende únicamente del número de agentes n y del número de unidades m. Por lo tanto, la solución óptima es una función de n y m. Resulta que esta solución óptima puede caracterizarse analíticamente de la siguiente manera. Teorema 1. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo de peor caso (entre los mecanismos de redistribución lineal VCG) es único. Para este mecanismo, el porcentaje redistribuido en el peor de los casos es k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ El mecanismo óptimo en el peor de los casos se caracteriza por los siguientes valores para los ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! para i = m + 1, . . . , n − 1. Cabe destacar que hemos demostrado que ci = 0 para i ≤ m en la Afirmación 1. Prueba. Primero reescribimos el programa lineal de la siguiente manera. Introducimos nuevas variables xm+1, xm+2, . . . , xn−1, definidas por xj = Pj i=m+1 ci para j = m + 1, . . . , n − 1. El programa lineal se convierte entonces en: Variables: xm+1, xm+2, . . . , xn−1, k Maximizar k Sujeto a: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 para i = m + 1, m + 2, . . . , n − 1 Demostraremos que para cualquier solución óptima de este programa lineal, k = k∗. Además, demostraremos que cuando k = k∗, xj = Pj i=m+1 c∗ i para j = m + 1, . . . , n − 1. Esto demostrará el teorema. Primero hacemos las siguientes observaciones: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m Para i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finalmente, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Resumiendo lo anterior, tenemos: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Sea x∗ j = Pj i=m+1 c∗ i para j = m + 1, m + 2, . . . , n − 1, la primera ecuación anterior nos dice que (n − m − 1)x∗ m+1 = k∗ m. Al sumar las dos primeras ecuaciones, obtenemos (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m Al sumar las tres primeras ecuaciones, obtenemos (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m Al sumar las primeras i ecuaciones, donde i = 2, . . . , n−m−1, obtenemos (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m si i es par (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m si i es impar Finalmente, al sumar todas las ecuaciones, obtenemos nx∗ n−1 = m si n − m es par; nx∗ n−1 = k∗ m si n − m es impar. Por lo tanto, para todas las restricciones excepto las restricciones de no negatividad, hemos demostrado que se satisfacen al establecer xj = x∗ j = Pj i=m+1 c∗ i y k = k∗. A continuación mostramos que las restricciones de no negatividad también se cumplen con esta configuración. Para m + 1 ≤ i, i + 1 ≤ n − 1, tenemos que 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) Esto implica que el valor absoluto de c∗ i está disminuyendo a medida que i aumenta (si el c∗ contiene más de un número). Observamos además que el signo de c∗ i alterna, con el primer elemento c∗ m+1 positivo. Entonces x∗ j = Pj i=m+1 c∗ i ≥ 0 para todo j. Por lo tanto, hemos demostrado que estos xi = x∗ i junto con k = k∗ forman una solución factible del programa lineal. Procedemos a demostrar que de hecho es la única solución óptima. Primero demostramos la siguiente afirmación: Afirmación 4. Si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfacen las siguientes desigualdades: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m para i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Entonces debemos tener que ˆxi = ˆx∗ i y ˆk = k∗. Prueba de la afirmación. Considera la primera desigualdad. Sabemos que (n − m − 1)x∗ m+1 = k∗ m, por lo tanto (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1. Se deduce que ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0). Ahora, considera la siguiente desigualdad para i = 2. Sabemos que (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. Se sigue que (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, por lo que ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0). Ahora considera la siguiente desigualdad para i = 3. Sabemos que (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. Se sigue que (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, por lo que ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0). Procediendo de esta manera hasta i = n−m−1, obtenemos que ˆxm+i ≥ x∗ m+i si i es impar y ˆxm+i ≤ x∗ m+i si i es par. Además, si una desigualdad es estricta, entonces todas las desigualdades subsiguientes son estrictas. Ahora, si podemos demostrar que ˆxn−1 = x∗ n−1, se seguiría que los x∗ i son iguales a los ˆxi (lo que también implica que ˆk = k∗). Consideramos dos casos: Caso 1: n − m es par. Tenemos: n − m par ⇒ n − m − 1 impar ⇒ ˆxn−1 ≥ x∗ n−1. También tenemos: n−m par ⇒ nx∗ n−1 = m. Combinando estos dos, obtenemos m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1. Caso 2: n − m es impar. En este caso, tenemos ˆxn−1 ≤ x∗ n−1, y nx∗ n−1 = k∗ m. Entonces, tenemos: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1. Esto completa la prueba de la afirmación. Se deduce que si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 es una solución factible y ˆk ≥ k∗ , entonces dado que se cumplen todas las desigualdades en la Afirmación 4, debemos tener ˆxi = x∗ i y ˆk = k∗ . Por lo tanto, ninguna otra solución factible es tan buena como la descrita en el teorema. Conocer la caracterización analítica del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales. Primero, utilizar estas fórmulas es computacionalmente más eficiente que resolver el programa lineal utilizando un solucionador de propósito general. Segundo, podemos derivar el siguiente corolario. Corolario 1. Si el número de unidades m está fijo, entonces a medida que el número de agentes n aumenta, el porcentaje redistribuido en el peor de los casos converge linealmente a 1, con una tasa de convergencia de 1 2. (Es decir, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2. Es decir, en el límite, el porcentaje que no se redistribuye se reduce a la mitad por cada agente adicional. Observamos que esto es consistente con los datos experimentales para el caso de una sola unidad, donde el porcentaje restante en el peor de los casos se reduce aproximadamente a la mitad cada vez que agregamos otro agente. El porcentaje redistribuido en el peor de los casos bajo el mecanismo de Bailey-Cavallo también converge a 1 a medida que el número de agentes tiende a infinito, pero la convergencia es mucho más lenta: no converge linealmente (es decir, dejando que kC n sea el porcentaje redistribuido por el mecanismo de Bailey-Cavallo en el peor de los casos para n agentes, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1). Ahora presentamos la prueba del corolario. Prueba. Cuando el número de agentes es n, el porcentaje redistribuido en el peor de los casos es k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) . Cuando el número de agentes es n + 1, el porcentaje se convierte en k∗ n+1 = 1 − (n m) Pn j=m (n j ) . Para n suficientemente grande, tendremos 2n − mnm−1 > 0, y por lo tanto 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , y n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (porque `n j ´ ≤ ni si j ≤ i). Dado que tenemos limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , y limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , se sigue que limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8. En esta sección, demostramos que el mecanismo de redistribución óptimo en el peor de los casos entre los mecanismos de redistribución lineales VCG es de hecho óptimo (en el peor de los casos) entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Por lo tanto, restringir nuestra atención a mecanismos de redistribución lineal VCG no resultó en una pérdida. Para demostrar este teorema, necesitamos el siguiente lema. Este lema no es nuevo: fue enunciado informalmente por Cavallo [3]. Para completitud, lo presentamos aquí con una prueba detallada. Lema 2. Un mecanismo de redistribución VCG es determinístico, anónimo y a prueba de estrategias si y solo si existe una función f: Rn−1 → R, de modo que el pago de redistribución zi recibido por ai cumple zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Prueba. Primero, probemos la dirección \"solo si\", es decir, si un mecanismo de redistribución VCG es determinista, anónimo y a prueba de estrategias, entonces existe una función determinista f: Rn−1 → R, que hace que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Si un mecanismo de redistribución VCG es determinístico y anónimo, entonces para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, el mecanismo produce una lista única de pagos de redistribución: z1, z2, . . . , zn. Sea G: Rn → Rn la función que mapea ˆv1, ˆv2, . . . , ˆvn a z1, z2, . . . , zn para todos los vectores de oferta. Sea H(i, x1, x2, . . . , xn) el i-ésimo elemento de G(x1, x2, . . . , xn), de modo que zi = H(i, ˆv1, ˆv2, . . . , ˆvn) para todos los vectores de oferta y todo 1 ≤ i ≤ n. Debido a que el mecanismo es anónimo, dos agentes deben recibir el mismo pago de redistribución si sus ofertas son iguales. Entonces, si ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Por lo tanto, si dejamos j = min{t|ˆvt = ˆvi}, entonces H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Definamos K : Rn → N × Rn de la siguiente manera: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], donde w1, w2, . . . , wn son y, x1, x2, . . . , xn−1 ordenados en orden descendente, y j = min{t|wt = y}. ({t|wt = y} = ∅ porque y ∈ {w1, w2, . . . , wn}). También definamos F : Rn → R por F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi. Es decir, F es el pago de redistribución a un agente que ofrece ˆvi cuando las otras ofertas son ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn. Dado que nuestro mecanismo debe ser a prueba de estrategias y el espacio de valoraciones es ilimitado, zi debería ser independiente de ˆvi según el Lema 1 en Cavallo [3]. Por lo tanto, podemos simplemente ignorar la primera variable de entrada a F; sea f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1). Por lo tanto, para todos los vectores de oferta y i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn). Esto completa la prueba para la dirección solo si. Para la dirección si, si el pago de redistribución recibido por ai satisface zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todos los vectores de oferta y i, entonces esto es claramente un mecanismo determinístico y anónimo. Para demostrar la estrategia a prueba, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias. Ahora estamos listos para presentar el siguiente teorema: Teorema 2. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo en el peor de los casos dentro de la familia de mecanismos de redistribución lineal VCG es óptimo en el peor de los casos entre todos los mecanismos que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El mecanismo de redistribución lineal VCG óptimo en el peor de los casos, por supuesto, es racional individualmente). Prueba. Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el mecanismo de redistribución lineal VCG óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Primero demostramos que f tiene las siguientes propiedades. Reclamo 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Prueba del reclamo. Supusimos que para este mecanismo, el porcentaje de redistribución en el peor de los casos satisface ˆk > k∗ ≥ 0. Si el pago total VCG es x, el pago total de redistribución debería estar en [ˆkx, x] (criterio de no déficit). Considera el caso en el que todos los agentes ofertan 0, por lo que el pago total de VCG también es 0. Por lo tanto, el pago total de redistribución debería ser de [ˆk · 0, 0], es decir, debería ser 0. Por lo tanto, el pago de redistribución de cada agente f(0, 0, . . . , 0) debe ser 0. Ahora, dejemos que ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) donde el número de 1s es igual a i. Demostramos que t0 = 0. Si tn−1 = 0, considera el vector de oferta donde todos ofrecen 1. El pago total VCG es m y el pago total de redistribución es nf(1, 1, . . . , 1) = ntn−1 = 0. Esto corresponde a una redistribución del 0%, lo cual va en contra de nuestra suposición de que ˆk > k∗ ≥ 0. Ahora, considera j = min{i|ti = 0} (lo cual está bien definido porque tn−1 = 0). Si j > m, la propiedad se cumple. Si j ≤ m, considera el vector de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Bajo este vector de oferta, los primeros j agentes reciben cada uno un pago de redistribución tj−1 = 0, y los restantes n − j agentes reciben cada uno tj. Por lo tanto, el pago total de redistribución es (n − j)tj. Dado que el pago total VCG para este vector de oferta es 0, debemos tener (n − j)tj = 0. Entonces tj = 0 (j ≤ m < n). Pero esto va en contra de la definición de j. Por lo tanto, f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Reclamo 6. f satisface las siguientes desigualdades: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m para i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Aquí ti está definido como en la prueba del Reclamo 5. Prueba del reclamo. Para j = m + 1, . . . , n, considera los vectores de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Estos vectores de oferta junto con la restricción de no déficit y la restricción del peor caso producen el conjunto de desigualdades anterior: por ejemplo, cuando j = m + 1, consideramos el vector de oferta ˆvi = 1 para i ≤ m + 1 y ˆvi = 0 para todos los demás i. Los primeros m+1 agentes reciben cada uno un pago de redistribución de tm = 0, y todos los demás agentes reciben tm+1. Por lo tanto, la redistribución total de VCG es (n − m − 1)tm+1. La restricción de no déficit establece que (n − m − 1)tm+1 ≤ m (porque el pago total VCG es m). La restricción del peor caso establece que (n − m − 1)tm+1 ≥ ˆkm. Combinando estos dos, obtenemos la primera desigualdad. Las otras desigualdades se pueden obtener de la misma manera. Ahora observamos que las desigualdades en la Afirmación 6, junto con ˆk ≥ k∗, son las mismas que las de la Afirmación 4 (donde los ti son reemplazados por los ˆxi). Por lo tanto, podemos concluir que ˆk = k∗, lo cual va en contra de nuestra suposición de que ˆk > k∗. Por lo tanto, ningún mecanismo que cumpla todas las propiedades enumeradas tiene un porcentaje de redistribución mayor que k∗ en el peor de los casos. Hasta ahora solo hemos hablado del caso donde n ≥ m+2. Con el propósito de completitud, proporcionamos la siguiente afirmación para el caso n = m + 1. Reclamación 7. Para cualquier m y n con n = m + 1, el mecanismo VCG original (es decir, redistribuyendo nada) es (de manera única) óptimo en el peor de los casos entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Recordamos que cuando n = m+1, la Afirmación 1 nos dice que el único mecanismo dentro de la familia de mecanismos de redistribución lineal es el mecanismo VCG original, por lo que este mecanismo es automáticamente óptimo en el peor de los casos dentro de esta familia. Sin embargo, para demostrar la afirmación anterior, necesitamos mostrar que es óptimo en el peor de los casos entre todos los mecanismos de redistribución que tienen las propiedades deseadas. Prueba. Supongamos que existe un mecanismo de redistribución que cumple todas las propiedades anteriores y tiene un rendimiento en el peor de los casos tan bueno como el mecanismo VCG original, es decir, su porcentaje de redistribución en el peor de los casos es mayor o igual a 0. Esto implica que el pago total de redistribución de este mecanismo siempre es no negativo. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Demostraremos que f(x1, x2, . . . , xn−1) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0. Primero, considera el vector de oferta donde ˆvi = 0 para todo i. Aquí, cada agente recibe un pago de redistribución f(0, 0, . . . , 0). El pago total de redistribución es entonces nf(0, 0, . . . , 0), que debería ser tanto mayor o igual a 0 (por la observación anterior) como menor o igual a 0 (utilizando el criterio de no déficit y el hecho de que el pago total VCG es 0). Se deduce que f(0, 0, . . . , 0) = 0. Ahora, consideremos el vector de oferta donde ˆv1 = x1 ≥ 0 y ˆvi = 0 para todos los demás i. Para este vector de oferta, el agente con la oferta más alta recibe un pago de redistribución de f(0, 0, . . . , 0) = 0, y los otros n - 1 agentes reciben cada uno f(x1, 0, . . . , 0). Por el mismo razonamiento anterior, el pago total de redistribución debe ser mayor o igual a 0 y menor o igual a 0, por lo tanto f(x1, 0, . . . , 0) = 0 para todo x1 ≥ 0. Procediendo por inducción, asumamos que f(x1, x2, . . . , xk, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, para algún k < n − 1. Considera el vector de oferta donde ˆvi = xi para i ≤ k + 1, y ˆvi = 0 para todos los demás i, donde los xi son números arbitrarios que satisfacen x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Para los agentes con las k + 1 ofertas más altas, su pago de redistribución está especificado por f actuando sobre una entrada con solo k variables no nulas. Por lo tanto, todos reciben 0 por suposición de inducción. Los otros n − k − 1 agentes reciben cada uno f(x1, x2, . . . , xk, xk+1, 0, . . . , 0). El pago total de redistribución es entonces (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), el cual debe ser mayor o igual a 0, y menor o igual al pago total de VCG. Ahora, en este vector de oferta, la oferta más baja es 0 porque k + 1 < n. Pero dado que n = m + 1, el pago total de VCG es mˆvn = 0. Entonces tenemos f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Por inducción, esta afirmación se cumple para todos los k < n − 1; cuando k + 1 = n − 1, tenemos que f(x1, x2, . . . , xn−2, xn−1) = 0 para todos los x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0. Por lo tanto, en este mecanismo, el pago de redistribución siempre es 0; es decir, el mecanismo es simplemente el mecanismo VCG original. Por cierto, obtenemos el siguiente corolario: Corolario 2. Ningún mecanismo de redistribución de VCG satisface todos los siguientes requisitos: determinismo, anonimato, a prueba de estrategias, eficiencia y equilibrio presupuestario (fuerte). Esto se cumple para cualquier n ≥ m + 1. Prueba. Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del mecanismo de redistribución lineal VCG óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1. Pero el Teorema 2 muestra que es imposible superar este mecanismo en el peor de los casos. Para el caso n = m + 1: Si existe tal mecanismo, funcionaría tan bien como el mecanismo VCG original en el peor de los casos, lo que implica que es idéntico al mecanismo VCG según la Afirmación 7. Pero el mecanismo VCG no es (fuertemente) equilibrado en presupuesto. 9. CONCLUSIONES Para problemas de asignación con uno o más artículos, el conocido mecanismo de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendimos este resultado en un entorno restringido. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG 38 de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego proporcionamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Una dirección importante para futuras investigaciones es intentar extender estos resultados más allá de las subastas multiunidad con demanda unitaria. Sin embargo, resulta que en contextos lo suficientemente generales, el porcentaje óptimo de redistribución en el peor de los casos es 0. En tales contextos, el criterio del peor escenario no proporciona orientación para determinar un buen mecanismo de redistribución (incluso redistribuir nada logra el porcentaje óptimo del peor escenario), por lo que se hace necesario seguir otros criterios. Alternativamente, se puede intentar identificar otros escenarios especiales en los que la redistribución positiva en el peor de los casos sea posible. Otra dirección para investigaciones futuras es considerar si este mecanismo tiene aplicaciones en la colusión. Por ejemplo, en un esquema colusorio típico, hay un anillo de licitación compuesto por un número de coludidores, quienes presentan solo una oferta [10, 17]. Si esta oferta gana, los coludidores deben asignarse el artículo entre ellos, quizás utilizando pagos, pero por supuesto no quieren que los pagos salgan del grupo. Este trabajo forma parte de una creciente literatura sobre el diseño de mecanismos que obtienen buenos resultados en el peor de los casos. Tradicionalmente, los economistas se han centrado principalmente en diseñar mecanismos que siempre obtengan ciertas propiedades (como el mecanismo VCG), o en diseñar mecanismos que sean óptimos con respecto a alguna distribución previa de las preferencias de los agentes (como la subasta de Myerson [20] y la subasta de Maskin-Riley [18] para maximizar los ingresos esperados). Algunos trabajos más recientes se han centrado en diseñar mecanismos para maximizar las ganancias utilizando análisis competitivo del peor caso (por ejemplo, [9, 1, 15, 8]). También ha habido un creciente interés en el diseño de mecanismos en línea [7] donde los agentes llegan con el tiempo y las decisiones deben tomarse antes de que todos los agentes hayan llegado. Este tipo de trabajo a menudo también adopta un enfoque de análisis competitivo del peor escenario [14, 13]. No parece que existan conexiones directas entre nuestro trabajo y estos otros trabajos que se centran en diseñar mecanismos que funcionan bien en el peor de los casos. Sin embargo, parece probable que la investigación futura continúe investigando el diseño de mecanismos para el peor de los casos, y con suerte, surgirá un marco coherente. 10. REFERENCIAS [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica y M. Sudan. Desrandomización de subastas. STOC, 619-625, 2005. [2] M. J. Bailey. \n\nSTOC, 619-625, 2005. [2] M. J. Bailey. El proceso de revelación de la demanda: distribuir el excedente. Elección Pública, 91:107-126, 1997. [3] R. Cavallo. Toma de decisiones óptima con un mínimo de desperdicio: redistribución a prueba de estrategias de pagos VCG. AAMAS, 882-889, 2006. [4] E. H. Clarke. \n\nAAMAS, 882-889, 2006. [4] E. H. Clarke. Precios escalonados de bienes públicos. Elección Pública, 11:17-33, 1971. [5] B. Faltings. Un esquema de elección social equilibrado presupuestariamente e incentivo-compatible. AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou y S. Shenker. Compartiendo el costo de las transmisiones multicast. JCSS, 63:21-41, 2001. [7] E. Friedman y D. Parkes. Tarificación del WiFi en Starbucks - Problemas en el diseño de mecanismos en línea. EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, y A. Wright. Subastas competitivas. Juegos y Comportamiento Económico, 2006. [9] A. Goldberg, J. Hartline y A. Wright. Subastas competitivas y bienes digitales. SODA, 735-744, 2001. [10] D. A. Graham y R. C. Marshall. Comportamiento de licitantes colusivos en subastas de segundo precio y subastas inglesas de objeto único. Revista de Economía Política, 95(6):1217-1239, 1987. [11] J. Verde y J.-J. Laffont. Caracterización de mecanismos satisfactorios para la revelación de preferencias por bienes públicos. Econometrica, 45:427-438, 1977. [12] T. Groves.\nEconometrica, 45:427-438, 1977. [12] T. Groves. Incentivos en equipos. Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian y D. C. Parkes. Subastas en línea de bienes reutilizables. EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. EC, 71-80, 2004. [15] J. Hartline y R. McGrew. De subastas de suministro limitado óptimo a ilimitado. EC, 175-182, 2005. [16] L. Hurwicz. \n\nEC, 175-182, 2005. [16] L. Hurwicz. Sobre la existencia de sistemas de asignación cuyos equilibrios de Nash manipulativos son óptimos de Pareto, 1975. Presentado en el 3er Congreso Mundial de la Sociedad de Econometría. [17] K. Leyton-Brown, Y. Shoham y M. Tennenholtz. Clubes que realizan ofertas en subastas de primer precio. AAAI, 373-378, 2002. [18] E. Maskin y J. Riley. Subastas multiunidad óptimas. En F. Hahn, editor, \"La Economía de los Mercados Ausentes, la Información y los Juegos\", capítulo 14, 312-335. Clarendon Press, Oxford, 1989. [19] H. Moulin.\nPrensa Clarendon, Oxford, 1989. [19] H. Moulin. Asignación eficiente y a prueba de estrategias con un reclamante residual barato. Documento de trabajo, marzo de 2007. [20] R. Myerson. Diseño óptimo de subasta. Matemáticas de la Investigación de Operaciones, 6:58-73, 1981. [21] R. Myerson y M. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Revista de Teoría Económica, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam y M. Eso. Lograr el equilibrio presupuestario con esquemas de pago basados en Vickrey en intercambios. IJCAI, 1161-1168, 2001. [23] W. Vickrey. \n\nIJCAI, 1161-1168, 2001. [23] W. Vickrey. Contrarrestando la especulación, subastas y ofertas selladas competitivas. Revista de Finanzas, 16:8-37, 1961. 39",
    "original_sentences": [
        "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
        "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
        "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
        "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
        "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
        "In this paper, we extend this result in a restricted setting.",
        "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
        "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
        "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
        "The family includes the Bailey-Cavallo mechanism as a special case.",
        "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
        "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
        "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
        "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
        "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
        "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
        "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
        "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
        "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
        "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
        "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
        "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
        "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
        "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
        "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
        "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
        "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
        "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
        "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
        "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
        "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
        "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
        "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
        "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
        "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
        "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
        "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
        "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
        "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
        "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
        "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
        "Here we propose the family of linear VCG redistribution mechanisms.",
        "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
        "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
        "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
        "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
        "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
        "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
        "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
        "It turns out that the resulting mechanisms are the same.",
        "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
        "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
        "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
        "We only consider the case where m < n (otherwise the problem becomes trivial).",
        "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
        "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
        "Let vi denote the true value of ai.",
        "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
        "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
        "Thus, the total VCG payment equals mˆvm+1.",
        "When m = 1, this is the second-price or Vickrey auction.",
        "We modify the mechanism as follows.",
        "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
        "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
        "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
        "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
        "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
        "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
        "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
        "Also, the mechanism is anonymous.",
        "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
        "Hence, to obtain these properties, we need to place some constraints on the constants.",
        "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
        "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
        "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
        "Consider agent an, the agent with the lowest bid.",
        "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
        "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
        "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
        "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
        "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
        "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
        "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
        "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
        "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
        "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
        "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
        "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
        "We now give two examples of mechanisms in this family.",
        "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
        "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
        "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
        "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
        "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
        "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
        "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
        "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
        "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
        "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
        "Which of these two mechanisms is better?",
        "Is there another mechanism that is even better?",
        "This is what we study in the next section. 4.",
        "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
        "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
        "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
        "Best-case performance.",
        "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
        "Consider the previous two examples.",
        "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
        "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
        "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
        "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
        "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
        "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
        "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
        "Dominance.",
        "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
        "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
        "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
        "For suppose such a mechanism exists.",
        "Then, it should dominate both examples above.",
        "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
        "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
        "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
        "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
        "But since the function must be linear (has degree at most 1), it follows that P = 0.",
        "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
        "Worst-case performance.",
        "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
        "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
        "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
        "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
        "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
        "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
        "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
        "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
        "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
        "This percentage is undefined when the total VCG payment is 0.",
        "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
        "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
        "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
        "Claim 1.",
        "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
        "First, let us prove that c0 = 0.",
        "Consider the bid vector in which ˆvi = 0 for all i.",
        "To obtain individual rationality, we must have c0 ≥ 0.",
        "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
        "Thus we know c0 = 0.",
        "Now, if ci = 0 for all i, there is nothing to prove.",
        "Otherwise, let j = min{i|ci = 0}.",
        "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
        "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
        "In this case zn = cj, so we must have cj ≥ 0.",
        "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
        "Consider the same bid vector as above.",
        "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
        "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
        "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
        "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
        "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
        "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
        "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
        "Thus, we are stuck with the VCG mechanism.",
        "From here on, we only consider the case where m < n − 1.",
        "Claim 2.",
        "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
        "Before proving this claim, we introduce the following lemma.",
        "Lemma 1.",
        "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
        "Proof.",
        "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
        "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
        "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
        "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
        "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
        "We are now ready to present the proof of Claim 2.",
        "Proof.",
        "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
        "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
        "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
        "Claim 3.",
        "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
        "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
        "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
        "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
        "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
        "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
        "In the table below, we present the results for a single unit (m = 1).",
        "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
        "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
        "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
        "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
        "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
        "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
        "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
        "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
        "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
        "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
        "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
        "Let us present the optimal solution for the case n = 5 in detail.",
        "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
        "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
        "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
        "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
        "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
        "These results are in Figure 1.",
        "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
        "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
        "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
        "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
        "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
        "So an optimal solution always exists.",
        "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
        "Theorem 1.",
        "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
        "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
        "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
        "Proof.",
        "We first rewrite the linear program as follows.",
        "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
        "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
        "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
        "This will prove the theorem.",
        "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
        "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
        "We next show that the nonnegativity constraints are satisfied by these settings as well.",
        "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
        "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
        "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
        "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
        "We proceed to show that it is in fact the unique optimal solution.",
        "First we prove the following claim: Claim 4.",
        "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
        "Proof of claim.",
        "Consider the first inequality.",
        "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
        "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
        "Now, consider the next inequality for i = 2.",
        "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
        "Now consider the next inequality for i = 3.",
        "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
        "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
        "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
        "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
        "We consider two cases: Case 1: n − m is even.",
        "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
        "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
        "Case 2: n − m is odd.",
        "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
        "This completes the proof of the claim.",
        "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
        "Hence no other feasible solution is as good as the one described in the theorem.",
        "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
        "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
        "Second, we can derive the following corollary.",
        "Corollary 1.",
        "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
        "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
        "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
        "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
        "We now present the proof of the corollary.",
        "Proof.",
        "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
        "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
        "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
        "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
        "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
        "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
        "To prove this theorem, we need the following lemma.",
        "This lemma is not new: it was informally stated by Cavallo [3].",
        "For completeness, we present it here with a detailed proof.",
        "Lemma 2.",
        "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
        "Proof.",
        "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
        "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
        "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
        "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
        "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
        "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
        "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
        "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
        "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
        "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
        "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
        "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
        "This completes the proof for the only if direction.",
        "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
        "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
        "Now we are ready to introduce the next theorem: Theorem 2.",
        "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
        "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
        "Proof.",
        "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
        "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
        "We first prove that f has the following properties.",
        "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
        "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
        "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
        "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
        "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
        "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
        "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
        "We proved t0 = 0.",
        "If tn−1 = 0, consider the bid vector where everyone bids 1.",
        "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
        "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
        "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
        "If j > m, the property is satisfied.",
        "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
        "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
        "Thus, the total redistribution payment is (n − j)tj.",
        "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
        "So tj = 0 (j ≤ m < n).",
        "But this is contrary to the definition of j.",
        "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
        "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
        "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
        "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
        "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
        "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
        "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
        "Combining these two, we get the first inequality.",
        "The other inequalities can be obtained in the same way.",
        "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
        "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
        "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
        "So far we have only talked about the case where n ≥ m+2.",
        "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
        "Claim 7.",
        "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
        "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
        "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
        "Proof.",
        "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
        "This implies that the total redistribution payment of this mechanism is always nonnegative.",
        "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
        "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
        "First, consider the bid vector where ˆvi = 0 for all i.",
        "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
        "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
        "It follows that f(0, 0, . . . , 0) = 0.",
        "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
        "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
        "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
        "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
        "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
        "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
        "Hence they all receive 0 by induction assumption.",
        "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
        "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
        "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
        "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
        "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
        "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
        "Incidentally, we obtain the following corollary: Corollary 2.",
        "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
        "This holds for any n ≥ m + 1.",
        "Proof.",
        "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
        "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
        "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
        "But the VCG mechanism is not (strongly) budget balanced. 9.",
        "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
        "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
        "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
        "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
        "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
        "In this paper, we extended this result in a restricted setting.",
        "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
        "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
        "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
        "The family includes the Bailey-Cavallo mechanism as a special case.",
        "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
        "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
        "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
        "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
        "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
        "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
        "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
        "Another direction for future research is to consider whether this mechanism has applications to collusion.",
        "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
        "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
        "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
        "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
        "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
        "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
        "Such work often also takes a worst-case competitive analysis approach [14, 13].",
        "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
        "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
        "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
        "Derandomization of auctions.",
        "STOC, 619-625, 2005. [2] M. J. Bailey.",
        "The demand revealing process: to distribute the surplus.",
        "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
        "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
        "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
        "Multipart pricing of public goods.",
        "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
        "A budget-balanced, incentive-compatible scheme for social choice.",
        "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
        "Sharing the cost of muliticast transmissions.",
        "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
        "Pricing WiFi at Starbucks - Issues in online mechanism design.",
        "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
        "Competitive auctions.",
        "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
        "Competitive auctions and digital goods.",
        "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
        "Collusive bidder behavior at single-object second-price and English auctions.",
        "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
        "Green and J.-J.",
        "Laffont.",
        "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
        "Econometrica, 45:427-438, 1977. [12] T. Groves.",
        "Incentives in teams.",
        "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
        "Online auctions with re-usable goods.",
        "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
        "Adaptive limited-supply online auctions.",
        "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
        "From optimal limited to unlimited supply auctions.",
        "EC, 175-182, 2005. [16] L. Hurwicz.",
        "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
        "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
        "Bidding clubs in first-price auctions.",
        "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
        "Optimal multi-unit auctions.",
        "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
        "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
        "Efficient and strategy-proof assignment with a cheap residual claimant.",
        "Working paper, March 2007. [20] R. Myerson.",
        "Optimal auction design.",
        "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
        "Efficient mechanisms for bilateral trading.",
        "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
        "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
        "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
        "Counterspeculation, auctions, and competitive sealed tenders.",
        "Journal of Finance, 16:8-37, 1961. 39"
    ],
    "translated_text_sentences": [
        "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit.",
        "Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0.",
        "Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador.",
        "Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes.",
        "En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit.",
        "En este artículo, extendemos este resultado en un entorno restringido.",
        "Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].)",
        "Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes.",
        "Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit.",
        "La familia incluye el mecanismo Bailey-Cavallo como un caso especial.",
        "Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal.",
        "Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos).",
        "Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente.",
        "Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1.",
        "INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos.",
        "En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran.",
        "Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia.",
        "Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos.",
        "Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias.",
        "Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada).",
        "Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos.",
        "Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes.",
        "También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara.",
        "Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa.",
        "En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0.",
        "Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo.",
        "Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado.",
        "O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva.",
        "Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo).",
        "La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande).",
        "Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente.",
        "Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21].",
        "A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5].",
        "Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables.",
        "Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades.",
        "En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG.",
        "Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i.",
        "La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta.",
        "En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo.",
        "Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad.",
        "Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].",
        "Aquí proponemos la familia de mecanismos de redistribución lineal VCG.",
        "Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit.",
        "La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones).",
        "Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso.",
        "Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos).",
        "Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos).",
        "Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables.",
        "Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia.",
        "Resulta que los mecanismos resultantes son los mismos.",
        "Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo.",
        "Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2.",
        "DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades.",
        "Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial).",
        "También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución).",
        "Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
        "Que vi denote el valor verdadero de ai.",
        "Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi.",
        "Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad.",
        "Por lo tanto, el pago total de VCG es igual a mˆvm+1.",
        "Cuando m = 1, esta es la subasta de segundo precio o Vickrey.",
        "Modificamos el mecanismo de la siguiente manera.",
        "Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai.",
        "No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3.",
        "Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG.",
        "Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1.",
        "La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
        "Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc.",
        "El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi.",
        "Además, el mecanismo es anónimo.",
        "Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit.",
        "Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes.",
        "Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa.",
        "Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente.",
        "Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente.",
        "Considerar al agente an como el agente con la oferta más baja.",
        "Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn.",
        "Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo.",
        "Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón.",
        "Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0.",
        "Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0.",
        "Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original.",
        "Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo.",
        "Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes).",
        "Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0.",
        "Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG.",
        "Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1.",
        "Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit).",
        "Ahora damos dos ejemplos de mecanismos en esta familia.",
        "Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i.",
        "Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente.",
        "Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1.",
        "Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
        "Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2).",
        "Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i.",
        "En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes.",
        "Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
        "Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional.",
        "Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye.",
        "¿Cuál de estos dos mecanismos es mejor?",
        "¿Hay otro mecanismo que sea aún mejor?",
        "Esto es lo que estudiamos en la próxima sección. 4.",
        "Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta.",
        "Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada.",
        "A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso.",
        "Rendimiento en el mejor de los casos.",
        "Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra.",
        "Considera los dos ejemplos anteriores.",
        "Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
        "Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1.",
        "Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos.",
        "Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
        "Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1.",
        "Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos.",
        "Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0.",
        "Dominancia.",
        "Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta.",
        "Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos.",
        "Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia.",
        "Supongamos que tal mecanismo existe.",
        "Entonces, debería dominar ambos ejemplos anteriores.",
        "Considerar el pago VCG restante (el pago VCG no se pudo redistribuir).",
        "El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0.",
        "Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica.",
        "Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie.",
        "Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0.",
        "Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace).",
        "Rendimiento en el peor de los casos.",
        "Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza.",
        "Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1.",
        "Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n.",
        "Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
        "Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
        "Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades.",
        "Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso.",
        "Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso.",
        "Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos.",
        "Este porcentaje es indefinido cuando el pago total de VCG es 0.",
        "Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos).",
        "Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
        "TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones.",
        "Reclamo 1.",
        "Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración.",
        "Primero, vamos a demostrar que c0 = 0.",
        "Considera el vector de oferta en el cual ˆvi = 0 para todo i.",
        "Para obtener racionalidad individual, debemos tener c0 ≥ 0.",
        "Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0.",
        "Así sabemos que c0 = 0.",
        "Ahora, si ci = 0 para todos los i, no hay nada que demostrar.",
        "De lo contrario, deja que j = min{i|ci = 0}.",
        "Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta.",
        "Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto.",
        "En este caso zn = cj, por lo que debemos tener cj ≥ 0.",
        "La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta.",
        "Considera el mismo vector de oferta que se mencionó anteriormente.",
        "Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0.",
        "Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0.",
        "Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1.",
        "Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0.",
        "También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0.",
        "Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición.",
        "Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i.",
        "Por lo tanto, estamos atrapados con el mecanismo VCG.",
        "A partir de aquí, solo consideramos el caso donde m < n − 1.",
        "Reclamo 2.",
        "La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1.",
        "Antes de demostrar esta afirmación, introducimos el siguiente lema.",
        "Lema 1.",
        "Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k).",
        "Prueba.",
        "Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk.",
        "Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos).",
        "Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera.",
        "Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa.",
        "Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente.",
        "Ahora estamos listos para presentar la prueba de la Afirmación 2.",
        "Prueba.",
        "La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
        "Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta.",
        "Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1.",
        "Reclamo 3.",
        "La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración.",
        "La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci.",
        "La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento.",
        "La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal.",
        "Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
        "RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit).",
        "En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1).",
        "Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el mecanismo óptimo en el peor caso) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos.",
        "De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del mecanismo óptimo en el peor caso (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El mecanismo óptimo en el peor caso supera significativamente al mecanismo de Bailey-Cavallo en el peor caso.",
        "Quizás de manera más sorprendente, el mecanismo óptimo en el peor de los casos a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo.",
        "Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
        "Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2.",
        "Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2.",
        "Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1].",
        "La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3.",
        "Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1.",
        "Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
        "Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el mecanismo óptimo en el peor de los casos es de 3.62e−5 en el peor caso.",
        "Presentemos detalladamente la solución óptima para el caso n = 5.",
        "Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15.",
        "Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes.",
        "La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2.",
        "Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%.",
        "Finalmente, comparamos el mecanismo óptimo en el peor de los casos con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
        "Estos resultados están en la Figura 1.",
        "Vemos que para cualquier m, cuando n = m + 2, el mecanismo óptimo en el peor de los casos tiene el mismo rendimiento en el peor de los casos que el mecanismo de Bailey-Cavallo (de hecho, en este caso, el mecanismo óptimo en el peor de los casos es idéntico al mecanismo de Bailey-Cavallo).",
        "Cuando n > m + 2, el mecanismo óptimo en el peor de los casos supera al mecanismo de Bailey-Cavallo (en el peor de los casos). 7.",
        "CARACTERIZACIÓN ANALÍTICA DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible).",
        "Es fácil ver que k está acotado por arriba por 1 (redistribuir más del 100% viola la restricción de no déficit).",
        "Además, siempre existe una solución factible, por ejemplo, k = 0 y ci = 0 para todo i.",
        "Entonces, siempre existe una solución óptima.",
        "Observe que el modelo del programa lineal depende únicamente del número de agentes n y del número de unidades m. Por lo tanto, la solución óptima es una función de n y m. Resulta que esta solución óptima puede caracterizarse analíticamente de la siguiente manera.",
        "Teorema 1.",
        "Para cualquier m y n con n ≥ m+2, el mecanismo óptimo de peor caso (entre los mecanismos de redistribución lineal VCG) es único.",
        "Para este mecanismo, el porcentaje redistribuido en el peor de los casos es k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ El mecanismo óptimo en el peor de los casos se caracteriza por los siguientes valores para los ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! para i = m + 1, . . . , n − 1.",
        "Cabe destacar que hemos demostrado que ci = 0 para i ≤ m en la Afirmación 1.",
        "Prueba.",
        "Primero reescribimos el programa lineal de la siguiente manera.",
        "Introducimos nuevas variables xm+1, xm+2, . . . , xn−1, definidas por xj = Pj i=m+1 ci para j = m + 1, . . . , n − 1.",
        "El programa lineal se convierte entonces en: Variables: xm+1, xm+2, . . . , xn−1, k Maximizar k Sujeto a: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 para i = m + 1, m + 2, . . . , n − 1 Demostraremos que para cualquier solución óptima de este programa lineal, k = k∗.",
        "Además, demostraremos que cuando k = k∗, xj = Pj i=m+1 c∗ i para j = m + 1, . . . , n − 1.",
        "Esto demostrará el teorema.",
        "Primero hacemos las siguientes observaciones: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m Para i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finalmente, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Resumiendo lo anterior, tenemos: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Sea x∗ j = Pj i=m+1 c∗ i para j = m + 1, m + 2, . . . , n − 1, la primera ecuación anterior nos dice que (n − m − 1)x∗ m+1 = k∗ m. Al sumar las dos primeras ecuaciones, obtenemos (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m Al sumar las tres primeras ecuaciones, obtenemos (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m Al sumar las primeras i ecuaciones, donde i = 2, . . . , n−m−1, obtenemos (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m si i es par (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m si i es impar Finalmente, al sumar todas las ecuaciones, obtenemos nx∗ n−1 = m si n − m es par; nx∗ n−1 = k∗ m si n − m es impar.",
        "Por lo tanto, para todas las restricciones excepto las restricciones de no negatividad, hemos demostrado que se satisfacen al establecer xj = x∗ j = Pj i=m+1 c∗ i y k = k∗.",
        "A continuación mostramos que las restricciones de no negatividad también se cumplen con esta configuración.",
        "Para m + 1 ≤ i, i + 1 ≤ n − 1, tenemos que 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) Esto implica que el valor absoluto de c∗ i está disminuyendo a medida que i aumenta (si el c∗ contiene más de un número).",
        "Observamos además que el signo de c∗ i alterna, con el primer elemento c∗ m+1 positivo.",
        "Entonces x∗ j = Pj i=m+1 c∗ i ≥ 0 para todo j.",
        "Por lo tanto, hemos demostrado que estos xi = x∗ i junto con k = k∗ forman una solución factible del programa lineal.",
        "Procedemos a demostrar que de hecho es la única solución óptima.",
        "Primero demostramos la siguiente afirmación: Afirmación 4.",
        "Si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfacen las siguientes desigualdades: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m para i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Entonces debemos tener que ˆxi = ˆx∗ i y ˆk = k∗.",
        "Prueba de la afirmación.",
        "Considera la primera desigualdad.",
        "Sabemos que (n − m − 1)x∗ m+1 = k∗ m, por lo tanto (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
        "Se deduce que ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
        "Ahora, considera la siguiente desigualdad para i = 2.",
        "Sabemos que (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. Se sigue que (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, por lo que ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
        "Ahora considera la siguiente desigualdad para i = 3.",
        "Sabemos que (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. Se sigue que (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, por lo que ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
        "Procediendo de esta manera hasta i = n−m−1, obtenemos que ˆxm+i ≥ x∗ m+i si i es impar y ˆxm+i ≤ x∗ m+i si i es par.",
        "Además, si una desigualdad es estricta, entonces todas las desigualdades subsiguientes son estrictas.",
        "Ahora, si podemos demostrar que ˆxn−1 = x∗ n−1, se seguiría que los x∗ i son iguales a los ˆxi (lo que también implica que ˆk = k∗).",
        "Consideramos dos casos: Caso 1: n − m es par.",
        "Tenemos: n − m par ⇒ n − m − 1 impar ⇒ ˆxn−1 ≥ x∗ n−1.",
        "También tenemos: n−m par ⇒ nx∗ n−1 = m. Combinando estos dos, obtenemos m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
        "Caso 2: n − m es impar.",
        "En este caso, tenemos ˆxn−1 ≤ x∗ n−1, y nx∗ n−1 = k∗ m. Entonces, tenemos: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
        "Esto completa la prueba de la afirmación.",
        "Se deduce que si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 es una solución factible y ˆk ≥ k∗ , entonces dado que se cumplen todas las desigualdades en la Afirmación 4, debemos tener ˆxi = x∗ i y ˆk = k∗ .",
        "Por lo tanto, ninguna otra solución factible es tan buena como la descrita en el teorema.",
        "Conocer la caracterización analítica del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales.",
        "Primero, utilizar estas fórmulas es computacionalmente más eficiente que resolver el programa lineal utilizando un solucionador de propósito general.",
        "Segundo, podemos derivar el siguiente corolario.",
        "Corolario 1.",
        "Si el número de unidades m está fijo, entonces a medida que el número de agentes n aumenta, el porcentaje redistribuido en el peor de los casos converge linealmente a 1, con una tasa de convergencia de 1 2. (Es decir, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2.",
        "Es decir, en el límite, el porcentaje que no se redistribuye se reduce a la mitad por cada agente adicional.",
        "Observamos que esto es consistente con los datos experimentales para el caso de una sola unidad, donde el porcentaje restante en el peor de los casos se reduce aproximadamente a la mitad cada vez que agregamos otro agente.",
        "El porcentaje redistribuido en el peor de los casos bajo el mecanismo de Bailey-Cavallo también converge a 1 a medida que el número de agentes tiende a infinito, pero la convergencia es mucho más lenta: no converge linealmente (es decir, dejando que kC n sea el porcentaje redistribuido por el mecanismo de Bailey-Cavallo en el peor de los casos para n agentes, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
        "Ahora presentamos la prueba del corolario.",
        "Prueba.",
        "Cuando el número de agentes es n, el porcentaje redistribuido en el peor de los casos es k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
        "Cuando el número de agentes es n + 1, el porcentaje se convierte en k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
        "Para n suficientemente grande, tendremos 2n − mnm−1 > 0, y por lo tanto 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , y n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (porque `n j ´ ≤ ni si j ≤ i).",
        "Dado que tenemos limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , y limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , se sigue que limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
        "En esta sección, demostramos que el mecanismo de redistribución óptimo en el peor de los casos entre los mecanismos de redistribución lineales VCG es de hecho óptimo (en el peor de los casos) entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit.",
        "Por lo tanto, restringir nuestra atención a mecanismos de redistribución lineal VCG no resultó en una pérdida.",
        "Para demostrar este teorema, necesitamos el siguiente lema.",
        "Este lema no es nuevo: fue enunciado informalmente por Cavallo [3].",
        "Para completitud, lo presentamos aquí con una prueba detallada.",
        "Lema 2.",
        "Un mecanismo de redistribución VCG es determinístico, anónimo y a prueba de estrategias si y solo si existe una función f: Rn−1 → R, de modo que el pago de redistribución zi recibido por ai cumple zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta.",
        "Prueba.",
        "Primero, probemos la dirección \"solo si\", es decir, si un mecanismo de redistribución VCG es determinista, anónimo y a prueba de estrategias, entonces existe una función determinista f: Rn−1 → R, que hace que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta.",
        "Si un mecanismo de redistribución VCG es determinístico y anónimo, entonces para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, el mecanismo produce una lista única de pagos de redistribución: z1, z2, . . . , zn.",
        "Sea G: Rn → Rn la función que mapea ˆv1, ˆv2, . . . , ˆvn a z1, z2, . . . , zn para todos los vectores de oferta.",
        "Sea H(i, x1, x2, . . . , xn) el i-ésimo elemento de G(x1, x2, . . . , xn), de modo que zi = H(i, ˆv1, ˆv2, . . . , ˆvn) para todos los vectores de oferta y todo 1 ≤ i ≤ n. Debido a que el mecanismo es anónimo, dos agentes deben recibir el mismo pago de redistribución si sus ofertas son iguales.",
        "Entonces, si ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
        "Por lo tanto, si dejamos j = min{t|ˆvt = ˆvi}, entonces H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
        "Definamos K : Rn → N × Rn de la siguiente manera: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], donde w1, w2, . . . , wn son y, x1, x2, . . . , xn−1 ordenados en orden descendente, y j = min{t|wt = y}. ({t|wt = y} = ∅ porque y ∈ {w1, w2, . . . , wn}).",
        "También definamos F : Rn → R por F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
        "Es decir, F es el pago de redistribución a un agente que ofrece ˆvi cuando las otras ofertas son ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
        "Dado que nuestro mecanismo debe ser a prueba de estrategias y el espacio de valoraciones es ilimitado, zi debería ser independiente de ˆvi según el Lema 1 en Cavallo [3].",
        "Por lo tanto, podemos simplemente ignorar la primera variable de entrada a F; sea f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
        "Por lo tanto, para todos los vectores de oferta y i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
        "Esto completa la prueba para la dirección solo si.",
        "Para la dirección si, si el pago de redistribución recibido por ai satisface zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todos los vectores de oferta y i, entonces esto es claramente un mecanismo determinístico y anónimo.",
        "Para demostrar la estrategia a prueba, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias.",
        "Ahora estamos listos para presentar el siguiente teorema: Teorema 2.",
        "Para cualquier m y n con n ≥ m+2, el mecanismo óptimo en el peor de los casos dentro de la familia de mecanismos de redistribución lineal VCG es óptimo en el peor de los casos entre todos los mecanismos que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit.",
        "Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El mecanismo de redistribución lineal VCG óptimo en el peor de los casos, por supuesto, es racional individualmente).",
        "Prueba.",
        "Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el mecanismo de redistribución lineal VCG óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗.",
        "Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta.",
        "Primero demostramos que f tiene las siguientes propiedades.",
        "Reclamo 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Prueba del reclamo.",
        "Supusimos que para este mecanismo, el porcentaje de redistribución en el peor de los casos satisface ˆk > k∗ ≥ 0.",
        "Si el pago total VCG es x, el pago total de redistribución debería estar en [ˆkx, x] (criterio de no déficit).",
        "Considera el caso en el que todos los agentes ofertan 0, por lo que el pago total de VCG también es 0.",
        "Por lo tanto, el pago total de redistribución debería ser de [ˆk · 0, 0], es decir, debería ser 0.",
        "Por lo tanto, el pago de redistribución de cada agente f(0, 0, . . . , 0) debe ser 0.",
        "Ahora, dejemos que ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) donde el número de 1s es igual a i.",
        "Demostramos que t0 = 0.",
        "Si tn−1 = 0, considera el vector de oferta donde todos ofrecen 1.",
        "El pago total VCG es m y el pago total de redistribución es nf(1, 1, . . . , 1) = ntn−1 = 0.",
        "Esto corresponde a una redistribución del 0%, lo cual va en contra de nuestra suposición de que ˆk > k∗ ≥ 0.",
        "Ahora, considera j = min{i|ti = 0} (lo cual está bien definido porque tn−1 = 0).",
        "Si j > m, la propiedad se cumple.",
        "Si j ≤ m, considera el vector de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i.",
        "Bajo este vector de oferta, los primeros j agentes reciben cada uno un pago de redistribución tj−1 = 0, y los restantes n − j agentes reciben cada uno tj.",
        "Por lo tanto, el pago total de redistribución es (n − j)tj.",
        "Dado que el pago total VCG para este vector de oferta es 0, debemos tener (n − j)tj = 0.",
        "Entonces tj = 0 (j ≤ m < n).",
        "Pero esto va en contra de la definición de j.",
        "Por lo tanto, f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Reclamo 6. f satisface las siguientes desigualdades: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m para i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Aquí ti está definido como en la prueba del Reclamo 5. Prueba del reclamo.",
        "Para j = m + 1, . . . , n, considera los vectores de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i.",
        "Estos vectores de oferta junto con la restricción de no déficit y la restricción del peor caso producen el conjunto de desigualdades anterior: por ejemplo, cuando j = m + 1, consideramos el vector de oferta ˆvi = 1 para i ≤ m + 1 y ˆvi = 0 para todos los demás i.",
        "Los primeros m+1 agentes reciben cada uno un pago de redistribución de tm = 0, y todos los demás agentes reciben tm+1.",
        "Por lo tanto, la redistribución total de VCG es (n − m − 1)tm+1.",
        "La restricción de no déficit establece que (n − m − 1)tm+1 ≤ m (porque el pago total VCG es m).",
        "La restricción del peor caso establece que (n − m − 1)tm+1 ≥ ˆkm.",
        "Combinando estos dos, obtenemos la primera desigualdad.",
        "Las otras desigualdades se pueden obtener de la misma manera.",
        "Ahora observamos que las desigualdades en la Afirmación 6, junto con ˆk ≥ k∗, son las mismas que las de la Afirmación 4 (donde los ti son reemplazados por los ˆxi).",
        "Por lo tanto, podemos concluir que ˆk = k∗, lo cual va en contra de nuestra suposición de que ˆk > k∗.",
        "Por lo tanto, ningún mecanismo que cumpla todas las propiedades enumeradas tiene un porcentaje de redistribución mayor que k∗ en el peor de los casos.",
        "Hasta ahora solo hemos hablado del caso donde n ≥ m+2.",
        "Con el propósito de completitud, proporcionamos la siguiente afirmación para el caso n = m + 1.",
        "Reclamación 7.",
        "Para cualquier m y n con n = m + 1, el mecanismo VCG original (es decir, redistribuyendo nada) es (de manera única) óptimo en el peor de los casos entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit.",
        "Recordamos que cuando n = m+1, la Afirmación 1 nos dice que el único mecanismo dentro de la familia de mecanismos de redistribución lineal es el mecanismo VCG original, por lo que este mecanismo es automáticamente óptimo en el peor de los casos dentro de esta familia.",
        "Sin embargo, para demostrar la afirmación anterior, necesitamos mostrar que es óptimo en el peor de los casos entre todos los mecanismos de redistribución que tienen las propiedades deseadas.",
        "Prueba.",
        "Supongamos que existe un mecanismo de redistribución que cumple todas las propiedades anteriores y tiene un rendimiento en el peor de los casos tan bueno como el mecanismo VCG original, es decir, su porcentaje de redistribución en el peor de los casos es mayor o igual a 0.",
        "Esto implica que el pago total de redistribución de este mecanismo siempre es no negativo.",
        "Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta.",
        "Demostraremos que f(x1, x2, . . . , xn−1) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
        "Primero, considera el vector de oferta donde ˆvi = 0 para todo i.",
        "Aquí, cada agente recibe un pago de redistribución f(0, 0, . . . , 0).",
        "El pago total de redistribución es entonces nf(0, 0, . . . , 0), que debería ser tanto mayor o igual a 0 (por la observación anterior) como menor o igual a 0 (utilizando el criterio de no déficit y el hecho de que el pago total VCG es 0).",
        "Se deduce que f(0, 0, . . . , 0) = 0.",
        "Ahora, consideremos el vector de oferta donde ˆv1 = x1 ≥ 0 y ˆvi = 0 para todos los demás i.",
        "Para este vector de oferta, el agente con la oferta más alta recibe un pago de redistribución de f(0, 0, . . . , 0) = 0, y los otros n - 1 agentes reciben cada uno f(x1, 0, . . . , 0).",
        "Por el mismo razonamiento anterior, el pago total de redistribución debe ser mayor o igual a 0 y menor o igual a 0, por lo tanto f(x1, 0, . . . , 0) = 0 para todo x1 ≥ 0.",
        "Procediendo por inducción, asumamos que f(x1, x2, . . . , xk, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, para algún k < n − 1.",
        "Considera el vector de oferta donde ˆvi = xi para i ≤ k + 1, y ˆvi = 0 para todos los demás i, donde los xi son números arbitrarios que satisfacen x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
        "Para los agentes con las k + 1 ofertas más altas, su pago de redistribución está especificado por f actuando sobre una entrada con solo k variables no nulas.",
        "Por lo tanto, todos reciben 0 por suposición de inducción.",
        "Los otros n − k − 1 agentes reciben cada uno f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
        "El pago total de redistribución es entonces (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), el cual debe ser mayor o igual a 0, y menor o igual al pago total de VCG.",
        "Ahora, en este vector de oferta, la oferta más baja es 0 porque k + 1 < n. Pero dado que n = m + 1, el pago total de VCG es mˆvn = 0.",
        "Entonces tenemos f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
        "Por inducción, esta afirmación se cumple para todos los k < n − 1; cuando k + 1 = n − 1, tenemos que f(x1, x2, . . . , xn−2, xn−1) = 0 para todos los x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
        "Por lo tanto, en este mecanismo, el pago de redistribución siempre es 0; es decir, el mecanismo es simplemente el mecanismo VCG original.",
        "Por cierto, obtenemos el siguiente corolario: Corolario 2.",
        "Ningún mecanismo de redistribución de VCG satisface todos los siguientes requisitos: determinismo, anonimato, a prueba de estrategias, eficiencia y equilibrio presupuestario (fuerte).",
        "Esto se cumple para cualquier n ≥ m + 1.",
        "Prueba.",
        "Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del mecanismo de redistribución lineal VCG óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1.",
        "Pero el Teorema 2 muestra que es imposible superar este mecanismo en el peor de los casos.",
        "Para el caso n = m + 1: Si existe tal mecanismo, funcionaría tan bien como el mecanismo VCG original en el peor de los casos, lo que implica que es idéntico al mecanismo VCG según la Afirmación 7.",
        "Pero el mecanismo VCG no es (fuertemente) equilibrado en presupuesto. 9.",
        "CONCLUSIONES Para problemas de asignación con uno o más artículos, el conocido mecanismo de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit.",
        "Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0.",
        "Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador.",
        "Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes.",
        "En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit.",
        "En este artículo, extendimos este resultado en un entorno restringido.",
        "Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].)",
        "Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG 38 de vuelta a los agentes.",
        "Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit.",
        "La familia incluye el mecanismo Bailey-Cavallo como un caso especial.",
        "Luego proporcionamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal.",
        "Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos).",
        "Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente.",
        "Una dirección importante para futuras investigaciones es intentar extender estos resultados más allá de las subastas multiunidad con demanda unitaria.",
        "Sin embargo, resulta que en contextos lo suficientemente generales, el porcentaje óptimo de redistribución en el peor de los casos es 0.",
        "En tales contextos, el criterio del peor escenario no proporciona orientación para determinar un buen mecanismo de redistribución (incluso redistribuir nada logra el porcentaje óptimo del peor escenario), por lo que se hace necesario seguir otros criterios.",
        "Alternativamente, se puede intentar identificar otros escenarios especiales en los que la redistribución positiva en el peor de los casos sea posible.",
        "Otra dirección para investigaciones futuras es considerar si este mecanismo tiene aplicaciones en la colusión.",
        "Por ejemplo, en un esquema colusorio típico, hay un anillo de licitación compuesto por un número de coludidores, quienes presentan solo una oferta [10, 17].",
        "Si esta oferta gana, los coludidores deben asignarse el artículo entre ellos, quizás utilizando pagos, pero por supuesto no quieren que los pagos salgan del grupo.",
        "Este trabajo forma parte de una creciente literatura sobre el diseño de mecanismos que obtienen buenos resultados en el peor de los casos.",
        "Tradicionalmente, los economistas se han centrado principalmente en diseñar mecanismos que siempre obtengan ciertas propiedades (como el mecanismo VCG), o en diseñar mecanismos que sean óptimos con respecto a alguna distribución previa de las preferencias de los agentes (como la subasta de Myerson [20] y la subasta de Maskin-Riley [18] para maximizar los ingresos esperados).",
        "Algunos trabajos más recientes se han centrado en diseñar mecanismos para maximizar las ganancias utilizando análisis competitivo del peor caso (por ejemplo, [9, 1, 15, 8]).",
        "También ha habido un creciente interés en el diseño de mecanismos en línea [7] donde los agentes llegan con el tiempo y las decisiones deben tomarse antes de que todos los agentes hayan llegado.",
        "Este tipo de trabajo a menudo también adopta un enfoque de análisis competitivo del peor escenario [14, 13].",
        "No parece que existan conexiones directas entre nuestro trabajo y estos otros trabajos que se centran en diseñar mecanismos que funcionan bien en el peor de los casos.",
        "Sin embargo, parece probable que la investigación futura continúe investigando el diseño de mecanismos para el peor de los casos, y con suerte, surgirá un marco coherente. 10.",
        "REFERENCIAS [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica y M. Sudan.",
        "Desrandomización de subastas.",
        "STOC, 619-625, 2005. [2] M. J. Bailey. \n\nSTOC, 619-625, 2005. [2] M. J. Bailey.",
        "El proceso de revelación de la demanda: distribuir el excedente.",
        "Elección Pública, 91:107-126, 1997. [3] R. Cavallo.",
        "Toma de decisiones óptima con un mínimo de desperdicio: redistribución a prueba de estrategias de pagos VCG.",
        "AAMAS, 882-889, 2006. [4] E. H. Clarke. \n\nAAMAS, 882-889, 2006. [4] E. H. Clarke.",
        "Precios escalonados de bienes públicos.",
        "Elección Pública, 11:17-33, 1971. [5] B. Faltings.",
        "Un esquema de elección social equilibrado presupuestariamente e incentivo-compatible.",
        "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou y S. Shenker.",
        "Compartiendo el costo de las transmisiones multicast.",
        "JCSS, 63:21-41, 2001. [7] E. Friedman y D. Parkes.",
        "Tarificación del WiFi en Starbucks - Problemas en el diseño de mecanismos en línea.",
        "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, y A. Wright.",
        "Subastas competitivas.",
        "Juegos y Comportamiento Económico, 2006. [9] A. Goldberg, J. Hartline y A. Wright.",
        "Subastas competitivas y bienes digitales.",
        "SODA, 735-744, 2001. [10] D. A. Graham y R. C. Marshall.",
        "Comportamiento de licitantes colusivos en subastas de segundo precio y subastas inglesas de objeto único.",
        "Revista de Economía Política, 95(6):1217-1239, 1987. [11] J.",
        "Verde y J.-J.",
        "Laffont.",
        "Caracterización de mecanismos satisfactorios para la revelación de preferencias por bienes públicos.",
        "Econometrica, 45:427-438, 1977. [12] T. Groves.\nEconometrica, 45:427-438, 1977. [12] T. Groves.",
        "Incentivos en equipos.",
        "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian y D. C. Parkes.",
        "Subastas en línea de bienes reutilizables.",
        "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, y D. C. Parkes.",
        "Subastas en línea adaptativas de suministro limitado.",
        "EC, 71-80, 2004. [15] J. Hartline y R. McGrew.",
        "De subastas de suministro limitado óptimo a ilimitado.",
        "EC, 175-182, 2005. [16] L. Hurwicz. \n\nEC, 175-182, 2005. [16] L. Hurwicz.",
        "Sobre la existencia de sistemas de asignación cuyos equilibrios de Nash manipulativos son óptimos de Pareto, 1975.",
        "Presentado en el 3er Congreso Mundial de la Sociedad de Econometría. [17] K. Leyton-Brown, Y. Shoham y M. Tennenholtz.",
        "Clubes que realizan ofertas en subastas de primer precio.",
        "AAAI, 373-378, 2002. [18] E. Maskin y J. Riley.",
        "Subastas multiunidad óptimas.",
        "En F. Hahn, editor, \"La Economía de los Mercados Ausentes, la Información y los Juegos\", capítulo 14, 312-335.",
        "Clarendon Press, Oxford, 1989. [19] H. Moulin.\nPrensa Clarendon, Oxford, 1989. [19] H. Moulin.",
        "Asignación eficiente y a prueba de estrategias con un reclamante residual barato.",
        "Documento de trabajo, marzo de 2007. [20] R. Myerson.",
        "Diseño óptimo de subasta.",
        "Matemáticas de la Investigación de Operaciones, 6:58-73, 1981. [21] R. Myerson y M. Satterthwaite.",
        "Mecanismos eficientes para el comercio bilateral.",
        "Revista de Teoría Económica, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam y M. Eso.",
        "Lograr el equilibrio presupuestario con esquemas de pago basados en Vickrey en intercambios.",
        "IJCAI, 1161-1168, 2001. [23] W. Vickrey. \n\nIJCAI, 1161-1168, 2001. [23] W. Vickrey.",
        "Contrarrestando la especulación, subastas y ofertas selladas competitivas.",
        "Revista de Finanzas, 16:8-37, 1961. 39"
    ],
    "error_count": 8,
    "keys": {
        "mechanism design": {
            "translated_key": "diseño de mecanismos",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate <br>mechanism design</br> for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online <br>mechanism design</br>.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [
                "Nevertheless, it seems likely that future research will continue to investigate <br>mechanism design</br> for the worst case, and hopefully a coherent framework will emerge. 10.",
                "Pricing WiFi at Starbucks - Issues in online <br>mechanism design</br>."
            ],
            "translated_annotated_samples": [
                "Sin embargo, parece probable que la investigación futura continúe investigando el <br>diseño de mecanismos</br> para el peor de los casos, y con suerte, surgirá un marco coherente. 10.",
                "Tarificación del WiFi en Starbucks - Problemas en el <br>diseño de mecanismos</br> en línea."
            ],
            "translated_text": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente. Considerar al agente an como el agente con la oferta más baja. Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn. Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo. Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón. Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0. Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0. Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original. Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo. Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes). Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0. Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG. Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1. Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit). Ahora damos dos ejemplos de mecanismos en esta familia. Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i. Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente. Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1. Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2). Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i. En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes. Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional. Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye. ¿Cuál de estos dos mecanismos es mejor? ¿Hay otro mecanismo que sea aún mejor? Esto es lo que estudiamos en la próxima sección. 4. Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta. Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada. A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso. Rendimiento en el mejor de los casos. Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra. Considera los dos ejemplos anteriores. Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos. Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0. Dominancia. Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta. Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos. Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia. Supongamos que tal mecanismo existe. Entonces, debería dominar ambos ejemplos anteriores. Considerar el pago VCG restante (el pago VCG no se pudo redistribuir). El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0. Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica. Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie. Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0. Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace). Rendimiento en el peor de los casos. Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza. Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1. Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades. Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso. Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso. Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos. Este porcentaje es indefinido cuando el pago total de VCG es 0. Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos). Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones. Reclamo 1. Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración. Primero, vamos a demostrar que c0 = 0. Considera el vector de oferta en el cual ˆvi = 0 para todo i. Para obtener racionalidad individual, debemos tener c0 ≥ 0. Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0. Así sabemos que c0 = 0. Ahora, si ci = 0 para todos los i, no hay nada que demostrar. De lo contrario, deja que j = min{i|ci = 0}. Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto. En este caso zn = cj, por lo que debemos tener cj ≥ 0. La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta. Considera el mismo vector de oferta que se mencionó anteriormente. Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0. Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0. Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1. Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0. También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0. Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición. Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i. Por lo tanto, estamos atrapados con el mecanismo VCG. A partir de aquí, solo consideramos el caso donde m < n − 1. Reclamo 2. La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Antes de demostrar esta afirmación, introducimos el siguiente lema. Lema 1. Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k). Prueba. Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk. Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos). Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera. Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa. Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente. Ahora estamos listos para presentar la prueba de la Afirmación 2. Prueba. La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Reclamo 3. La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración. La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci. La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento. La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal. Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit). En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1). Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el mecanismo óptimo en el peor caso) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos. De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del mecanismo óptimo en el peor caso (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El mecanismo óptimo en el peor caso supera significativamente al mecanismo de Bailey-Cavallo en el peor caso. Quizás de manera más sorprendente, el mecanismo óptimo en el peor de los casos a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo. Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2. Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1]. La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3. Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1. Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) . Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el mecanismo óptimo en el peor de los casos es de 3.62e−5 en el peor caso. Presentemos detalladamente la solución óptima para el caso n = 5. Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15. Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes. La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%. Finalmente, comparamos el mecanismo óptimo en el peor de los casos con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30. Estos resultados están en la Figura 1. Vemos que para cualquier m, cuando n = m + 2, el mecanismo óptimo en el peor de los casos tiene el mismo rendimiento en el peor de los casos que el mecanismo de Bailey-Cavallo (de hecho, en este caso, el mecanismo óptimo en el peor de los casos es idéntico al mecanismo de Bailey-Cavallo). Cuando n > m + 2, el mecanismo óptimo en el peor de los casos supera al mecanismo de Bailey-Cavallo (en el peor de los casos). 7. CARACTERIZACIÓN ANALÍTICA DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible). Es fácil ver que k está acotado por arriba por 1 (redistribuir más del 100% viola la restricción de no déficit). Además, siempre existe una solución factible, por ejemplo, k = 0 y ci = 0 para todo i. Entonces, siempre existe una solución óptima. Observe que el modelo del programa lineal depende únicamente del número de agentes n y del número de unidades m. Por lo tanto, la solución óptima es una función de n y m. Resulta que esta solución óptima puede caracterizarse analíticamente de la siguiente manera. Teorema 1. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo de peor caso (entre los mecanismos de redistribución lineal VCG) es único. Para este mecanismo, el porcentaje redistribuido en el peor de los casos es k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ El mecanismo óptimo en el peor de los casos se caracteriza por los siguientes valores para los ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! para i = m + 1, . . . , n − 1. Cabe destacar que hemos demostrado que ci = 0 para i ≤ m en la Afirmación 1. Prueba. Primero reescribimos el programa lineal de la siguiente manera. Introducimos nuevas variables xm+1, xm+2, . . . , xn−1, definidas por xj = Pj i=m+1 ci para j = m + 1, . . . , n − 1. El programa lineal se convierte entonces en: Variables: xm+1, xm+2, . . . , xn−1, k Maximizar k Sujeto a: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 para i = m + 1, m + 2, . . . , n − 1 Demostraremos que para cualquier solución óptima de este programa lineal, k = k∗. Además, demostraremos que cuando k = k∗, xj = Pj i=m+1 c∗ i para j = m + 1, . . . , n − 1. Esto demostrará el teorema. Primero hacemos las siguientes observaciones: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m Para i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finalmente, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Resumiendo lo anterior, tenemos: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Sea x∗ j = Pj i=m+1 c∗ i para j = m + 1, m + 2, . . . , n − 1, la primera ecuación anterior nos dice que (n − m − 1)x∗ m+1 = k∗ m. Al sumar las dos primeras ecuaciones, obtenemos (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m Al sumar las tres primeras ecuaciones, obtenemos (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m Al sumar las primeras i ecuaciones, donde i = 2, . . . , n−m−1, obtenemos (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m si i es par (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m si i es impar Finalmente, al sumar todas las ecuaciones, obtenemos nx∗ n−1 = m si n − m es par; nx∗ n−1 = k∗ m si n − m es impar. Por lo tanto, para todas las restricciones excepto las restricciones de no negatividad, hemos demostrado que se satisfacen al establecer xj = x∗ j = Pj i=m+1 c∗ i y k = k∗. A continuación mostramos que las restricciones de no negatividad también se cumplen con esta configuración. Para m + 1 ≤ i, i + 1 ≤ n − 1, tenemos que 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) Esto implica que el valor absoluto de c∗ i está disminuyendo a medida que i aumenta (si el c∗ contiene más de un número). Observamos además que el signo de c∗ i alterna, con el primer elemento c∗ m+1 positivo. Entonces x∗ j = Pj i=m+1 c∗ i ≥ 0 para todo j. Por lo tanto, hemos demostrado que estos xi = x∗ i junto con k = k∗ forman una solución factible del programa lineal. Procedemos a demostrar que de hecho es la única solución óptima. Primero demostramos la siguiente afirmación: Afirmación 4. Si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfacen las siguientes desigualdades: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m para i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Entonces debemos tener que ˆxi = ˆx∗ i y ˆk = k∗. Prueba de la afirmación. Considera la primera desigualdad. Sabemos que (n − m − 1)x∗ m+1 = k∗ m, por lo tanto (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1. Se deduce que ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0). Ahora, considera la siguiente desigualdad para i = 2. Sabemos que (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. Se sigue que (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, por lo que ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0). Ahora considera la siguiente desigualdad para i = 3. Sabemos que (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. Se sigue que (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, por lo que ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0). Procediendo de esta manera hasta i = n−m−1, obtenemos que ˆxm+i ≥ x∗ m+i si i es impar y ˆxm+i ≤ x∗ m+i si i es par. Además, si una desigualdad es estricta, entonces todas las desigualdades subsiguientes son estrictas. Ahora, si podemos demostrar que ˆxn−1 = x∗ n−1, se seguiría que los x∗ i son iguales a los ˆxi (lo que también implica que ˆk = k∗). Consideramos dos casos: Caso 1: n − m es par. Tenemos: n − m par ⇒ n − m − 1 impar ⇒ ˆxn−1 ≥ x∗ n−1. También tenemos: n−m par ⇒ nx∗ n−1 = m. Combinando estos dos, obtenemos m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1. Caso 2: n − m es impar. En este caso, tenemos ˆxn−1 ≤ x∗ n−1, y nx∗ n−1 = k∗ m. Entonces, tenemos: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1. Esto completa la prueba de la afirmación. Se deduce que si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 es una solución factible y ˆk ≥ k∗ , entonces dado que se cumplen todas las desigualdades en la Afirmación 4, debemos tener ˆxi = x∗ i y ˆk = k∗ . Por lo tanto, ninguna otra solución factible es tan buena como la descrita en el teorema. Conocer la caracterización analítica del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales. Primero, utilizar estas fórmulas es computacionalmente más eficiente que resolver el programa lineal utilizando un solucionador de propósito general. Segundo, podemos derivar el siguiente corolario. Corolario 1. Si el número de unidades m está fijo, entonces a medida que el número de agentes n aumenta, el porcentaje redistribuido en el peor de los casos converge linealmente a 1, con una tasa de convergencia de 1 2. (Es decir, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2. Es decir, en el límite, el porcentaje que no se redistribuye se reduce a la mitad por cada agente adicional. Observamos que esto es consistente con los datos experimentales para el caso de una sola unidad, donde el porcentaje restante en el peor de los casos se reduce aproximadamente a la mitad cada vez que agregamos otro agente. El porcentaje redistribuido en el peor de los casos bajo el mecanismo de Bailey-Cavallo también converge a 1 a medida que el número de agentes tiende a infinito, pero la convergencia es mucho más lenta: no converge linealmente (es decir, dejando que kC n sea el porcentaje redistribuido por el mecanismo de Bailey-Cavallo en el peor de los casos para n agentes, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1). Ahora presentamos la prueba del corolario. Prueba. Cuando el número de agentes es n, el porcentaje redistribuido en el peor de los casos es k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) . Cuando el número de agentes es n + 1, el porcentaje se convierte en k∗ n+1 = 1 − (n m) Pn j=m (n j ) . Para n suficientemente grande, tendremos 2n − mnm−1 > 0, y por lo tanto 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , y n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (porque `n j ´ ≤ ni si j ≤ i). Dado que tenemos limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , y limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , se sigue que limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8. En esta sección, demostramos que el mecanismo de redistribución óptimo en el peor de los casos entre los mecanismos de redistribución lineales VCG es de hecho óptimo (en el peor de los casos) entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Por lo tanto, restringir nuestra atención a mecanismos de redistribución lineal VCG no resultó en una pérdida. Para demostrar este teorema, necesitamos el siguiente lema. Este lema no es nuevo: fue enunciado informalmente por Cavallo [3]. Para completitud, lo presentamos aquí con una prueba detallada. Lema 2. Un mecanismo de redistribución VCG es determinístico, anónimo y a prueba de estrategias si y solo si existe una función f: Rn−1 → R, de modo que el pago de redistribución zi recibido por ai cumple zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Prueba. Primero, probemos la dirección \"solo si\", es decir, si un mecanismo de redistribución VCG es determinista, anónimo y a prueba de estrategias, entonces existe una función determinista f: Rn−1 → R, que hace que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Si un mecanismo de redistribución VCG es determinístico y anónimo, entonces para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, el mecanismo produce una lista única de pagos de redistribución: z1, z2, . . . , zn. Sea G: Rn → Rn la función que mapea ˆv1, ˆv2, . . . , ˆvn a z1, z2, . . . , zn para todos los vectores de oferta. Sea H(i, x1, x2, . . . , xn) el i-ésimo elemento de G(x1, x2, . . . , xn), de modo que zi = H(i, ˆv1, ˆv2, . . . , ˆvn) para todos los vectores de oferta y todo 1 ≤ i ≤ n. Debido a que el mecanismo es anónimo, dos agentes deben recibir el mismo pago de redistribución si sus ofertas son iguales. Entonces, si ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Por lo tanto, si dejamos j = min{t|ˆvt = ˆvi}, entonces H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Definamos K : Rn → N × Rn de la siguiente manera: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], donde w1, w2, . . . , wn son y, x1, x2, . . . , xn−1 ordenados en orden descendente, y j = min{t|wt = y}. ({t|wt = y} = ∅ porque y ∈ {w1, w2, . . . , wn}). También definamos F : Rn → R por F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi. Es decir, F es el pago de redistribución a un agente que ofrece ˆvi cuando las otras ofertas son ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn. Dado que nuestro mecanismo debe ser a prueba de estrategias y el espacio de valoraciones es ilimitado, zi debería ser independiente de ˆvi según el Lema 1 en Cavallo [3]. Por lo tanto, podemos simplemente ignorar la primera variable de entrada a F; sea f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1). Por lo tanto, para todos los vectores de oferta y i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn). Esto completa la prueba para la dirección solo si. Para la dirección si, si el pago de redistribución recibido por ai satisface zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todos los vectores de oferta y i, entonces esto es claramente un mecanismo determinístico y anónimo. Para demostrar la estrategia a prueba, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias. Ahora estamos listos para presentar el siguiente teorema: Teorema 2. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo en el peor de los casos dentro de la familia de mecanismos de redistribución lineal VCG es óptimo en el peor de los casos entre todos los mecanismos que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El mecanismo de redistribución lineal VCG óptimo en el peor de los casos, por supuesto, es racional individualmente). Prueba. Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el mecanismo de redistribución lineal VCG óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Primero demostramos que f tiene las siguientes propiedades. Reclamo 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Prueba del reclamo. Supusimos que para este mecanismo, el porcentaje de redistribución en el peor de los casos satisface ˆk > k∗ ≥ 0. Si el pago total VCG es x, el pago total de redistribución debería estar en [ˆkx, x] (criterio de no déficit). Considera el caso en el que todos los agentes ofertan 0, por lo que el pago total de VCG también es 0. Por lo tanto, el pago total de redistribución debería ser de [ˆk · 0, 0], es decir, debería ser 0. Por lo tanto, el pago de redistribución de cada agente f(0, 0, . . . , 0) debe ser 0. Ahora, dejemos que ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) donde el número de 1s es igual a i. Demostramos que t0 = 0. Si tn−1 = 0, considera el vector de oferta donde todos ofrecen 1. El pago total VCG es m y el pago total de redistribución es nf(1, 1, . . . , 1) = ntn−1 = 0. Esto corresponde a una redistribución del 0%, lo cual va en contra de nuestra suposición de que ˆk > k∗ ≥ 0. Ahora, considera j = min{i|ti = 0} (lo cual está bien definido porque tn−1 = 0). Si j > m, la propiedad se cumple. Si j ≤ m, considera el vector de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Bajo este vector de oferta, los primeros j agentes reciben cada uno un pago de redistribución tj−1 = 0, y los restantes n − j agentes reciben cada uno tj. Por lo tanto, el pago total de redistribución es (n − j)tj. Dado que el pago total VCG para este vector de oferta es 0, debemos tener (n − j)tj = 0. Entonces tj = 0 (j ≤ m < n). Pero esto va en contra de la definición de j. Por lo tanto, f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Reclamo 6. f satisface las siguientes desigualdades: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m para i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Aquí ti está definido como en la prueba del Reclamo 5. Prueba del reclamo. Para j = m + 1, . . . , n, considera los vectores de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Estos vectores de oferta junto con la restricción de no déficit y la restricción del peor caso producen el conjunto de desigualdades anterior: por ejemplo, cuando j = m + 1, consideramos el vector de oferta ˆvi = 1 para i ≤ m + 1 y ˆvi = 0 para todos los demás i. Los primeros m+1 agentes reciben cada uno un pago de redistribución de tm = 0, y todos los demás agentes reciben tm+1. Por lo tanto, la redistribución total de VCG es (n − m − 1)tm+1. La restricción de no déficit establece que (n − m − 1)tm+1 ≤ m (porque el pago total VCG es m). La restricción del peor caso establece que (n − m − 1)tm+1 ≥ ˆkm. Combinando estos dos, obtenemos la primera desigualdad. Las otras desigualdades se pueden obtener de la misma manera. Ahora observamos que las desigualdades en la Afirmación 6, junto con ˆk ≥ k∗, son las mismas que las de la Afirmación 4 (donde los ti son reemplazados por los ˆxi). Por lo tanto, podemos concluir que ˆk = k∗, lo cual va en contra de nuestra suposición de que ˆk > k∗. Por lo tanto, ningún mecanismo que cumpla todas las propiedades enumeradas tiene un porcentaje de redistribución mayor que k∗ en el peor de los casos. Hasta ahora solo hemos hablado del caso donde n ≥ m+2. Con el propósito de completitud, proporcionamos la siguiente afirmación para el caso n = m + 1. Reclamación 7. Para cualquier m y n con n = m + 1, el mecanismo VCG original (es decir, redistribuyendo nada) es (de manera única) óptimo en el peor de los casos entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Recordamos que cuando n = m+1, la Afirmación 1 nos dice que el único mecanismo dentro de la familia de mecanismos de redistribución lineal es el mecanismo VCG original, por lo que este mecanismo es automáticamente óptimo en el peor de los casos dentro de esta familia. Sin embargo, para demostrar la afirmación anterior, necesitamos mostrar que es óptimo en el peor de los casos entre todos los mecanismos de redistribución que tienen las propiedades deseadas. Prueba. Supongamos que existe un mecanismo de redistribución que cumple todas las propiedades anteriores y tiene un rendimiento en el peor de los casos tan bueno como el mecanismo VCG original, es decir, su porcentaje de redistribución en el peor de los casos es mayor o igual a 0. Esto implica que el pago total de redistribución de este mecanismo siempre es no negativo. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Demostraremos que f(x1, x2, . . . , xn−1) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0. Primero, considera el vector de oferta donde ˆvi = 0 para todo i. Aquí, cada agente recibe un pago de redistribución f(0, 0, . . . , 0). El pago total de redistribución es entonces nf(0, 0, . . . , 0), que debería ser tanto mayor o igual a 0 (por la observación anterior) como menor o igual a 0 (utilizando el criterio de no déficit y el hecho de que el pago total VCG es 0). Se deduce que f(0, 0, . . . , 0) = 0. Ahora, consideremos el vector de oferta donde ˆv1 = x1 ≥ 0 y ˆvi = 0 para todos los demás i. Para este vector de oferta, el agente con la oferta más alta recibe un pago de redistribución de f(0, 0, . . . , 0) = 0, y los otros n - 1 agentes reciben cada uno f(x1, 0, . . . , 0). Por el mismo razonamiento anterior, el pago total de redistribución debe ser mayor o igual a 0 y menor o igual a 0, por lo tanto f(x1, 0, . . . , 0) = 0 para todo x1 ≥ 0. Procediendo por inducción, asumamos que f(x1, x2, . . . , xk, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, para algún k < n − 1. Considera el vector de oferta donde ˆvi = xi para i ≤ k + 1, y ˆvi = 0 para todos los demás i, donde los xi son números arbitrarios que satisfacen x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Para los agentes con las k + 1 ofertas más altas, su pago de redistribución está especificado por f actuando sobre una entrada con solo k variables no nulas. Por lo tanto, todos reciben 0 por suposición de inducción. Los otros n − k − 1 agentes reciben cada uno f(x1, x2, . . . , xk, xk+1, 0, . . . , 0). El pago total de redistribución es entonces (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), el cual debe ser mayor o igual a 0, y menor o igual al pago total de VCG. Ahora, en este vector de oferta, la oferta más baja es 0 porque k + 1 < n. Pero dado que n = m + 1, el pago total de VCG es mˆvn = 0. Entonces tenemos f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Por inducción, esta afirmación se cumple para todos los k < n − 1; cuando k + 1 = n − 1, tenemos que f(x1, x2, . . . , xn−2, xn−1) = 0 para todos los x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0. Por lo tanto, en este mecanismo, el pago de redistribución siempre es 0; es decir, el mecanismo es simplemente el mecanismo VCG original. Por cierto, obtenemos el siguiente corolario: Corolario 2. Ningún mecanismo de redistribución de VCG satisface todos los siguientes requisitos: determinismo, anonimato, a prueba de estrategias, eficiencia y equilibrio presupuestario (fuerte). Esto se cumple para cualquier n ≥ m + 1. Prueba. Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del mecanismo de redistribución lineal VCG óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1. Pero el Teorema 2 muestra que es imposible superar este mecanismo en el peor de los casos. Para el caso n = m + 1: Si existe tal mecanismo, funcionaría tan bien como el mecanismo VCG original en el peor de los casos, lo que implica que es idéntico al mecanismo VCG según la Afirmación 7. Pero el mecanismo VCG no es (fuertemente) equilibrado en presupuesto. 9. CONCLUSIONES Para problemas de asignación con uno o más artículos, el conocido mecanismo de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendimos este resultado en un entorno restringido. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG 38 de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego proporcionamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Una dirección importante para futuras investigaciones es intentar extender estos resultados más allá de las subastas multiunidad con demanda unitaria. Sin embargo, resulta que en contextos lo suficientemente generales, el porcentaje óptimo de redistribución en el peor de los casos es 0. En tales contextos, el criterio del peor escenario no proporciona orientación para determinar un buen mecanismo de redistribución (incluso redistribuir nada logra el porcentaje óptimo del peor escenario), por lo que se hace necesario seguir otros criterios. Alternativamente, se puede intentar identificar otros escenarios especiales en los que la redistribución positiva en el peor de los casos sea posible. Otra dirección para investigaciones futuras es considerar si este mecanismo tiene aplicaciones en la colusión. Por ejemplo, en un esquema colusorio típico, hay un anillo de licitación compuesto por un número de coludidores, quienes presentan solo una oferta [10, 17]. Si esta oferta gana, los coludidores deben asignarse el artículo entre ellos, quizás utilizando pagos, pero por supuesto no quieren que los pagos salgan del grupo. Este trabajo forma parte de una creciente literatura sobre el diseño de mecanismos que obtienen buenos resultados en el peor de los casos. Tradicionalmente, los economistas se han centrado principalmente en diseñar mecanismos que siempre obtengan ciertas propiedades (como el mecanismo VCG), o en diseñar mecanismos que sean óptimos con respecto a alguna distribución previa de las preferencias de los agentes (como la subasta de Myerson [20] y la subasta de Maskin-Riley [18] para maximizar los ingresos esperados). Algunos trabajos más recientes se han centrado en diseñar mecanismos para maximizar las ganancias utilizando análisis competitivo del peor caso (por ejemplo, [9, 1, 15, 8]). También ha habido un creciente interés en el diseño de mecanismos en línea [7] donde los agentes llegan con el tiempo y las decisiones deben tomarse antes de que todos los agentes hayan llegado. Este tipo de trabajo a menudo también adopta un enfoque de análisis competitivo del peor escenario [14, 13]. No parece que existan conexiones directas entre nuestro trabajo y estos otros trabajos que se centran en diseñar mecanismos que funcionan bien en el peor de los casos. Sin embargo, parece probable que la investigación futura continúe investigando el <br>diseño de mecanismos</br> para el peor de los casos, y con suerte, surgirá un marco coherente. 10. REFERENCIAS [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica y M. Sudan. Desrandomización de subastas. STOC, 619-625, 2005. [2] M. J. Bailey. \n\nSTOC, 619-625, 2005. [2] M. J. Bailey. El proceso de revelación de la demanda: distribuir el excedente. Elección Pública, 91:107-126, 1997. [3] R. Cavallo. Toma de decisiones óptima con un mínimo de desperdicio: redistribución a prueba de estrategias de pagos VCG. AAMAS, 882-889, 2006. [4] E. H. Clarke. \n\nAAMAS, 882-889, 2006. [4] E. H. Clarke. Precios escalonados de bienes públicos. Elección Pública, 11:17-33, 1971. [5] B. Faltings. Un esquema de elección social equilibrado presupuestariamente e incentivo-compatible. AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou y S. Shenker. Compartiendo el costo de las transmisiones multicast. JCSS, 63:21-41, 2001. [7] E. Friedman y D. Parkes. Tarificación del WiFi en Starbucks - Problemas en el <br>diseño de mecanismos</br> en línea. EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, y A. Wright. Subastas competitivas. Juegos y Comportamiento Económico, 2006. [9] A. Goldberg, J. Hartline y A. Wright. Subastas competitivas y bienes digitales. SODA, 735-744, 2001. [10] D. A. Graham y R. C. Marshall. Comportamiento de licitantes colusivos en subastas de segundo precio y subastas inglesas de objeto único. Revista de Economía Política, 95(6):1217-1239, 1987. [11] J. Verde y J.-J. Laffont. Caracterización de mecanismos satisfactorios para la revelación de preferencias por bienes públicos. Econometrica, 45:427-438, 1977. [12] T. Groves.\nEconometrica, 45:427-438, 1977. [12] T. Groves. Incentivos en equipos. Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian y D. C. Parkes. Subastas en línea de bienes reutilizables. EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. EC, 71-80, 2004. [15] J. Hartline y R. McGrew. De subastas de suministro limitado óptimo a ilimitado. EC, 175-182, 2005. [16] L. Hurwicz. \n\nEC, 175-182, 2005. [16] L. Hurwicz. Sobre la existencia de sistemas de asignación cuyos equilibrios de Nash manipulativos son óptimos de Pareto, 1975. Presentado en el 3er Congreso Mundial de la Sociedad de Econometría. [17] K. Leyton-Brown, Y. Shoham y M. Tennenholtz. Clubes que realizan ofertas en subastas de primer precio. AAAI, 373-378, 2002. [18] E. Maskin y J. Riley. Subastas multiunidad óptimas. En F. Hahn, editor, \"La Economía de los Mercados Ausentes, la Información y los Juegos\", capítulo 14, 312-335. Clarendon Press, Oxford, 1989. [19] H. Moulin.\nPrensa Clarendon, Oxford, 1989. [19] H. Moulin. Asignación eficiente y a prueba de estrategias con un reclamante residual barato. Documento de trabajo, marzo de 2007. [20] R. Myerson. Diseño óptimo de subasta. Matemáticas de la Investigación de Operaciones, 6:58-73, 1981. [21] R. Myerson y M. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Revista de Teoría Económica, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam y M. Eso. Lograr el equilibrio presupuestario con esquemas de pago basados en Vickrey en intercambios. IJCAI, 1161-1168, 2001. [23] W. Vickrey. \n\nIJCAI, 1161-1168, 2001. [23] W. Vickrey. Contrarrestando la especulación, subastas y ofertas selladas competitivas. Revista de Finanzas, 16:8-37, 1961. 39 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "vickrey-clarke-grove": {
            "translated_key": "Vickrey-Clarke-Grove",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "redistribution payment": {
            "translated_key": "pago de redistribución",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger <br>redistribution payment</br>).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais <br>redistribution payment</br>.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this <br>redistribution payment</br>, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents <br>redistribution payment</br>.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents <br>redistribution payment</br>.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her <br>redistribution payment</br> zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans <br>redistribution payment</br> under the new vector should be the same as ais <br>redistribution payment</br> under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the <br>redistribution payment</br> only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a <br>redistribution payment</br> of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a <br>redistribution payment</br> of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total <br>redistribution payment</br> is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a <br>redistribution payment</br> of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total <br>redistribution payment</br> is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative <br>redistribution payment</br>, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total <br>redistribution payment</br> is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total <br>redistribution payment</br> is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total <br>redistribution payment</br> is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total <br>redistribution payment</br> is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total <br>redistribution payment</br> of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the <br>redistribution payment</br> received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the <br>redistribution payment</br> zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique <br>redistribution payment</br> list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same <br>redistribution payment</br> if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the <br>redistribution payment</br> to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the <br>redistribution payment</br> received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents <br>redistribution payment</br> is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total <br>redistribution payment</br> should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total <br>redistribution payment</br> should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents <br>redistribution payment</br> f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total <br>redistribution payment</br> is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get <br>redistribution payment</br> tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total <br>redistribution payment</br> is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a <br>redistribution payment</br> of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total <br>redistribution payment</br> of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a <br>redistribution payment</br> f(0, 0, . . . , 0).",
                "The total <br>redistribution payment</br> is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a <br>redistribution payment</br> of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total <br>redistribution payment</br> should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their <br>redistribution payment</br> is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total <br>redistribution payment</br> is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the <br>redistribution payment</br> is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger <br>redistribution payment</br>).",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais <br>redistribution payment</br>.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this <br>redistribution payment</br>, and the mechanism remains strategy-proof. 3.",
                "An agent that does not win a unit obtains a utility that is equal to the agents <br>redistribution payment</br>.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents <br>redistribution payment</br>."
            ],
            "translated_annotated_samples": [
                "La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un <br>pago de redistribución</br> más grande).",
                "Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el <br>pago de redistribución</br> del agente ai.",
                "No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este <br>pago de redistribución</br>, y el mecanismo sigue siendo a prueba de estrategias. 3.",
                "Un agente que no gana una unidad obtiene una utilidad que es igual al <br>pago de redistribución</br> del agente.",
                "Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el <br>pago de redistribución</br> del agente."
            ],
            "translated_text": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un <br>pago de redistribución</br> más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el <br>pago de redistribución</br> del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este <br>pago de redistribución</br>, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al <br>pago de redistribución</br> del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el <br>pago de redistribución</br> del agente. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "efficient mechanism": {
            "translated_key": "mecanismo eficiente",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "strategy-proofness": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, <br>strategy-proofness</br>, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides <br>strategy-proofness</br>, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that <br>strategy-proofness</br> is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove <br>strategy-proofness</br>, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, <br>strategy-proofness</br>, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, <br>strategy-proofness</br>, individual rationality, and the non-deficit property.",
                "Besides <br>strategy-proofness</br>, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that <br>strategy-proofness</br> is maintained), and that will maintain the other properties.",
                "To prove <br>strategy-proofness</br>, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, <br>strategy-proofness</br>, individual rationality, and the non-deficit property."
            ],
            "translated_annotated_samples": [
                "En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la <br>prueba de estrategia</br>, la racionalidad individual y la propiedad de no déficit.",
                "Además de ser <br>estrategia-veraz</br>, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos.",
                "Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la <br>estrategia de prueba</br>) y que mantenga las otras propiedades.",
                "Para demostrar la <br>estrategia a prueba</br>, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias.",
                "En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la <br>prueba de estrategia</br>, la racionalidad individual y la propiedad de no déficit."
            ],
            "translated_text": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la <br>prueba de estrategia</br>, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser <br>estrategia-veraz</br>, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la <br>estrategia de prueba</br>) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente. Considerar al agente an como el agente con la oferta más baja. Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn. Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo. Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón. Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0. Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0. Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original. Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo. Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes). Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0. Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG. Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1. Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit). Ahora damos dos ejemplos de mecanismos en esta familia. Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i. Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente. Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1. Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2). Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i. En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes. Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional. Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye. ¿Cuál de estos dos mecanismos es mejor? ¿Hay otro mecanismo que sea aún mejor? Esto es lo que estudiamos en la próxima sección. 4. Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta. Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada. A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso. Rendimiento en el mejor de los casos. Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra. Considera los dos ejemplos anteriores. Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos. Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0. Dominancia. Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta. Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos. Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia. Supongamos que tal mecanismo existe. Entonces, debería dominar ambos ejemplos anteriores. Considerar el pago VCG restante (el pago VCG no se pudo redistribuir). El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0. Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica. Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie. Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0. Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace). Rendimiento en el peor de los casos. Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza. Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1. Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades. Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso. Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso. Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos. Este porcentaje es indefinido cuando el pago total de VCG es 0. Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos). Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones. Reclamo 1. Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración. Primero, vamos a demostrar que c0 = 0. Considera el vector de oferta en el cual ˆvi = 0 para todo i. Para obtener racionalidad individual, debemos tener c0 ≥ 0. Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0. Así sabemos que c0 = 0. Ahora, si ci = 0 para todos los i, no hay nada que demostrar. De lo contrario, deja que j = min{i|ci = 0}. Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto. En este caso zn = cj, por lo que debemos tener cj ≥ 0. La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta. Considera el mismo vector de oferta que se mencionó anteriormente. Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0. Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0. Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1. Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0. También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0. Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición. Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i. Por lo tanto, estamos atrapados con el mecanismo VCG. A partir de aquí, solo consideramos el caso donde m < n − 1. Reclamo 2. La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Antes de demostrar esta afirmación, introducimos el siguiente lema. Lema 1. Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k). Prueba. Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk. Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos). Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera. Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa. Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente. Ahora estamos listos para presentar la prueba de la Afirmación 2. Prueba. La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Reclamo 3. La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración. La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci. La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento. La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal. Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit). En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1). Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el mecanismo óptimo en el peor caso) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos. De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del mecanismo óptimo en el peor caso (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El mecanismo óptimo en el peor caso supera significativamente al mecanismo de Bailey-Cavallo en el peor caso. Quizás de manera más sorprendente, el mecanismo óptimo en el peor de los casos a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo. Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2. Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1]. La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3. Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1. Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) . Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el mecanismo óptimo en el peor de los casos es de 3.62e−5 en el peor caso. Presentemos detalladamente la solución óptima para el caso n = 5. Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15. Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes. La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%. Finalmente, comparamos el mecanismo óptimo en el peor de los casos con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30. Estos resultados están en la Figura 1. Vemos que para cualquier m, cuando n = m + 2, el mecanismo óptimo en el peor de los casos tiene el mismo rendimiento en el peor de los casos que el mecanismo de Bailey-Cavallo (de hecho, en este caso, el mecanismo óptimo en el peor de los casos es idéntico al mecanismo de Bailey-Cavallo). Cuando n > m + 2, el mecanismo óptimo en el peor de los casos supera al mecanismo de Bailey-Cavallo (en el peor de los casos). 7. CARACTERIZACIÓN ANALÍTICA DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible). Es fácil ver que k está acotado por arriba por 1 (redistribuir más del 100% viola la restricción de no déficit). Además, siempre existe una solución factible, por ejemplo, k = 0 y ci = 0 para todo i. Entonces, siempre existe una solución óptima. Observe que el modelo del programa lineal depende únicamente del número de agentes n y del número de unidades m. Por lo tanto, la solución óptima es una función de n y m. Resulta que esta solución óptima puede caracterizarse analíticamente de la siguiente manera. Teorema 1. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo de peor caso (entre los mecanismos de redistribución lineal VCG) es único. Para este mecanismo, el porcentaje redistribuido en el peor de los casos es k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ El mecanismo óptimo en el peor de los casos se caracteriza por los siguientes valores para los ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! para i = m + 1, . . . , n − 1. Cabe destacar que hemos demostrado que ci = 0 para i ≤ m en la Afirmación 1. Prueba. Primero reescribimos el programa lineal de la siguiente manera. Introducimos nuevas variables xm+1, xm+2, . . . , xn−1, definidas por xj = Pj i=m+1 ci para j = m + 1, . . . , n − 1. El programa lineal se convierte entonces en: Variables: xm+1, xm+2, . . . , xn−1, k Maximizar k Sujeto a: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 para i = m + 1, m + 2, . . . , n − 1 Demostraremos que para cualquier solución óptima de este programa lineal, k = k∗. Además, demostraremos que cuando k = k∗, xj = Pj i=m+1 c∗ i para j = m + 1, . . . , n − 1. Esto demostrará el teorema. Primero hacemos las siguientes observaciones: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m Para i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finalmente, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Resumiendo lo anterior, tenemos: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Sea x∗ j = Pj i=m+1 c∗ i para j = m + 1, m + 2, . . . , n − 1, la primera ecuación anterior nos dice que (n − m − 1)x∗ m+1 = k∗ m. Al sumar las dos primeras ecuaciones, obtenemos (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m Al sumar las tres primeras ecuaciones, obtenemos (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m Al sumar las primeras i ecuaciones, donde i = 2, . . . , n−m−1, obtenemos (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m si i es par (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m si i es impar Finalmente, al sumar todas las ecuaciones, obtenemos nx∗ n−1 = m si n − m es par; nx∗ n−1 = k∗ m si n − m es impar. Por lo tanto, para todas las restricciones excepto las restricciones de no negatividad, hemos demostrado que se satisfacen al establecer xj = x∗ j = Pj i=m+1 c∗ i y k = k∗. A continuación mostramos que las restricciones de no negatividad también se cumplen con esta configuración. Para m + 1 ≤ i, i + 1 ≤ n − 1, tenemos que 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) Esto implica que el valor absoluto de c∗ i está disminuyendo a medida que i aumenta (si el c∗ contiene más de un número). Observamos además que el signo de c∗ i alterna, con el primer elemento c∗ m+1 positivo. Entonces x∗ j = Pj i=m+1 c∗ i ≥ 0 para todo j. Por lo tanto, hemos demostrado que estos xi = x∗ i junto con k = k∗ forman una solución factible del programa lineal. Procedemos a demostrar que de hecho es la única solución óptima. Primero demostramos la siguiente afirmación: Afirmación 4. Si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfacen las siguientes desigualdades: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m para i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Entonces debemos tener que ˆxi = ˆx∗ i y ˆk = k∗. Prueba de la afirmación. Considera la primera desigualdad. Sabemos que (n − m − 1)x∗ m+1 = k∗ m, por lo tanto (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1. Se deduce que ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0). Ahora, considera la siguiente desigualdad para i = 2. Sabemos que (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. Se sigue que (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, por lo que ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0). Ahora considera la siguiente desigualdad para i = 3. Sabemos que (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. Se sigue que (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, por lo que ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0). Procediendo de esta manera hasta i = n−m−1, obtenemos que ˆxm+i ≥ x∗ m+i si i es impar y ˆxm+i ≤ x∗ m+i si i es par. Además, si una desigualdad es estricta, entonces todas las desigualdades subsiguientes son estrictas. Ahora, si podemos demostrar que ˆxn−1 = x∗ n−1, se seguiría que los x∗ i son iguales a los ˆxi (lo que también implica que ˆk = k∗). Consideramos dos casos: Caso 1: n − m es par. Tenemos: n − m par ⇒ n − m − 1 impar ⇒ ˆxn−1 ≥ x∗ n−1. También tenemos: n−m par ⇒ nx∗ n−1 = m. Combinando estos dos, obtenemos m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1. Caso 2: n − m es impar. En este caso, tenemos ˆxn−1 ≤ x∗ n−1, y nx∗ n−1 = k∗ m. Entonces, tenemos: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1. Esto completa la prueba de la afirmación. Se deduce que si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 es una solución factible y ˆk ≥ k∗ , entonces dado que se cumplen todas las desigualdades en la Afirmación 4, debemos tener ˆxi = x∗ i y ˆk = k∗ . Por lo tanto, ninguna otra solución factible es tan buena como la descrita en el teorema. Conocer la caracterización analítica del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales. Primero, utilizar estas fórmulas es computacionalmente más eficiente que resolver el programa lineal utilizando un solucionador de propósito general. Segundo, podemos derivar el siguiente corolario. Corolario 1. Si el número de unidades m está fijo, entonces a medida que el número de agentes n aumenta, el porcentaje redistribuido en el peor de los casos converge linealmente a 1, con una tasa de convergencia de 1 2. (Es decir, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2. Es decir, en el límite, el porcentaje que no se redistribuye se reduce a la mitad por cada agente adicional. Observamos que esto es consistente con los datos experimentales para el caso de una sola unidad, donde el porcentaje restante en el peor de los casos se reduce aproximadamente a la mitad cada vez que agregamos otro agente. El porcentaje redistribuido en el peor de los casos bajo el mecanismo de Bailey-Cavallo también converge a 1 a medida que el número de agentes tiende a infinito, pero la convergencia es mucho más lenta: no converge linealmente (es decir, dejando que kC n sea el porcentaje redistribuido por el mecanismo de Bailey-Cavallo en el peor de los casos para n agentes, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1). Ahora presentamos la prueba del corolario. Prueba. Cuando el número de agentes es n, el porcentaje redistribuido en el peor de los casos es k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) . Cuando el número de agentes es n + 1, el porcentaje se convierte en k∗ n+1 = 1 − (n m) Pn j=m (n j ) . Para n suficientemente grande, tendremos 2n − mnm−1 > 0, y por lo tanto 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , y n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (porque `n j ´ ≤ ni si j ≤ i). Dado que tenemos limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , y limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , se sigue que limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8. En esta sección, demostramos que el mecanismo de redistribución óptimo en el peor de los casos entre los mecanismos de redistribución lineales VCG es de hecho óptimo (en el peor de los casos) entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Por lo tanto, restringir nuestra atención a mecanismos de redistribución lineal VCG no resultó en una pérdida. Para demostrar este teorema, necesitamos el siguiente lema. Este lema no es nuevo: fue enunciado informalmente por Cavallo [3]. Para completitud, lo presentamos aquí con una prueba detallada. Lema 2. Un mecanismo de redistribución VCG es determinístico, anónimo y a prueba de estrategias si y solo si existe una función f: Rn−1 → R, de modo que el pago de redistribución zi recibido por ai cumple zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Prueba. Primero, probemos la dirección \"solo si\", es decir, si un mecanismo de redistribución VCG es determinista, anónimo y a prueba de estrategias, entonces existe una función determinista f: Rn−1 → R, que hace que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Si un mecanismo de redistribución VCG es determinístico y anónimo, entonces para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, el mecanismo produce una lista única de pagos de redistribución: z1, z2, . . . , zn. Sea G: Rn → Rn la función que mapea ˆv1, ˆv2, . . . , ˆvn a z1, z2, . . . , zn para todos los vectores de oferta. Sea H(i, x1, x2, . . . , xn) el i-ésimo elemento de G(x1, x2, . . . , xn), de modo que zi = H(i, ˆv1, ˆv2, . . . , ˆvn) para todos los vectores de oferta y todo 1 ≤ i ≤ n. Debido a que el mecanismo es anónimo, dos agentes deben recibir el mismo pago de redistribución si sus ofertas son iguales. Entonces, si ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Por lo tanto, si dejamos j = min{t|ˆvt = ˆvi}, entonces H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Definamos K : Rn → N × Rn de la siguiente manera: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], donde w1, w2, . . . , wn son y, x1, x2, . . . , xn−1 ordenados en orden descendente, y j = min{t|wt = y}. ({t|wt = y} = ∅ porque y ∈ {w1, w2, . . . , wn}). También definamos F : Rn → R por F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi. Es decir, F es el pago de redistribución a un agente que ofrece ˆvi cuando las otras ofertas son ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn. Dado que nuestro mecanismo debe ser a prueba de estrategias y el espacio de valoraciones es ilimitado, zi debería ser independiente de ˆvi según el Lema 1 en Cavallo [3]. Por lo tanto, podemos simplemente ignorar la primera variable de entrada a F; sea f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1). Por lo tanto, para todos los vectores de oferta y i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn). Esto completa la prueba para la dirección solo si. Para la dirección si, si el pago de redistribución recibido por ai satisface zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todos los vectores de oferta y i, entonces esto es claramente un mecanismo determinístico y anónimo. Para demostrar la <br>estrategia a prueba</br>, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias. Ahora estamos listos para presentar el siguiente teorema: Teorema 2. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo en el peor de los casos dentro de la familia de mecanismos de redistribución lineal VCG es óptimo en el peor de los casos entre todos los mecanismos que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El mecanismo de redistribución lineal VCG óptimo en el peor de los casos, por supuesto, es racional individualmente). Prueba. Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el mecanismo de redistribución lineal VCG óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Primero demostramos que f tiene las siguientes propiedades. Reclamo 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Prueba del reclamo. Supusimos que para este mecanismo, el porcentaje de redistribución en el peor de los casos satisface ˆk > k∗ ≥ 0. Si el pago total VCG es x, el pago total de redistribución debería estar en [ˆkx, x] (criterio de no déficit). Considera el caso en el que todos los agentes ofertan 0, por lo que el pago total de VCG también es 0. Por lo tanto, el pago total de redistribución debería ser de [ˆk · 0, 0], es decir, debería ser 0. Por lo tanto, el pago de redistribución de cada agente f(0, 0, . . . , 0) debe ser 0. Ahora, dejemos que ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) donde el número de 1s es igual a i. Demostramos que t0 = 0. Si tn−1 = 0, considera el vector de oferta donde todos ofrecen 1. El pago total VCG es m y el pago total de redistribución es nf(1, 1, . . . , 1) = ntn−1 = 0. Esto corresponde a una redistribución del 0%, lo cual va en contra de nuestra suposición de que ˆk > k∗ ≥ 0. Ahora, considera j = min{i|ti = 0} (lo cual está bien definido porque tn−1 = 0). Si j > m, la propiedad se cumple. Si j ≤ m, considera el vector de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Bajo este vector de oferta, los primeros j agentes reciben cada uno un pago de redistribución tj−1 = 0, y los restantes n − j agentes reciben cada uno tj. Por lo tanto, el pago total de redistribución es (n − j)tj. Dado que el pago total VCG para este vector de oferta es 0, debemos tener (n − j)tj = 0. Entonces tj = 0 (j ≤ m < n). Pero esto va en contra de la definición de j. Por lo tanto, f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Reclamo 6. f satisface las siguientes desigualdades: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m para i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Aquí ti está definido como en la prueba del Reclamo 5. Prueba del reclamo. Para j = m + 1, . . . , n, considera los vectores de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Estos vectores de oferta junto con la restricción de no déficit y la restricción del peor caso producen el conjunto de desigualdades anterior: por ejemplo, cuando j = m + 1, consideramos el vector de oferta ˆvi = 1 para i ≤ m + 1 y ˆvi = 0 para todos los demás i. Los primeros m+1 agentes reciben cada uno un pago de redistribución de tm = 0, y todos los demás agentes reciben tm+1. Por lo tanto, la redistribución total de VCG es (n − m − 1)tm+1. La restricción de no déficit establece que (n − m − 1)tm+1 ≤ m (porque el pago total VCG es m). La restricción del peor caso establece que (n − m − 1)tm+1 ≥ ˆkm. Combinando estos dos, obtenemos la primera desigualdad. Las otras desigualdades se pueden obtener de la misma manera. Ahora observamos que las desigualdades en la Afirmación 6, junto con ˆk ≥ k∗, son las mismas que las de la Afirmación 4 (donde los ti son reemplazados por los ˆxi). Por lo tanto, podemos concluir que ˆk = k∗, lo cual va en contra de nuestra suposición de que ˆk > k∗. Por lo tanto, ningún mecanismo que cumpla todas las propiedades enumeradas tiene un porcentaje de redistribución mayor que k∗ en el peor de los casos. Hasta ahora solo hemos hablado del caso donde n ≥ m+2. Con el propósito de completitud, proporcionamos la siguiente afirmación para el caso n = m + 1. Reclamación 7. Para cualquier m y n con n = m + 1, el mecanismo VCG original (es decir, redistribuyendo nada) es (de manera única) óptimo en el peor de los casos entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Recordamos que cuando n = m+1, la Afirmación 1 nos dice que el único mecanismo dentro de la familia de mecanismos de redistribución lineal es el mecanismo VCG original, por lo que este mecanismo es automáticamente óptimo en el peor de los casos dentro de esta familia. Sin embargo, para demostrar la afirmación anterior, necesitamos mostrar que es óptimo en el peor de los casos entre todos los mecanismos de redistribución que tienen las propiedades deseadas. Prueba. Supongamos que existe un mecanismo de redistribución que cumple todas las propiedades anteriores y tiene un rendimiento en el peor de los casos tan bueno como el mecanismo VCG original, es decir, su porcentaje de redistribución en el peor de los casos es mayor o igual a 0. Esto implica que el pago total de redistribución de este mecanismo siempre es no negativo. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Demostraremos que f(x1, x2, . . . , xn−1) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0. Primero, considera el vector de oferta donde ˆvi = 0 para todo i. Aquí, cada agente recibe un pago de redistribución f(0, 0, . . . , 0). El pago total de redistribución es entonces nf(0, 0, . . . , 0), que debería ser tanto mayor o igual a 0 (por la observación anterior) como menor o igual a 0 (utilizando el criterio de no déficit y el hecho de que el pago total VCG es 0). Se deduce que f(0, 0, . . . , 0) = 0. Ahora, consideremos el vector de oferta donde ˆv1 = x1 ≥ 0 y ˆvi = 0 para todos los demás i. Para este vector de oferta, el agente con la oferta más alta recibe un pago de redistribución de f(0, 0, . . . , 0) = 0, y los otros n - 1 agentes reciben cada uno f(x1, 0, . . . , 0). Por el mismo razonamiento anterior, el pago total de redistribución debe ser mayor o igual a 0 y menor o igual a 0, por lo tanto f(x1, 0, . . . , 0) = 0 para todo x1 ≥ 0. Procediendo por inducción, asumamos que f(x1, x2, . . . , xk, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, para algún k < n − 1. Considera el vector de oferta donde ˆvi = xi para i ≤ k + 1, y ˆvi = 0 para todos los demás i, donde los xi son números arbitrarios que satisfacen x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Para los agentes con las k + 1 ofertas más altas, su pago de redistribución está especificado por f actuando sobre una entrada con solo k variables no nulas. Por lo tanto, todos reciben 0 por suposición de inducción. Los otros n − k − 1 agentes reciben cada uno f(x1, x2, . . . , xk, xk+1, 0, . . . , 0). El pago total de redistribución es entonces (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), el cual debe ser mayor o igual a 0, y menor o igual al pago total de VCG. Ahora, en este vector de oferta, la oferta más baja es 0 porque k + 1 < n. Pero dado que n = m + 1, el pago total de VCG es mˆvn = 0. Entonces tenemos f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Por inducción, esta afirmación se cumple para todos los k < n − 1; cuando k + 1 = n − 1, tenemos que f(x1, x2, . . . , xn−2, xn−1) = 0 para todos los x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0. Por lo tanto, en este mecanismo, el pago de redistribución siempre es 0; es decir, el mecanismo es simplemente el mecanismo VCG original. Por cierto, obtenemos el siguiente corolario: Corolario 2. Ningún mecanismo de redistribución de VCG satisface todos los siguientes requisitos: determinismo, anonimato, a prueba de estrategias, eficiencia y equilibrio presupuestario (fuerte). Esto se cumple para cualquier n ≥ m + 1. Prueba. Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del mecanismo de redistribución lineal VCG óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1. Pero el Teorema 2 muestra que es imposible superar este mecanismo en el peor de los casos. Para el caso n = m + 1: Si existe tal mecanismo, funcionaría tan bien como el mecanismo VCG original en el peor de los casos, lo que implica que es idéntico al mecanismo VCG según la Afirmación 7. Pero el mecanismo VCG no es (fuertemente) equilibrado en presupuesto. 9. CONCLUSIONES Para problemas de asignación con uno o más artículos, el conocido mecanismo de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la <br>prueba de estrategia</br>, la racionalidad individual y la propiedad de no déficit. ",
            "candidates": [],
            "error": [
                [
                    "prueba de estrategia",
                    "estrategia-veraz",
                    "estrategia de prueba",
                    "estrategia a prueba",
                    "prueba de estrategia"
                ]
            ]
        },
        "individually rational mechanism": {
            "translated_key": "mecanismo racional individual",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "mechanism": {
            "translated_key": "mecanismo",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) <br>mechanism</br> is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG <br>mechanism</br> is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a <br>mechanism</br> that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos <br>mechanism</br> coincides with a <br>mechanism</br> proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo <br>mechanism</br> as a special case.",
                "We then provide an optimization model for finding the optimal <br>mechanism</br>-that is, the <br>mechanism</br> that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting <br>mechanism</br> shows significant improvement over the Bailey-Cavallo <br>mechanism</br> (in the worst case).",
                "Finally, we prove that the obtained <br>mechanism</br> is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG <br>mechanism</br> [23, 4, 12]. (The VCG <br>mechanism</br> is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG <br>mechanism</br> has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the <br>mechanism</br> never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a <br>mechanism</br> that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG <br>mechanism</br> is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a <br>mechanism</br> that is more budget balanced than the VCG <br>mechanism</br>, and maintains all the other desirable properties.",
                "One way of trying to design such a <br>mechanism</br> is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a <br>mechanism</br> that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG <br>mechanism</br>.",
                "For example, in a single-item auction (where the VCG <br>mechanism</br> coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos <br>mechanism</br> is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos <br>mechanism</br> coincides with a <br>mechanism</br> proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo <br>mechanism</br> as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal <br>mechanism</br> inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting <br>mechanism</br> shows significant improvement over the BaileyCavallo <br>mechanism</br> (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our <br>mechanism</br> always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo <br>mechanism</br> redistributes only 80% in the worst case).",
                "Finally, we prove that our <br>mechanism</br> is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same <br>mechanism</br> has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal <br>mechanism</br> for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal <br>mechanism</br> (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution <br>mechanism</br> is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the <br>mechanism</br> is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG <br>mechanism</br>, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the <br>mechanism</br> as follows.",
                "After running the original VCG <br>mechanism</br>, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the <br>mechanism</br> remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a <br>mechanism</br> is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the <br>mechanism</br> returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The <br>mechanism</br> is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the <br>mechanism</br> is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a <br>mechanism</br> that is individually rational, and not all choices of the constants produce a <br>mechanism</br> that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the <br>mechanism</br> to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the <br>mechanism</br> must be individually rational (because the VCG <br>mechanism</br> is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the <br>mechanism</br> is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo <br>mechanism</br>): Consider the <br>mechanism</br> corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this <br>mechanism</br>, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution <br>mechanism</br> is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this <br>mechanism</br> to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the <br>mechanism</br> corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this <br>mechanism</br>, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the <br>mechanism</br> is individually rational.",
                "Also, the <br>mechanism</br> never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another <br>mechanism</br> that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one <br>mechanism</br> redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a <br>mechanism</br> is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this <br>mechanism</br> redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this <br>mechanism</br> also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one <br>mechanism</br> dominates another <br>mechanism</br> if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no <br>mechanism</br> in the family that dominates all other mechanisms in the family.",
                "For suppose such a <br>mechanism</br> exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant <br>mechanism</br> should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our <br>mechanism</br> to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant <br>mechanism</br> would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution <br>mechanism</br> would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a <br>mechanism</br> by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example <br>mechanism</br> has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo <br>mechanism</br>), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first <br>mechanism</br> has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second <br>mechanism</br> has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG <br>mechanism</br>.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal <br>mechanism</br> in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal <br>mechanism</br> (WO) and the Bailey-Cavallo <br>mechanism</br> (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal <br>mechanism</br> sometimes does better in the worst case than the BaileyCavallo <br>mechanism</br> does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo <br>mechanism</br> is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal <br>mechanism</br> is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal <br>mechanism</br> to the Bailey-Cavallo <br>mechanism</br> for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal <br>mechanism</br> has the same worst-case performance as the Bailey-Cavallo <br>mechanism</br> (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal <br>mechanism</br> outperforms the Bailey-Cavallo <br>mechanism</br> (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL <br>mechanism</br> We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal <br>mechanism</br> (among linear VCG redistribution mechanisms) is unique.",
                "For this <br>mechanism</br>, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal <br>mechanism</br> is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal <br>mechanism</br> provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo <br>mechanism</br> also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo <br>mechanism</br> in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution <br>mechanism</br> among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution <br>mechanism</br> is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution <br>mechanism</br> is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution <br>mechanism</br> is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the <br>mechanism</br> outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the <br>mechanism</br> is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our <br>mechanism</br> is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous <br>mechanism</br>.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG <br>mechanism</br>, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal <br>mechanism</br> among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a <br>mechanism</br> with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution <br>mechanism</br> is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution <br>mechanism</br> (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution <br>mechanism</br>, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this <br>mechanism</br>, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this <br>mechanism</br>, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no <br>mechanism</br> satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG <br>mechanism</br> (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only <br>mechanism</br> inside the family of linear redistribution mechanisms is the original VCG <br>mechanism</br>, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution <br>mechanism</br> exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG <br>mechanism</br>, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this <br>mechanism</br> is always nonnegative.",
                "By Lemma 2, for this <br>mechanism</br>, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this <br>mechanism</br>, the redistribution payment is always 0; that is, the <br>mechanism</br> is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution <br>mechanism</br> satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a <br>mechanism</br> exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution <br>mechanism</br>, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this <br>mechanism</br> in the worst case.",
                "For the case n = m + 1: If such a <br>mechanism</br> exists, it would perform as well as the original VCG <br>mechanism</br> in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG <br>mechanism</br> is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) <br>mechanism</br> is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG <br>mechanism</br> is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a <br>mechanism</br> that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos <br>mechanism</br> coincides with a <br>mechanism</br> proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo <br>mechanism</br> as a special case.",
                "We then provided an optimization model for finding the optimal <br>mechanism</br>-that is, the <br>mechanism</br> that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting <br>mechanism</br> shows significant improvement over the Bailey-Cavallo <br>mechanism</br> (in the worst case).",
                "Finally, we proved that the obtained <br>mechanism</br> is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution <br>mechanism</br> (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this <br>mechanism</br> has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG <br>mechanism</br>), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate <br>mechanism</br> design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online <br>mechanism</br> design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) <br>mechanism</br> is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG <br>mechanism</br> is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "In 2006, Cavallo [3] proposed a <br>mechanism</br> that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos <br>mechanism</br> coincides with a <br>mechanism</br> proposed by Bailey in 1997 [2].)",
                "The family includes the Bailey-Cavallo <br>mechanism</br> as a special case."
            ],
            "translated_annotated_samples": [
                "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el <br>mecanismo</br> bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit.",
                "Sin embargo, el <br>mecanismo</br> VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0.",
                "En 2006, Cavallo propuso un <br>mecanismo</br> que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit.",
                "Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el <br>mecanismo</br> de Cavallos coincide con un <br>mecanismo</br> propuesto por Bailey en 1997 [2].)",
                "La familia incluye el <br>mecanismo</br> Bailey-Cavallo como un caso especial."
            ],
            "translated_text": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el <br>mecanismo</br> bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el <br>mecanismo</br> VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un <br>mecanismo</br> que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el <br>mecanismo</br> de Cavallos coincide con un <br>mecanismo</br> propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el <br>mecanismo</br> Bailey-Cavallo como un caso especial. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "linear vcg redistribution mechanism": {
            "translated_key": "mecanismo de redistribución lineal VCG",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal <br>linear vcg redistribution mechanism</br> is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal <br>linear vcg redistribution mechanism</br>, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal <br>linear vcg redistribution mechanism</br>, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal <br>linear vcg redistribution mechanism</br> is of course individually rational.)",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal <br>linear vcg redistribution mechanism</br>, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal <br>linear vcg redistribution mechanism</br>, which by Theorem 1 obtains a redistribution percentage strictly less than 1."
            ],
            "translated_annotated_samples": [
                "Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El <br>mecanismo de redistribución lineal VCG</br> óptimo en el peor de los casos, por supuesto, es racional individualmente).",
                "Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el <br>mecanismo de redistribución lineal VCG</br> óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗.",
                "Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del <br>mecanismo de redistribución lineal VCG</br> óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1."
            ],
            "translated_text": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente. Considerar al agente an como el agente con la oferta más baja. Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn. Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo. Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón. Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0. Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0. Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original. Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo. Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes). Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0. Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG. Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1. Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit). Ahora damos dos ejemplos de mecanismos en esta familia. Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i. Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente. Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1. Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2). Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i. En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes. Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional. Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye. ¿Cuál de estos dos mecanismos es mejor? ¿Hay otro mecanismo que sea aún mejor? Esto es lo que estudiamos en la próxima sección. 4. Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta. Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada. A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso. Rendimiento en el mejor de los casos. Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra. Considera los dos ejemplos anteriores. Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos. Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0. Dominancia. Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta. Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos. Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia. Supongamos que tal mecanismo existe. Entonces, debería dominar ambos ejemplos anteriores. Considerar el pago VCG restante (el pago VCG no se pudo redistribuir). El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0. Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica. Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie. Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0. Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace). Rendimiento en el peor de los casos. Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza. Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1. Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades. Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso. Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso. Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos. Este porcentaje es indefinido cuando el pago total de VCG es 0. Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos). Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones. Reclamo 1. Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración. Primero, vamos a demostrar que c0 = 0. Considera el vector de oferta en el cual ˆvi = 0 para todo i. Para obtener racionalidad individual, debemos tener c0 ≥ 0. Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0. Así sabemos que c0 = 0. Ahora, si ci = 0 para todos los i, no hay nada que demostrar. De lo contrario, deja que j = min{i|ci = 0}. Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto. En este caso zn = cj, por lo que debemos tener cj ≥ 0. La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta. Considera el mismo vector de oferta que se mencionó anteriormente. Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0. Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0. Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1. Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0. También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0. Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición. Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i. Por lo tanto, estamos atrapados con el mecanismo VCG. A partir de aquí, solo consideramos el caso donde m < n − 1. Reclamo 2. La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Antes de demostrar esta afirmación, introducimos el siguiente lema. Lema 1. Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k). Prueba. Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk. Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos). Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera. Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa. Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente. Ahora estamos listos para presentar la prueba de la Afirmación 2. Prueba. La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Reclamo 3. La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración. La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci. La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento. La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal. Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit). En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1). Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el mecanismo óptimo en el peor caso) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos. De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del mecanismo óptimo en el peor caso (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El mecanismo óptimo en el peor caso supera significativamente al mecanismo de Bailey-Cavallo en el peor caso. Quizás de manera más sorprendente, el mecanismo óptimo en el peor de los casos a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo. Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2. Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1]. La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3. Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1. Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) . Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el mecanismo óptimo en el peor de los casos es de 3.62e−5 en el peor caso. Presentemos detalladamente la solución óptima para el caso n = 5. Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15. Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes. La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%. Finalmente, comparamos el mecanismo óptimo en el peor de los casos con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30. Estos resultados están en la Figura 1. Vemos que para cualquier m, cuando n = m + 2, el mecanismo óptimo en el peor de los casos tiene el mismo rendimiento en el peor de los casos que el mecanismo de Bailey-Cavallo (de hecho, en este caso, el mecanismo óptimo en el peor de los casos es idéntico al mecanismo de Bailey-Cavallo). Cuando n > m + 2, el mecanismo óptimo en el peor de los casos supera al mecanismo de Bailey-Cavallo (en el peor de los casos). 7. CARACTERIZACIÓN ANALÍTICA DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible). Es fácil ver que k está acotado por arriba por 1 (redistribuir más del 100% viola la restricción de no déficit). Además, siempre existe una solución factible, por ejemplo, k = 0 y ci = 0 para todo i. Entonces, siempre existe una solución óptima. Observe que el modelo del programa lineal depende únicamente del número de agentes n y del número de unidades m. Por lo tanto, la solución óptima es una función de n y m. Resulta que esta solución óptima puede caracterizarse analíticamente de la siguiente manera. Teorema 1. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo de peor caso (entre los mecanismos de redistribución lineal VCG) es único. Para este mecanismo, el porcentaje redistribuido en el peor de los casos es k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ El mecanismo óptimo en el peor de los casos se caracteriza por los siguientes valores para los ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! para i = m + 1, . . . , n − 1. Cabe destacar que hemos demostrado que ci = 0 para i ≤ m en la Afirmación 1. Prueba. Primero reescribimos el programa lineal de la siguiente manera. Introducimos nuevas variables xm+1, xm+2, . . . , xn−1, definidas por xj = Pj i=m+1 ci para j = m + 1, . . . , n − 1. El programa lineal se convierte entonces en: Variables: xm+1, xm+2, . . . , xn−1, k Maximizar k Sujeto a: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 para i = m + 1, m + 2, . . . , n − 1 Demostraremos que para cualquier solución óptima de este programa lineal, k = k∗. Además, demostraremos que cuando k = k∗, xj = Pj i=m+1 c∗ i para j = m + 1, . . . , n − 1. Esto demostrará el teorema. Primero hacemos las siguientes observaciones: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m Para i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finalmente, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Resumiendo lo anterior, tenemos: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Sea x∗ j = Pj i=m+1 c∗ i para j = m + 1, m + 2, . . . , n − 1, la primera ecuación anterior nos dice que (n − m − 1)x∗ m+1 = k∗ m. Al sumar las dos primeras ecuaciones, obtenemos (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m Al sumar las tres primeras ecuaciones, obtenemos (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m Al sumar las primeras i ecuaciones, donde i = 2, . . . , n−m−1, obtenemos (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m si i es par (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m si i es impar Finalmente, al sumar todas las ecuaciones, obtenemos nx∗ n−1 = m si n − m es par; nx∗ n−1 = k∗ m si n − m es impar. Por lo tanto, para todas las restricciones excepto las restricciones de no negatividad, hemos demostrado que se satisfacen al establecer xj = x∗ j = Pj i=m+1 c∗ i y k = k∗. A continuación mostramos que las restricciones de no negatividad también se cumplen con esta configuración. Para m + 1 ≤ i, i + 1 ≤ n − 1, tenemos que 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) Esto implica que el valor absoluto de c∗ i está disminuyendo a medida que i aumenta (si el c∗ contiene más de un número). Observamos además que el signo de c∗ i alterna, con el primer elemento c∗ m+1 positivo. Entonces x∗ j = Pj i=m+1 c∗ i ≥ 0 para todo j. Por lo tanto, hemos demostrado que estos xi = x∗ i junto con k = k∗ forman una solución factible del programa lineal. Procedemos a demostrar que de hecho es la única solución óptima. Primero demostramos la siguiente afirmación: Afirmación 4. Si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfacen las siguientes desigualdades: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m para i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Entonces debemos tener que ˆxi = ˆx∗ i y ˆk = k∗. Prueba de la afirmación. Considera la primera desigualdad. Sabemos que (n − m − 1)x∗ m+1 = k∗ m, por lo tanto (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1. Se deduce que ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0). Ahora, considera la siguiente desigualdad para i = 2. Sabemos que (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. Se sigue que (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, por lo que ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0). Ahora considera la siguiente desigualdad para i = 3. Sabemos que (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. Se sigue que (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, por lo que ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0). Procediendo de esta manera hasta i = n−m−1, obtenemos que ˆxm+i ≥ x∗ m+i si i es impar y ˆxm+i ≤ x∗ m+i si i es par. Además, si una desigualdad es estricta, entonces todas las desigualdades subsiguientes son estrictas. Ahora, si podemos demostrar que ˆxn−1 = x∗ n−1, se seguiría que los x∗ i son iguales a los ˆxi (lo que también implica que ˆk = k∗). Consideramos dos casos: Caso 1: n − m es par. Tenemos: n − m par ⇒ n − m − 1 impar ⇒ ˆxn−1 ≥ x∗ n−1. También tenemos: n−m par ⇒ nx∗ n−1 = m. Combinando estos dos, obtenemos m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1. Caso 2: n − m es impar. En este caso, tenemos ˆxn−1 ≤ x∗ n−1, y nx∗ n−1 = k∗ m. Entonces, tenemos: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1. Esto completa la prueba de la afirmación. Se deduce que si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 es una solución factible y ˆk ≥ k∗ , entonces dado que se cumplen todas las desigualdades en la Afirmación 4, debemos tener ˆxi = x∗ i y ˆk = k∗ . Por lo tanto, ninguna otra solución factible es tan buena como la descrita en el teorema. Conocer la caracterización analítica del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales. Primero, utilizar estas fórmulas es computacionalmente más eficiente que resolver el programa lineal utilizando un solucionador de propósito general. Segundo, podemos derivar el siguiente corolario. Corolario 1. Si el número de unidades m está fijo, entonces a medida que el número de agentes n aumenta, el porcentaje redistribuido en el peor de los casos converge linealmente a 1, con una tasa de convergencia de 1 2. (Es decir, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2. Es decir, en el límite, el porcentaje que no se redistribuye se reduce a la mitad por cada agente adicional. Observamos que esto es consistente con los datos experimentales para el caso de una sola unidad, donde el porcentaje restante en el peor de los casos se reduce aproximadamente a la mitad cada vez que agregamos otro agente. El porcentaje redistribuido en el peor de los casos bajo el mecanismo de Bailey-Cavallo también converge a 1 a medida que el número de agentes tiende a infinito, pero la convergencia es mucho más lenta: no converge linealmente (es decir, dejando que kC n sea el porcentaje redistribuido por el mecanismo de Bailey-Cavallo en el peor de los casos para n agentes, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1). Ahora presentamos la prueba del corolario. Prueba. Cuando el número de agentes es n, el porcentaje redistribuido en el peor de los casos es k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) . Cuando el número de agentes es n + 1, el porcentaje se convierte en k∗ n+1 = 1 − (n m) Pn j=m (n j ) . Para n suficientemente grande, tendremos 2n − mnm−1 > 0, y por lo tanto 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , y n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (porque `n j ´ ≤ ni si j ≤ i). Dado que tenemos limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , y limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , se sigue que limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8. En esta sección, demostramos que el mecanismo de redistribución óptimo en el peor de los casos entre los mecanismos de redistribución lineales VCG es de hecho óptimo (en el peor de los casos) entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Por lo tanto, restringir nuestra atención a mecanismos de redistribución lineal VCG no resultó en una pérdida. Para demostrar este teorema, necesitamos el siguiente lema. Este lema no es nuevo: fue enunciado informalmente por Cavallo [3]. Para completitud, lo presentamos aquí con una prueba detallada. Lema 2. Un mecanismo de redistribución VCG es determinístico, anónimo y a prueba de estrategias si y solo si existe una función f: Rn−1 → R, de modo que el pago de redistribución zi recibido por ai cumple zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Prueba. Primero, probemos la dirección \"solo si\", es decir, si un mecanismo de redistribución VCG es determinista, anónimo y a prueba de estrategias, entonces existe una función determinista f: Rn−1 → R, que hace que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Si un mecanismo de redistribución VCG es determinístico y anónimo, entonces para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, el mecanismo produce una lista única de pagos de redistribución: z1, z2, . . . , zn. Sea G: Rn → Rn la función que mapea ˆv1, ˆv2, . . . , ˆvn a z1, z2, . . . , zn para todos los vectores de oferta. Sea H(i, x1, x2, . . . , xn) el i-ésimo elemento de G(x1, x2, . . . , xn), de modo que zi = H(i, ˆv1, ˆv2, . . . , ˆvn) para todos los vectores de oferta y todo 1 ≤ i ≤ n. Debido a que el mecanismo es anónimo, dos agentes deben recibir el mismo pago de redistribución si sus ofertas son iguales. Entonces, si ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Por lo tanto, si dejamos j = min{t|ˆvt = ˆvi}, entonces H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Definamos K : Rn → N × Rn de la siguiente manera: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], donde w1, w2, . . . , wn son y, x1, x2, . . . , xn−1 ordenados en orden descendente, y j = min{t|wt = y}. ({t|wt = y} = ∅ porque y ∈ {w1, w2, . . . , wn}). También definamos F : Rn → R por F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi. Es decir, F es el pago de redistribución a un agente que ofrece ˆvi cuando las otras ofertas son ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn. Dado que nuestro mecanismo debe ser a prueba de estrategias y el espacio de valoraciones es ilimitado, zi debería ser independiente de ˆvi según el Lema 1 en Cavallo [3]. Por lo tanto, podemos simplemente ignorar la primera variable de entrada a F; sea f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1). Por lo tanto, para todos los vectores de oferta y i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn). Esto completa la prueba para la dirección solo si. Para la dirección si, si el pago de redistribución recibido por ai satisface zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todos los vectores de oferta y i, entonces esto es claramente un mecanismo determinístico y anónimo. Para demostrar la estrategia a prueba, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias. Ahora estamos listos para presentar el siguiente teorema: Teorema 2. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo en el peor de los casos dentro de la familia de mecanismos de redistribución lineal VCG es óptimo en el peor de los casos entre todos los mecanismos que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El <br>mecanismo de redistribución lineal VCG</br> óptimo en el peor de los casos, por supuesto, es racional individualmente). Prueba. Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el <br>mecanismo de redistribución lineal VCG</br> óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Primero demostramos que f tiene las siguientes propiedades. Reclamo 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Prueba del reclamo. Supusimos que para este mecanismo, el porcentaje de redistribución en el peor de los casos satisface ˆk > k∗ ≥ 0. Si el pago total VCG es x, el pago total de redistribución debería estar en [ˆkx, x] (criterio de no déficit). Considera el caso en el que todos los agentes ofertan 0, por lo que el pago total de VCG también es 0. Por lo tanto, el pago total de redistribución debería ser de [ˆk · 0, 0], es decir, debería ser 0. Por lo tanto, el pago de redistribución de cada agente f(0, 0, . . . , 0) debe ser 0. Ahora, dejemos que ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) donde el número de 1s es igual a i. Demostramos que t0 = 0. Si tn−1 = 0, considera el vector de oferta donde todos ofrecen 1. El pago total VCG es m y el pago total de redistribución es nf(1, 1, . . . , 1) = ntn−1 = 0. Esto corresponde a una redistribución del 0%, lo cual va en contra de nuestra suposición de que ˆk > k∗ ≥ 0. Ahora, considera j = min{i|ti = 0} (lo cual está bien definido porque tn−1 = 0). Si j > m, la propiedad se cumple. Si j ≤ m, considera el vector de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Bajo este vector de oferta, los primeros j agentes reciben cada uno un pago de redistribución tj−1 = 0, y los restantes n − j agentes reciben cada uno tj. Por lo tanto, el pago total de redistribución es (n − j)tj. Dado que el pago total VCG para este vector de oferta es 0, debemos tener (n − j)tj = 0. Entonces tj = 0 (j ≤ m < n). Pero esto va en contra de la definición de j. Por lo tanto, f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Reclamo 6. f satisface las siguientes desigualdades: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m para i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Aquí ti está definido como en la prueba del Reclamo 5. Prueba del reclamo. Para j = m + 1, . . . , n, considera los vectores de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Estos vectores de oferta junto con la restricción de no déficit y la restricción del peor caso producen el conjunto de desigualdades anterior: por ejemplo, cuando j = m + 1, consideramos el vector de oferta ˆvi = 1 para i ≤ m + 1 y ˆvi = 0 para todos los demás i. Los primeros m+1 agentes reciben cada uno un pago de redistribución de tm = 0, y todos los demás agentes reciben tm+1. Por lo tanto, la redistribución total de VCG es (n − m − 1)tm+1. La restricción de no déficit establece que (n − m − 1)tm+1 ≤ m (porque el pago total VCG es m). La restricción del peor caso establece que (n − m − 1)tm+1 ≥ ˆkm. Combinando estos dos, obtenemos la primera desigualdad. Las otras desigualdades se pueden obtener de la misma manera. Ahora observamos que las desigualdades en la Afirmación 6, junto con ˆk ≥ k∗, son las mismas que las de la Afirmación 4 (donde los ti son reemplazados por los ˆxi). Por lo tanto, podemos concluir que ˆk = k∗, lo cual va en contra de nuestra suposición de que ˆk > k∗. Por lo tanto, ningún mecanismo que cumpla todas las propiedades enumeradas tiene un porcentaje de redistribución mayor que k∗ en el peor de los casos. Hasta ahora solo hemos hablado del caso donde n ≥ m+2. Con el propósito de completitud, proporcionamos la siguiente afirmación para el caso n = m + 1. Reclamación 7. Para cualquier m y n con n = m + 1, el mecanismo VCG original (es decir, redistribuyendo nada) es (de manera única) óptimo en el peor de los casos entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Recordamos que cuando n = m+1, la Afirmación 1 nos dice que el único mecanismo dentro de la familia de mecanismos de redistribución lineal es el mecanismo VCG original, por lo que este mecanismo es automáticamente óptimo en el peor de los casos dentro de esta familia. Sin embargo, para demostrar la afirmación anterior, necesitamos mostrar que es óptimo en el peor de los casos entre todos los mecanismos de redistribución que tienen las propiedades deseadas. Prueba. Supongamos que existe un mecanismo de redistribución que cumple todas las propiedades anteriores y tiene un rendimiento en el peor de los casos tan bueno como el mecanismo VCG original, es decir, su porcentaje de redistribución en el peor de los casos es mayor o igual a 0. Esto implica que el pago total de redistribución de este mecanismo siempre es no negativo. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Demostraremos que f(x1, x2, . . . , xn−1) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0. Primero, considera el vector de oferta donde ˆvi = 0 para todo i. Aquí, cada agente recibe un pago de redistribución f(0, 0, . . . , 0). El pago total de redistribución es entonces nf(0, 0, . . . , 0), que debería ser tanto mayor o igual a 0 (por la observación anterior) como menor o igual a 0 (utilizando el criterio de no déficit y el hecho de que el pago total VCG es 0). Se deduce que f(0, 0, . . . , 0) = 0. Ahora, consideremos el vector de oferta donde ˆv1 = x1 ≥ 0 y ˆvi = 0 para todos los demás i. Para este vector de oferta, el agente con la oferta más alta recibe un pago de redistribución de f(0, 0, . . . , 0) = 0, y los otros n - 1 agentes reciben cada uno f(x1, 0, . . . , 0). Por el mismo razonamiento anterior, el pago total de redistribución debe ser mayor o igual a 0 y menor o igual a 0, por lo tanto f(x1, 0, . . . , 0) = 0 para todo x1 ≥ 0. Procediendo por inducción, asumamos que f(x1, x2, . . . , xk, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, para algún k < n − 1. Considera el vector de oferta donde ˆvi = xi para i ≤ k + 1, y ˆvi = 0 para todos los demás i, donde los xi son números arbitrarios que satisfacen x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Para los agentes con las k + 1 ofertas más altas, su pago de redistribución está especificado por f actuando sobre una entrada con solo k variables no nulas. Por lo tanto, todos reciben 0 por suposición de inducción. Los otros n − k − 1 agentes reciben cada uno f(x1, x2, . . . , xk, xk+1, 0, . . . , 0). El pago total de redistribución es entonces (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), el cual debe ser mayor o igual a 0, y menor o igual al pago total de VCG. Ahora, en este vector de oferta, la oferta más baja es 0 porque k + 1 < n. Pero dado que n = m + 1, el pago total de VCG es mˆvn = 0. Entonces tenemos f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Por inducción, esta afirmación se cumple para todos los k < n − 1; cuando k + 1 = n − 1, tenemos que f(x1, x2, . . . , xn−2, xn−1) = 0 para todos los x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0. Por lo tanto, en este mecanismo, el pago de redistribución siempre es 0; es decir, el mecanismo es simplemente el mecanismo VCG original. Por cierto, obtenemos el siguiente corolario: Corolario 2. Ningún mecanismo de redistribución de VCG satisface todos los siguientes requisitos: determinismo, anonimato, a prueba de estrategias, eficiencia y equilibrio presupuestario (fuerte). Esto se cumple para cualquier n ≥ m + 1. Prueba. Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del <br>mecanismo de redistribución lineal VCG</br> óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1. Pero el Teorema 2 muestra que es imposible superar este mecanismo en el peor de los casos. Para el caso n = m + 1: Si existe tal mecanismo, funcionaría tan bien como el mecanismo VCG original en el peor de los casos, lo que implica que es idéntico al mecanismo VCG según la Afirmación 7. Pero el mecanismo VCG no es (fuertemente) equilibrado en presupuesto. 9. CONCLUSIONES Para problemas de asignación con uno o más artículos, el conocido mecanismo de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendimos este resultado en un entorno restringido. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG 38 de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego proporcionamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Una dirección importante para futuras investigaciones es intentar extender estos resultados más allá de las subastas multiunidad con demanda unitaria. Sin embargo, resulta que en contextos lo suficientemente generales, el porcentaje óptimo de redistribución en el peor de los casos es 0. En tales contextos, el criterio del peor escenario no proporciona orientación para determinar un buen mecanismo de redistribución (incluso redistribuir nada logra el porcentaje óptimo del peor escenario), por lo que se hace necesario seguir otros criterios. Alternativamente, se puede intentar identificar otros escenarios especiales en los que la redistribución positiva en el peor de los casos sea posible. Otra dirección para investigaciones futuras es considerar si este mecanismo tiene aplicaciones en la colusión. Por ejemplo, en un esquema colusorio típico, hay un anillo de licitación compuesto por un número de coludidores, quienes presentan solo una oferta [10, 17]. Si esta oferta gana, los coludidores deben asignarse el artículo entre ellos, quizás utilizando pagos, pero por supuesto no quieren que los pagos salgan del grupo. Este trabajo forma parte de una creciente literatura sobre el diseño de mecanismos que obtienen buenos resultados en el peor de los casos. Tradicionalmente, los economistas se han centrado principalmente en diseñar mecanismos que siempre obtengan ciertas propiedades (como el mecanismo VCG), o en diseñar mecanismos que sean óptimos con respecto a alguna distribución previa de las preferencias de los agentes (como la subasta de Myerson [20] y la subasta de Maskin-Riley [18] para maximizar los ingresos esperados). Algunos trabajos más recientes se han centrado en diseñar mecanismos para maximizar las ganancias utilizando análisis competitivo del peor caso (por ejemplo, [9, 1, 15, 8]). También ha habido un creciente interés en el diseño de mecanismos en línea [7] donde los agentes llegan con el tiempo y las decisiones deben tomarse antes de que todos los agentes hayan llegado. Este tipo de trabajo a menudo también adopta un enfoque de análisis competitivo del peor escenario [14, 13]. No parece que existan conexiones directas entre nuestro trabajo y estos otros trabajos que se centran en diseñar mecanismos que funcionan bien en el peor de los casos. Sin embargo, parece probable que la investigación futura continúe investigando el diseño de mecanismos para el peor de los casos, y con suerte, surgirá un marco coherente. 10. REFERENCIAS [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica y M. Sudan. Desrandomización de subastas. STOC, 619-625, 2005. [2] M. J. Bailey. \n\nSTOC, 619-625, 2005. [2] M. J. Bailey. El proceso de revelación de la demanda: distribuir el excedente. Elección Pública, 91:107-126, 1997. [3] R. Cavallo. Toma de decisiones óptima con un mínimo de desperdicio: redistribución a prueba de estrategias de pagos VCG. AAMAS, 882-889, 2006. [4] E. H. Clarke. \n\nAAMAS, 882-889, 2006. [4] E. H. Clarke. Precios escalonados de bienes públicos. Elección Pública, 11:17-33, 1971. [5] B. Faltings. Un esquema de elección social equilibrado presupuestariamente e incentivo-compatible. AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou y S. Shenker. Compartiendo el costo de las transmisiones multicast. JCSS, 63:21-41, 2001. [7] E. Friedman y D. Parkes. Tarificación del WiFi en Starbucks - Problemas en el diseño de mecanismos en línea. EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, y A. Wright. Subastas competitivas. Juegos y Comportamiento Económico, 2006. [9] A. Goldberg, J. Hartline y A. Wright. Subastas competitivas y bienes digitales. SODA, 735-744, 2001. [10] D. A. Graham y R. C. Marshall. Comportamiento de licitantes colusivos en subastas de segundo precio y subastas inglesas de objeto único. Revista de Economía Política, 95(6):1217-1239, 1987. [11] J. Verde y J.-J. Laffont. Caracterización de mecanismos satisfactorios para la revelación de preferencias por bienes públicos. Econometrica, 45:427-438, 1977. [12] T. Groves.\nEconometrica, 45:427-438, 1977. [12] T. Groves. Incentivos en equipos. Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian y D. C. Parkes. Subastas en línea de bienes reutilizables. EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. EC, 71-80, 2004. [15] J. Hartline y R. McGrew. De subastas de suministro limitado óptimo a ilimitado. EC, 175-182, 2005. [16] L. Hurwicz. \n\nEC, 175-182, 2005. [16] L. Hurwicz. Sobre la existencia de sistemas de asignación cuyos equilibrios de Nash manipulativos son óptimos de Pareto, 1975. Presentado en el 3er Congreso Mundial de la Sociedad de Econometría. [17] K. Leyton-Brown, Y. Shoham y M. Tennenholtz. Clubes que realizan ofertas en subastas de primer precio. AAAI, 373-378, 2002. [18] E. Maskin y J. Riley. Subastas multiunidad óptimas. En F. Hahn, editor, \"La Economía de los Mercados Ausentes, la Información y los Juegos\", capítulo 14, 312-335. Clarendon Press, Oxford, 1989. [19] H. Moulin.\nPrensa Clarendon, Oxford, 1989. [19] H. Moulin. Asignación eficiente y a prueba de estrategias con un reclamante residual barato. Documento de trabajo, marzo de 2007. [20] R. Myerson. Diseño óptimo de subasta. Matemáticas de la Investigación de Operaciones, 6:58-73, 1981. [21] R. Myerson y M. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Revista de Teoría Económica, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam y M. Eso. Lograr el equilibrio presupuestario con esquemas de pago basados en Vickrey en intercambios. IJCAI, 1161-1168, 2001. [23] W. Vickrey. \n\nIJCAI, 1161-1168, 2001. [23] W. Vickrey. Contrarrestando la especulación, subastas y ofertas selladas competitivas. Revista de Finanzas, 16:8-37, 1961. 39 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "transformation to linear programming": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "<br>transformation to linear programming</br> The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [
                "<br>transformation to linear programming</br> The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations."
            ],
            "translated_annotated_samples": [
                "TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones."
            ],
            "translated_text": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente. Considerar al agente an como el agente con la oferta más baja. Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn. Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo. Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón. Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0. Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0. Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original. Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo. Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes). Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0. Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG. Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1. Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit). Ahora damos dos ejemplos de mecanismos en esta familia. Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i. Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente. Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1. Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2). Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i. En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes. Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional. Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye. ¿Cuál de estos dos mecanismos es mejor? ¿Hay otro mecanismo que sea aún mejor? Esto es lo que estudiamos en la próxima sección. 4. Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta. Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada. A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso. Rendimiento en el mejor de los casos. Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra. Considera los dos ejemplos anteriores. Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos. Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0. Dominancia. Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta. Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos. Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia. Supongamos que tal mecanismo existe. Entonces, debería dominar ambos ejemplos anteriores. Considerar el pago VCG restante (el pago VCG no se pudo redistribuir). El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0. Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica. Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie. Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0. Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace). Rendimiento en el peor de los casos. Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza. Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1. Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades. Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso. Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso. Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos. Este porcentaje es indefinido cuando el pago total de VCG es 0. Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos). Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones. Reclamo 1. Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración. Primero, vamos a demostrar que c0 = 0. Considera el vector de oferta en el cual ˆvi = 0 para todo i. Para obtener racionalidad individual, debemos tener c0 ≥ 0. Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0. Así sabemos que c0 = 0. Ahora, si ci = 0 para todos los i, no hay nada que demostrar. De lo contrario, deja que j = min{i|ci = 0}. Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto. En este caso zn = cj, por lo que debemos tener cj ≥ 0. La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta. Considera el mismo vector de oferta que se mencionó anteriormente. Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0. Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0. Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1. Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0. También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0. Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición. Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i. Por lo tanto, estamos atrapados con el mecanismo VCG. A partir de aquí, solo consideramos el caso donde m < n − 1. Reclamo 2. La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Antes de demostrar esta afirmación, introducimos el siguiente lema. Lema 1. Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k). Prueba. Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk. Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos). Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera. Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa. Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente. Ahora estamos listos para presentar la prueba de la Afirmación 2. Prueba. La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Reclamo 3. La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración. La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci. La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento. La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal. Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit). En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1). Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el mecanismo óptimo en el peor caso) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos. De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del mecanismo óptimo en el peor caso (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El mecanismo óptimo en el peor caso supera significativamente al mecanismo de Bailey-Cavallo en el peor caso. Quizás de manera más sorprendente, el mecanismo óptimo en el peor de los casos a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo. Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2. Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1]. La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3. Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1. Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) . Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el mecanismo óptimo en el peor de los casos es de 3.62e−5 en el peor caso. Presentemos detalladamente la solución óptima para el caso n = 5. Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15. Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes. La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%. Finalmente, comparamos el mecanismo óptimo en el peor de los casos con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30. Estos resultados están en la Figura 1. Vemos que para cualquier m, cuando n = m + 2, el mecanismo óptimo en el peor de los casos tiene el mismo rendimiento en el peor de los casos que el mecanismo de Bailey-Cavallo (de hecho, en este caso, el mecanismo óptimo en el peor de los casos es idéntico al mecanismo de Bailey-Cavallo). Cuando n > m + 2, el mecanismo óptimo en el peor de los casos supera al mecanismo de Bailey-Cavallo (en el peor de los casos). 7. CARACTERIZACIÓN ANALÍTICA DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible). Es fácil ver que k está acotado por arriba por 1 (redistribuir más del 100% viola la restricción de no déficit). Además, siempre existe una solución factible, por ejemplo, k = 0 y ci = 0 para todo i. Entonces, siempre existe una solución óptima. Observe que el modelo del programa lineal depende únicamente del número de agentes n y del número de unidades m. Por lo tanto, la solución óptima es una función de n y m. Resulta que esta solución óptima puede caracterizarse analíticamente de la siguiente manera. Teorema 1. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo de peor caso (entre los mecanismos de redistribución lineal VCG) es único. Para este mecanismo, el porcentaje redistribuido en el peor de los casos es k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ El mecanismo óptimo en el peor de los casos se caracteriza por los siguientes valores para los ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! para i = m + 1, . . . , n − 1. Cabe destacar que hemos demostrado que ci = 0 para i ≤ m en la Afirmación 1. Prueba. Primero reescribimos el programa lineal de la siguiente manera. Introducimos nuevas variables xm+1, xm+2, . . . , xn−1, definidas por xj = Pj i=m+1 ci para j = m + 1, . . . , n − 1. El programa lineal se convierte entonces en: Variables: xm+1, xm+2, . . . , xn−1, k Maximizar k Sujeto a: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 para i = m + 1, m + 2, . . . , n − 1 Demostraremos que para cualquier solución óptima de este programa lineal, k = k∗. Además, demostraremos que cuando k = k∗, xj = Pj i=m+1 c∗ i para j = m + 1, . . . , n − 1. Esto demostrará el teorema. Primero hacemos las siguientes observaciones: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m Para i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finalmente, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Resumiendo lo anterior, tenemos: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Sea x∗ j = Pj i=m+1 c∗ i para j = m + 1, m + 2, . . . , n − 1, la primera ecuación anterior nos dice que (n − m − 1)x∗ m+1 = k∗ m. Al sumar las dos primeras ecuaciones, obtenemos (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m Al sumar las tres primeras ecuaciones, obtenemos (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m Al sumar las primeras i ecuaciones, donde i = 2, . . . , n−m−1, obtenemos (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m si i es par (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m si i es impar Finalmente, al sumar todas las ecuaciones, obtenemos nx∗ n−1 = m si n − m es par; nx∗ n−1 = k∗ m si n − m es impar. Por lo tanto, para todas las restricciones excepto las restricciones de no negatividad, hemos demostrado que se satisfacen al establecer xj = x∗ j = Pj i=m+1 c∗ i y k = k∗. A continuación mostramos que las restricciones de no negatividad también se cumplen con esta configuración. Para m + 1 ≤ i, i + 1 ≤ n − 1, tenemos que 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) Esto implica que el valor absoluto de c∗ i está disminuyendo a medida que i aumenta (si el c∗ contiene más de un número). Observamos además que el signo de c∗ i alterna, con el primer elemento c∗ m+1 positivo. Entonces x∗ j = Pj i=m+1 c∗ i ≥ 0 para todo j. Por lo tanto, hemos demostrado que estos xi = x∗ i junto con k = k∗ forman una solución factible del programa lineal. Procedemos a demostrar que de hecho es la única solución óptima. Primero demostramos la siguiente afirmación: Afirmación 4. Si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfacen las siguientes desigualdades: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m para i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Entonces debemos tener que ˆxi = ˆx∗ i y ˆk = k∗. Prueba de la afirmación. Considera la primera desigualdad. Sabemos que (n − m − 1)x∗ m+1 = k∗ m, por lo tanto (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1. Se deduce que ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0). Ahora, considera la siguiente desigualdad para i = 2. Sabemos que (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. Se sigue que (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, por lo que ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0). Ahora considera la siguiente desigualdad para i = 3. Sabemos que (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. Se sigue que (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, por lo que ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0). Procediendo de esta manera hasta i = n−m−1, obtenemos que ˆxm+i ≥ x∗ m+i si i es impar y ˆxm+i ≤ x∗ m+i si i es par. Además, si una desigualdad es estricta, entonces todas las desigualdades subsiguientes son estrictas. Ahora, si podemos demostrar que ˆxn−1 = x∗ n−1, se seguiría que los x∗ i son iguales a los ˆxi (lo que también implica que ˆk = k∗). Consideramos dos casos: Caso 1: n − m es par. Tenemos: n − m par ⇒ n − m − 1 impar ⇒ ˆxn−1 ≥ x∗ n−1. También tenemos: n−m par ⇒ nx∗ n−1 = m. Combinando estos dos, obtenemos m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1. Caso 2: n − m es impar. En este caso, tenemos ˆxn−1 ≤ x∗ n−1, y nx∗ n−1 = k∗ m. Entonces, tenemos: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1. Esto completa la prueba de la afirmación. Se deduce que si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 es una solución factible y ˆk ≥ k∗ , entonces dado que se cumplen todas las desigualdades en la Afirmación 4, debemos tener ˆxi = x∗ i y ˆk = k∗ . Por lo tanto, ninguna otra solución factible es tan buena como la descrita en el teorema. Conocer la caracterización analítica del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales. Primero, utilizar estas fórmulas es computacionalmente más eficiente que resolver el programa lineal utilizando un solucionador de propósito general. Segundo, podemos derivar el siguiente corolario. Corolario 1. Si el número de unidades m está fijo, entonces a medida que el número de agentes n aumenta, el porcentaje redistribuido en el peor de los casos converge linealmente a 1, con una tasa de convergencia de 1 2. (Es decir, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2. Es decir, en el límite, el porcentaje que no se redistribuye se reduce a la mitad por cada agente adicional. Observamos que esto es consistente con los datos experimentales para el caso de una sola unidad, donde el porcentaje restante en el peor de los casos se reduce aproximadamente a la mitad cada vez que agregamos otro agente. El porcentaje redistribuido en el peor de los casos bajo el mecanismo de Bailey-Cavallo también converge a 1 a medida que el número de agentes tiende a infinito, pero la convergencia es mucho más lenta: no converge linealmente (es decir, dejando que kC n sea el porcentaje redistribuido por el mecanismo de Bailey-Cavallo en el peor de los casos para n agentes, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1). Ahora presentamos la prueba del corolario. Prueba. Cuando el número de agentes es n, el porcentaje redistribuido en el peor de los casos es k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) . Cuando el número de agentes es n + 1, el porcentaje se convierte en k∗ n+1 = 1 − (n m) Pn j=m (n j ) . Para n suficientemente grande, tendremos 2n − mnm−1 > 0, y por lo tanto 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , y n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (porque `n j ´ ≤ ni si j ≤ i). Dado que tenemos limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , y limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , se sigue que limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8. En esta sección, demostramos que el mecanismo de redistribución óptimo en el peor de los casos entre los mecanismos de redistribución lineales VCG es de hecho óptimo (en el peor de los casos) entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Por lo tanto, restringir nuestra atención a mecanismos de redistribución lineal VCG no resultó en una pérdida. Para demostrar este teorema, necesitamos el siguiente lema. Este lema no es nuevo: fue enunciado informalmente por Cavallo [3]. Para completitud, lo presentamos aquí con una prueba detallada. Lema 2. Un mecanismo de redistribución VCG es determinístico, anónimo y a prueba de estrategias si y solo si existe una función f: Rn−1 → R, de modo que el pago de redistribución zi recibido por ai cumple zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Prueba. Primero, probemos la dirección \"solo si\", es decir, si un mecanismo de redistribución VCG es determinista, anónimo y a prueba de estrategias, entonces existe una función determinista f: Rn−1 → R, que hace que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Si un mecanismo de redistribución VCG es determinístico y anónimo, entonces para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, el mecanismo produce una lista única de pagos de redistribución: z1, z2, . . . , zn. Sea G: Rn → Rn la función que mapea ˆv1, ˆv2, . . . , ˆvn a z1, z2, . . . , zn para todos los vectores de oferta. Sea H(i, x1, x2, . . . , xn) el i-ésimo elemento de G(x1, x2, . . . , xn), de modo que zi = H(i, ˆv1, ˆv2, . . . , ˆvn) para todos los vectores de oferta y todo 1 ≤ i ≤ n. Debido a que el mecanismo es anónimo, dos agentes deben recibir el mismo pago de redistribución si sus ofertas son iguales. Entonces, si ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Por lo tanto, si dejamos j = min{t|ˆvt = ˆvi}, entonces H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Definamos K : Rn → N × Rn de la siguiente manera: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], donde w1, w2, . . . , wn son y, x1, x2, . . . , xn−1 ordenados en orden descendente, y j = min{t|wt = y}. ({t|wt = y} = ∅ porque y ∈ {w1, w2, . . . , wn}). También definamos F : Rn → R por F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi. Es decir, F es el pago de redistribución a un agente que ofrece ˆvi cuando las otras ofertas son ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn. Dado que nuestro mecanismo debe ser a prueba de estrategias y el espacio de valoraciones es ilimitado, zi debería ser independiente de ˆvi según el Lema 1 en Cavallo [3]. Por lo tanto, podemos simplemente ignorar la primera variable de entrada a F; sea f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1). Por lo tanto, para todos los vectores de oferta y i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn). Esto completa la prueba para la dirección solo si. Para la dirección si, si el pago de redistribución recibido por ai satisface zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todos los vectores de oferta y i, entonces esto es claramente un mecanismo determinístico y anónimo. Para demostrar la estrategia a prueba, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias. Ahora estamos listos para presentar el siguiente teorema: Teorema 2. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo en el peor de los casos dentro de la familia de mecanismos de redistribución lineal VCG es óptimo en el peor de los casos entre todos los mecanismos que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El mecanismo de redistribución lineal VCG óptimo en el peor de los casos, por supuesto, es racional individualmente). Prueba. Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el mecanismo de redistribución lineal VCG óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Primero demostramos que f tiene las siguientes propiedades. Reclamo 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Prueba del reclamo. Supusimos que para este mecanismo, el porcentaje de redistribución en el peor de los casos satisface ˆk > k∗ ≥ 0. Si el pago total VCG es x, el pago total de redistribución debería estar en [ˆkx, x] (criterio de no déficit). Considera el caso en el que todos los agentes ofertan 0, por lo que el pago total de VCG también es 0. Por lo tanto, el pago total de redistribución debería ser de [ˆk · 0, 0], es decir, debería ser 0. Por lo tanto, el pago de redistribución de cada agente f(0, 0, . . . , 0) debe ser 0. Ahora, dejemos que ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) donde el número de 1s es igual a i. Demostramos que t0 = 0. Si tn−1 = 0, considera el vector de oferta donde todos ofrecen 1. El pago total VCG es m y el pago total de redistribución es nf(1, 1, . . . , 1) = ntn−1 = 0. Esto corresponde a una redistribución del 0%, lo cual va en contra de nuestra suposición de que ˆk > k∗ ≥ 0. Ahora, considera j = min{i|ti = 0} (lo cual está bien definido porque tn−1 = 0). Si j > m, la propiedad se cumple. Si j ≤ m, considera el vector de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Bajo este vector de oferta, los primeros j agentes reciben cada uno un pago de redistribución tj−1 = 0, y los restantes n − j agentes reciben cada uno tj. Por lo tanto, el pago total de redistribución es (n − j)tj. Dado que el pago total VCG para este vector de oferta es 0, debemos tener (n − j)tj = 0. Entonces tj = 0 (j ≤ m < n). Pero esto va en contra de la definición de j. Por lo tanto, f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Reclamo 6. f satisface las siguientes desigualdades: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m para i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Aquí ti está definido como en la prueba del Reclamo 5. Prueba del reclamo. Para j = m + 1, . . . , n, considera los vectores de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Estos vectores de oferta junto con la restricción de no déficit y la restricción del peor caso producen el conjunto de desigualdades anterior: por ejemplo, cuando j = m + 1, consideramos el vector de oferta ˆvi = 1 para i ≤ m + 1 y ˆvi = 0 para todos los demás i. Los primeros m+1 agentes reciben cada uno un pago de redistribución de tm = 0, y todos los demás agentes reciben tm+1. Por lo tanto, la redistribución total de VCG es (n − m − 1)tm+1. La restricción de no déficit establece que (n − m − 1)tm+1 ≤ m (porque el pago total VCG es m). La restricción del peor caso establece que (n − m − 1)tm+1 ≥ ˆkm. Combinando estos dos, obtenemos la primera desigualdad. Las otras desigualdades se pueden obtener de la misma manera. Ahora observamos que las desigualdades en la Afirmación 6, junto con ˆk ≥ k∗, son las mismas que las de la Afirmación 4 (donde los ti son reemplazados por los ˆxi). Por lo tanto, podemos concluir que ˆk = k∗, lo cual va en contra de nuestra suposición de que ˆk > k∗. Por lo tanto, ningún mecanismo que cumpla todas las propiedades enumeradas tiene un porcentaje de redistribución mayor que k∗ en el peor de los casos. Hasta ahora solo hemos hablado del caso donde n ≥ m+2. Con el propósito de completitud, proporcionamos la siguiente afirmación para el caso n = m + 1. Reclamación 7. Para cualquier m y n con n = m + 1, el mecanismo VCG original (es decir, redistribuyendo nada) es (de manera única) óptimo en el peor de los casos entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Recordamos que cuando n = m+1, la Afirmación 1 nos dice que el único mecanismo dentro de la familia de mecanismos de redistribución lineal es el mecanismo VCG original, por lo que este mecanismo es automáticamente óptimo en el peor de los casos dentro de esta familia. Sin embargo, para demostrar la afirmación anterior, necesitamos mostrar que es óptimo en el peor de los casos entre todos los mecanismos de redistribución que tienen las propiedades deseadas. Prueba. Supongamos que existe un mecanismo de redistribución que cumple todas las propiedades anteriores y tiene un rendimiento en el peor de los casos tan bueno como el mecanismo VCG original, es decir, su porcentaje de redistribución en el peor de los casos es mayor o igual a 0. Esto implica que el pago total de redistribución de este mecanismo siempre es no negativo. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Demostraremos que f(x1, x2, . . . , xn−1) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0. Primero, considera el vector de oferta donde ˆvi = 0 para todo i. Aquí, cada agente recibe un pago de redistribución f(0, 0, . . . , 0). El pago total de redistribución es entonces nf(0, 0, . . . , 0), que debería ser tanto mayor o igual a 0 (por la observación anterior) como menor o igual a 0 (utilizando el criterio de no déficit y el hecho de que el pago total VCG es 0). Se deduce que f(0, 0, . . . , 0) = 0. Ahora, consideremos el vector de oferta donde ˆv1 = x1 ≥ 0 y ˆvi = 0 para todos los demás i. Para este vector de oferta, el agente con la oferta más alta recibe un pago de redistribución de f(0, 0, . . . , 0) = 0, y los otros n - 1 agentes reciben cada uno f(x1, 0, . . . , 0). Por el mismo razonamiento anterior, el pago total de redistribución debe ser mayor o igual a 0 y menor o igual a 0, por lo tanto f(x1, 0, . . . , 0) = 0 para todo x1 ≥ 0. Procediendo por inducción, asumamos que f(x1, x2, . . . , xk, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, para algún k < n − 1. Considera el vector de oferta donde ˆvi = xi para i ≤ k + 1, y ˆvi = 0 para todos los demás i, donde los xi son números arbitrarios que satisfacen x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Para los agentes con las k + 1 ofertas más altas, su pago de redistribución está especificado por f actuando sobre una entrada con solo k variables no nulas. Por lo tanto, todos reciben 0 por suposición de inducción. Los otros n − k − 1 agentes reciben cada uno f(x1, x2, . . . , xk, xk+1, 0, . . . , 0). El pago total de redistribución es entonces (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), el cual debe ser mayor o igual a 0, y menor o igual al pago total de VCG. Ahora, en este vector de oferta, la oferta más baja es 0 porque k + 1 < n. Pero dado que n = m + 1, el pago total de VCG es mˆvn = 0. Entonces tenemos f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Por inducción, esta afirmación se cumple para todos los k < n − 1; cuando k + 1 = n − 1, tenemos que f(x1, x2, . . . , xn−2, xn−1) = 0 para todos los x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0. Por lo tanto, en este mecanismo, el pago de redistribución siempre es 0; es decir, el mecanismo es simplemente el mecanismo VCG original. Por cierto, obtenemos el siguiente corolario: Corolario 2. Ningún mecanismo de redistribución de VCG satisface todos los siguientes requisitos: determinismo, anonimato, a prueba de estrategias, eficiencia y equilibrio presupuestario (fuerte). Esto se cumple para cualquier n ≥ m + 1. Prueba. Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del mecanismo de redistribución lineal VCG óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1. Pero el Teorema 2 muestra que es imposible superar este mecanismo en el peor de los casos. Para el caso n = m + 1: Si existe tal mecanismo, funcionaría tan bien como el mecanismo VCG original en el peor de los casos, lo que implica que es idéntico al mecanismo VCG según la Afirmación 7. Pero el mecanismo VCG no es (fuertemente) equilibrado en presupuesto. 9. CONCLUSIONES Para problemas de asignación con uno o más artículos, el conocido mecanismo de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendimos este resultado en un entorno restringido. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG 38 de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego proporcionamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Una dirección importante para futuras investigaciones es intentar extender estos resultados más allá de las subastas multiunidad con demanda unitaria. Sin embargo, resulta que en contextos lo suficientemente generales, el porcentaje óptimo de redistribución en el peor de los casos es 0. En tales contextos, el criterio del peor escenario no proporciona orientación para determinar un buen mecanismo de redistribución (incluso redistribuir nada logra el porcentaje óptimo del peor escenario), por lo que se hace necesario seguir otros criterios. Alternativamente, se puede intentar identificar otros escenarios especiales en los que la redistribución positiva en el peor de los casos sea posible. Otra dirección para investigaciones futuras es considerar si este mecanismo tiene aplicaciones en la colusión. Por ejemplo, en un esquema colusorio típico, hay un anillo de licitación compuesto por un número de coludidores, quienes presentan solo una oferta [10, 17]. Si esta oferta gana, los coludidores deben asignarse el artículo entre ellos, quizás utilizando pagos, pero por supuesto no quieren que los pagos salgan del grupo. Este trabajo forma parte de una creciente literatura sobre el diseño de mecanismos que obtienen buenos resultados en el peor de los casos. Tradicionalmente, los economistas se han centrado principalmente en diseñar mecanismos que siempre obtengan ciertas propiedades (como el mecanismo VCG), o en diseñar mecanismos que sean óptimos con respecto a alguna distribución previa de las preferencias de los agentes (como la subasta de Myerson [20] y la subasta de Maskin-Riley [18] para maximizar los ingresos esperados). Algunos trabajos más recientes se han centrado en diseñar mecanismos para maximizar las ganancias utilizando análisis competitivo del peor caso (por ejemplo, [9, 1, 15, 8]). También ha habido un creciente interés en el diseño de mecanismos en línea [7] donde los agentes llegan con el tiempo y las decisiones deben tomarse antes de que todos los agentes hayan llegado. Este tipo de trabajo a menudo también adopta un enfoque de análisis competitivo del peor escenario [14, 13]. No parece que existan conexiones directas entre nuestro trabajo y estos otros trabajos que se centran en diseñar mecanismos que funcionan bien en el peor de los casos. Sin embargo, parece probable que la investigación futura continúe investigando el diseño de mecanismos para el peor de los casos, y con suerte, surgirá un marco coherente. 10. REFERENCIAS [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica y M. Sudan. Desrandomización de subastas. STOC, 619-625, 2005. [2] M. J. Bailey. \n\nSTOC, 619-625, 2005. [2] M. J. Bailey. El proceso de revelación de la demanda: distribuir el excedente. Elección Pública, 91:107-126, 1997. [3] R. Cavallo. Toma de decisiones óptima con un mínimo de desperdicio: redistribución a prueba de estrategias de pagos VCG. AAMAS, 882-889, 2006. [4] E. H. Clarke. \n\nAAMAS, 882-889, 2006. [4] E. H. Clarke. Precios escalonados de bienes públicos. Elección Pública, 11:17-33, 1971. [5] B. Faltings. Un esquema de elección social equilibrado presupuestariamente e incentivo-compatible. AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou y S. Shenker. Compartiendo el costo de las transmisiones multicast. JCSS, 63:21-41, 2001. [7] E. Friedman y D. Parkes. Tarificación del WiFi en Starbucks - Problemas en el diseño de mecanismos en línea. EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, y A. Wright. Subastas competitivas. Juegos y Comportamiento Económico, 2006. [9] A. Goldberg, J. Hartline y A. Wright. Subastas competitivas y bienes digitales. SODA, 735-744, 2001. [10] D. A. Graham y R. C. Marshall. Comportamiento de licitantes colusivos en subastas de segundo precio y subastas inglesas de objeto único. Revista de Economía Política, 95(6):1217-1239, 1987. [11] J. Verde y J.-J. Laffont. Caracterización de mecanismos satisfactorios para la revelación de preferencias por bienes públicos. Econometrica, 45:427-438, 1977. [12] T. Groves.\nEconometrica, 45:427-438, 1977. [12] T. Groves. Incentivos en equipos. Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian y D. C. Parkes. Subastas en línea de bienes reutilizables. EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. EC, 71-80, 2004. [15] J. Hartline y R. McGrew. De subastas de suministro limitado óptimo a ilimitado. EC, 175-182, 2005. [16] L. Hurwicz. \n\nEC, 175-182, 2005. [16] L. Hurwicz. Sobre la existencia de sistemas de asignación cuyos equilibrios de Nash manipulativos son óptimos de Pareto, 1975. Presentado en el 3er Congreso Mundial de la Sociedad de Econometría. [17] K. Leyton-Brown, Y. Shoham y M. Tennenholtz. Clubes que realizan ofertas en subastas de primer precio. AAAI, 373-378, 2002. [18] E. Maskin y J. Riley. Subastas multiunidad óptimas. En F. Hahn, editor, \"La Economía de los Mercados Ausentes, la Información y los Juegos\", capítulo 14, 312-335. Clarendon Press, Oxford, 1989. [19] H. Moulin.\nPrensa Clarendon, Oxford, 1989. [19] H. Moulin. Asignación eficiente y a prueba de estrategias con un reclamante residual barato. Documento de trabajo, marzo de 2007. [20] R. Myerson. Diseño óptimo de subasta. Matemáticas de la Investigación de Operaciones, 6:58-73, 1981. [21] R. Myerson y M. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Revista de Teoría Económica, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam y M. Eso. Lograr el equilibrio presupuestario con esquemas de pago basados en Vickrey en intercambios. IJCAI, 1161-1168, 2001. [23] W. Vickrey. \n\nIJCAI, 1161-1168, 2001. [23] W. Vickrey. Contrarrestando la especulación, subastas y ofertas selladas competitivas. Revista de Finanzas, 16:8-37, 1961. 39 ",
            "candidates": [],
            "error": [
                []
            ]
        },
        "analytical characterization": {
            "translated_key": "CARACTERIZACIÓN ANALÍTICA",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "<br>analytical characterization</br> OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the <br>analytical characterization</br> of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [
                "<br>analytical characterization</br> OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "Knowing the <br>analytical characterization</br> of the worst-case optimal mechanism provides us with at least two major benefits."
            ],
            "translated_annotated_samples": [
                "<br>CARACTERIZACIÓN ANALÍTICA</br> DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible).",
                "Conocer la <br>caracterización analítica</br> del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales."
            ],
            "translated_text": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente. Considerar al agente an como el agente con la oferta más baja. Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn. Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo. Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón. Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0. Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0. Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original. Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo. Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes). Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0. Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG. Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1. Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit). Ahora damos dos ejemplos de mecanismos en esta familia. Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i. Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente. Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1. Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2). Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i. En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes. Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional. Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye. ¿Cuál de estos dos mecanismos es mejor? ¿Hay otro mecanismo que sea aún mejor? Esto es lo que estudiamos en la próxima sección. 4. Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta. Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada. A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso. Rendimiento en el mejor de los casos. Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra. Considera los dos ejemplos anteriores. Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos. Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0. Dominancia. Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta. Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos. Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia. Supongamos que tal mecanismo existe. Entonces, debería dominar ambos ejemplos anteriores. Considerar el pago VCG restante (el pago VCG no se pudo redistribuir). El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0. Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica. Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie. Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0. Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace). Rendimiento en el peor de los casos. Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza. Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1. Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades. Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso. Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso. Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos. Este porcentaje es indefinido cuando el pago total de VCG es 0. Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos). Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones. Reclamo 1. Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración. Primero, vamos a demostrar que c0 = 0. Considera el vector de oferta en el cual ˆvi = 0 para todo i. Para obtener racionalidad individual, debemos tener c0 ≥ 0. Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0. Así sabemos que c0 = 0. Ahora, si ci = 0 para todos los i, no hay nada que demostrar. De lo contrario, deja que j = min{i|ci = 0}. Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto. En este caso zn = cj, por lo que debemos tener cj ≥ 0. La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta. Considera el mismo vector de oferta que se mencionó anteriormente. Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0. Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0. Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1. Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0. También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0. Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición. Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i. Por lo tanto, estamos atrapados con el mecanismo VCG. A partir de aquí, solo consideramos el caso donde m < n − 1. Reclamo 2. La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Antes de demostrar esta afirmación, introducimos el siguiente lema. Lema 1. Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k). Prueba. Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk. Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos). Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera. Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa. Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente. Ahora estamos listos para presentar la prueba de la Afirmación 2. Prueba. La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Reclamo 3. La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración. La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci. La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento. La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal. Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit). En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1). Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el mecanismo óptimo en el peor caso) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos. De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del mecanismo óptimo en el peor caso (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El mecanismo óptimo en el peor caso supera significativamente al mecanismo de Bailey-Cavallo en el peor caso. Quizás de manera más sorprendente, el mecanismo óptimo en el peor de los casos a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo. Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2. Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1]. La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3. Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1. Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) . Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el mecanismo óptimo en el peor de los casos es de 3.62e−5 en el peor caso. Presentemos detalladamente la solución óptima para el caso n = 5. Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15. Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes. La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%. Finalmente, comparamos el mecanismo óptimo en el peor de los casos con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30. Estos resultados están en la Figura 1. Vemos que para cualquier m, cuando n = m + 2, el mecanismo óptimo en el peor de los casos tiene el mismo rendimiento en el peor de los casos que el mecanismo de Bailey-Cavallo (de hecho, en este caso, el mecanismo óptimo en el peor de los casos es idéntico al mecanismo de Bailey-Cavallo). Cuando n > m + 2, el mecanismo óptimo en el peor de los casos supera al mecanismo de Bailey-Cavallo (en el peor de los casos). 7. <br>CARACTERIZACIÓN ANALÍTICA</br> DEL MECANISMO ÓPTIMO EN EL PEOR CASO Recordamos que nuestro programa lineal tiene la siguiente forma: Variables: cm+1, cm+2, . . . , cn−1, k Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m Un programa lineal no tiene solución si y solo si el objetivo es ilimitado, o las restricciones son contradictorias (no hay solución factible). Es fácil ver que k está acotado por arriba por 1 (redistribuir más del 100% viola la restricción de no déficit). Además, siempre existe una solución factible, por ejemplo, k = 0 y ci = 0 para todo i. Entonces, siempre existe una solución óptima. Observe que el modelo del programa lineal depende únicamente del número de agentes n y del número de unidades m. Por lo tanto, la solución óptima es una función de n y m. Resulta que esta solución óptima puede caracterizarse analíticamente de la siguiente manera. Teorema 1. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo de peor caso (entre los mecanismos de redistribución lineal VCG) es único. Para este mecanismo, el porcentaje redistribuido en el peor de los casos es k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ El mecanismo óptimo en el peor de los casos se caracteriza por los siguientes valores para los ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! para i = m + 1, . . . , n − 1. Cabe destacar que hemos demostrado que ci = 0 para i ≤ m en la Afirmación 1. Prueba. Primero reescribimos el programa lineal de la siguiente manera. Introducimos nuevas variables xm+1, xm+2, . . . , xn−1, definidas por xj = Pj i=m+1 ci para j = m + 1, . . . , n − 1. El programa lineal se convierte entonces en: Variables: xm+1, xm+2, . . . , xn−1, k Maximizar k Sujeto a: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 para i = m + 1, m + 2, . . . , n − 1 Demostraremos que para cualquier solución óptima de este programa lineal, k = k∗. Además, demostraremos que cuando k = k∗, xj = Pj i=m+1 c∗ i para j = m + 1, . . . , n − 1. Esto demostrará el teorema. Primero hacemos las siguientes observaciones: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m Para i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finalmente, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Resumiendo lo anterior, tenemos: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Sea x∗ j = Pj i=m+1 c∗ i para j = m + 1, m + 2, . . . , n − 1, la primera ecuación anterior nos dice que (n − m − 1)x∗ m+1 = k∗ m. Al sumar las dos primeras ecuaciones, obtenemos (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m Al sumar las tres primeras ecuaciones, obtenemos (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m Al sumar las primeras i ecuaciones, donde i = 2, . . . , n−m−1, obtenemos (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m si i es par (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m si i es impar Finalmente, al sumar todas las ecuaciones, obtenemos nx∗ n−1 = m si n − m es par; nx∗ n−1 = k∗ m si n − m es impar. Por lo tanto, para todas las restricciones excepto las restricciones de no negatividad, hemos demostrado que se satisfacen al establecer xj = x∗ j = Pj i=m+1 c∗ i y k = k∗. A continuación mostramos que las restricciones de no negatividad también se cumplen con esta configuración. Para m + 1 ≤ i, i + 1 ≤ n − 1, tenemos que 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) Esto implica que el valor absoluto de c∗ i está disminuyendo a medida que i aumenta (si el c∗ contiene más de un número). Observamos además que el signo de c∗ i alterna, con el primer elemento c∗ m+1 positivo. Entonces x∗ j = Pj i=m+1 c∗ i ≥ 0 para todo j. Por lo tanto, hemos demostrado que estos xi = x∗ i junto con k = k∗ forman una solución factible del programa lineal. Procedemos a demostrar que de hecho es la única solución óptima. Primero demostramos la siguiente afirmación: Afirmación 4. Si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfacen las siguientes desigualdades: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m para i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Entonces debemos tener que ˆxi = ˆx∗ i y ˆk = k∗. Prueba de la afirmación. Considera la primera desigualdad. Sabemos que (n − m − 1)x∗ m+1 = k∗ m, por lo tanto (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1. Se deduce que ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0). Ahora, considera la siguiente desigualdad para i = 2. Sabemos que (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. Se sigue que (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, por lo que ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0). Ahora considera la siguiente desigualdad para i = 3. Sabemos que (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. Se sigue que (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, por lo que ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0). Procediendo de esta manera hasta i = n−m−1, obtenemos que ˆxm+i ≥ x∗ m+i si i es impar y ˆxm+i ≤ x∗ m+i si i es par. Además, si una desigualdad es estricta, entonces todas las desigualdades subsiguientes son estrictas. Ahora, si podemos demostrar que ˆxn−1 = x∗ n−1, se seguiría que los x∗ i son iguales a los ˆxi (lo que también implica que ˆk = k∗). Consideramos dos casos: Caso 1: n − m es par. Tenemos: n − m par ⇒ n − m − 1 impar ⇒ ˆxn−1 ≥ x∗ n−1. También tenemos: n−m par ⇒ nx∗ n−1 = m. Combinando estos dos, obtenemos m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1. Caso 2: n − m es impar. En este caso, tenemos ˆxn−1 ≤ x∗ n−1, y nx∗ n−1 = k∗ m. Entonces, tenemos: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1. Esto completa la prueba de la afirmación. Se deduce que si ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 es una solución factible y ˆk ≥ k∗ , entonces dado que se cumplen todas las desigualdades en la Afirmación 4, debemos tener ˆxi = x∗ i y ˆk = k∗ . Por lo tanto, ninguna otra solución factible es tan buena como la descrita en el teorema. Conocer la <br>caracterización analítica</br> del mecanismo óptimo en el peor de los casos nos proporciona al menos dos beneficios principales. Primero, utilizar estas fórmulas es computacionalmente más eficiente que resolver el programa lineal utilizando un solucionador de propósito general. Segundo, podemos derivar el siguiente corolario. Corolario 1. Si el número de unidades m está fijo, entonces a medida que el número de agentes n aumenta, el porcentaje redistribuido en el peor de los casos converge linealmente a 1, con una tasa de convergencia de 1 2. (Es decir, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2. Es decir, en el límite, el porcentaje que no se redistribuye se reduce a la mitad por cada agente adicional. Observamos que esto es consistente con los datos experimentales para el caso de una sola unidad, donde el porcentaje restante en el peor de los casos se reduce aproximadamente a la mitad cada vez que agregamos otro agente. El porcentaje redistribuido en el peor de los casos bajo el mecanismo de Bailey-Cavallo también converge a 1 a medida que el número de agentes tiende a infinito, pero la convergencia es mucho más lenta: no converge linealmente (es decir, dejando que kC n sea el porcentaje redistribuido por el mecanismo de Bailey-Cavallo en el peor de los casos para n agentes, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1). Ahora presentamos la prueba del corolario. Prueba. Cuando el número de agentes es n, el porcentaje redistribuido en el peor de los casos es k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) . Cuando el número de agentes es n + 1, el porcentaje se convierte en k∗ n+1 = 1 − (n m) Pn j=m (n j ) . Para n suficientemente grande, tendremos 2n − mnm−1 > 0, y por lo tanto 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , y n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (porque `n j ´ ≤ ni si j ≤ i). Dado que tenemos limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , y limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , se sigue que limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8. En esta sección, demostramos que el mecanismo de redistribución óptimo en el peor de los casos entre los mecanismos de redistribución lineales VCG es de hecho óptimo (en el peor de los casos) entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Por lo tanto, restringir nuestra atención a mecanismos de redistribución lineal VCG no resultó en una pérdida. Para demostrar este teorema, necesitamos el siguiente lema. Este lema no es nuevo: fue enunciado informalmente por Cavallo [3]. Para completitud, lo presentamos aquí con una prueba detallada. Lema 2. Un mecanismo de redistribución VCG es determinístico, anónimo y a prueba de estrategias si y solo si existe una función f: Rn−1 → R, de modo que el pago de redistribución zi recibido por ai cumple zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Prueba. Primero, probemos la dirección \"solo si\", es decir, si un mecanismo de redistribución VCG es determinista, anónimo y a prueba de estrategias, entonces existe una función determinista f: Rn−1 → R, que hace que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Si un mecanismo de redistribución VCG es determinístico y anónimo, entonces para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, el mecanismo produce una lista única de pagos de redistribución: z1, z2, . . . , zn. Sea G: Rn → Rn la función que mapea ˆv1, ˆv2, . . . , ˆvn a z1, z2, . . . , zn para todos los vectores de oferta. Sea H(i, x1, x2, . . . , xn) el i-ésimo elemento de G(x1, x2, . . . , xn), de modo que zi = H(i, ˆv1, ˆv2, . . . , ˆvn) para todos los vectores de oferta y todo 1 ≤ i ≤ n. Debido a que el mecanismo es anónimo, dos agentes deben recibir el mismo pago de redistribución si sus ofertas son iguales. Entonces, si ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Por lo tanto, si dejamos j = min{t|ˆvt = ˆvi}, entonces H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn). Definamos K : Rn → N × Rn de la siguiente manera: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], donde w1, w2, . . . , wn son y, x1, x2, . . . , xn−1 ordenados en orden descendente, y j = min{t|wt = y}. ({t|wt = y} = ∅ porque y ∈ {w1, w2, . . . , wn}). También definamos F : Rn → R por F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi. Es decir, F es el pago de redistribución a un agente que ofrece ˆvi cuando las otras ofertas son ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn. Dado que nuestro mecanismo debe ser a prueba de estrategias y el espacio de valoraciones es ilimitado, zi debería ser independiente de ˆvi según el Lema 1 en Cavallo [3]. Por lo tanto, podemos simplemente ignorar la primera variable de entrada a F; sea f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1). Por lo tanto, para todos los vectores de oferta y i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn). Esto completa la prueba para la dirección solo si. Para la dirección si, si el pago de redistribución recibido por ai satisface zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todos los vectores de oferta y i, entonces esto es claramente un mecanismo determinístico y anónimo. Para demostrar la estrategia a prueba, observamos que debido a que el pago de redistribución de un agente no se ve afectado por su propia oferta, sus incentivos son los mismos que en el mecanismo VCG, que es a prueba de estrategias. Ahora estamos listos para presentar el siguiente teorema: Teorema 2. Para cualquier m y n con n ≥ m+2, el mecanismo óptimo en el peor de los casos dentro de la familia de mecanismos de redistribución lineal VCG es óptimo en el peor de los casos entre todos los mecanismos que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Si bien necesitábamos racionalidad individual anteriormente en el documento, este teorema no la menciona, es decir, no podemos encontrar un mecanismo con un mejor rendimiento en el peor de los casos incluso si sacrificamos la racionalidad individual. (El mecanismo de redistribución lineal VCG óptimo en el peor de los casos, por supuesto, es racional individualmente). Prueba. Supongamos que existe un mecanismo de redistribución (cuando el número de unidades es m y el número de agentes es n) que cumple todas las propiedades anteriores y tiene un mejor rendimiento en el peor de los casos que el mecanismo de redistribución lineal VCG óptimo en el peor de los casos, es decir, su porcentaje de redistribución en el peor de los casos ˆk es estrictamente mayor que k∗. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Primero demostramos que f tiene las siguientes propiedades. Reclamo 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Prueba del reclamo. Supusimos que para este mecanismo, el porcentaje de redistribución en el peor de los casos satisface ˆk > k∗ ≥ 0. Si el pago total VCG es x, el pago total de redistribución debería estar en [ˆkx, x] (criterio de no déficit). Considera el caso en el que todos los agentes ofertan 0, por lo que el pago total de VCG también es 0. Por lo tanto, el pago total de redistribución debería ser de [ˆk · 0, 0], es decir, debería ser 0. Por lo tanto, el pago de redistribución de cada agente f(0, 0, . . . , 0) debe ser 0. Ahora, dejemos que ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) donde el número de 1s es igual a i. Demostramos que t0 = 0. Si tn−1 = 0, considera el vector de oferta donde todos ofrecen 1. El pago total VCG es m y el pago total de redistribución es nf(1, 1, . . . , 1) = ntn−1 = 0. Esto corresponde a una redistribución del 0%, lo cual va en contra de nuestra suposición de que ˆk > k∗ ≥ 0. Ahora, considera j = min{i|ti = 0} (lo cual está bien definido porque tn−1 = 0). Si j > m, la propiedad se cumple. Si j ≤ m, considera el vector de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Bajo este vector de oferta, los primeros j agentes reciben cada uno un pago de redistribución tj−1 = 0, y los restantes n − j agentes reciben cada uno tj. Por lo tanto, el pago total de redistribución es (n − j)tj. Dado que el pago total VCG para este vector de oferta es 0, debemos tener (n − j)tj = 0. Entonces tj = 0 (j ≤ m < n). Pero esto va en contra de la definición de j. Por lo tanto, f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 si el número de 1 es menor o igual a m. Reclamo 6. f satisface las siguientes desigualdades: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m para i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Aquí ti está definido como en la prueba del Reclamo 5. Prueba del reclamo. Para j = m + 1, . . . , n, considera los vectores de oferta donde ˆvi = 1 para i ≤ j y ˆvi = 0 para todos los demás i. Estos vectores de oferta junto con la restricción de no déficit y la restricción del peor caso producen el conjunto de desigualdades anterior: por ejemplo, cuando j = m + 1, consideramos el vector de oferta ˆvi = 1 para i ≤ m + 1 y ˆvi = 0 para todos los demás i. Los primeros m+1 agentes reciben cada uno un pago de redistribución de tm = 0, y todos los demás agentes reciben tm+1. Por lo tanto, la redistribución total de VCG es (n − m − 1)tm+1. La restricción de no déficit establece que (n − m − 1)tm+1 ≤ m (porque el pago total VCG es m). La restricción del peor caso establece que (n − m − 1)tm+1 ≥ ˆkm. Combinando estos dos, obtenemos la primera desigualdad. Las otras desigualdades se pueden obtener de la misma manera. Ahora observamos que las desigualdades en la Afirmación 6, junto con ˆk ≥ k∗, son las mismas que las de la Afirmación 4 (donde los ti son reemplazados por los ˆxi). Por lo tanto, podemos concluir que ˆk = k∗, lo cual va en contra de nuestra suposición de que ˆk > k∗. Por lo tanto, ningún mecanismo que cumpla todas las propiedades enumeradas tiene un porcentaje de redistribución mayor que k∗ en el peor de los casos. Hasta ahora solo hemos hablado del caso donde n ≥ m+2. Con el propósito de completitud, proporcionamos la siguiente afirmación para el caso n = m + 1. Reclamación 7. Para cualquier m y n con n = m + 1, el mecanismo VCG original (es decir, redistribuyendo nada) es (de manera única) óptimo en el peor de los casos entre todos los mecanismos de redistribución que son determinísticos, anónimos, a prueba de estrategias, eficientes y cumplen con la restricción de no déficit. Recordamos que cuando n = m+1, la Afirmación 1 nos dice que el único mecanismo dentro de la familia de mecanismos de redistribución lineal es el mecanismo VCG original, por lo que este mecanismo es automáticamente óptimo en el peor de los casos dentro de esta familia. Sin embargo, para demostrar la afirmación anterior, necesitamos mostrar que es óptimo en el peor de los casos entre todos los mecanismos de redistribución que tienen las propiedades deseadas. Prueba. Supongamos que existe un mecanismo de redistribución que cumple todas las propiedades anteriores y tiene un rendimiento en el peor de los casos tan bueno como el mecanismo VCG original, es decir, su porcentaje de redistribución en el peor de los casos es mayor o igual a 0. Esto implica que el pago total de redistribución de este mecanismo siempre es no negativo. Según el Lema 2, para este mecanismo, existe una función f : Rn−1 → R tal que zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) para todo i y todos los vectores de oferta. Demostraremos que f(x1, x2, . . . , xn−1) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0. Primero, considera el vector de oferta donde ˆvi = 0 para todo i. Aquí, cada agente recibe un pago de redistribución f(0, 0, . . . , 0). El pago total de redistribución es entonces nf(0, 0, . . . , 0), que debería ser tanto mayor o igual a 0 (por la observación anterior) como menor o igual a 0 (utilizando el criterio de no déficit y el hecho de que el pago total VCG es 0). Se deduce que f(0, 0, . . . , 0) = 0. Ahora, consideremos el vector de oferta donde ˆv1 = x1 ≥ 0 y ˆvi = 0 para todos los demás i. Para este vector de oferta, el agente con la oferta más alta recibe un pago de redistribución de f(0, 0, . . . , 0) = 0, y los otros n - 1 agentes reciben cada uno f(x1, 0, . . . , 0). Por el mismo razonamiento anterior, el pago total de redistribución debe ser mayor o igual a 0 y menor o igual a 0, por lo tanto f(x1, 0, . . . , 0) = 0 para todo x1 ≥ 0. Procediendo por inducción, asumamos que f(x1, x2, . . . , xk, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, para algún k < n − 1. Considera el vector de oferta donde ˆvi = xi para i ≤ k + 1, y ˆvi = 0 para todos los demás i, donde los xi son números arbitrarios que satisfacen x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Para los agentes con las k + 1 ofertas más altas, su pago de redistribución está especificado por f actuando sobre una entrada con solo k variables no nulas. Por lo tanto, todos reciben 0 por suposición de inducción. Los otros n − k − 1 agentes reciben cada uno f(x1, x2, . . . , xk, xk+1, 0, . . . , 0). El pago total de redistribución es entonces (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), el cual debe ser mayor o igual a 0, y menor o igual al pago total de VCG. Ahora, en este vector de oferta, la oferta más baja es 0 porque k + 1 < n. Pero dado que n = m + 1, el pago total de VCG es mˆvn = 0. Entonces tenemos f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 para todo x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0. Por inducción, esta afirmación se cumple para todos los k < n − 1; cuando k + 1 = n − 1, tenemos que f(x1, x2, . . . , xn−2, xn−1) = 0 para todos los x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0. Por lo tanto, en este mecanismo, el pago de redistribución siempre es 0; es decir, el mecanismo es simplemente el mecanismo VCG original. Por cierto, obtenemos el siguiente corolario: Corolario 2. Ningún mecanismo de redistribución de VCG satisface todos los siguientes requisitos: determinismo, anonimato, a prueba de estrategias, eficiencia y equilibrio presupuestario (fuerte). Esto se cumple para cualquier n ≥ m + 1. Prueba. Para el caso n ≥ m + 2: Si existe un mecanismo así, su rendimiento en el peor de los casos sería mejor que el del mecanismo de redistribución lineal VCG óptimo en el peor de los casos, que según el Teorema 1 obtiene un porcentaje de redistribución estrictamente menor que 1. Pero el Teorema 2 muestra que es imposible superar este mecanismo en el peor de los casos. Para el caso n = m + 1: Si existe tal mecanismo, funcionaría tan bien como el mecanismo VCG original en el peor de los casos, lo que implica que es idéntico al mecanismo VCG según la Afirmación 7. Pero el mecanismo VCG no es (fuertemente) equilibrado en presupuesto. 9. CONCLUSIONES Para problemas de asignación con uno o más artículos, el conocido mecanismo de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de regreso a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendimos este resultado en un entorno restringido. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG 38 de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego proporcionamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Una dirección importante para futuras investigaciones es intentar extender estos resultados más allá de las subastas multiunidad con demanda unitaria. Sin embargo, resulta que en contextos lo suficientemente generales, el porcentaje óptimo de redistribución en el peor de los casos es 0. En tales contextos, el criterio del peor escenario no proporciona orientación para determinar un buen mecanismo de redistribución (incluso redistribuir nada logra el porcentaje óptimo del peor escenario), por lo que se hace necesario seguir otros criterios. Alternativamente, se puede intentar identificar otros escenarios especiales en los que la redistribución positiva en el peor de los casos sea posible. Otra dirección para investigaciones futuras es considerar si este mecanismo tiene aplicaciones en la colusión. Por ejemplo, en un esquema colusorio típico, hay un anillo de licitación compuesto por un número de coludidores, quienes presentan solo una oferta [10, 17]. Si esta oferta gana, los coludidores deben asignarse el artículo entre ellos, quizás utilizando pagos, pero por supuesto no quieren que los pagos salgan del grupo. Este trabajo forma parte de una creciente literatura sobre el diseño de mecanismos que obtienen buenos resultados en el peor de los casos. Tradicionalmente, los economistas se han centrado principalmente en diseñar mecanismos que siempre obtengan ciertas propiedades (como el mecanismo VCG), o en diseñar mecanismos que sean óptimos con respecto a alguna distribución previa de las preferencias de los agentes (como la subasta de Myerson [20] y la subasta de Maskin-Riley [18] para maximizar los ingresos esperados). Algunos trabajos más recientes se han centrado en diseñar mecanismos para maximizar las ganancias utilizando análisis competitivo del peor caso (por ejemplo, [9, 1, 15, 8]). También ha habido un creciente interés en el diseño de mecanismos en línea [7] donde los agentes llegan con el tiempo y las decisiones deben tomarse antes de que todos los agentes hayan llegado. Este tipo de trabajo a menudo también adopta un enfoque de análisis competitivo del peor escenario [14, 13]. No parece que existan conexiones directas entre nuestro trabajo y estos otros trabajos que se centran en diseñar mecanismos que funcionan bien en el peor de los casos. Sin embargo, parece probable que la investigación futura continúe investigando el diseño de mecanismos para el peor de los casos, y con suerte, surgirá un marco coherente. 10. REFERENCIAS [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica y M. Sudan. Desrandomización de subastas. STOC, 619-625, 2005. [2] M. J. Bailey. \n\nSTOC, 619-625, 2005. [2] M. J. Bailey. El proceso de revelación de la demanda: distribuir el excedente. Elección Pública, 91:107-126, 1997. [3] R. Cavallo. Toma de decisiones óptima con un mínimo de desperdicio: redistribución a prueba de estrategias de pagos VCG. AAMAS, 882-889, 2006. [4] E. H. Clarke. \n\nAAMAS, 882-889, 2006. [4] E. H. Clarke. Precios escalonados de bienes públicos. Elección Pública, 11:17-33, 1971. [5] B. Faltings. Un esquema de elección social equilibrado presupuestariamente e incentivo-compatible. AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou y S. Shenker. Compartiendo el costo de las transmisiones multicast. JCSS, 63:21-41, 2001. [7] E. Friedman y D. Parkes. Tarificación del WiFi en Starbucks - Problemas en el diseño de mecanismos en línea. EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, y A. Wright. Subastas competitivas. Juegos y Comportamiento Económico, 2006. [9] A. Goldberg, J. Hartline y A. Wright. Subastas competitivas y bienes digitales. SODA, 735-744, 2001. [10] D. A. Graham y R. C. Marshall. Comportamiento de licitantes colusivos en subastas de segundo precio y subastas inglesas de objeto único. Revista de Economía Política, 95(6):1217-1239, 1987. [11] J. Verde y J.-J. Laffont. Caracterización de mecanismos satisfactorios para la revelación de preferencias por bienes públicos. Econometrica, 45:427-438, 1977. [12] T. Groves.\nEconometrica, 45:427-438, 1977. [12] T. Groves. Incentivos en equipos. Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian y D. C. Parkes. Subastas en línea de bienes reutilizables. EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, y D. C. Parkes. Subastas en línea adaptativas de suministro limitado. EC, 71-80, 2004. [15] J. Hartline y R. McGrew. De subastas de suministro limitado óptimo a ilimitado. EC, 175-182, 2005. [16] L. Hurwicz. \n\nEC, 175-182, 2005. [16] L. Hurwicz. Sobre la existencia de sistemas de asignación cuyos equilibrios de Nash manipulativos son óptimos de Pareto, 1975. Presentado en el 3er Congreso Mundial de la Sociedad de Econometría. [17] K. Leyton-Brown, Y. Shoham y M. Tennenholtz. Clubes que realizan ofertas en subastas de primer precio. AAAI, 373-378, 2002. [18] E. Maskin y J. Riley. Subastas multiunidad óptimas. En F. Hahn, editor, \"La Economía de los Mercados Ausentes, la Información y los Juegos\", capítulo 14, 312-335. Clarendon Press, Oxford, 1989. [19] H. Moulin.\nPrensa Clarendon, Oxford, 1989. [19] H. Moulin. Asignación eficiente y a prueba de estrategias con un reclamante residual barato. Documento de trabajo, marzo de 2007. [20] R. Myerson. Diseño óptimo de subasta. Matemáticas de la Investigación de Operaciones, 6:58-73, 1981. [21] R. Myerson y M. Satterthwaite. Mecanismos eficientes para el comercio bilateral. Revista de Teoría Económica, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam y M. Eso. Lograr el equilibrio presupuestario con esquemas de pago basados en Vickrey en intercambios. IJCAI, 1161-1168, 2001. [23] W. Vickrey. \n\nIJCAI, 1161-1168, 2001. [23] W. Vickrey. Contrarrestando la especulación, subastas y ofertas selladas competitivas. Revista de Finanzas, 16:8-37, 1961. 39 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "worst-case optimal mechanism": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the <br>worst-case optimal mechanism</br> in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the <br>worst-case optimal mechanism</br> (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The <br>worst-case optimal mechanism</br> significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the <br>worst-case optimal mechanism</br> sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the <br>worst-case optimal mechanism</br> is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the <br>worst-case optimal mechanism</br> to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the <br>worst-case optimal mechanism</br> has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the <br>worst-case optimal mechanism</br> is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the <br>worst-case optimal mechanism</br> outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE <br>worst-case optimal mechanism</br> We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The <br>worst-case optimal mechanism</br> is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the <br>worst-case optimal mechanism</br> provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the <br>worst-case optimal mechanism</br> in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the <br>worst-case optimal mechanism</br> (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The <br>worst-case optimal mechanism</br> significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the <br>worst-case optimal mechanism</br> sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the <br>worst-case optimal mechanism</br> is 3.62e−5 in the worst case.",
                "Finally, we compare the <br>worst-case optimal mechanism</br> to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30."
            ],
            "translated_annotated_samples": [
                "Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el <br>mecanismo óptimo en el peor caso</br>) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos.",
                "De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del <br>mecanismo óptimo en el peor caso</br> (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El <br>mecanismo óptimo en el peor caso</br> supera significativamente al mecanismo de Bailey-Cavallo en el peor caso.",
                "Quizás de manera más sorprendente, el <br>mecanismo óptimo en el peor de los casos</br> a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo.",
                "Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el <br>mecanismo óptimo en el peor de los casos</br> es de 3.62e−5 en el peor caso.",
                "Finalmente, comparamos el <br>mecanismo óptimo en el peor de los casos</br> con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30."
            ],
            "translated_text": "Redistribución óptima en el peor de los casos de los pagos VCG Mingyu Guo Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. mingyu@cs.duke.edu Vincent Conitzer Departamento de Ciencias de la Computación de la Universidad de Duke Durham, NC, EE. UU. conitzer@cs.duke.edu RESUMEN Para problemas de asignación con uno o más artículos, el mecanismo bien conocido de Vickrey-Clarke-Groves (VCG) es eficiente, a prueba de estrategias, individualmente racional y no incurre en déficit. Sin embargo, el mecanismo VCG no es (fuertemente) equilibrado en presupuesto: generalmente, los pagos de los agentes sumarán más de 0. Si hay un subastador que está vendiendo los artículos, esto puede ser deseable, ya que el pago excedente corresponde a los ingresos para el subastador. Sin embargo, si los artículos no tienen propietario y los agentes solo están interesados en asignar los artículos eficientemente entre ellos, cualquier pago excedente es indeseable, ya que tendrá que salir del sistema de agentes. En 2006, Cavallo propuso un mecanismo que redistribuye parte del pago VCG de vuelta a los agentes, manteniendo la eficiencia, la prueba de estrategia, la racionalidad individual y la propiedad de no déficit. En este artículo, extendemos este resultado en un entorno restringido. Estudiamos configuraciones de asignación en las que hay múltiples unidades indistinguibles de un único bien, y los agentes tienen demanda unitaria. (Para esta configuración específica, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2].) Aquí proponemos una familia de mecanismos que redistribuyen parte del pago VCG de vuelta a los agentes. Todos los mecanismos en la familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial. Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo, es decir, el mecanismo que maximiza la redistribución en el peor de los casos dentro de la familia, y mostramos cómo convertir este modelo en un programa lineal. Proporcionamos tanto soluciones numéricas como analíticas de este programa lineal, y el mecanismo resultante (único) muestra una mejora significativa sobre el mecanismo de Bailey-Cavallo (en el peor de los casos). Finalmente, demostramos que el mecanismo obtenido es óptimo entre todos los mecanismos determinísticos anónimos que cumplen las propiedades mencionadas anteriormente. Categorías y Descriptores de Asignaturas J.4 [Aplicaciones Informáticas]: Ciencias Sociales y del Comportamiento-Economía; I.2.11 [Inteligencia Artificial Distribuida]: Sistemas Multiagente Términos Generales Algoritmos, Economía, Teoría 1. INTRODUCCIÓN Muchos problemas importantes en informática y comercio electrónico pueden ser modelados como problemas de asignación de recursos. En tales problemas, queremos asignar los recursos (o artículos) a los agentes que más los valoran. Desafortunadamente, las valoraciones de los agentes son conocimiento privado, y los agentes con intereses propios mentirán sobre sus valoraciones si esto les beneficia. Una solución es subastar los artículos, posiblemente en una subasta combinatoria donde los agentes pueden ofertar por paquetes de artículos. Existen formas de determinar los pagos que los agentes realizan en una subasta que incentiva a los agentes a informar sus verdaderas valoraciones, es decir, los pagos hacen que la subasta sea a prueba de estrategias. Una forma muy general de hacerlo es utilizando el mecanismo VCG [23, 4, 12]. (El mecanismo VCG también es conocido como el mecanismo Clarke o, en el contexto específico de subastas, la Subasta Vickrey Generalizada). Además de ser estrategia-veraz, el mecanismo VCG tiene varias otras propiedades interesantes en el contexto de problemas de asignación de recursos. Es eficiente: la asignación elegida siempre maximiza la suma de las valoraciones de los agentes. También es (ex post) racional individualmente: participar en el mecanismo nunca deja a un agente en una situación peor que si no participara. Finalmente, tiene una propiedad de no déficit: la suma de los pagos de los agentes siempre es no negativa. En muchos contextos, otra propiedad deseable sería el equilibrio presupuestario (fuerte), lo que significa que los pagos suman exactamente 0. Supongamos que los agentes están tratando de distribuir algunos recursos entre ellos que no tienen un propietario previo. Por ejemplo, los agentes pueden estar intentando asignar el derecho de uso de un bien compartido en un día determinado. O bien, los agentes pueden estar intentando asignar un recurso que hayan construido, descubierto o adquirido de alguna otra manera de forma colectiva. Si los agentes utilizan una subasta para asignar estos recursos, y la suma de los pagos de los agentes en la subasta es positiva, entonces este pago excedente debe salir del sistema de 30 de los agentes (por ejemplo, los agentes deben dar el dinero a una parte externa, o quemarlo). La redistribución ingenua del pago excedente (por ejemplo, cada uno de los n agentes recibe 1/n del excedente) generalmente resultará en un mecanismo que no es a prueba de estrategias (por ejemplo, en una subasta de Vickrey, la segunda postora más alta querría aumentar su oferta para obtener un pago de redistribución más grande). Desafortunadamente, el mecanismo VCG no está equilibrado presupuestariamente: típicamente, hay un pago excedente. Desafortunadamente, en entornos generales, de hecho es imposible diseñar mecanismos que cumplan con el equilibrio presupuestario además de las otras propiedades deseables [16, 11, 21]. A la luz de este resultado de imposibilidad, varios autores han logrado el equilibrio presupuestario sacrificando algunas de las otras propiedades deseables [2, 6, 22, 5]. Otro enfoque que quizás sea preferible es utilizar un mecanismo que sea más equilibrado en términos de presupuesto que el mecanismo VCG, y que mantenga todas las demás propiedades deseables. Una forma de intentar diseñar dicho mecanismo es redistribuir parte del pago VCG a los agentes de una manera que no afecte los incentivos de los agentes (para mantener la estrategia de prueba) y que mantenga las otras propiedades. En 2006, Cavallo [3] persiguió exactamente esta idea y diseñó un mecanismo que redistribuye una gran cantidad del pago total de VCG mientras mantiene todas las demás propiedades deseables del mecanismo de VCG. Por ejemplo, en una subasta de un solo artículo (donde el mecanismo VCG coincide con la subasta de sobre cerrado de segundo precio), la cantidad redistribuida al postor i por el mecanismo de Cavallos es 1/n veces la segunda oferta más alta entre las ofertas que no son la oferta de i. La redistribución total es a lo sumo la segunda oferta más alta en general, y la redistribución al agente i no afecta sus incentivos porque no depende de su propia oferta. En este artículo, restringimos nuestra atención a un entorno limitado, y en este entorno extendemos el resultado de Cavallo. Estudiamos configuraciones de asignación donde hay múltiples unidades indistinguibles de un único bien, y todos los agentes tienen demanda unitaria, es decir, solo quieren una unidad. Para este entorno específico, el mecanismo de Cavallos coincide con un mecanismo propuesto por Bailey en 1997 [2]. Aquí proponemos la familia de mecanismos de redistribución lineal VCG. Todos los mecanismos en esta familia son eficientes, a prueba de estrategias, individualmente racionales y nunca incurren en déficit. La familia incluye el mecanismo Bailey-Cavallo como un caso especial (con la advertencia de que solo estudiamos configuraciones de asignación con múltiples unidades indistinguibles de un único bien y demanda unitaria, aunque los mecanismos de Baileys y Cavallos también pueden aplicarse fuera de estas configuraciones). Luego presentamos un modelo de optimización para encontrar el mecanismo óptimo dentro de la familia, basado en un análisis del peor caso. Se proporcionan tanto soluciones numéricas como analíticas de este modelo, y el mecanismo resultante muestra una mejora significativa sobre el mecanismo de BaileyCavallo (en el peor de los casos). Por ejemplo, para el problema de asignar una sola unidad, cuando el número de agentes es 10, nuestro mecanismo siempre redistribuye más del 98% del pago total de VCG de vuelta a los agentes (mientras que el mecanismo de Bailey-Cavallo redistribuye solo el 80% en el peor de los casos). Finalmente, demostramos que nuestro mecanismo es de hecho óptimo entre todos los mecanismos determinísticos anónimos (incluso los no lineales) que cumplen con las propiedades deseables. Alrededor del mismo tiempo, el mismo mecanismo ha sido derivado de forma independiente por Moulin [19]. Moulin en realidad persigue un objetivo diferente (también basado en un análisis del peor caso): mientras que nuestro objetivo es maximizar el porcentaje de pagos VCG que se redistribuyen, Moulin intenta minimizar los pagos totales de los agentes como un porcentaje de eficiencia. Resulta que los mecanismos resultantes son los mismos. Hacia el final de este documento, consideramos eliminar el requisito de racionalidad individual y demostramos que esto no cambia el mecanismo óptimo para nuestro objetivo. Para el objetivo de Moulins, abandonar la racionalidad individual sí cambia el mecanismo óptimo (pero solo si hay múltiples unidades). 2. DESCRIPCIÓN DEL PROBLEMA Sea n el número de agentes, y sea m el número de unidades. Solo consideramos el caso donde m < n (de lo contrario, el problema se vuelve trivial). También asumimos que m y n siempre son conocidos. (Esta suposición no es perjudicial: en entornos donde cualquiera puede unirse a la subasta, ejecutar un mecanismo de redistribución típicamente no es una buena idea de todos modos, porque todos querrían unirse para recolectar parte de la redistribución). Sea el conjunto de agentes {a1, a2, . . . , an}, donde ai es el agente con el valor de informe ˆvi más alto en la posición i-ésima, es decir, tenemos ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0. Que vi denote el valor verdadero de ai. Dado que el mecanismo es a prueba de estrategias, podemos asumir que vi = ˆvi. Bajo el mecanismo VCG, cada agente entre a1, . . . , am gana una unidad y paga ˆvm+1 por esta unidad. Por lo tanto, el pago total de VCG es igual a mˆvm+1. Cuando m = 1, esta es la subasta de segundo precio o Vickrey. Modificamos el mecanismo de la siguiente manera. Después de ejecutar el mecanismo VCG original, el centro devuelve a cada agente ai una cierta cantidad zi, el pago de redistribución del agente ai. No permitimos que zi dependa de ˆvi; por lo tanto, los incentivos de ais no se ven afectados por este pago de redistribución, y el mecanismo sigue siendo a prueba de estrategias. 3. Mecanismos de redistribución lineal VCG. Estamos listos para presentar la familia de mecanismos de redistribución lineal VCG. Un mecanismo de este tipo se define por un vector de constantes c0, c1, . . . , cn−1. La cantidad que el mecanismo devuelve al agente ai es zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. Es decir, un agente recibe c0, más c1 veces la oferta más alta que no sea la propia oferta del agente, más c2 veces la segunda oferta más alta de otros, etc. El mecanismo es a prueba de estrategias, porque para todo i, zi es independiente de ˆvi. Además, el mecanismo es anónimo. Es útil ver la lista completa de pagos de redistribución: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 Agradecemos a Rakesh Vohra por señalarnos el documento de trabajo de Moulins. 31 No todas las elecciones de las constantes c0, . . . , cn−1 producen un mecanismo que sea individualmente racional, y no todas las elecciones de las constantes producen un mecanismo que nunca incurre en déficit. Por lo tanto, para obtener estas propiedades, necesitamos imponer ciertas restricciones en las constantes. Para satisfacer el criterio de racionalidad individual, la utilidad de cada agente siempre debe ser no negativa. Un agente que no gana una unidad obtiene una utilidad que es igual al pago de redistribución del agente. Un agente que gana una unidad obtiene una utilidad que es igual a la valoración del agente por la unidad, menos el pago VCG ˆvm+1, más el pago de redistribución del agente. Considerar al agente an como el agente con la oferta más baja. Dado que este agente no gana un artículo (m < n), su utilidad es solo su pago de redistribución zn. Por lo tanto, para que el mecanismo sea individualmente racional, el ci debe ser tal que zn siempre sea no negativo. Si el ci tiene esta propiedad, entonces en realidad se sigue que zi es no negativo para cada i, por la siguiente razón. Supongamos que existe algún i < n y algún vector de ofertas ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 tal que zi < 0. Luego, considera el vector de oferta que resulta de reemplazar ˆvj por ˆvj+1 para todo j ≥ i, y dejando que ˆvn = 0. Si omitimos ˆvn de este vector, obtenemos el mismo vector que resulta al omitir ˆvi del vector original. Por lo tanto, el pago de redistribución de ans bajo el nuevo vector debería ser el mismo que el pago de redistribución de ais bajo el antiguo vector, pero este pago es negativo. Si todos los pagos de redistribución son siempre no negativos, entonces el mecanismo debe ser racional individualmente (porque el mecanismo VCG es racional individualmente, y el pago de redistribución solo aumenta la utilidad de los agentes). Por lo tanto, el mecanismo es individualmente racional si y solo si para cualquier vector de oferta, zn ≥ 0. Para satisfacer el criterio de no déficit, la suma de los pagos de redistribución debe ser menor o igual al pago total de VCG. Entonces, para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, las constantes ci deben hacer que z1 + z2 + . . . + zn ≤ mˆvm+1. Definimos la familia de mecanismos de redistribución lineales VCG como el conjunto de todos los mecanismos de redistribución que corresponden a constantes ci que satisfacen las restricciones anteriores (para que los mecanismos sean individualmente racionales y tengan la propiedad de no déficit). Ahora damos dos ejemplos de mecanismos en esta familia. Ejemplo 1 (mecanismo de Bailey-Cavallo): Considere el mecanismo correspondiente a cm+1 = m n y ci = 0 para todos los demás i. Bajo este mecanismo, cada agente recibe un pago de redistribución de m veces la (m+1)-ésima oferta más alta de otro agente. Por lo tanto, a1, . . . , am+1 reciben un pago de redistribución de m n ˆvm+2, y los demás reciben m n ˆvm+1. Por lo tanto, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1. Este mecanismo de redistribución es individualmente racional, porque todos los pagos de redistribución son no negativos y nunca incurre en un déficit, ya que (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (Observamos que para que este mecanismo tenga sentido, necesitamos que n ≥ m + 2). Ejemplo 2: Considere el mecanismo correspondiente a cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , y ci = 0 para todos los demás i. En este mecanismo, cada agente recibe un pago de redistribución de m n−m−1 veces el valor informado más alto (m + 1) de otros agentes, menos m(m+1) (n−m−1)(n−m−2) veces el valor informado más alto (m+2) de otros agentes. Por lo tanto, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Si n ≥ 2m+3 (lo cual es equivalente a m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), entonces cada agente siempre recibe un pago de redistribución no negativo, por lo tanto, el mecanismo es individualmente racional. Además, el mecanismo nunca incurre en un déficit, ya que el pago total VCG es mˆvm+1, que es mayor que la cantidad mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 que se redistribuye. ¿Cuál de estos dos mecanismos es mejor? ¿Hay otro mecanismo que sea aún mejor? Esto es lo que estudiamos en la próxima sección. 4. Mecanismos de redistribución óptimos Entre todos los mecanismos de redistribución lineales VCG, nos gustaría poder identificar aquel que redistribuye el mayor porcentaje del pago total de VCG. Esta no es una noción bien definida: puede ser que un mecanismo redistribuya más en algunos vectores de oferta, y otro más en otros vectores de oferta. Enfatizamos que no asumimos que haya una distribución previa sobre las valoraciones de los postores, por lo que no podemos compararlos basándonos en la redistribución esperada. A continuación, estudiamos tres formas bien definidas de comparar mecanismos de redistribución: rendimiento en el mejor caso, dominancia y rendimiento en el peor caso. Rendimiento en el mejor de los casos. Una forma de evaluar un mecanismo es considerando el porcentaje más alto de redistribución que logra. Considera los dos ejemplos anteriores. Para el primer ejemplo, el pago total de redistribución es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Cuando ˆvm+2 = ˆvm+1, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo redistribuye el 100% del pago total de VCG en el mejor de los casos. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3. Cuando ˆvm+3 = 0, esto es igual al pago total de VCG mˆvm+1. Por lo tanto, este mecanismo también redistribuye el 100% del pago total de VCG en el mejor de los casos. Además, en realidad hay infinitos mecanismos que redistribuyen el 100% del pago total de VCG en el mejor caso, por ejemplo, cualquier combinación convexa de los dos anteriores redistribuirá el 100% si tanto ˆvm+2 = ˆvm+1 como ˆvm+3 = 0. Dominancia. Dentro de la familia de mecanismos de redistribución lineal VCG, decimos que un mecanismo domina a otro mecanismo si el primero redistribuye al menos tanto como el otro para cualquier vector de oferta. Para los dos ejemplos anteriores, ninguno domina al otro, ya que cada uno redistribuye el 100% en diferentes casos. Resulta que no hay un mecanismo en la familia que domine a todos los demás mecanismos en la familia. Supongamos que tal mecanismo existe. Entonces, debería dominar ambos ejemplos anteriores. Considerar el pago VCG restante (el pago VCG no se pudo redistribuir). El pago VCG restante del mecanismo dominante debe ser 0 siempre que ˆvm+2 = ˆvm+1 o ˆvm+3 = 0. Ahora, el pago VCG restante es una función lineal de los ˆvi (redistribución lineal), y por lo tanto también es una función polinómica. Lo anterior implica que esta función puede escribirse como (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), donde P es una función polinómica de segundo grado. El porcentaje redistribuido parece ser el criterio natural a utilizar, entre otras cosas porque es invariante a escala: si multiplicamos todas las ofertas por la misma constante positiva (por ejemplo, si cambiamos las unidades al expresar las ofertas en euros en lugar de dólares), no queremos que el comportamiento de nuestro mecanismo cambie. Pero dado que la función debe ser lineal (con grado a lo sumo 1), se deduce que P = 0. Por lo tanto, un mecanismo dominante siempre redistribuiría todo el pago VCG, lo cual no es posible. (Si fuera posible, entonces nuestro mecanismo de redistribución óptima en el peor de los casos también redistribuiría siempre todo el pago VCG, y veremos más adelante que no lo hace). Rendimiento en el peor de los casos. Finalmente, podemos evaluar un mecanismo considerando el porcentaje más bajo de redistribución que garantiza. Para el primer ejemplo, el pago total de redistribución es (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, que es mayor o igual a (n−m−1) m n ˆvm+1. Entonces, en el peor caso, que es cuando ˆvm+2 = 0, el porcentaje redistribuido es n−m−1 n. Para el segundo ejemplo, el pago total de redistribución es mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, que es mayor o igual a mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ). Entonces, en el peor de los casos, que es cuando ˆvm+3 = ˆvm+1, el porcentaje redistribuido es 1 − (m+1)(m+2) (n−m−1)(n−m−2) . Dado que asumimos que el número de agentes n y el número de unidades m son conocidos, podemos determinar qué mecanismo de ejemplo tiene un mejor rendimiento en el peor de los casos al comparar las dos cantidades. Cuando n = 6 y m = 1, para el primer ejemplo (mecanismo Bailey-Cavallo), el porcentaje redistribuido en el peor caso es 2/3, y para el segundo ejemplo, este porcentaje es 1/2, lo que implica que para este par de n y m, el primer mecanismo tiene un mejor rendimiento en el peor caso. Por otro lado, cuando n = 12 y m = 1, para el primer ejemplo, el porcentaje redistribuido en el peor caso es 5 6, y para el segundo ejemplo, este porcentaje es 14 15, lo que implica que esta vez el segundo mecanismo tiene un mejor rendimiento en el peor caso. Por lo tanto, parece más natural comparar los mecanismos por el porcentaje del pago total de VCG que redistribuyen en el peor de los casos. Este porcentaje es indefinido cuando el pago total de VCG es 0. Para abordar esto, técnicamente, definimos el porcentaje de redistribución en el peor de los casos como el mayor k tal que la cantidad total redistribuida sea al menos k veces el pago total VCG, para todos los vectores de oferta. (Por lo tanto, siempre y cuando la cantidad total redistribuida sea al menos 0 cuando el pago total VCG es 0, estos casos no afectan el porcentaje en el peor de los casos). Esto corresponde al siguiente problema de optimización: Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Para cada vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (racionalidad individual) z1 + z2 + . . . + zn ≤ mˆvm+1 (no déficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (restricción del peor caso) Recordamos que zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. TRANSFORMACIÓN A PROGRAMACIÓN LINEAL El problema de optimización presentado en la sección anterior puede ser reescrito como un programa lineal, basado en las siguientes observaciones. Reclamo 1. Si c0, c1, . . . , cn−1 cumplen tanto con la racionalidad individual como con las restricciones de no déficit, entonces ci = 0 para i = 0, . . . , m. Demostración. Primero, vamos a demostrar que c0 = 0. Considera el vector de oferta en el cual ˆvi = 0 para todo i. Para obtener racionalidad individual, debemos tener c0 ≥ 0. Para satisfacer la restricción de no déficit, debemos tener c0 ≤ 0. Así sabemos que c0 = 0. Ahora, si ci = 0 para todos los i, no hay nada que demostrar. De lo contrario, deja que j = min{i|ci = 0}. Supongamos que j ≤ m. Recordamos que podemos escribir la restricción de racionalidad individual de la siguiente manera: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Consideremos el vector de oferta en el cual ˆvi = 1 para i ≤ j y ˆvi = 0 para el resto. En este caso zn = cj, por lo que debemos tener cj ≥ 0. La restricción de no déficit se puede escribir de la siguiente manera: z1 + z2 + . . . + zn ≤ mˆvm+1 para cualquier vector de oferta. Considera el mismo vector de oferta que se mencionó anteriormente. Tenemos zi = 0 para i ≤ j, porque para estas ofertas, la j-ésima oferta más alta tiene un valor de 0, por lo que todos los ci que no son cero se multiplican por 0. Para i > j, tenemos zi = cj, porque la j-ésima oferta más alta tiene un valor de 1, y todas las ofertas más bajas tienen un valor de 0. Entonces, la restricción de no déficit nos dice que cj(n − j) ≤ mˆvm+1. Dado que j ≤ m, ˆvm+1 = 0, por lo que el lado derecho es 0. También tenemos n − j > 0 porque j ≤ m < n. Por lo tanto, cj ≤ 0. Dado que ya hemos establecido que cj ≥ 0, se sigue que cj = 0; pero esto va en contra de la suposición. Entonces j > m. Por cierto, esta afirmación también muestra que si m = n − 1, entonces ci = 0 para todo i. Por lo tanto, estamos atrapados con el mecanismo VCG. A partir de aquí, solo consideramos el caso donde m < n − 1. Reclamo 2. La restricción de racionalidad individual se puede escribir de la siguiente manera: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Antes de demostrar esta afirmación, introducimos el siguiente lema. Lema 1. Dado un entero positivo k y un conjunto de constantes reales s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) si y solo si ( Σj i=1 si ≥ 0 para j = 1, 2, . . . , k). Prueba. Deja que di = ti − ti+1 para i = 1, 2, . . . , k−1, y dk = tk. Entonces (s1t1 + s2t2 + . . . + sktk ≥ 0 para cualquier t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) es equivalente a (( Π i=1 si)d1 + ( Π i=1 si)d2 + . . . + ( Π i=1 si)dk ≥ 0 para cualquier conjunto arbitrario de dj no negativos). Cuando Pj i=1 si ≥ 0 para j = 1, 2, . . . , k, la desigualdad anterior es obviamente verdadera. Si para algún j, Pj i=1 si < 0, si fijamos dj > 0 y di = 0 para todo i = j, entonces la desigualdad anterior se vuelve falsa. Entonces Pj i=1 si ≥ 0 para j = 1, 2, . . . , k es tanto necesario como suficiente. Ahora estamos listos para presentar la prueba de la Afirmación 2. Prueba. La restricción de racionalidad individual se puede escribir como zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0. Ya hemos demostrado que ci = 0 para i ≤ m. Por lo tanto, lo anterior se puede simplificar a zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 para cualquier vector de oferta. Según el lema anterior, esto es equivalente a Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1. Reclamo 3. La restricción de no déficit y la restricción del peor caso también pueden ser escritas como desigualdades lineales que solo involucran a los ci y k. Demostración. La restricción de no déficit requiere que para cualquier vector de oferta, z1 + z2 + . . . + zn ≤ mˆvm+1, donde zi = c0 + c1ˆv1 + 33 c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, para i = m+2, . . . , n−1 (cuando m + 2 > n − 1, este conjunto de igualdades está vacío) qn = −(n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m Por lo tanto, la restricción de no déficit se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci. La restricción del peor caso también puede ser escrita como un conjunto de desigualdades lineales, siguiendo el siguiente razonamiento. La restricción del peor caso requiere que para cualquier entrada de oferta z1 + z2 +. . .+ zn ≥ kmˆvm+1, donde zi = c0 + c1ˆv1 + c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn para i = 1, 2, . . . , n. Dado que ci = 0 para i ≤ m, podemos simplificar esta desigualdad a Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, para i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 Según el lema anterior, esto es equivalente a Pj i=m+1 Qi ≥ 0 para j = m + 1, . . . , n. Por lo tanto, podemos simplificar aún más de la siguiente manera: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km para i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km Por lo tanto, la restricción del peor caso también se puede escribir como un conjunto de desigualdades lineales que solo involucran a los ci y k. Combinando todas las afirmaciones, vemos que el problema de optimización original se puede transformar en el siguiente programa lineal. Variables: cm+1, cm+2, . . . , cn−1, k. Maximizar k (el porcentaje redistribuido en el peor caso) Sujeto a: Pj i=m+1 ci ≥ 0 para j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m para i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6. RESULTADOS NUMÉRICOS Para valores seleccionados de n y m, resolvimos el programa lineal utilizando Glpk (GNU Linear Programming Kit). En la tabla a continuación, presentamos los resultados para una sola unidad (m = 1). Presentamos 1−k (el porcentaje del pago total de VCG que no es redistribuido por el <br>mecanismo óptimo en el peor caso</br>) en lugar de k en la segunda columna porque escribir k requeriría demasiados dígitos significativos. De manera correspondiente, la tercera columna muestra el porcentaje 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Número de AgentesPorcentaje de Redistribución en el Peor Caso 1 Unidad WO 1 Unidad BC 2 Unidades WO 2 Unidades BC 3 Unidades WO 3 Unidades BC 4 Unidades WO 4 Unidades BC Figura 1: Una comparación del <br>mecanismo óptimo en el peor caso</br> (WO) y el mecanismo de Bailey-Cavallo (BC). del pago total VCG que no es redistribuido por el mecanismo de Bailey-Cavallo en el peor caso (que es igual a 2 n ). n 1 − k Mecanismo de Bailey-Cavallo 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 El <br>mecanismo óptimo en el peor caso</br> supera significativamente al mecanismo de Bailey-Cavallo en el peor caso. Quizás de manera más sorprendente, el <br>mecanismo óptimo en el peor de los casos</br> a veces tiene un mejor desempeño en el peor caso que el mecanismo de BaileyCavallo en promedio, como muestra el siguiente ejemplo. Recuerde que el pago total de redistribución del mecanismo BaileyCavallo es (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1. Para el caso de una sola unidad, esto se simplifica a 2 n ˆv3 + n−2 n ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye es ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2, el cual tiene un valor esperado de E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2. Supongamos que los valores de las ofertas se extraen de una distribución uniforme en el intervalo [0, 1]. La teoría de estadísticas de orden nos dice que la función de densidad de probabilidad conjunta de ˆv2 y ˆv3 es f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) para ˆv2 ≥ ˆv3. Ahora, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1. Por lo tanto, el valor esperado del porcentaje restante es 2 n − 2 n n−2 n−1 = 2 n(n−1) . Para n = 20, esto es 5.26e − 3, mientras que el porcentaje restante para el <br>mecanismo óptimo en el peor de los casos</br> es de 3.62e−5 en el peor caso. Presentemos detalladamente la solución óptima para el caso n = 5. Al resolver el programa lineal anterior, encontramos que los valores óptimos para los ci son c2 = 11/45, c3 = -1/9 y c4 = 1/15. Es decir, el pago de redistribución recibido por cada agente es: 11 45 veces la segunda oferta más alta entre los otros agentes, menos 1 9 veces la tercera oferta más alta entre los otros agentes, más 1 15 veces la cuarta oferta más alta entre los otros agentes. La cantidad total redistribuida es 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; en el peor de los casos, se redistribuye 11 15 ˆv2. Por lo tanto, el porcentaje del pago total de VCG que no se redistribuye nunca es superior al 26.7%. Finalmente, comparamos el <br>mecanismo óptimo en el peor de los casos</br> con el mecanismo de Bailey-Cavallo para m = 1, 2, 3, 4, n = m + 2, . . . , 30. ",
            "candidates": [],
            "error": [
                [
                    "mecanismo óptimo en el peor caso",
                    "mecanismo óptimo en el peor caso",
                    "mecanismo óptimo en el peor caso",
                    "mecanismo óptimo en el peor de los casos",
                    "mecanismo óptimo en el peor de los casos",
                    "mecanismo óptimo en el peor de los casos"
                ]
            ]
        },
        "vickrey-clarke-grove mechanism": {
            "translated_key": "mecanismo de Vickrey-Clarke-Grove",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "payment redistribution": {
            "translated_key": "redistribución de pagos",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Worst-Case Optimal Redistribution of VCG Payments Mingyu Guo Duke University Department of Computer Science Durham, NC, USA mingyu@cs.duke.edu Vincent Conitzer Duke University Department of Computer Science Durham, NC, USA conitzer@cs.duke.edu ABSTRACT For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extend this result in a restricted setting.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we propose a family of mechanisms that redistribute some of the VCG payment back to the agents.",
                "All mechanisms in the family are efficient, strategyproof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provide an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and show how to cast this model as a linear program.",
                "We give both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we prove that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "Categories and Subject Descriptors J.4 [Computer Applications]: Social and Behavioral Sciences-Economics; I.2.11 [Distributed Artificial Intelligence]: Multiagent Systems General Terms Algorithms, Economics, Theory 1.",
                "INTRODUCTION Many important problems in computer science and electronic commerce can be modeled as resource allocation problems.",
                "In such problems, we want to allocate the resources (or items) to the agents that value them the most.",
                "Unfortunately, agents valuations are private knowledge, and self-interested agents will lie about their valuations if this is to their benefit.",
                "One solution is to auction off the items, possibly in a combinatorial auction where agents can bid on bundles of items.",
                "There exist ways of determining the payments that the agents make in such an auction that incentivizes the agents to report their true valuations-that is, the payments make the auction strategy-proof.",
                "One very general way of doing so is to use the VCG mechanism [23, 4, 12]. (The VCG mechanism is also known as the Clarke mechanism or, in the specific context of auctions, the Generalized Vickrey Auction.)",
                "Besides strategy-proofness, the VCG mechanism has several other nice properties in the context of resource allocation problems.",
                "It is efficient: the chosen allocation always maximizes the sum of the agents valuations.",
                "It is also (expost) individually rational: participating in the mechanism never makes an agent worse off than not participating.",
                "Finally, it has a no-deficit property: the sum of the agents payments is always nonnegative.",
                "In many settings, another property that would be desirable is (strong) budget balance, meaning that the payments sum to exactly 0.",
                "Suppose the agents are trying to distribute some resources among themselves that do not have a previous owner.",
                "For example, the agents may be trying to allocate the right to use a shared good on a given day.",
                "Or, the agents may be trying to allocate a resource that they have collectively constructed, discovered, or otherwise obtained.",
                "If the agents use an auction to allocate these resources, and the sum of the agents payments in the auction is positive, then this surplus payment must leave the system 30 of the agents (for example, the agents must give the money to an outside party, or burn it).",
                "Na¨ıve redistribution of the surplus payment (e.g. each of the n agents receives 1/n of the surplus) will generally result in a mechanism that is not strategy-proof (e.g. in a Vickrey auction, the second-highest bidder would want to increase her bid to obtain a larger redistribution payment).",
                "Unfortunately, the VCG mechanism is not budget balanced: typically, there is surplus payment.",
                "Unfortunately, in general settings, it is in fact impossible to design mechanisms that satisfy budget balance in addition to the other desirable properties [16, 11, 21].",
                "In light of this impossibility result, several authors have obtained budget balance by sacrificing some of the other desirable properties [2, 6, 22, 5].",
                "Another approach that is perhaps preferable is to use a mechanism that is more budget balanced than the VCG mechanism, and maintains all the other desirable properties.",
                "One way of trying to design such a mechanism is to redistribute some of the VCG payment back to the agents in a way that will not affect the agents incentives (so that strategy-proofness is maintained), and that will maintain the other properties.",
                "In 2006, Cavallo [3] pursued exactly this idea, and designed a mechanism that redistributes a large amount of the total VCG payment while maintaining all of the other desirable properties of the VCG mechanism.",
                "For example, in a single-item auction (where the VCG mechanism coincides with the second-price sealed-bid auction), the amount redistributed to bidder i by Cavallos mechanism is 1/n times the second-highest bid among bids other than is bid.",
                "The total redistributed is at most the second-highest bid overall, and the redistribution to agent i does not affect is incentives because it does not depend on is own bid.",
                "In this paper, we restrict our attention to a limited setting, and in this setting we extend Cavallos result.",
                "We study allocation settings where there are multiple indistinguishable units of a single good, and all agents have unit demand, i.e. they want only a single unit.",
                "For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].",
                "Here we propose the family of linear VCG redistribution mechanisms.",
                "All mechanisms in this family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case (with the caveat that we only study allocation settings with multiple indistinguishable units of a single good and unit demand, while Baileys and Cavallos mechanisms can be applied outside these settings as well).",
                "We then provide an optimization model for finding the optimal mechanism inside the family, based on worst-case analysis.",
                "Both numerical and analytical solutions of this model are provided, and the resulting mechanism shows significant improvement over the BaileyCavallo mechanism (in the worst case).",
                "For example, for the problem of allocating a single unit, when the number of agents is 10, our mechanism always redistributes more than 98% of the total VCG payment back to the agents (whereas the Bailey-Cavallo mechanism redistributes only 80% in the worst case).",
                "Finally, we prove that our mechanism is in fact optimal among all anonymous deterministic mechanisms (even nonlinear ones) that satisfy the desirable properties.",
                "Around the same time, the same mechanism has been independently derived by Moulin [19].1 Moulin actually pursues a different objective (also based on worst-case analysis): whereas our objective is to maximize the percentage of VCG payments that are redistributed, Moulin tries to minimize the overall payments from agents as a percentage of efficiency.",
                "It turns out that the resulting mechanisms are the same.",
                "Towards the end of this paper, we consider dropping the individual rationality requirement, and show that this does not change the optimal mechanism for our objective.",
                "For Moulins objective, dropping individual rationality does change the optimal mechanism (but only if there are multiple units). 2.",
                "PROBLEM DESCRIPTION Let n denote the number of agents, and let m denote the number of units.",
                "We only consider the case where m < n (otherwise the problem becomes trivial).",
                "We also assume that m and n are always known. (This assumption is not harmful: in environments where anyone can join the auction, running a redistribution mechanism is typically not a good idea anyway, because everyone would want to join to collect part of the redistribution.)",
                "Let the set of agents be {a1, a2, . . . , an}, where ai is the agent with ith highest report value ˆvi-that is, we have ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0.",
                "Let vi denote the true value of ai.",
                "Given that the mechanism is strategy-proof, we can assume vi = ˆvi.",
                "Under the VCG mechanism, each agent among a1, . . . , am wins a unit, and pays ˆvm+1 for this unit.",
                "Thus, the total VCG payment equals mˆvm+1.",
                "When m = 1, this is the second-price or Vickrey auction.",
                "We modify the mechanism as follows.",
                "After running the original VCG mechanism, the center returns to each agent ai some amount zi, agent ais redistribution payment.",
                "We do not allow zi to depend on ˆvi; because of this, ais incentives are unaffected by this redistribution payment, and the mechanism remains strategy-proof. 3.",
                "LINEAR VCG REDISTRIBUTION MECHANISMS We are now ready to introduce the family of linear VCG redistribution mechanisms.",
                "Such a mechanism is defined by a vector of constants c0, c1, . . . , cn−1.",
                "The amount that the mechanism returns to agent ai is zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn.",
                "That is, an agent receives c0, plus c1 times the highest bid other than the agents own bid, plus c2 times the second-highest other bid, etc.",
                "The mechanism is strategy-proof, because for all i, zi is independent of ˆvi.",
                "Also, the mechanism is anonymous.",
                "It is helpful to see the entire list of redistribution payments: z1 = c0 + c1ˆv2 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z2 = c0 + c1ˆv1 + c2ˆv3 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z3 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv4 + . . . + cn−2ˆvn−1 + cn−1ˆvn z4 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn . . . zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn . . . zn−2 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−1 + cn−1ˆvn zn−1 = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 1 We thank Rakesh Vohra for pointing us to Moulins working paper. 31 Not all choices of the constants c0, . . . , cn−1 produce a mechanism that is individually rational, and not all choices of the constants produce a mechanism that never incurs a deficit.",
                "Hence, to obtain these properties, we need to place some constraints on the constants.",
                "To satisfy the individual rationality criterion, each agents utility should always be non-negative.",
                "An agent that does not win a unit obtains a utility that is equal to the agents redistribution payment.",
                "An agent that wins a unit obtains a utility that is equal to the agents valuation for the unit, minus the VCG payment ˆvm+1, plus the agents redistribution payment.",
                "Consider agent an, the agent with the lowest bid.",
                "Since this agent does not win an item (m < n), her utility is just her redistribution payment zn.",
                "Hence, for the mechanism to be individually rational, the ci must be such that zn is always nonnegative.",
                "If the ci have this property, then it actually follows that zi is nonnegative for every i, for the following reason.",
                "Suppose there exists some i < n and some vector of bids ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 such that zi < 0.",
                "Then, consider the bid vector that results from replacing ˆvj by ˆvj+1 for all j ≥ i, and letting ˆvn = 0.",
                "If we omit ˆvn from this vector, the same vector results that results from omitting ˆvi from the original vector.",
                "Therefore, ans redistribution payment under the new vector should be the same as ais redistribution payment under the old vector-but this payment is negative.",
                "If all redistribution payments are always nonnegative, then the mechanism must be individually rational (because the VCG mechanism is individually rational, and the redistribution payment only increases an agents utility).",
                "Therefore, the mechanism is individually rational if and only if for any bid vector, zn ≥ 0.",
                "To satisfy the non-deficit criterion, the sum of the redistribution payments should be less than or equal to the total VCG payment.",
                "So for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0, the constants ci should make z1 + z2 + . . . + zn ≤ mˆvm+1.",
                "We define the family of linear VCG redistribution mechanisms to be the set of all redistribution mechanisms corresponding to constants ci that satisfy the above constraints (so that the mechanisms will be individually rational and have the no-deficit property).",
                "We now give two examples of mechanisms in this family.",
                "Example 1 (Bailey-Cavallo mechanism): Consider the mechanism corresponding to cm+1 = m n and ci = 0 for all other i.",
                "Under this mechanism, each agent receives a redistribution payment of m n times the (m+1)th highest bid from another agent.",
                "Hence, a1, . . . , am+1 receive a redistribution payment of m n ˆvm+2, and the others receive m n ˆvm+1.",
                "Thus, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m− 1)m n ˆvm+1.",
                "This redistribution mechanism is individually rational, because all the redistribution payments are nonnegative, and never incurs a deficit, because (m + 1) m n ˆvm+2 + (n−m−1)m n ˆvm+1 ≤ nm n ˆvm+1 = mˆvm+1. (We note that for this mechanism to make sense, we need n ≥ m + 2.)",
                "Example 2: Consider the mechanism corresponding to cm+1 = m n−m−1 , cm+2 = − m(m+1) (n−m−1)(n−m−2) , and ci = 0 for all other i.",
                "In this mechanism, each agent receives a redistribution payment of m n−m−1 times the (m + 1)th highest reported value from other agents, minus m(m+1) (n−m−1)(n−m−2) times the (m+2)th highest reported value from other agents.",
                "Thus, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "If n ≥ 2m+3 (which is equivalent to m n−m−1 ≥ m(m+1) (n−m−1)(n−m−2) ), then each agent always receives a nonnegative redistribution payment, thus the mechanism is individually rational.",
                "Also, the mechanism never incurs a deficit, because the total VCG payment is mˆvm+1, which is greater than the amount mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3 that is redistributed.",
                "Which of these two mechanisms is better?",
                "Is there another mechanism that is even better?",
                "This is what we study in the next section. 4.",
                "OPTIMAL REDISTRIBUTION MECHANISMS Among all linear VCG redistribution mechanisms, we would like to be able to identify the one that redistributes the greatest percentage of the total VCG payment.2 This is not a well-defined notion: it may be that one mechanism redistributes more on some bid vectors, and another more on other bid vectors.",
                "We emphasize that we do not assume that a prior distribution over bidders valuations is available, so we cannot compare them based on expected redistribution.",
                "Below, we study three well-defined ways of comparing redistribution mechanisms: best-case performance, dominance, and worst-case performance.",
                "Best-case performance.",
                "One way of evaluating a mechanism is by considering the highest redistribution percentage that it achieves.",
                "Consider the previous two examples.",
                "For the first example, the total redistribution payment is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "When ˆvm+2 = ˆvm+1, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism redistributes 100% of the total VCG payment in the best case.",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3.",
                "When ˆvm+3 = 0, this is equal to the total VCG payment mˆvm+1.",
                "Thus, this mechanism also redistributes 100% of the total VCG payment in the best case.",
                "Moreover, there are actually infinitely many mechanisms that redistribute 100% of the total VCG payment in the best case-for example, any convex combination of the above two will redistribute 100% if both ˆvm+2 = ˆvm+1 and ˆvm+3 = 0.",
                "Dominance.",
                "Inside the family of linear VCG redistribution mechanisms, we say one mechanism dominates another mechanism if the first one redistributes at least as much as the other for any bid vector.",
                "For the previous two examples, neither dominates the other, because they each redistribute 100% in different cases.",
                "It turns out that there is no mechanism in the family that dominates all other mechanisms in the family.",
                "For suppose such a mechanism exists.",
                "Then, it should dominate both examples above.",
                "Consider the remaining VCG payment (the VCG payment failed to be redistributed).",
                "The remaining VCG payment of the dominant mechanism should be 0 whenever ˆvm+2 = ˆvm+1 or ˆvm+3 = 0.",
                "Now, the remaining VCG payment is a linear function of the ˆvi (linear redistribution), and therefore also a polynomial function.",
                "The above implies that this function can be written as (ˆvm+2 − ˆvm+1)(ˆvm+3)P(ˆv1, ˆv2, . . . , ˆvn), where P is a 2 The percentage redistributed seems the natural criterion to use, among other things because it is scale-invariant: if we multiply all bids by the same positive constant (for example, if we change the units by re-expressing the bids in euros instead of dollars), we would not want the behavior of our mechanism to change. 32 polynomial function.",
                "But since the function must be linear (has degree at most 1), it follows that P = 0.",
                "Thus, a dominant mechanism would always redistribute all of the VCG payment, which is not possible. (If it were possible, then our worst-case optimal redistribution mechanism would also always redistribute all of the VCG payment, and we will see later that it does not.)",
                "Worst-case performance.",
                "Finally, we can evaluate a mechanism by considering the lowest redistribution percentage that it guarantees.",
                "For the first example, the total redistribution payment is (m+1)m n ˆvm+2 +(n−m−1)m n ˆvm+1, which is greater than or equal to (n−m−1) m n ˆvm+1.",
                "So in the worst case, which is when ˆvm+2 = 0, the percentage redistributed is n−m−1 n .",
                "For the second example, the total redistribution payment is mˆvm+1 − m(m+1)(m+2) (n−m−1)(n−m−2) ˆvm+3, which is greater than or equal to mˆvm+1(1− (m+1)(m+2) (n−m−1)(n−m−2) ).",
                "So in the worst case, which is when ˆvm+3 = ˆvm+1, the percentage redistributed is 1 − (m+1)(m+2) (n−m−1)(n−m−2) .",
                "Since we assume that the number of agents n and the number of units m are known, we can determine which example mechanism has better worst-case performance by comparing the two quantities.",
                "When n = 6 and m = 1, for the first example (Bailey-Cavallo mechanism), the percentage redistributed in the worst case is 2 3 , and for the second example, this percentage is 1 2 , which implies that for this pair of n and m, the first mechanism has better worst-case performance.",
                "On the other hand, when n = 12 and m = 1, for the first example, the percentage redistributed in the worst case is 5 6 , and for the second example, this percentage is 14 15 , which implies that this time the second mechanism has better worst-case performance.",
                "Thus, it seems most natural to compare mechanisms by the percentage of total VCG payment that they redistribute in the worst case.",
                "This percentage is undefined when the total VCG payment is 0.",
                "To deal with this, technically, we define the worst-case redistribution percentage as the largest k so that the total amount redistributed is at least k times the total VCG payment, for all bid vectors. (Hence, as long as the total amount redistributed is at least 0 when the total VCG payment is 0, these cases do not affect the worst-case percentage.)",
                "This corresponds to the following optimization problem: Maximize k (the percentage redistributed in the worst case) Subject to: For every bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn ≥ 0 zn ≥ 0 (individual rationality) z1 + z2 + . . . + zn ≤ mˆvm+1 (non-deficit) z1 + z2 + . . . + zn ≥ kmˆvm+1 (worst-case constraint) We recall that zi = c0 + c1ˆv1 + c2ˆv2 + . . . + ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn. 5.",
                "TRANSFORMATION TO LINEAR PROGRAMMING The optimization problem given in the previous section can be rewritten as a linear program, based on the following observations.",
                "Claim 1.",
                "If c0, c1, . . . , cn−1 satisfy both the individual rationality and the non-deficit constraints, then ci = 0 for i = 0, . . . , m. Proof.",
                "First, let us prove that c0 = 0.",
                "Consider the bid vector in which ˆvi = 0 for all i.",
                "To obtain individual rationality, we must have c0 ≥ 0.",
                "To satisfy the non-deficit constraint, we must have c0 ≤ 0.",
                "Thus we know c0 = 0.",
                "Now, if ci = 0 for all i, there is nothing to prove.",
                "Otherwise, let j = min{i|ci = 0}.",
                "Assume that j ≤ m. We recall that we can write the individual rationality constraint as follows: zn = c0 +c1ˆv1 +c2ˆv2 +c3ˆv3 +. . .+cn−2ˆvn−2 +cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "Let us consider the bid vector in which ˆvi = 1 for i ≤ j and ˆvi = 0 for the rest.",
                "In this case zn = cj, so we must have cj ≥ 0.",
                "The non-deficit constraint can be written as follows: z1 + z2 + . . . + zn ≤ mˆvm+1 for any bid vector.",
                "Consider the same bid vector as above.",
                "We have zi = 0 for i ≤ j, because for these bids, the jth highest other bid has value 0, so all the ci that are nonzero are multiplied by 0.",
                "For i > j, we have zi = cj, because the jth highest other bid has value 1, and all lower bids have value 0.",
                "So the non-deficit constraint tells us that cj(n − j) ≤ mˆvm+1.",
                "Because j ≤ m, ˆvm+1 = 0, so the right hand side is 0.",
                "We also have n − j > 0 because j ≤ m < n. So cj ≤ 0.",
                "Because we have already established that cj ≥ 0, it follows that cj = 0; but this is contrary to assumption.",
                "So j > m. Incidentally, this claim also shows that if m = n − 1, then ci = 0 for all i.",
                "Thus, we are stuck with the VCG mechanism.",
                "From here on, we only consider the case where m < n − 1.",
                "Claim 2.",
                "The individual rationality constraint can be written as follows: Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Before proving this claim, we introduce the following lemma.",
                "Lemma 1.",
                "Given a positive integer k and a set of real constants s1, s2, . . . , sk, (s1t1 + s2t2 + . . . + sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) if and only if ( Pj i=1 si ≥ 0 for j = 1, 2, . . . , k).",
                "Proof.",
                "Let di = ti −ti+1 for i = 1, 2, . . . , k−1, and dk = tk.",
                "Then (s1t1 +s2t2 +. . .+sktk ≥ 0 for any t1 ≥ t2 ≥ . . . ≥ tk ≥ 0) is equivalent to (( P1 i=1 si)d1 + ( P2 i=1 si)d2 + . . . + ( Pk i=1 si)dk ≥ 0 for any set of arbitrary non-negative dj).",
                "When Pj i=1 si ≥ 0 for j = 1, 2, . . . , k, the above inequality is obviously true.",
                "If for some j, Pj i=1 si < 0, if we set dj > 0 and di = 0 for all i = j, then the above inequality becomes false.",
                "So Pj i=1 si ≥ 0 for j = 1, 2, . . . , k is both necessary and sufficient.",
                "We are now ready to present the proof of Claim 2.",
                "Proof.",
                "The individual rationality constraint can be written as zn = c0 + c1ˆv1 + c2ˆv2 + c3ˆv3 + . . . + cn−2ˆvn−2 + cn−1ˆvn−1 ≥ 0 for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn−1 ≥ ˆvn ≥ 0.",
                "We have already shown that ci = 0 for i ≤ m. Thus, the above can be simplified to zn = cm+1ˆvm+1 + cm+2ˆvm+2+. . .+cn−2ˆvn−2+cn−1ˆvn−1 ≥ 0 for any bid vector.",
                "By the above lemma, this is equivalent to Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1.",
                "Claim 3.",
                "The non-deficit constraint and the worst-case constraint can also be written as linear inequalities involving only the ci and k. Proof.",
                "The non-deficit constraint requires that for any bid vector, z1 +z2 +. . .+zn ≤ mˆvm+1, where zi = c0 +c1ˆv1 + 33 c2ˆv2 +. . .+ci−1ˆvi−1 +ciˆvi+1 +. . .+cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to qm+1ˆvm+1 + qm+2ˆvm+2 + . . . + qnˆvn ≥ 0 qm+1 = m − (n − m − 1)cm+1 qi = −(i−1)ci−1 −(n−i)ci, for i = m+2, . . . , n−1 (when m + 2 > n − 1, this set of equalities is empty) qn = −(n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≤ m qm+1 + . . . + qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 qm+1 + . . . + qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≤ m So, the non-deficit constraint can be written as a set of linear inequalities involving only the ci.",
                "The worst-case constraint can be also written as a set of linear inequalities, by the following reasoning.",
                "The worstcase constraint requires that for any bid input z1 +z2 +. . .+ zn ≥ kmˆvm+1, where zi = c0 +c1ˆv1 +c2ˆv2 +. . .+ci−1ˆvi−1 + ciˆvi+1 + . . . + cn−1ˆvn for i = 1, 2, . . . , n. Because ci = 0 for i ≤ m, we can simplify this inequality to Qm+1ˆvm+1 + Qm+2ˆvm+2 + . . . + Qnˆvn ≥ 0 Qm+1 = (n − m − 1)cm+1 − km Qi = (i − 1)ci−1 + (n − i)ci, for i = m + 2, . . . , n − 1 Qn = (n − 1)cn−1 By the above lemma, this is equivalent to Pj i=m+1 Qi ≥ 0 for j = m + 1, . . . , n. So, we can simplify further as follows: Qm+1 ≥ 0 ⇐⇒ (n − m − 1)cm+1 ≥ km Qm+1 + . . . + Qm+i ≥ 0 ⇐⇒ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≥ km for i = 2, . . . , n − m − 1 Qm+1 + . . . + Qn ≥ 0 ⇐⇒ n Pj=n−1 j=m+1 cj ≥ km So, the worst-case constraint can also be written as a set of linear inequalities involving only the ci and k. Combining all the claims, we see that the original optimization problem can be transformed into the following linear program.",
                "Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m 6.",
                "NUMERICAL RESULTS For selected values of n and m, we solved the linear program using Glpk (GNU Linear Programming Kit).",
                "In the table below, we present the results for a single unit (m = 1).",
                "We present 1−k (the percentage of the total VCG payment that is not redistributed by the worst-case optimal mechanism in the worst case) instead of k in the second column because writing k would require too many significant digits.",
                "Correspondingly, the third column displays the percentage 5 10 15 20 25 30 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 Number of AgentsWorst−caseRedistributionPercentage 1 Unit WO 1 Unit BC 2 Units WO 2 Units BC 3 Units WO 3 Units BC 4 Units WO 4 Units BC Figure 1: A comparison of the worst-case optimal mechanism (WO) and the Bailey-Cavallo mechanism (BC). of the total VCG payment that is not redistributed by the Bailey-Cavallo mechanism in the worst case (which is equal to 2 n ). n 1 − k Bailey − Cavallo Mechanism 3 66.7% 66.7% 4 42.9% 50.0% 5 26.7% 40.0% 6 16.1% 33.3% 7 9.52% 28.6% 8 5.51% 25.0% 9 3.14% 22.2% 10 1.76% 20.0% 20 3.62e − 5 10.0% 30 5.40e − 8 6.67e − 2 40 7.09e − 11 5.00e − 2 The worst-case optimal mechanism significantly outperforms the Bailey-Cavallo mechanism in the worst case.",
                "Perhaps more surprisingly, the worst-case optimal mechanism sometimes does better in the worst case than the BaileyCavallo mechanism does on average, as the following example shows.",
                "Recall that the total redistribution payment of the BaileyCavallo mechanism is (m + 1)m n ˆvm+2 + (n − m − 1)m n ˆvm+1.",
                "For the single-unit case, this simplifies to 2 n ˆv3 + n−2 n ˆv2.",
                "Hence the percentage of the total VCG payment that is not redistributed is ˆv2− 2 n ˆv3− n−2 n ˆv2 ˆv2 = 2 n − 2 n ˆv3 ˆv2 , which has an expected value of E( 2 n − 2 n ˆv3 ˆv2 ) = 2 n − 2 n E ˆv3 ˆv2 .",
                "Suppose the bid values are drawn from a uniform distribution over [0, 1].",
                "The theory of order statistics tells us that the 34 joint probability density function of ˆv2 and ˆv3 is f(ˆv3, ˆv2) = n(n − 1)(n − 2)ˆvn−3 3 (1 − ˆv2) for ˆv2 ≥ ˆv3.",
                "Now, E ˆv3 ˆv2 = R 1 0 R ˆv2 0 ˆv3 ˆv2 f(ˆv3, ˆv2)dˆv3dˆv2 = n−2 n−1 .",
                "So, the expected value of the remaining percentage is 2 n − 2 n n−2 n−1 = 2 n(n−1) .",
                "For n = 20, this is 5.26e − 3, whereas the remaining percentage for the worst-case optimal mechanism is 3.62e−5 in the worst case.",
                "Let us present the optimal solution for the case n = 5 in detail.",
                "By solving the above linear program, we find that the optimal values for the ci are c2 = 11 45 , c3 = −1 9 , and c4 = 1 15 .",
                "That is, the redistribution payment received by each agent is: 11 45 times the second highest bid among the other agents, minus 1 9 times the third highest bid among the other agents, plus 1 15 times the fourth highest bid among the other agents.",
                "The total amount redistributed is 11 15 ˆv2 + 4 15 ˆv3 − 4 15 ˆv4 + 4 15 ˆv5; in the worst case, 11 15 ˆv2 is redistributed.",
                "Hence, the percentage of the total VCG payment that is not redistributed is never more than 4 15 = 26.7%.",
                "Finally, we compare the worst-case optimal mechanism to the Bailey-Cavallo mechanism for m = 1, 2, 3, 4, n = m + 2, . . . , 30.",
                "These results are in Figure 1.",
                "We see that for any m, when n = m + 2, the worst-case optimal mechanism has the same worst-case performance as the Bailey-Cavallo mechanism (actually, in this case, the worst-case optimal mechanism is identical to the BaileyCavallo mechanism).",
                "When n > m + 2, the worst-case optimal mechanism outperforms the Bailey-Cavallo mechanism (in the worst case). 7.",
                "ANALYTICAL CHARACTERIZATION OF THE WORST-CASE OPTIMAL MECHANISM We recall that our linear program has the following form: Variables: cm+1, cm+2, . . . , cn−1, k Maximize k (the percentage redistributed in the worst case) Subject to:Pj i=m+1 ci ≥ 0 for j = m + 1, . . . , n − 1 km ≤ (n − m − 1)cm+1 ≤ m km ≤ n Pj=m+i−1 j=m+1 cj + (n − m − i)cm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ n Pj=n−1 j=m+1 cj ≤ m A linear program has no solution if and only if either the objective is unbounded, or the constraints are contradictory (there is no feasible solution).",
                "It is easy to see that k is bounded above by 1 (redistributing more than 100% violates the non-deficit constraint).",
                "Also, a feasible solution always exists, for example, k = 0 and ci = 0 for all i.",
                "So an optimal solution always exists.",
                "Observe that the linear program model depends only on the number of agents n and the number of units m. Hence the optimal solution is a function of n and m. It turns out that this optimal solution can be analytically characterized as follows.",
                "Theorem 1.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism (among linear VCG redistribution mechanisms) is unique.",
                "For this mechanism, the percentage redistributed in the worst case is k∗ = 1 − `n−1 m ´ Pn−1 j=m `n−1 j ´ The worst-case optimal mechanism is characterized by the following values for the ci: c∗ i = (−1)i+m−1 (n − m) `n−1 m−1 ´ i Pn−1 j=m `n−1 j ´ 1 `n−1 i ´ n−1X j=i n − 1 j ! for i = m + 1, . . . , n − 1.",
                "It should be noted that we have proved ci = 0 for i ≤ m in Claim 1.",
                "Proof.",
                "We first rewrite the linear program as follows.",
                "We introduce new variables xm+1, xm+2, . . . , xn−1, defined by xj = Pj i=m+1 ci for j = m + 1, . . . , n − 1.",
                "The linear program then becomes: Variables: xm+1, xm+2, . . . , xn−1, k Maximize k Subject to: km ≤ (n − m − 1)xm+1 ≤ m km ≤ (m + i)xm+i−1 + (n − m − i)xm+i ≤ m for i = 2, . . . , n − m − 1 km ≤ nxn−1 ≤ m xi ≥ 0 for i = m + 1, m + 2, . . . , n − 1 We will prove that for any optimal solution to this linear program, k = k∗ .",
                "Moreover, we will prove that when k = k∗ , xj = Pj i=m+1 c∗ i for j = m + 1, . . . , n − 1.",
                "This will prove the theorem.",
                "We first make the following observations: (n − m − 1)c∗ m+1 = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) Pn−1 j=m+1 `n−1 j ´ = (n − m − 1) (n−m)(n−1 m−1) (m+1) Pn−1 j=m (n−1 j ) 1 (n−1 m+1) ( Pn−1 j=m `n−1 j ´ − `n−1 m ´ ) = (n − m − 1) m n−m−1 − (n − m − 1) m(n−1 m ) (n−m−1) Pn−1 j=m (n−1 j ) = m − (1 − k∗ )m = k∗ m For i = m + 1, . . . , n − 2, ic∗ i + (n − i − 1)c∗ i+1 = i (−1)i+m−1 (n−m)(n−1 m−1) i Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ + (n − i − 1) (−1)i+m (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) 1 (n−1 i+1 ) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) 1 (n−1 i ) Pn−1 j=i `n−1 j ´ − (n − i − 1) (−1)i+m−1 (n−m)(n−1 m−1) (i+1) Pn−1 j=m (n−1 j ) i+1 (n−1 i )(n−i−1) Pn−1 j=i+1 `n−1 j ´ = (−1)i+m−1 (n−m)(n−1 m−1) Pn−1 j=m (n−1 j ) = (−1)i+m−1 m(1 − k∗ ) Finally, (n − 1)c∗ n−1 = (n − 1) (−1)n+m (n−m)(n−1 m−1) (n−1) Pn−1 j=m (n−1 j ) 1 (n−1 n−1) Pn−1 j=n−1 `n−1 j ´ = (−1)m+n m(1 − k∗ ) Summarizing the above, we have: (n − m − 1)c∗ m+1 = k∗ m (m + 1)c∗ m+1 + (n − m − 2)c∗ m+2 = m(1 − k∗ ) (m + 2)c∗ m+2 + (n − m − 3)c∗ m+3 = −m(1 − k∗ ) (m + 3)c∗ m+3 + (n − m − 4)c∗ m+4 = m(1 − k∗ ) ... 35 (n − 3)c∗ n−3 + 2c∗ n−2 = (−1)m+n−2 m(1 − k∗ ) (n − 2)c∗ n−2 + c∗ n−1 = (−1)m+n−1 m(1 − k∗ ) (n − 1)c∗ n−1 = (−1)m+n m(1 − k∗ ) Let x∗ j = Pj i=m+1 c∗ i for j = m + 1, m + 2, . . . , n − 1, the first equation in the above tells us that (n − m − 1)x∗ m+1 = k∗ m. By adding the first two equations, we get (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m By adding the first three equations, we get (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = k∗ m By adding the first i equations, where i = 2, . . . , n−m−1, we get (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = m if i is even (m + i)x∗ m+i−1 + (n − m − i)x∗ m+i = k∗ m if i is odd Finally by adding all the equations, we get nx∗ n−1 = m if n − m is even; nx∗ n−1 = k∗ m if n − m is odd.",
                "Thus, for all of the constraints other than the nonnegativity constraints, we have shown that they are satisfied by setting xj = x∗ j = Pj i=m+1 c∗ i and k = k∗ .",
                "We next show that the nonnegativity constraints are satisfied by these settings as well.",
                "For m + 1 ≤ i, i + 1 ≤ n − 1, we have 1 i Pn−1 j=i (n−1 j ) (n−1 i ) = 1 i Pn−1 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i i!(n−1−i)! j!(n−1−j)! ≥ 1 i+1 Pn−2 j=i (i+1)!(n−1−i−1)! (j+1)!(n−1−j−1)! = 1 i+1 Pn−1 j=i+1 (n−1 j ) (n−1 i+1 ) This implies that the absolute value of c∗ i is decreasing as i increases (if the c∗ contains more than one number).",
                "We further observe that the sign of c∗ i alternates, with the first element c∗ m+1 positive.",
                "So x∗ j = Pj i=m+1 c∗ i ≥ 0 for all j.",
                "Thus, we have shown that these xi = x∗ i together with k = k∗ form a feasible solution of the linear program.",
                "We proceed to show that it is in fact the unique optimal solution.",
                "First we prove the following claim: Claim 4.",
                "If ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 satisfy the following inequalities: ˆkm ≤ (n − m − 1)ˆxm+1 ≤ m ˆkm ≤ (m + i)ˆxm+i−1 + (n − m − i)ˆxm+i ≤ m for i = 2, . . . , n − m − 1 ˆkm ≤ nˆxn−1 ≤ m ˆk ≥ k∗ Then we must have that ˆxi = ˆx∗ i and ˆk = k∗ .",
                "Proof of claim.",
                "Consider the first inequality.",
                "We know that (n − m − 1)x∗ m+1 = k∗ m, so (n − m − 1)ˆxm+1 ≥ ˆkm ≥ k∗ m = (n − m − 1)x∗ m+1.",
                "It follows that ˆxm+1 ≥ x∗ m+1 (n − m − 1 = 0).",
                "Now, consider the next inequality for i = 2.",
                "We know that (m + 2)x∗ m+1 + (n − m − 2)x∗ m+2 = m. It follows that (n−m−2)ˆxm+2 ≤ m−(m+2)ˆxm+1 ≤ m−(m+2)x∗ m+1 = (n − m − 2)x∗ m+2, so ˆxm+2 ≤ x∗ m+2 (i = 2 ≤ n − m − 1 ⇒ n − m − 2 = 0).",
                "Now consider the next inequality for i = 3.",
                "We know that (m + 3)x∗ m+2 + (n − m − 3)x∗ m+3 = m. It follows that (n−m−3)ˆxm+3 ≥ ˆkm−(m+3)ˆxm+2 ≥ k∗ m−(m+3)x∗ m+2 = (n − m − 3)x∗ m+3, so ˆxm+3 ≥ x∗ m+3 (i = 3 ≤ n − m − 1 ⇒ n − m − 3 = 0).",
                "Proceeding like this all the way up to i = n−m−1, we get that ˆxm+i ≥ x∗ m+i if i is odd and ˆxm+i ≤ x∗ m+i if i is even.",
                "Moreover, if one inequality is strict, then all subsequent inequalities are strict.",
                "Now, if we can prove ˆxn−1 = x∗ n−1, it would follow that the x∗ i are equal to the ˆxi (which also implies that ˆk = k∗ ).",
                "We consider two cases: Case 1: n − m is even.",
                "We have: n − m even ⇒ n − m − 1 odd ⇒ ˆxn−1 ≥ x∗ n−1.",
                "We also have: n−m even ⇒ nx∗ n−1 = m. Combining these two, we get m = nx∗ n−1 ≤ nˆxn−1 ≤ m ⇒ ˆxn−1 = x∗ n−1.",
                "Case 2: n − m is odd.",
                "In this case, we have ˆxn−1 ≤ x∗ n−1, and nx∗ n−1 = k∗ m. Then, we have: k∗ m ≤ ˆkm ≤ nˆxn−1 ≤ nx∗ n−1 = k∗ m ⇒ ˆxn−1 = x∗ n−1.",
                "This completes the proof of the claim.",
                "It follows that if ˆk, ˆxi, i = m + 1, m + 2, . . . , n − 1 is a feasible solution and ˆk ≥ k∗ , then since all the inequalities in Claim 4 are satisfied, we must have ˆxi = x∗ i and ˆk = k∗ .",
                "Hence no other feasible solution is as good as the one described in the theorem.",
                "Knowing the analytical characterization of the worst-case optimal mechanism provides us with at least two major benefits.",
                "First, using these formulas is computationally more efficient than solving the linear program using a generalpurpose solver.",
                "Second, we can derive the following corollary.",
                "Corollary 1.",
                "If the number of units m is fixed, then as the number of agents n increases, the worst-case percentage redistributed linearly converges to 1, with a rate of convergence 1 2 . (That is, limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 .",
                "That is, in the limit, the percentage that is not redistributed halves for every additional agent.)",
                "We note that this is consistent with the experimental data for the single-unit case, where the worst-case remaining percentage roughly halves each time we add another agent.",
                "The worst-case percentage that is redistributed under the Bailey-Cavallo mechanism also converges to 1 as the number of agents goes to infinity, but the convergence is much slower-it does not converge linearly (that is, letting kC n be the percentage redistributed by the Bailey-Cavallo mechanism in the worst case for n agents, limn→∞ 1−kC n+1 1−kC n = limn→∞ n n+1 = 1).",
                "We now present the proof of the corollary.",
                "Proof.",
                "When the number of agents is n, the worst-case percentage redistributed is k∗ n = 1 − (n−1 m ) Pn−1 j=m (n−1 j ) .",
                "When the number of agents is n + 1, the percentage becomes k∗ n+1 = 1 − (n m) Pn j=m (n j ) .",
                "For n sufficiently large, we will have 2n − mnm−1 > 0, and hence 1−k∗ n+1 1−k∗ n = (n m) Pn−1 j=m (n−1 j ) (n−1 m ) Pn j=m (n j ) = n n−m 2n−1 − Pm−1 j=0 (n−1 j ) 2n− Pm−1 j=0 (n j ) , and n n−m 2n−1 −m(n−1)m−1 2n ≤ 1−k∗ n+1 1−k∗ n ≤ n n−m 2n−1 2n−mnm−1 (because `n j ´ ≤ ni if j ≤ i).",
                "Since we have limn→∞ n n−m 2n−1 −m(n−1)m−1 2n = 1 2 , and limn→∞ n n−m 2n−1 2n−mnm−1 = 1 2 , it follows that limn→∞ 1−k∗ n+1 1−k∗ n = 1 2 . 36 8.",
                "WORST-CASE OPTIMALITY OUTSIDE THE FAMILY In this section, we prove that the worst-case optimal redistribution mechanism among linear VCG redistribution mechanisms is in fact optimal (in the worst case) among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "Thus, restricting our attention to linear VCG redistribution mechanisms did not come at a loss.",
                "To prove this theorem, we need the following lemma.",
                "This lemma is not new: it was informally stated by Cavallo [3].",
                "For completeness, we present it here with a detailed proof.",
                "Lemma 2.",
                "A VCG redistribution mechanism is deterministic, anonymous and strategy-proof if and only if there exists a function f : Rn−1 → R, so that the redistribution payment zi received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "Proof.",
                "First, let us prove the only if direction, that is, if a VCG redistribution mechanism is deterministic, anonymous and strategy-proof then there exists a deterministic function f : Rn−1 → R, which makes zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "If a VCG redistribution mechanism is deterministic and anonymous, then for any bid vector ˆv1 ≥ ˆv2 ≥ . . . ≥ ˆvn, the mechanism outputs a unique redistribution payment list: z1, z2, . . . , zn.",
                "Let G : Rn → Rn be the function that maps ˆv1, ˆv2, . . . , ˆvn to z1, z2, . . . , zn for all bid vectors.",
                "Let H(i, x1, x2, . . . , xn) be the ith element of G(x1, x2, . . . , xn), so that zi = H(i, ˆv1, ˆv2, . . . , ˆvn) for all bid vectors and all 1 ≤ i ≤ n. Because the mechanism is anonymous, two agents should receive the same redistribution payment if their bids are the same.",
                "So, if ˆvi = ˆvj, H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Hence, if we let j = min{t|ˆvt = ˆvi}, then H(i, ˆv1, ˆv2, . . . , ˆvn) = H(j, ˆv1, ˆv2, . . . , ˆvn).",
                "Let us define K : Rn → N × Rn as follows: K(y, x1, x2, . . . , xn−1) = [j, w1, w2, . . . , wn], where w1, w2, . . . , wn are y, x1, x2, . . . , xn−1 sorted in descending order, and j = min{t|wt = y}. ({t|wt = y} = ∅ because y ∈ {w1, w2, . . . , wn}).",
                "Also let us define F : Rn → R by F(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H ◦ K(ˆvi, ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) = H(min{t|ˆvt = ˆvi}, ˆv1, ˆv2, . . . , ˆvn) = H(i, ˆv1, ˆv2, . . . , ˆvn) = zi.",
                "That is, F is the redistribution payment to an agent that bids ˆvi when the other bids are ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn.",
                "Since our mechanism is required to be strategy-proof, and the space of valuations is unrestricted, zi should be independent of ˆvi by Lemma 1 in Cavallo [3].",
                "Hence, we can simply ignore the first variable input to F; let f(x1, x2, . . . , xn−1) = F(0, x1, x2, . . . , xn−1).",
                "So, we have for all bid vectors and i, zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn).",
                "This completes the proof for the only if direction.",
                "For the if direction, if the redistribution payment received by ai satisfies zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all bid vectors and i, then this is clearly a deterministic and anonymous mechanism.",
                "To prove strategy-proofness, we observe that because an agents redistribution payment is not affected by her own bid, her incentives are the same as in the VCG mechanism, which is strategy-proof.",
                "Now we are ready to introduce the next theorem: Theorem 2.",
                "For any m and n with n ≥ m+2, the worstcase optimal mechanism among the family of linear VCG redistribution mechanisms is worst-case optimal among all mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "While we needed individual rationality earlier in the paper, this theorem does not mention it, that is, we can not find a mechanism with better worst-case performance even if we sacrifice individual rationality. (The worst-case optimal linear VCG redistribution mechanism is of course individually rational.)",
                "Proof.",
                "Suppose there is a redistribution mechanism (when the number of units is m and the number of agents is n) that satisfies all of the above properties and has a better worstcase performance than the worst-case optimal linear VCG redistribution mechanism, that is, its worst-case redistribution percentage ˆk is strictly greater than k∗ .",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We first prove that f has the following properties.",
                "Claim 5. f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Proof of claim.",
                "We assumed that for this mechanism, the worst-case redistribution percentage satisfies ˆk > k∗ ≥ 0.",
                "If the total VCG payment is x, the total redistribution payment should be in [ˆkx, x] (non-deficit criterion).",
                "Consider the case where all agents bid 0, so that the total VCG payment is also 0.",
                "Hence, the total redistribution payment should be in [ˆk · 0, 0]-that is, it should be 0.",
                "Hence every agents redistribution payment f(0, 0, . . . , 0) must be 0.",
                "Now, let ti = f(1, 1, . . . , 1, 0, 0, . . . , 0) where the number of 1s equals i.",
                "We proved t0 = 0.",
                "If tn−1 = 0, consider the bid vector where everyone bids 1.",
                "The total VCG payment is m and the total redistribution payment is nf(1, 1, . . . , 1) = ntn−1 = 0.",
                "This corresponds to 0% redistribution, which is contrary to our assumption that ˆk > k∗ ≥ 0.",
                "Now, consider j = min{i|ti = 0} (which is well-defined because tn−1 = 0).",
                "If j > m, the property is satisfied.",
                "If j ≤ m, consider the bid vector where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "Under this bid vector, the first j agents each get redistribution payment tj−1 = 0, and the remaining n − j agents each get tj.",
                "Thus, the total redistribution payment is (n − j)tj.",
                "Because the total VCG payment for this bid vector is 0, we must have (n − j)tj = 0.",
                "So tj = 0 (j ≤ m < n).",
                "But this is contrary to the definition of j.",
                "Hence f(1, 1, . . . , 1, 0, 0, . . . , 0) = 0 if the number of 1s is less than or equal to m. Claim 6. f satisfies the following inequalities: ˆkm ≤ (n − m − 1)tm+1 ≤ m ˆkm ≤ (m + i)tm+i−1 + (n − m − i)tm+i ≤ m for i = 2, 3, . . . , n − m − 1 ˆkm ≤ ntn−1 ≤ m Here ti is defined as in the proof of Claim 5. 37 Proof of claim.",
                "For j = m + 1, . . . , n, consider the bid vectors where ˆvi = 1 for i ≤ j and ˆvi = 0 for all other i.",
                "These bid vectors together with the non-deficit constraint and worst-case constraint produce the above set of inequalities: for example, when j = m + 1, we consider the bid vector ˆvi = 1 for i ≤ m + 1 and ˆvi = 0 for all other i.",
                "The first m+1 agents each receive a redistribution payment of tm = 0, and all other agents each receive tm+1.",
                "Thus, the total VCG redistribution is (n − m − 1)tm+1.",
                "The nondeficit constraint gives (n − m − 1)tm+1 ≤ m (because the total VCG payment is m).",
                "The worst-case constraint gives (n − m − 1)tm+1 ≥ ˆkm.",
                "Combining these two, we get the first inequality.",
                "The other inequalities can be obtained in the same way.",
                "We now observe that the inequalities in Claim 6, together with ˆk ≥ k∗ , are the same as those in Claim 4 (where the ti are replaced by the ˆxi).",
                "Thus, we can conclude that ˆk = k∗ , which is contrary to our assumption ˆk > k∗ .",
                "Hence no mechanism satisfying all the listed properties has a redistribution percentage greater than k∗ in the worst case.",
                "So far we have only talked about the case where n ≥ m+2.",
                "For the purpose of completeness, we provide the following claim for the n = m + 1 case.",
                "Claim 7.",
                "For any m and n with n = m + 1, the original VCG mechanism (that is, redistributing nothing) is (uniquely) worst-case optimal among all redistribution mechanisms that are deterministic, anonymous, strategy-proof, efficient and satisfy the non-deficit constraint.",
                "We recall that when n = m+1, Claim 1 tells us that the only mechanism inside the family of linear redistribution mechanisms is the original VCG mechanism, so that this mechanism is automatically worst-case optimal inside this family.",
                "However, to prove the above claim, we need to show that it is worst-case optimal among all redistribution mechanisms that have the desired properties.",
                "Proof.",
                "Suppose a redistribution mechanism exists that satisfies all of the above properties and has a worst-case performance as good as the original VCG mechanism, that is, its worst-case redistribution percentage is greater than or equal to 0.",
                "This implies that the total redistribution payment of this mechanism is always nonnegative.",
                "By Lemma 2, for this mechanism, there is a function f : Rn−1 → R so that zi = f(ˆv1, ˆv2, . . . , ˆvi−1, ˆvi+1, . . . , ˆvn) for all i and all bid vectors.",
                "We will prove that f(x1, x2, . . . , xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−1 ≥ 0.",
                "First, consider the bid vector where ˆvi = 0 for all i.",
                "Here, each agent receives a redistribution payment f(0, 0, . . . , 0).",
                "The total redistribution payment is then nf(0, 0, . . . , 0), which should be both greater than or equal to 0 (by the above observation) as well less than or equal to 0 (using the nondeficit criterion and the fact that the total VCG payment is 0).",
                "It follows that f(0, 0, . . . , 0) = 0.",
                "Now, let us consider the bid vector where ˆv1 = x1 ≥ 0 and ˆvi = 0 for all other i.",
                "For this bid vector, the agent with the highest bid receives a redistribution payment of f(0, 0, . . . , 0) = 0, and the other n − 1 agents each receive f(x1, 0, . . . , 0).",
                "By the same reasoning as above, the total redistribution payment should be both greater than or equal to 0 and less than or equal to 0, hence f(x1, 0, . . . , 0) = 0 for all x1 ≥ 0.",
                "Proceeding by induction, let us assume f(x1, x2, . . . , xk, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ 0, for some k < n − 1.",
                "Consider the bid vector where ˆvi = xi for i ≤ k + 1, and ˆvi = 0 for all other i, where the xi are arbitrary numbers satisfying x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "For the agents with the highest k + 1 bids, their redistribution payment is specified by f acting on an input with only k non-zero variables.",
                "Hence they all receive 0 by induction assumption.",
                "The other n − k − 1 agents each receive f(x1, x2, . . . , xk, xk+1, 0, . . . , 0).",
                "The total redistribution payment is then (n−k−1)f(x1, x2, . . . , xk, xk+1, 0, . . . , 0), which should be both greater than or equal to 0, and less than or equal to the total VCG payment.",
                "Now, in this bid vector, the lowest bid is 0 because k + 1 < n. But since n = m + 1, the total VCG payment is mˆvn = 0.",
                "So we have f(x1, x2, . . . , xk, xk+1, 0, . . . , 0) = 0 for all x1 ≥ x2 ≥ . . . ≥ xk ≥ xk+1 ≥ 0.",
                "By induction, this statement holds for all k < n − 1; when k + 1 = n − 1, we have f(x1, x2, . . . , xn−2, xn−1) = 0 for all x1 ≥ x2 ≥ . . . ≥ xn−2 ≥ xn−1 ≥ 0.",
                "Hence, in this mechanism, the redistribution payment is always 0; that is, the mechanism is just the original VCG mechanism.",
                "Incidentally, we obtain the following corollary: Corollary 2.",
                "No VCG redistribution mechanism satisfies all of the following: determinism, anonymity, strategyproofness, efficiency, and (strong) budget balance.",
                "This holds for any n ≥ m + 1.",
                "Proof.",
                "For the case n ≥ m + 2: If such a mechanism exists, its worst-case performance would be better than that of the worst-case optimal linear VCG redistribution mechanism, which by Theorem 1 obtains a redistribution percentage strictly less than 1.",
                "But Theorem 2 shows that it is impossible to outperform this mechanism in the worst case.",
                "For the case n = m + 1: If such a mechanism exists, it would perform as well as the original VCG mechanism in the worst case, which implies that it is identical to the VCG mechanism by Claim 7.",
                "But the VCG mechanism is not (strongly) budget balanced. 9.",
                "CONCLUSIONS For allocation problems with one or more items, the wellknown Vickrey-Clarke-Groves (VCG) mechanism is efficient, strategy-proof, individually rational, and does not incur a deficit.",
                "However, the VCG mechanism is not (strongly) budget balanced: generally, the agents payments will sum to more than 0.",
                "If there is an auctioneer who is selling the items, this may be desirable, because the surplus payment corresponds to revenue for the auctioneer.",
                "However, if the items do not have an owner and the agents are merely interested in allocating the items efficiently among themselves, any surplus payment is undesirable, because it will have to flow out of the system of agents.",
                "In 2006, Cavallo [3] proposed a mechanism that redistributes some of the VCG payment back to the agents, while maintaining efficiency, strategy-proofness, individual rationality, and the non-deficit property.",
                "In this paper, we extended this result in a restricted setting.",
                "We studied allocation settings where there are multiple indistinguishable units of a single good, and agents have unit demand. (For this specific setting, Cavallos mechanism coincides with a mechanism proposed by Bailey in 1997 [2].)",
                "Here we proposed a family of mechanisms that redistribute some of the VCG payment 38 back to the agents.",
                "All mechanisms in the family are efficient, strategy-proof, individually rational, and never incur a deficit.",
                "The family includes the Bailey-Cavallo mechanism as a special case.",
                "We then provided an optimization model for finding the optimal mechanism-that is, the mechanism that maximizes redistribution in the worst case-inside the family, and showed how to cast this model as a linear program.",
                "We gave both numerical and analytical solutions of this linear program, and the (unique) resulting mechanism shows significant improvement over the Bailey-Cavallo mechanism (in the worst case).",
                "Finally, we proved that the obtained mechanism is optimal among all anonymous deterministic mechanisms that satisfy the above properties.",
                "One important direction for future research is to try to extend these results beyond multi-unit auctions with unit demand.",
                "However, it turns out that in sufficiently general settings, the worst-case optimal redistribution percentage is 0.",
                "In such settings, the worst-case criterion provides no guidance in determining a good redistribution mechanism (even redistributing nothing achieves the optimal worst-case percentage), so it becomes necessary to pursue other criteria.",
                "Alternatively, one can try to identify other special settings in which positive redistribution in the worst case is possible.",
                "Another direction for future research is to consider whether this mechanism has applications to collusion.",
                "For example, in a typical collusive scheme, there is a bidding ring consisting of a number of colluders, who submit only a single bid [10, 17].",
                "If this bid wins, the colluders must allocate the item amongst themselves, perhaps using payments-but of course they do not want payments to flow out of the ring.",
                "This work is part of a growing literature on designing mechanisms that obtain good results in the worst case.",
                "Traditionally, economists have mostly focused either on designing mechanisms that always obtain certain properties (such as the VCG mechanism), or on designing mechanisms that are optimal with respect to some prior distribution over the agents preferences (such as the Myerson auction [20] and the Maskin-Riley auction [18] for maximizing expected revenue).",
                "Some more recent papers have focused on designing mechanisms for profit maximization using worst-case competitive analysis (e.g. [9, 1, 15, 8]).",
                "There has also been growing interest in the design of online mechanisms [7] where the agents arrive over time and decisions must be taken before all the agents have arrived.",
                "Such work often also takes a worst-case competitive analysis approach [14, 13].",
                "It does not appear that there are direct connections between our work and these other works that focus on designing mechanisms that perform well in the worst case.",
                "Nevertheless, it seems likely that future research will continue to investigate mechanism design for the worst case, and hopefully a coherent framework will emerge. 10.",
                "REFERENCES [1] G. Aggarwal, A. Fiat, A. Goldberg, J. Hartline, N. Immorlica, and M. Sudan.",
                "Derandomization of auctions.",
                "STOC, 619-625, 2005. [2] M. J. Bailey.",
                "The demand revealing process: to distribute the surplus.",
                "Public Choice, 91:107-126, 1997. [3] R. Cavallo.",
                "Optimal decision-making with minimal waste: Strategyproof redistribution of VCG payments.",
                "AAMAS, 882-889, 2006. [4] E. H. Clarke.",
                "Multipart pricing of public goods.",
                "Public Choice, 11:17-33, 1971. [5] B. Faltings.",
                "A budget-balanced, incentive-compatible scheme for social choice.",
                "AMEC, 30-43, 2005. [6] J. Feigenbaum, C. Papadimitriou, and S. Shenker.",
                "Sharing the cost of muliticast transmissions.",
                "JCSS, 63:21-41, 2001. [7] E. Friedman and D. Parkes.",
                "Pricing WiFi at Starbucks - Issues in online mechanism design.",
                "EC, 240-241, 2003. [8] A. Goldberg, J. Hartline, A. Karlin, M. Saks, and A. Wright.",
                "Competitive auctions.",
                "Games and Economic Behavior, 2006. [9] A. Goldberg, J. Hartline, and A. Wright.",
                "Competitive auctions and digital goods.",
                "SODA, 735-744, 2001. [10] D. A. Graham and R. C. Marshall.",
                "Collusive bidder behavior at single-object second-price and English auctions.",
                "Journal of Political Economy, 95(6):1217-1239, 1987. [11] J.",
                "Green and J.-J.",
                "Laffont.",
                "Characterization of satisfactory mechanisms for the revelation of preferences for public goods.",
                "Econometrica, 45:427-438, 1977. [12] T. Groves.",
                "Incentives in teams.",
                "Econometrica, 41:617-631, 1973. [13] M. T. Hajiaghayi, R. Kleinberg, M. Mahdian, and D. C. Parkes.",
                "Online auctions with re-usable goods.",
                "EC, 165-174, 2005. [14] M. T. Hajiaghayi, R. Kleinberg, and D. C. Parkes.",
                "Adaptive limited-supply online auctions.",
                "EC, 71-80, 2004. [15] J. Hartline and R. McGrew.",
                "From optimal limited to unlimited supply auctions.",
                "EC, 175-182, 2005. [16] L. Hurwicz.",
                "On the existence of allocation systems whose manipulative Nash equilibria are Pareto optimal, 1975.",
                "Presented at the 3rd World Congress of the Econometric Society. [17] K. Leyton-Brown, Y. Shoham, and M. Tennenholtz.",
                "Bidding clubs in first-price auctions.",
                "AAAI, 373-378, 2002. [18] E. Maskin and J. Riley.",
                "Optimal multi-unit auctions.",
                "In F. Hahn, editor, The Economics of Missing Markets, Information, and Games, chapter 14, 312-335.",
                "Clarendon Press, Oxford, 1989. [19] H. Moulin.",
                "Efficient and strategy-proof assignment with a cheap residual claimant.",
                "Working paper, March 2007. [20] R. Myerson.",
                "Optimal auction design.",
                "Mathematics of Operations Research, 6:58-73, 1981. [21] R. Myerson and M. Satterthwaite.",
                "Efficient mechanisms for bilateral trading.",
                "Journal of Economic Theory, 28:265-281, 1983. [22] D. Parkes, J. Kalagnanam, and M. Eso.",
                "Achieving budget-balance with Vickrey-based payment schemes in exchanges.",
                "IJCAI, 1161-1168, 2001. [23] W. Vickrey.",
                "Counterspeculation, auctions, and competitive sealed tenders.",
                "Journal of Finance, 16:8-37, 1961. 39"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        }
    }
}