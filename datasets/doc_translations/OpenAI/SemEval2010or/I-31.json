{
    "id": "I-31",
    "original_text": "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB. 7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions. The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set. As a special case, judgment aggregation can be seen to subsume classical preference aggregation. We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules. We present a sound and complete axiomatisation of such rules. We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic. The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation. Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1. INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc. For example, an agent may need to reason about majority voting in a group he is a member of. Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2]. The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae. A variety of judgment aggregation rules have been developed to this end. As a special case, judgment aggregation can be seen to subsume preference aggregation [5]. In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation. The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules. The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics. For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well. And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular. Of course, a logic is only interesting as long as it is expressive. One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation? An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem. In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively. From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations. From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic). Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem. This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice. The structure of the rest of the paper is as follows. In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions. In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem. Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules. In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox. We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite. As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions. We obtain a sound and complete axiomatisation of the logic for preference aggregation as well. Sections 7 and 8 discusses related work and concludes. 2. JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives. Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L). We require that the language has negation and material implication, with the usual semantics. We will sometimes refer to L as the underlying logic. An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A. We sometimes call a member of A an agenda item. A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation. An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda. The idea here is that a judgment set Ai represents the choices from A made by agent i. Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation. An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A. When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ. A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L). Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents. Of course, such a rule should to a certain extent be fair. Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions. An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences. The most well known result about SWFs is Arrows theorem [1]. Many variants of the theorem appear in the literature, differing in assumptions about the preference relations. In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives. This gives one of the simplest formulations of Arrows theorem (Theorem 1 below). Cf., e.g., [2] for a discussion and more general formulations. Formally, let K be a set of alternatives. We henceforth implicitly assume that there are always at least two alternatives. A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R). We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K). Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K). For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different. Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b. A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i. A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation. The class of all SWFs over alternatives K is denoted F (K). Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives. Theorem 1 (Arrow). If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3. JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A. The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π. This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item. We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives. We now define the formal semantics of L(Σ, A). A model wrt. L(Σ, A) and underlying logic L is a judgment aggregation rule f over A. Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A. A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A. A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ. Example 1. A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q). One possible voting scenario is illustrated in the left part of Table 1. In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown. This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic. The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ. Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items. Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property. Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ). The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 . Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes. Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic. Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view. Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets. A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs. But how are we to represent such a rule? The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}. However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice. If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose. However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size. So, what is a more realistic representation for JARs? Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ). There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set. The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 . With such a representation, we can investigate the complexity of our model checking problem. In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators. With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda. It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339]. In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda). The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429]. Theorem 2. The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators. Proof. For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable. As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements. However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability). An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on. Thus the result of each equation depends on the value of the previous one. The goal is to determine whether zk is true. To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.) The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations. We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1. Given a variable xi, define x∗ i to be (hxi ∧1). If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly. Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise. And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance. The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules. An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid? Here, in order to illustrate the logic, we discuss some of these logical properties. In Section 5 we give a complete axiomatisation of all of them. Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ. Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function. Let denote exclusive or. We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it. In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles. Note that this means that some jal formula might be valid under one underlying logic, while not under another. For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic. One such agenda and underlying logic will be discussed in Section 6. 4. EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1. Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND. Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions. However, we have the following in our logic. Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)). Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication. Proof. Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . .}, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . .}. We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ. In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ. In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ). Since f(γ) is complete, ¬q ∈ f(γ). But that contradicts the fact that f(γ) is required to be consistent. Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5. AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p. L is the underlying logic. The first 5 axioms represent properties of a table and of judgment sets. Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table. Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once. Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true. Axiom CpJS corresponds to the requirement that judgment sets are complete. Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something. The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and . Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable. COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile. Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard. We use JAL(L) to denote derivability in jal(L). Theorem 3. If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ. Proof. Soundness is straightforward. For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows. In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ. It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions. Let D be the set of all maximal consistent sets Δ. We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs. We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. Similarly for R with respect to . Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM). Let Δ0 be a MCS containing ψ. We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp. It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables. Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ. There will be exactly one such p. This defines the p we are looking for. Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true. Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables. We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5. However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold. A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i. So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥). An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6. PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation. In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation. Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai. Thus we can use jal to reason about preference aggregation as follows. Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK . We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives. Example 2. Three agents must decide between going to dinner (d), a movie (m) or a concert (c). Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting. Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example. We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on. Thus, our formulae can be seen as expressing properties of social welfare functions. Example 3. Take the formula (i ↔ σ). When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively. Recall the formulae defined in Section 4. Proposition 2. F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs. Let us now look at properties of the set of alternatives K we can express. Properties involving cardinality is often of interest, for example in Arrows theorem. Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3. Let F ∈ F (K). |K| > 2 iff F |=swf MT2. Proof. For the direction to the left, let F |=swf MT2. Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2. From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements. But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1. For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb. Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2. Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula. It follows from his theorem that the formula is valid on the class of all social welfare functions. Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof. Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF. For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b. Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b. By Proposition 3, K has more than two alternatives. By Arrows theorem, F cannot have all the properties PO, ND2 and IIA. W.l.o.g assume that F does not have the PO property. By Proposition 2, F |=swf PO. Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression. This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume. The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2. The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not). We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs. Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents. Proof. The proof is similar to the proof of the discursive paradox. Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV. Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca). We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X). In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X). But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric. Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives. Corollary 1. If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ. Proof. Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF . So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA). Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs. Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics. One such property is i. While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set. To see the former, take an arbitrary pair of alternatives (a, b). There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK . By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree. A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b. Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon. Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7. RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8]. A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules. While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically. The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other. The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows. In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows. Thus, (at least) the preference aggregation variant of our logic is related to arrow logic. However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper. Nevertheless, the relationship to arrow logic could be investigated further in future work. In particular, arrow logics are usually proven complete wrt. an algebra. This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences. Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8. DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox. We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation. It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 . The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation. Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other. In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9. ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks. Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10. REFERENCES [1] K. J. Arrow. Social Choice and Individual Values. Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds. Handbook of Social Choice and Welfare, volume 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema. Modal Logic. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled. Model Checking. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List. Arrows theorem in judgment aggregation. Social Choice and Welfare, 2006. Forthcoming. [6] C. Lafage and J. Lang. Logical representation of preferences for group decision making. In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470. Morgan Kaufman, 2000. [7] J. Lang. From preference representation to combinatorial vote. Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290. Morgan Kaufmann, 2002. [8] J. Lang. Logical preference representation and combinatorial vote. Ann. Math. Artif. Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Computational Complexity. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizing collective judgment sets in a minimal logical language, 2006. Manuscript. [11] Y. Venema. A crash course in arrow logic. In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34. CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas. Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar. An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula. The Sixth Intl. Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573",
    "original_translation": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre lógica de flechas. En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34. Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas. Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar. Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573",
    "original_sentences": [
        "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
        "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
        "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
        "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
        "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
        "We present a sound and complete axiomatisation of such rules.",
        "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
        "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
        "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
        "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
        "For example, an agent may need to reason about majority voting in a group he is a member of.",
        "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
        "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
        "A variety of judgment aggregation rules have been developed to this end.",
        "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
        "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
        "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
        "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
        "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
        "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
        "Of course, a logic is only interesting as long as it is expressive.",
        "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
        "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
        "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
        "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
        "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
        "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
        "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
        "The structure of the rest of the paper is as follows.",
        "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
        "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
        "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
        "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
        "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
        "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
        "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
        "Sections 7 and 8 discusses related work and concludes. 2.",
        "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
        "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
        "We require that the language has negation and material implication, with the usual semantics.",
        "We will sometimes refer to L as the underlying logic.",
        "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
        "We sometimes call a member of A an agenda item.",
        "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
        "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
        "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
        "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
        "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
        "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
        "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
        "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
        "Of course, such a rule should to a certain extent be fair.",
        "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
        "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
        "The most well known result about SWFs is Arrows theorem [1].",
        "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
        "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
        "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
        "Cf., e.g., [2] for a discussion and more general formulations.",
        "Formally, let K be a set of alternatives.",
        "We henceforth implicitly assume that there are always at least two alternatives.",
        "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
        "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
        "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
        "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
        "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
        "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
        "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
        "The class of all SWFs over alternatives K is denoted F (K).",
        "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
        "Theorem 1 (Arrow).",
        "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
        "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
        "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
        "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
        "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
        "We now define the formal semantics of L(Σ, A).",
        "A model wrt.",
        "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
        "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
        "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
        "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
        "Example 1.",
        "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
        "One possible voting scenario is illustrated in the left part of Table 1.",
        "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
        "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
        "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
        "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
        "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
        "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
        "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
        "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
        "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
        "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
        "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
        "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
        "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
        "But how are we to represent such a rule?",
        "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
        "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
        "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
        "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
        "So, what is a more realistic representation for JARs?",
        "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
        "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
        "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
        "With such a representation, we can investigate the complexity of our model checking problem.",
        "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
        "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
        "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
        "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
        "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
        "Theorem 2.",
        "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
        "Proof.",
        "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
        "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
        "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
        "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
        "Thus the result of each equation depends on the value of the previous one.",
        "The goal is to determine whether zk is true.",
        "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
        "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
        "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
        "Given a variable xi, define x∗ i to be (hxi ∧1).",
        "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
        "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
        "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
        "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
        "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
        "Here, in order to illustrate the logic, we discuss some of these logical properties.",
        "In Section 5 we give a complete axiomatisation of all of them.",
        "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
        "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
        "Let denote exclusive or.",
        "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
        "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
        "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
        "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
        "One such agenda and underlying logic will be discussed in Section 6. 4.",
        "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
        "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
        "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
        "However, we have the following in our logic.",
        "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
        "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
        "Proof.",
        "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
        "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
        "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
        "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
        "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
        "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
        "Since f(γ) is complete, ¬q ∈ f(γ).",
        "But that contradicts the fact that f(γ) is required to be consistent.",
        "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
        "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
        "L is the underlying logic.",
        "The first 5 axioms represent properties of a table and of judgment sets.",
        "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
        "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
        "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
        "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
        "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
        "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
        "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
        "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
        "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
        "We use JAL(L) to denote derivability in jal(L).",
        "Theorem 3.",
        "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
        "Proof.",
        "Soundness is straightforward.",
        "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
        "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
        "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
        "Let D be the set of all maximal consistent sets Δ.",
        "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
        "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
        "Similarly for R with respect to .",
        "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
        "Let Δ0 be a MCS containing ψ.",
        "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
        "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
        "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
        "There will be exactly one such p. This defines the p we are looking for.",
        "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
        "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
        "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
        "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
        "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
        "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
        "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
        "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
        "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
        "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
        "Thus we can use jal to reason about preference aggregation as follows.",
        "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
        "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
        "Example 2.",
        "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
        "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
        "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
        "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
        "Thus, our formulae can be seen as expressing properties of social welfare functions.",
        "Example 3.",
        "Take the formula (i ↔ σ).",
        "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
        "Recall the formulae defined in Section 4.",
        "Proposition 2.",
        "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
        "Let us now look at properties of the set of alternatives K we can express.",
        "Properties involving cardinality is often of interest, for example in Arrows theorem.",
        "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
        "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
        "Proof.",
        "For the direction to the left, let F |=swf MT2.",
        "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
        "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
        "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
        "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
        "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
        "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
        "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
        "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
        "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
        "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
        "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
        "By Proposition 3, K has more than two alternatives.",
        "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
        "W.l.o.g assume that F does not have the PO property.",
        "By Proposition 2, F |=swf PO.",
        "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
        "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
        "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
        "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
        "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
        "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
        "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
        "Proof.",
        "The proof is similar to the proof of the discursive paradox.",
        "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
        "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
        "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
        "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
        "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
        "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
        "Corollary 1.",
        "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
        "Proof.",
        "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
        "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
        "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
        "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
        "One such property is i.",
        "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
        "To see the former, take an arbitrary pair of alternatives (a, b).",
        "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
        "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
        "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
        "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
        "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
        "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
        "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
        "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
        "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
        "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
        "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
        "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
        "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
        "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
        "In particular, arrow logics are usually proven complete wrt. an algebra.",
        "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
        "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
        "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
        "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
        "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
        "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
        "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
        "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
        "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
        "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
        "REFERENCES [1] K. J. Arrow.",
        "Social Choice and Individual Values.",
        "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
        "Handbook of Social Choice and Welfare, volume 1.",
        "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
        "Modal Logic.",
        "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
        "Model Checking.",
        "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
        "Arrows theorem in judgment aggregation.",
        "Social Choice and Welfare, 2006.",
        "Forthcoming. [6] C. Lafage and J. Lang.",
        "Logical representation of preferences for group decision making.",
        "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
        "Morgan Kaufman, 2000. [7] J. Lang.",
        "From preference representation to combinatorial vote.",
        "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
        "Morgan Kaufmann, 2002. [8] J. Lang.",
        "Logical preference representation and combinatorial vote.",
        "Ann.",
        "Math.",
        "Artif.",
        "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
        "Computational Complexity.",
        "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
        "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
        "Manuscript. [11] Y. Venema.",
        "A crash course in arrow logic.",
        "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
        "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
        "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
        "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
        "The Sixth Intl.",
        "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
    ],
    "translated_text_sentences": [
        "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB.",
        "Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones.",
        "El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente.",
        "Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica.",
        "Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios.",
        "Presentamos una axiomatización sólida y completa de dichas reglas.",
        "Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica.",
        "La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica.",
        "Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1.",
        "En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc.",
        "Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro.",
        "La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social.",
        "El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas.",
        "Se han desarrollado una variedad de reglas de agregación de juicios con este fin.",
        "Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5].",
        "En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios.",
        "Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas.",
        "La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes.",
        "Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también.",
        "Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias.",
        "Por supuesto, una lógica solo es interesante mientras sea expresiva.",
        "Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios?",
        "El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow.",
        "Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente.",
        "A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia.",
        "A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar).",
        "Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow.",
        "Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social.",
        "La estructura del resto del documento es la siguiente.",
        "En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social.",
        "En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo.",
        "Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios.",
        "En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo.",
        "Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita.",
        "Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social.",
        "Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también.",
        "Las secciones 7 y 8 discuten el trabajo relacionado y concluyen.",
        "La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas.",
        "Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L).",
        "Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual.",
        "A veces nos referiremos a L como la lógica subyacente.",
        "Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A.",
        "A veces llamamos a un miembro de A un punto del orden del día.",
        "Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación.",
        "Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda.",
        "La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i.",
        "Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación.",
        "Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A.",
        "Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ.",
        "Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L).",
        "Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales.",
        "Por supuesto, tal regla debería ser justa hasta cierto punto.",
        "Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad.",
        "Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas.",
        "El resultado más conocido sobre las SWFs es el teorema de Arrow [1].",
        "Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia.",
        "En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas.",
        "Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación).",
        "Cf., por ejemplo, [2] para una discusión y formulaciones más generales.",
        "Formalmente, sea K un conjunto de alternativas.",
        "Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas.",
        "Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R).",
        "A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K).",
        "Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K).",
        "Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes.",
        "Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b.",
        "Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i.",
        "Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas.",
        "La clase de todas las SWFs sobre las alternativas K se denota F(K).",
        "Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional.",
        "La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas.",
        "Teorema 1 (Flecha).",
        "Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3.",
        "La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A.",
        "Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π.",
        "Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda.",
        "Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas.",
        "Ahora definimos la semántica formal de L(Σ, A).",
        "Un modelo con respecto a.",
        "L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A.",
        "Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A.",
        "Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A.",
        "Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ.",
        "Ejemplo 1.",
        "Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q).",
        "Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1.",
        "En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados.",
        "Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional.",
        "Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
        "Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ.",
        "Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día.",
        "Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad.",
        "Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ).",
        "La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje.",
        "Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles.",
        "Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios.",
        "De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional.",
        "Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes.",
        "Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas.",
        "¿Pero cómo representaremos tal regla?",
        "La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}.",
        "Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica.",
        "Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito.",
        "Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial.",
        "Entonces, ¿cuál es una representación más realista para los JARs?",
        "Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ).",
        "Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante.",
        "El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica.",
        "Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo.",
        "En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales.",
        "En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda.",
        "Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339].",
        "Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda).",
        "El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429].",
        "Teorema 2.",
        "El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o.",
        "Prueba.",
        "Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible.",
        "Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos.",
        "Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad).",
        "Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente.",
        "Por lo tanto, el resultado de cada ecuación depende del valor de la anterior.",
        "El objetivo es determinar si zk es verdadero.",
        "Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente).",
        "Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones.",
        "Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1.",
        "Dada una variable xi, define x∗ i como (hxi ∧1).",
        "Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar.",
        "Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso.",
        "Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat.",
        "La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios.",
        "Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas?",
        "Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas.",
        "En la Sección 5 damos una axiomatización completa de todos ellos.",
        "Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ.",
        "Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación.",
        "Permitamos que denote la operación lógica de o exclusivo.",
        "Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto.",
        "De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo.",
        "El Sexto Internacional.",
        "La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes.",
        "Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra.",
        "Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente.",
        "Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4.",
        "EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1.",
        "La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND.",
        "La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones.",
        "Sin embargo, tenemos lo siguiente en nuestra lógica.",
        "Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)).",
        "Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material.",
        "Prueba.",
        "Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
        "Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }.",
        "Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
        "Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ.",
        "De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ.",
        "En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ).",
        "Dado que f(γ) es completo, ¬q ∈ f(γ).",
        "Pero eso contradice el hecho de que f(γ) debe ser coherente.",
        "La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5.",
        "AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p.",
        "L es la lógica subyacente.",
        "Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios.",
        "El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa.",
        "Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez.",
        "Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero.",
        "El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos.",
        "Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo.",
        "Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y.",
        "El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable.",
        "COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios.",
        "El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar.",
        "Usamos JAL(L) para denotar la derivabilidad en jal(L).",
        "Teorema 3.",
        "Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ.",
        "Prueba.",
        "La solidez es directa.",
        "Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl.",
        "La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera.",
        "De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ.",
        "Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas.",
        "Sea D el conjunto de todos los conjuntos Δ maximales consistentes.",
        "No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs.",
        "Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
        "De manera similar para R con respecto a .",
        "Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM).",
        "Que Δ0 sea un MCS que contiene a ψ.",
        "Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp.",
        "Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas.",
        "Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ.",
        "Habrá exactamente un p así. Esto define el p que estamos buscando.",
        "Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero.",
        "Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas.",
        "Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5.",
        "Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple.",
        "Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i.",
        "Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥).",
        "Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6.",
        "AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios.",
        "En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias.",
        "Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai.",
        "Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera.",
        "Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK.",
        "Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas.",
        "Ejemplo 2.",
        "Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c).",
        "Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares.",
        "Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo.",
        "Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente.",
        "Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social.",
        "Ejemplo 3.",
        "Toma la fórmula (i ↔ σ).",
        "Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente.",
        "Recuerde las fórmulas definidas en la Sección 4.",
        "Proposición 2.",
        "F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs.",
        "Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar.",
        "Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow.",
        "Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3.",
        "Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2.",
        "Prueba.",
        "Para la dirección hacia la izquierda, permita que F |=swf MT2.",
        "Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2.",
        "De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes.",
        "Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1.",
        "Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb.",
        "Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2.",
        "Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula.",
        "Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social.",
        "Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración.",
        "Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF.",
        "Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b.",
        "Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b.",
        "Por la Proposición 3, K tiene más de dos alternativas.",
        "Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA.",
        "Sin pérdida de generalidad, asumir que F no tiene la propiedad PO.",
        "Por la Proposición 2, F |=swf PO.",
        "Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
        "Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión.",
        "Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos.",
        "La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2.",
        "La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son).",
        "Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs).",
        "Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes.",
        "Prueba.",
        "La prueba es similar a la prueba de la paradoja discursiva.",
        "Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV.",
        "Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca).",
        "Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X).",
        "De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X).",
        "Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica.",
        "Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas.",
        "Corolario 1.",
        "Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ.",
        "Prueba.",
        "Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF.",
        "Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA).",
        "Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS.",
        "Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes.",
        "Una de esas propiedades es i.",
        "Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios.",
        "Para ver lo anterior, toma un par arbitrario de alternativas (a, b).",
        "Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK.",
        "Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo.",
        "Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b.",
        "Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo.",
        "Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7.",
        "Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8].",
        "Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios.",
        "Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente.",
        "Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra.",
        "La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas.",
        "En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas.",
        "Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow.",
        "Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento.",
        "Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros.",
        "En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra.",
        "Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas.",
        "Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8.",
        "DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet.",
        "Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios.",
        "Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente.",
        "La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica.",
        "Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro.",
        "En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9.",
        "AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones.",
        "El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega.",
        "REFERENCIAS [1] K. J. Arrow.",
        "Elección social y valores individuales.",
        "Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds.",
        "Manual de Elección Social y Bienestar, volumen 1.",
        "North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema.",
        "Lógica modal.",
        "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled.",
        "Verificación de modelos.",
        "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List.",
        "El teorema de Arrow en la agregación de juicios.",
        "Elección Social y Bienestar, 2006.",
        "Próximamente. [6] C. Lafage y J. Lang.",
        "Representación lógica de preferencias para la toma de decisiones en grupo.",
        "En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470.",
        "Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang.",
        "De la representación de preferencias a la votación combinatoria.",
        "Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290.",
        "Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang.",
        "Representación de preferencias lógicas y voto combinatorio.",
        "Ana.",
        "Matemáticas.",
        "I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish?",
        "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
        "Complejidad computacional.",
        "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
        "Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006.",
        "Manuscrito. [11] Y. Venema.",
        "Un curso intensivo sobre lógica de flechas.",
        "En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34.",
        "Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas.",
        "Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar.",
        "Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica.",
        "El Sexto Internacional.",
        "Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573"
    ],
    "error_count": 6,
    "keys": {
        "knowledge representation formalism": {
            "translated_key": "formalismos de representación del conocimiento",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in <br>knowledge representation formalism</br>s for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "INTRODUCTION In this paper, we are interested in <br>knowledge representation formalism</br>s for systems in which agents need to aggregate their preferences, judgments, beliefs, etc."
            ],
            "translated_annotated_samples": [
                "En este artículo, nos interesa los <br>formalismos de representación del conocimiento</br> para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los <br>formalismos de representación del conocimiento</br> para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre lógica de flechas. En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34. Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas. Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar. Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "social welfare function": {
            "translated_key": "función de bienestar social",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A <br>social welfare function</br> (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a <br>social welfare function</br>, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "A <br>social welfare function</br> (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "When this formula is interpreted as a statement about a <br>social welfare function</br>, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively."
            ],
            "translated_annotated_samples": [
                "Una <br>función de bienestar social</br> (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas.",
                "Cuando esta fórmula se interpreta como una afirmación sobre una <br>función de bienestar social</br>, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una <br>función de bienestar social</br> (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una <br>función de bienestar social</br>, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre lógica de flechas. En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34. Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas. Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar. Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "complete axiomatisation": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and <br>complete axiomatisation</br> of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and <br>complete axiomatisation</br> of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and <br>complete axiomatisation</br> of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and <br>complete axiomatisation</br> of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a <br>complete axiomatisation</br> of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and <br>complete axiomatisation</br> of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "We present a sound and <br>complete axiomatisation</br> of such rules.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and <br>complete axiomatisation</br> of all such rules.",
                "We give a sound and <br>complete axiomatisation</br> of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "We obtain a sound and <br>complete axiomatisation</br> of the logic for preference aggregation as well.",
                "In Section 5 we give a <br>complete axiomatisation</br> of all of them."
            ],
            "translated_annotated_samples": [
                "Presentamos una <br>axiomatización sólida y completa</br> de dichas reglas.",
                "Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una <br>axiomatización sólida y completa</br> de todas esas reglas.",
                "Proporcionamos una <br>axiomatización sólida y completa</br> de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita.",
                "Obtenemos una <br>axiomatización sólida y completa</br> de la lógica para la agregación de preferencias también.",
                "En la Sección 5 damos una <br>axiomatización completa</br> de todos ellos."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una <br>axiomatización sólida y completa</br> de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una <br>axiomatización sólida y completa</br> de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una <br>axiomatización sólida y completa</br> de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una <br>axiomatización sólida y completa</br> de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una <br>axiomatización completa</br> de todos ellos. ",
            "candidates": [],
            "error": [
                [
                    "axiomatización sólida y completa",
                    "axiomatización sólida y completa",
                    "axiomatización sólida y completa",
                    "axiomatización sólida y completa",
                    "axiomatización completa"
                ]
            ]
        },
        "syntax and semantics of jal": {
            "translated_key": "sintaxis y semántica de jal",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the <br>syntax and semantics of jal</br>, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "In Section 3 we introduce the <br>syntax and semantics of jal</br>, and study the complexity of the model checking problem."
            ],
            "translated_annotated_samples": [
                "En la Sección 3 introducimos la <br>sintaxis y semántica de jal</br>, y estudiamos la complejidad del problema de verificación del modelo."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la <br>sintaxis y semántica de jal</br>, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre lógica de flechas. En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34. Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas. Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar. Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "jal syntax and semantics": {
            "translated_key": "sintaxis y semántica de Jal",
            "is_in_text": false,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [],
            "translated_annotated_samples": [],
            "translated_text": "",
            "candidates": [],
            "error": [
                []
            ]
        },
        "discursive paradox": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the <br>discursive paradox</br>, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the <br>discursive paradox</br> and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the <br>discursive paradox</br>.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The <br>discursive paradox</br> As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (<br>discursive paradox</br>). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the <br>discursive paradox</br> is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the <br>discursive paradox</br> of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the <br>discursive paradox</br>.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the <br>discursive paradox</br>, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the <br>discursive paradox</br>, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the <br>discursive paradox</br> and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the <br>discursive paradox</br>.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The <br>discursive paradox</br> As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "Proposition 1 (<br>discursive paradox</br>). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication."
            ],
            "translated_annotated_samples": [
                "Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el <br>paradoja discursiva</br>, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica.",
                "El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la <br>paradoja discursiva</br> y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow.",
                "En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el <br>paradigma discursivo</br>.",
                "La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La <br>Paradoja Discursiva</br> Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones.",
                "Proposición 1 (<br>Paradoja discursiva</br>). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el <br>paradoja discursiva</br>, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la <br>paradoja discursiva</br> y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el <br>paradigma discursivo</br>. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La <br>Paradoja Discursiva</br> Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (<br>Paradoja discursiva</br>). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. ",
            "candidates": [],
            "error": [
                [
                    "paradoja discursiva",
                    "paradoja discursiva",
                    "paradigma discursivo",
                    "Paradoja Discursiva",
                    "Paradoja discursiva"
                ]
            ]
        },
        "judgment aggregation rule": {
            "translated_key": "regla de agregación de juicios",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A <br>judgment aggregation rule</br> (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a <br>judgment aggregation rule</br> f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the <br>judgment aggregation rule</br> properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a <br>judgment aggregation rule</br> f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the <br>judgment aggregation rule</br>, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "A <br>judgment aggregation rule</br> (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Some possible properties of a <br>judgment aggregation rule</br> f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "Properties of SWFs F corresponding to the <br>judgment aggregation rule</br> properties discussed in Section 2.1 are: The Sixth Intl.",
                "L(Σ, A) and underlying logic L is a <br>judgment aggregation rule</br> f over A.",
                "Specifically, the problem lies in the representation of the <br>judgment aggregation rule</br>, f. Recall that this function maps judgment profiles to complete and consistent judgment sets."
            ],
            "translated_annotated_samples": [
                "Una <br>regla de agregación de juicios</br> (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L).",
                "Algunas posibles propiedades de una <br>regla de agregación de juicios</br> f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad.",
                "Las propiedades de los SWFs F correspondientes a las propiedades de la <br>regla de agregación de juicios</br> discutidas en la Sección 2.1 son: La Sexta Internacional.",
                "L(Σ, A) y la lógica subyacente L es una <br>regla de agregación de juicios</br> f sobre A.",
                "Específicamente, el problema radica en la representación de la <br>regla de agregación de juicios</br>, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una <br>regla de agregación de juicios</br> (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una <br>regla de agregación de juicios</br> f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la <br>regla de agregación de juicios</br> discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una <br>regla de agregación de juicios</br> f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la <br>regla de agregación de juicios</br>, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "arrows theorem": {
            "translated_key": "teorema de Arrow",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, <br>arrows theorem</br> and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as <br>arrows theorem</br>.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and <br>arrows theorem</br>.",
                "This means, for example, that <br>arrows theorem</br> is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is <br>arrows theorem</br> [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of <br>arrows theorem</br> (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) <br>arrows theorem</br> says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in <br>arrows theorem</br>.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By <br>arrows theorem</br>, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, <br>arrows theorem</br> is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, <br>arrows theorem</br> and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "<br>arrows theorem</br> in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of <br>arrows theorem</br> for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, <br>arrows theorem</br> and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as <br>arrows theorem</br>.",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and <br>arrows theorem</br>.",
                "This means, for example, that <br>arrows theorem</br> is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The most well known result about SWFs is <br>arrows theorem</br> [1]."
            ],
            "translated_annotated_samples": [
                "Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el <br>teorema de Arrow</br> y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica.",
                "El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el <br>teorema de Arrow</br>.",
                "Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el <br>teorema de Arrow</br>.",
                "Esto significa, por ejemplo, que el <br>teorema de Arrow</br> es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social.",
                "El resultado más conocido sobre las SWFs es el <br>teorema de Arrow</br> [1]."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el <br>teorema de Arrow</br> y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el <br>teorema de Arrow</br>. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el <br>teorema de Arrow</br>. Esto significa, por ejemplo, que el <br>teorema de Arrow</br> es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el <br>teorema de Arrow</br> [1]. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "expressivity": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "<br>expressivity</br> EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 <br>expressivity</br> Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "<br>expressivity</br> EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 <br>expressivity</br> Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively."
            ],
            "translated_annotated_samples": [
                "EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1.",
                "Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre lógica de flechas. En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34. Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas. Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar. Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573 ",
            "candidates": [],
            "error": [
                []
            ]
        },
        "non-dictatorship": {
            "translated_key": "No dictadura",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: <br>non-dictatorship</br> (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 <br>non-dictatorship</br> (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES <br>non-dictatorship</br> can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "Some possible properties of a judgment aggregation rule f over an agenda A: <br>non-dictatorship</br> (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 <br>non-dictatorship</br> (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "EXPRESSIVITY EXAMPLES <br>non-dictatorship</br> can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1."
            ],
            "translated_annotated_samples": [
                "Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: <br>No dictadura</br> (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad.",
                "La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas.",
                "EJEMPLOS DE EXPRESIVIDAD La <br>no dictadura</br> puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: <br>No dictadura</br> (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La <br>no dictadura</br> puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre lógica de flechas. En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34. Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas. Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar. Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "unanimity": {
            "translated_key": "unanimidad",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) <br>unanimity</br> (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "<br>unanimity</br> can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) <br>unanimity</br> (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "<br>unanimity</br> can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions."
            ],
            "translated_annotated_samples": [
                "Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad.",
                "La <br>unanimidad</br> puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La <br>unanimidad</br> puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La lógica de flecha de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la lógica de Arrow. Sin embargo, si bien los operadores modales de la lógica de flecha pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la lógica de flechas podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre lógica de flechas. En M. Marx, M. Masuch y L. Polos, editores, Lógica de flecha y lógica multi-modal, páginas 3-34. Publicaciones CSLI, Stanford, 1996. Dietrich y List [5] demuestran una versión general del teorema de Arrow para JARs: para una agenda fuertemente conectada, un JAR tiene las propiedades IND y UNA si y solo si no tiene la propiedad ND1, donde la fuerte conectividad es una condición algebraica y lógica en las agendas. Por lo tanto, si asumimos que la agenda está fuertemente conectada, entonces (ND ∧ UNA) ↔ ¬ND1 es válido y se puede derivar en jar. Una posibilidad interesante para trabajos futuros es intentar caracterizar condiciones como la conectividad fuerte directamente como una fórmula lógica. El Sexto Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 573 ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "preference aggregation": {
            "translated_key": "agregación de preferencias",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and <br>preference aggregation</br> Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical <br>preference aggregation</br>.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about <br>preference aggregation</br>): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical <br>preference aggregation</br>.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "<br>preference aggregation</br> - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume <br>preference aggregation</br> [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical <br>preference aggregation</br> as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and <br>preference aggregation</br> in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and <br>preference aggregation</br>; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and <br>preference aggregation</br>, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as <br>preference aggregation</br>, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, <br>preference aggregation</br> can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for <br>preference aggregation</br> as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND <br>preference aggregation</br> Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; <br>preference aggregation</br> is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "<br>preference aggregation</br> Recently, Dietrich and List [5] showed that <br>preference aggregation</br> can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about <br>preference aggregation</br>.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about <br>preference aggregation</br> as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the <br>preference aggregation</br> case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the <br>preference aggregation</br> case pair-wise majority voting, as illustrated in Example 2.",
                "The <br>preference aggregation</br> correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of <br>preference aggregation</br> over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the <br>preference aggregation</br> logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the <br>preference aggregation</br> variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian <br>preference aggregation</br>.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical <br>preference aggregation</br> on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "Reasoning about Judgment and <br>preference aggregation</br> Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "As a special case, judgment aggregation can be seen to subsume classical <br>preference aggregation</br>.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about <br>preference aggregation</br>): the logical language is interpreted directly in judgment aggregation rules.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical <br>preference aggregation</br>.",
                "<br>preference aggregation</br> - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2]."
            ],
            "translated_annotated_samples": [
                "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB.",
                "Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la <br>agregación de preferencias</br> clásica.",
                "Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la <br>agregación de preferencias</br>): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios.",
                "La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la <br>agregación de preferencias</br> clásica.",
                "La <br>agregación de preferencias</br>, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la <br>agregación de preferencias</br> clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la <br>agregación de preferencias</br>): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la <br>agregación de preferencias</br> clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La <br>agregación de preferencias</br>, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "arrow logic": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic <br>arrow logic</br> [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to <br>arrow logic</br>.",
                "However, while the modal operators of <br>arrow logic</br> can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to <br>arrow logic</br> could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in <br>arrow logic</br>.",
                "In M. Marx, M. Masuch, and L. Polos, editors, <br>arrow logic</br> and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "The modal logic <br>arrow logic</br> [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to <br>arrow logic</br>.",
                "However, while the modal operators of <br>arrow logic</br> can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to <br>arrow logic</br> could be investigated further in future work.",
                "A crash course in <br>arrow logic</br>."
            ],
            "translated_annotated_samples": [
                "La <br>lógica de flecha</br> de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas.",
                "Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la <br>lógica de Arrow</br>.",
                "Sin embargo, si bien los operadores modales de la <br>lógica de flecha</br> pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento.",
                "Sin embargo, la relación con la <br>lógica de flechas</br> podría ser investigada más a fondo en trabajos futuros.",
                "Un curso intensivo sobre <br>lógica de flechas</br>."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la lógica modal clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la lógica modal: reflejan directamente la cuantificación no restringida en la definición de verdad de y. El axioma C establece que para cualquier punto del orden del día en el que sea posible tener opiniones opuestas, cada resultado posible para ese punto debe ser alcanzable. COMM dice que todo lo que es cierto para un perfil y un ítem arbitrarios, también es cierto para un ítem y un perfil arbitrarios. El cierre garantiza que los agentes se comporten de manera consistente con respecto a la consecuencia en la lógica L. MP y Nec son estándar. Usamos JAL(L) para denotar la derivabilidad en jal(L). Teorema 3. Si la agenda es finita, tenemos que para cualquier fórmula ψ ∈ L(Σ, A), JAL(L) ψ si y solo si |=L ψ. Prueba. La solidez es directa. Para completitud (nos enfocamos en la idea principal aquí y dejamos de lado los detalles triviales), construimos un 570 The Sixth Intl. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) tiene una tabla jal para una fórmula consistente ψ de la siguiente manera. De hecho, nuestra axiomatización determina completamente una tabla, excepto por el comportamiento de f. Para ser más precisos, permita que una descripción de tabla sea una conjunción de la forma hp ∧ o ∧ (¬)σ. Es fácil ver que las descripciones de las tablas son mutuamente excluyentes, y, además, podemos derivar τ∈T τ, donde T es el conjunto de todas las descripciones de las tablas. Sea D el conjunto de todos los conjuntos Δ maximales consistentes. No queremos todos esos: bien podría ser que ψ requiera que σ esté de cierta manera, lo cual es incompatible con algunos Δs. Definimos dos relaciones de accesibilidad de la manera estándar: R Δ1Δ2 si para todo ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2. De manera similar para R con respecto a . Ambas relaciones son equivalentes (debido a taut-5), y además, cuando R Δ1Δ2 y R Δ2Δ3 entonces para algún Δ2, también R Δ1Δ2 y R Δ2Δ3 (debido al axioma COMM). Que Δ0 sea un MCS que contiene a ψ. Ahora definimos el conjunto Tablas = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 y R Δ1Δ2) o (R Δ0Δ1 y R Δ1Δ2)} Cada Δ ∈ Tablas puede ser concebido como un par γ, p, ya que cada Δ contiene un único (hq ∧ o ∧ (¬)σ) para cada hq y un único hp. Es entonces fácil verificar que, para todo Δ ∈ Tablas, y toda fórmula ϕ, Δ |= ϕ si y solo si ϕ ∈ Δ, donde |= aquí significa verdad en el sentido ordinario de la lógica modal cuando el conjunto de estados se toma como Tablas. Ahora, extraemos una función de agregación f y pares γ, p de la siguiente manera: Para cada Δ ∈ Tablas, encontramos una conjunción hp ∧ o ∧ (¬)σ. Habrá exactamente un p así. Esto define el p que estamos buscando. Además, el γ se obtiene, para cada agente i, encontrando todos los q para los cuales (hq ∧ i) es actualmente verdadero. Finalmente, la función f es una tabla de todos los tuplas hp, o(p), σ para los cuales (hp ∧ o(o) ∧ σ) está contenido en algún conjunto en Tablas. Señalamos que jal tiene todos los axiomas taut, K, T, 4, 5 y las reglas MP y Nec de la lógica modal S5. Sin embargo, la sustitución uniforme, un principio de todas las lógicas modales normales (cf., por ejemplo, [3]), no se cumple. Un contraejemplo es el hecho de que lo siguiente sea válido: σ (5) - sin importar las preferencias de los agentes, el JAR siempre emitirá un juicio - mientras que esto no es válido: (σ ∧ i) (6) - el JAR no necesariamente emitirá los mismos juicios que el agente i. Por ejemplo, tenemos que el paradoja discursiva es demostrable en jal(L): JAL(L) (( MV) → ⊥). Un ejemplo de una derivación de la propiedad menos complicada (válida) (i ∧ j) se muestra en la Tabla 3.6. AGREGACIÓN DE PREFERENCIAS Recientemente, Dietrich y List [5] demostraron que la agregación de preferencias puede ser incorporada en la agregación de juicios. En esta sección mostramos que nuestra lógica de agregación de juicios también puede ser utilizada para razonar sobre la agregación de preferencias. Dado un conjunto K de alternativas, [5] define una lógica de predicados simple LK con lenguaje L(LK) de la siguiente manera: • L(LK) tiene una constante a para cada alternativa a ∈ K, variables v1, v2, ..., un predicado de identidad binario =, un predicado binario P para preferencia estricta, y los conectivos proposicionales y de primer orden habituales • Z es la colección de los siguientes axiomas: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • Cuando Γ ⊆ L(LK) y φ es una fórmula, se define que Γ |= φ se cumple si Γ ∪ Z implica φ en el sentido estándar de la lógica de predicados 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Llamar 1 A ∨ B y 2 C ∨ D abreviatura, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derivar (i ∧ j) de cada disyunción de 4 la estrategia es ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ C 7 (hp → (i ∧ j)) Una vez, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) asumir A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Clausura 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Una vez, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ D 20 sigue como 6-9 21 (hp ∧ i) ∧ (hp ∧ j) asumir B ∧ C 22 sigue como 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Tabla 3: derivación de jar de (i ∧ j) Es fácil ver que hay una correspondencia uno a uno entre el conjunto de relaciones de preferencia (órdenes lineales totales) sobre K y el conjunto de conjuntos de juicios LK-consistentes y completos sobre la agenda de preferencias AK = {aPb, ¬aPb : a, b ∈ K, a b} Dado un SWF F sobre K, el JAR correspondiente fF sobre la agenda de preferencias AK se define de la siguiente manera fF (A1, . . . , An) = A, donde A es el conjunto de juicios consistente y completo correspondiente a F(L1, . . . , Ln) donde Li es la relación de preferencia correspondiente al conjunto de juicios consistente y completo Ai. Así podemos usar jal para razonar sobre la agregación de preferencias de la siguiente manera. Toma el lenguaje lógico L(Σ, AK), para algún conjunto de agentes Σ, y toma la lógica subyacente como LK. Podemos entonces interpretar nuestras fórmulas en un SWF F sobre K, un perfil de preferencia L ∈ L(K) y un par (a, b) ⊆ K × K, a b, de la siguiente manera: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ donde γL es el perfil de juicio correspondiente al perfil de preferencia L. Mientras que en el caso general de agregación de juicios una fórmula se interpreta en el contexto de un tema de agenda, en el caso de agregación de preferencias una fórmula se interpreta en el contexto de un par de alternativas. Ejemplo 2. Tres agentes deben decidir entre ir a cenar (c), ver una película (m) o ir a un concierto (c). Sus preferencias individuales se ilustran a la derecha en la Tabla 1 de la Sección 3, junto con el resultado de un SWF Fmaj que implementa la votación mayoritaria por pares. Sea L = mdc, mcd, cmd el perfil de preferencias correspondiente a las preferencias en el ejemplo. Tenemos lo siguiente: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (todos los agentes están de acuerdo, bajo las clasificaciones individuales L, en la clasificación relativa de m y d, están de acuerdo en que d es mejor que m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (bajo las clasificaciones individuales L, hay algún par de alternativas en las que los agentes 1 y 2 no están de acuerdo) La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (los agentes 1 y 2 pueden elegir sus preferencias de manera que estén de acuerdo en algún par de alternativas) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el SWF Fmaj implementa la votación mayoritaria por pares) Como es habitual, escribimos F |=swf φ cuando F, L, (a, b) |=swf φ para cualquier L y (a, b), y así sucesivamente. Por lo tanto, nuestras fórmulas pueden ser vistas como la expresión de propiedades de las funciones de bienestar social. Ejemplo 3. Toma la fórmula (i ↔ σ). Cuando esta fórmula se interpreta como una afirmación sobre una función de bienestar social, dice que existe un perfil de preferencias tal que para todos los pares (a, b) de alternativas, b es preferido sobre a en la agregación (por la FBS) del perfil de preferencias si y solo si el agente i prefiere b sobre a. Ejemplos de Expresividad 6.1 Precisamos la afirmación en la Sección 2.2 de que las tres propiedades de FBS mencionadas corresponden a las tres propiedades de JAR mencionadas, respectivamente. Recuerde las fórmulas definidas en la Sección 4. Proposición 2. F |=swf ND si y solo si F tiene la propiedad ND2, F |=swf IND si y solo si F tiene la propiedad IIA, F |=swf UNA si y solo si F tiene la propiedad PO. Las propiedades expresadas anteriormente son propiedades de SWFs. Ahora veamos las propiedades del conjunto de alternativas K que podemos expresar. Las propiedades que involucran cardinalidad suelen ser de interés, por ejemplo en el teorema de Arrow. Sea: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposición 3. Sea F ∈ F (K). |K| > 2 si y solo si F |=swf MT2. Prueba. Para la dirección hacia la izquierda, permita que F |=swf MT2. Por lo tanto, existe un γ tal que existen (a1, b1), (a2, b2) ∈ K × K, donde a1 b1 y a2 b2, de tal manera que (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 y (iv) a2 Pb2 ∈ γ2. De (ii) y (iv) obtenemos que (a1, b1) (a2, b2), y a partir de eso y (i) y (iii) se sigue que γ1 contiene dos pares diferentes a1 Pb1 y a2 Pb2, cada uno con dos elementos diferentes. Pero eso no es posible si |K| = 2, porque si K = {a, b} entonces AK = {aPb, ¬aPb, bPa, ¬bPa} y por lo tanto es imposible que γ1 ⊆ AK ya que no podemos tener aPb, bPa ∈ γ1. Para la dirección hacia la derecha, permita que |K| > 2; permita que a, b, c sean tres elementos distintos de K. Permita que γ1 sea el conjunto de juicios correspondiente a la clasificación abc y γ2 sea el conjunto de juicios correspondiente a acb. Ahora, para cualquier regla de agregación f, f, γ, aPb |= 1 ∧ 2 y f, γ, bPc |= 1 ∧ ¬2. Por lo tanto, F |=swf MT2, para cualquier SWF F. Ahora tenemos todo lo que necesitamos para expresar la declaración de Arrow como una fórmula. Se deduce de su teorema que la fórmula es válida en la clase de todas las funciones de bienestar social. Teorema 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Demostración. Ten en cuenta que MT2, PO, ND y IIA son propiedades verdaderas de SWF, su valor de verdad con respecto a una tabla está determinado únicamente por el SWF. Por ejemplo, F, L, (a, b) |=swf MT2 si y solo si F |= MT2, para cualquier F, L, a, b. Sea F ∈ F (K), y F, L, (a, b) |=swf MT2 para algún L y a, b. Por la Proposición 3, K tiene más de dos alternativas. Por el teorema de Arrow, F no puede tener todas las propiedades PO, ND2 y IIA. Sin pérdida de generalidad, asumir que F no tiene la propiedad PO. Por la Proposición 2, F |=swf PO. Dado que PO es una propiedad de SWF, esto significa que F, L, (a, b) |=swf PO (la satisfacción de PO es independiente de L, a, b), y por lo tanto que F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA. Ten en cuenta que la fórmula en el Teorema 4 no menciona ningún ítem de agenda (es decir, pares de alternativas) como haPb directamente en una expresión. Esto significa que la fórmula es un miembro de L(Σ, AK) para cualquier conjunto de alternativas K, y es válida sin importar qué conjunto de alternativas asumamos. La fórmula MV, que en el caso general de agregación de juicios expresa la votación mayoritaria por proposiciones, expresa en el caso de agregación de preferencias la votación mayoritaria por pares, como se ilustra en el Ejemplo 2. La agregación de preferencias correspondiente al paradigma discursivo de la agregación de juicios es el conocido paradigma de votación de Condorcet, que establece que la votación por mayoría en pares puede llevar a preferencias agregadas que son cíclicas (incluso si las preferencias individuales no lo son). Podemos expresar la paradoja de Condorcet de la siguiente manera, nuevamente como una propiedad lógica universalmente válida de las Funciones de Bienestar Social (SWFs). Proposición 4. |=swf MT2 → ¬MV, cuando hay al menos tres agentes. Prueba. La prueba es similar a la prueba de la paradoja discursiva. Sea fF , γ, aPb |=LK MT2; por lo tanto, hay tres elementos distintos a, b, c ∈ K. Supongamos que fF , γ, aPb |=LK MV. Sea γ el perfil de juicio correspondiente al perfil de preferencia X = (abc, cab, bca). Tenemos que fF , γ , aPb |=LK 1 ∧ 2 y, dado que fF , γ , aPb |=LK MV, tenemos que fF , γ , aPb |=LK σ y por lo tanto aPb ∈ fF (γ ) y (a, b) ∈ F(X). De manera similar, obtenemos que (c, a) ∈ F(X) y (b, c) ∈ F(X). Pero eso es imposible, ya que por transitividad también tendríamos que (a, c) ∈ F(X), lo cual contradice el hecho de que F(X) es antisimétrica. Por lo tanto, se deduce que fF , γ, aPb |=LK MV. 6.2 Axiomatización y Propiedades Lógicas Inmediatamente obtenemos, a partir del Teorema 3, una axiomatización sólida y completa de la agregación de preferencias sobre un conjunto finito de alternativas. Corolario 1. Si el conjunto de alternativas K es finito, tenemos que para cualquier fórmula ψ ∈ L(Σ, AK), JAL(LK) ψ si y solo si |=swf ψ. Prueba. Se sigue inmediatamente del Teorema 3 y del hecho de que para cualquier JAR f, existe un SWF F tal que f = fF. Entonces, por ejemplo, el teorema de Arrow es demostrable en jal(LK): JAL(LK) MT2 → ¬(PO ∧ ND ∧ IIA). Cada fórmula que es válida con respecto a las reglas de agregación de juicios también es válida con respecto a las funciones de bienestar social, por lo que todas las propiedades lógicas generales de las RAJ también son propiedades de las FBS. Dependiendo de la agenda, los SWFs pueden tener propiedades adicionales, inducidas por la lógica LK, que no siempre son compartidas por los JARs con otras lógicas subyacentes. Una de esas propiedades es i. Mientras tengamos |=swf i, para otras agendas existen lógicas subyacentes L tales que |=L i. Para ver esto último, tomemos una agenda con una fórmula p que es inconsistente en la lógica subyacente L: p nunca puede ser incluido en un conjunto de juicios. Para ver lo anterior, toma un par arbitrario de alternativas (a, b). Existe algún perfil de preferencias en el que el agente i prefiera b sobre a. Técnicamente hablando, la fórmula i se cumple en las SWFs porque la agenda AK no contiene una fórmula que (por sí sola) sea inconsistente con respecto a la lógica subyacente LK. Por la misma razón, las siguientes propiedades también se cumplen en los SWFs pero no en los JARs en general. |=swf o∈O o 572 The Sixth Intl. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) - para cualquier par de alternativas (a, b), cualquier combinación posible de la clasificación relativa de a y b entre los agentes es posible. |=swf i → ¬i - dado una alternativa b que es preferida sobre alguna otra alternativa a por el agente i, existe algún otro par de alternativas c y d tal que d no es preferido sobre c - específicamente (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - si, dadas las preferencias de los agentes y una SWF, para cualquier par de alternativas siempre es el caso que o el agente i o el agente j prefiere la segunda alternativa sobre la primera, entonces debe existir un par de alternativas en el que los dos agentes estén en desacuerdo. Una justificación es que ningún agente puede preferir la segunda alternativa sobre la primera para cada par de alternativas, por lo que en este caso si i prefiere b sobre a, entonces j debe preferir a sobre b. Nuevamente, esta propiedad no necesariamente se cumple para otras agendas, ya que la agenda podría contener una inconsistencia con la que los agentes no podrían estar en desacuerdo. Desde un punto de vista de la teoría de la prueba, estas propiedades adicionales de las SWFs se derivan utilizando la regla de Clausura. 7. Trabajo relacionado Las lógicas formales relacionadas con la elección social se han centrado principalmente en la representación lógica de las preferencias cuando el conjunto de alternativas es grande y en las propiedades de cálculo de la computación de preferencias agregadas para una representación dada [6, 7, 8]. Una excepción notable y reciente es un marco lógico para la agregación de juicios desarrollado por Marc Pauly en [10], con el fin de poder caracterizar las relaciones lógicas entre diferentes reglas de agregación de juicios. Si bien la motivación es similar al trabajo en este artículo, los enfoques son fundamentalmente diferentes: en [10], los posibles resultados de aplicar una regla a algún perfil de juicio se toman como primarios y se describen axiomáticamente; en nuestro enfoque, la regla de agregación y sus posibles entradas, es decir, los perfiles de juicio, se toman como primarios y se describen axiomáticamente. Las dos aproximaciones no parecen estar directamente relacionadas entre sí en el sentido de que una pueda estar incrustada en la otra. La <br>lógica de flecha</br> de la lógica modal [11] está diseñada para razonar sobre cualquier objeto que pueda ser representado gráficamente como una flecha, y tiene varios operadores modales para expresar propiedades y relaciones entre estas flechas. En la lógica de agregación de preferencias jal(LK) interpretamos fórmulas en pares de alternativas, que pueden verse como flechas. Por lo tanto, la variante de agregación de preferencias de nuestra lógica está relacionada con la <br>lógica de Arrow</br>. Sin embargo, si bien los operadores modales de la <br>lógica de flecha</br> pueden expresar propiedades de relaciones de preferencia como la transitividad, no pueden expresar directamente la mayoría de las propiedades que hemos discutido en este documento. Sin embargo, la relación con la <br>lógica de flechas</br> podría ser investigada más a fondo en trabajos futuros. En particular, las lógicas de flecha suelen demostrarse completas con respecto a un álgebra. Esto podría significar que sería posible utilizar tales álgebras como la estructura subyacente para representar preferencias individuales y colectivas. Entonces, al cambiar el perfil de preferencias nos lleva de un álgebra a otra, y una SWF determina la preferencia colectiva, en cada una de las álgebras. 8. DISCUSIÓN Hemos presentado un lógica sólida y completa jal para representar y razonar sobre la agregación de juicios. jal es expresivo: puede expresar reglas de agregación de juicios como la votación mayoritaria; propiedades complicadas como la independencia; y resultados importantes como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet. Sostenemos que estos resultados muestran exactamente qué capacidades lógicas necesita un agente para poder razonar sobre la agregación de juicios. Es quizás sorprendente que un lenguaje relativamente simple proporcione estas capacidades. jal proporciona una teoría de la prueba, en la que se pueden derivar resultados como los mencionados anteriormente. La axiomatización describe los principios lógicos de la agregación de juicios, y también puede ser instanciada para razonar sobre casos específicos de agregación de juicios, como la agregación de preferencias arroviana clásica. Por lo tanto, nuestro marco arroja luz sobre las diferencias entre los principios lógicos detrás de la agregación de juicios generales por un lado y la agregación de preferencias clásicas por otro. En trabajos futuros sería interesante relajar los requisitos de completitud y consistencia de los conjuntos de juicios, e intentar caracterizarlos en el lenguaje lógico, como propiedades de conjuntos de juicios generales, en su lugar. 9. AGRADECIMIENTOS Agradecemos a los revisores anónimos por sus útiles observaciones. El trabajo de Thomas Ågotnes en este artículo fue apoyado por las subvenciones 166525/V30 y 176853/S10 del Consejo de Investigación de Noruega. REFERENCIAS [1] K. J. Arrow. Elección social y valores individuales. Wiley, 1951. [2] K. J. Arrow, A. K. Sen y K. Suzumura, eds. Manual de Elección Social y Bienestar, volumen 1. North-Holland, 2002. [3] P. Blackburn, M. de Rijke y Y. Venema. Lógica modal. Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, y D. A. Peled. Verificación de modelos. The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.\nLa editorial MIT Press: Cambridge, MA, 2000. [5] F. Dietrich y C. List. El teorema de Arrow en la agregación de juicios. Elección Social y Bienestar, 2006. Próximamente. [6] C. Lafage y J. Lang. Representación lógica de preferencias para la toma de decisiones en grupo. En Actas de la Conferencia sobre Principios de Representación del Conocimiento y Razonamiento (KR-00), páginas 457-470. Morgan Kaufman, 2000. [7] J. Lang. \n\nMorgan Kaufman, 2000. [7] J. Lang. De la representación de preferencias a la votación combinatoria. Actas de la Octava Conferencia Internacional sobre Principios y Representación del Conocimiento y Razonamiento (KR-02), páginas 277-290. Morgan Kaufmann, 2002. [8] J. Lang. \n\nMorgan Kaufmann, 2002. [8] J. Lang. Representación de preferencias lógicas y voto combinatorio. Ana. Matemáticas. I'm sorry, but the sentence \"Artif.\" is not a complete sentence in English. Could you please provide more context or a complete sentence for me to translate into Spanish? Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. \n\nIntell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou. Complejidad computacional. Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.\nAddison-Wesley: Reading, MA, 1994. [10] M. Pauly. Axiomatizando conjuntos de juicio colectivo en un lenguaje lógico mínimo, 2006. Manuscrito. [11] Y. Venema. Un curso intensivo sobre <br>lógica de flechas</br>. ",
            "candidates": [],
            "error": [
                [
                    "lógica de flecha",
                    "lógica de Arrow",
                    "lógica de flecha",
                    "lógica de flechas",
                    "lógica de flechas"
                ]
            ]
        },
        "jal": {
            "translated_key": "",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (<br>jal</br>), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of <br>jal</br> is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of <br>jal</br>, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of <br>jal</br>, and study the complexity of the model checking problem.",
                "Formulae of <br>jal</br> are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of <br>jal</br> formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (<br>jal</br>) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of <br>jal</br> is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of <br>jal</br>, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some <br>jal</br> formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (<br>jal</br>(L), or just <br>jal</br> when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use <br>jal</br>(L) to denote derivability in <br>jal</br>(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), <br>jal</br>(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) <br>jal</br> table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that <br>jal</br> has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in <br>jal</br>(L): <br>jal</br>(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use <br>jal</br> to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), <br>jal</br>(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in <br>jal</br>(LK ): <br>jal</br>(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic <br>jal</br>(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic <br>jal</br> for representing and reasoning about judgment aggregation. <br>jal</br> is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. <br>jal</br> provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "In this paper we present a logic, called Judgment Aggregation Logic (<br>jal</br>), for reasoning about judgment aggregation.",
                "Perhaps surprisingly, the language of <br>jal</br> is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of <br>jal</br>, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "In Section 3 we introduce the syntax and semantics of <br>jal</br>, and study the complexity of the model checking problem.",
                "Formulae of <br>jal</br> are interpreted directly by, and thus represent properties of, judgment aggregation rules."
            ],
            "translated_annotated_samples": [
                "En este artículo presentamos una lógica, llamada <br>Lógica de Agregación de Juicios</br> (JAL), para razonar sobre la agregación de juicios.",
                "Quizás sorprendentemente, el <br>lenguaje de jal</br> es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow.",
                "Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de <br>jal</br>, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social.",
                "En la Sección 3 introducimos la sintaxis y semántica de <br>jal</br>, y estudiamos la complejidad del problema de verificación del modelo.",
                "Las fórmulas de <br>jal</br> son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada <br>Lógica de Agregación de Juicios</br> (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una lógica modal proposicional estándar). Quizás sorprendentemente, el <br>lenguaje de jal</br> es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de <br>jal</br>, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de <br>jal</br>, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de <br>jal</br> son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. ",
            "candidates": [],
            "error": [
                [
                    "Lógica de Agregación de Juicios",
                    "lenguaje de jal",
                    "jal",
                    "jal",
                    "jal"
                ]
            ]
        },
        "judgment aggregation": {
            "translated_key": "agregación de juicios",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of <br>judgment aggregation</br> studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, <br>judgment aggregation</br> can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about <br>judgment aggregation</br> scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in <br>judgment aggregation</br> rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-Modal logic General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of <br>judgment aggregation</br> studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of <br>judgment aggregation</br> rules have been developed to this end.",
                "As a special case, <br>judgment aggregation</br> can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called <br>judgment aggregation</br> Logic (jal), for reasoning about <br>judgment aggregation</br>.",
                "The formulae of the logic are interpreted as statements about <br>judgment aggregation</br> rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different <br>judgment aggregation</br> logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of <br>judgment aggregation</br>, and we can compare the logical properties of different classes of <br>judgment aggregation</br> - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about <br>judgment aggregation</br>?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of <br>judgment aggregation</br> rules and social welfare functions such as independence; paradoxes commonly used to illustrate <br>judgment aggregation</br> and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional modal logic).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of <br>judgment aggregation</br> as well as preference aggregation, and mention some commonly discussed properties of <br>judgment aggregation</br> rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, <br>judgment aggregation</br> rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of <br>judgment aggregation</br> rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of <br>judgment aggregation</br>, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION <br>judgment aggregation</br> is concerned with <br>judgment aggregation</br> rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 <br>judgment aggregation</br> Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A <br>judgment aggregation</br> rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a <br>judgment aggregation</br> rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the <br>judgment aggregation</br> rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "<br>judgment aggregation</br> LOGIC: SYNTAX AND SEMANTICS The language of <br>judgment aggregation</br> Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a <br>judgment aggregation</br> function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a <br>judgment aggregation</br> rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for <br>judgment aggregation</br> logic.",
                "Intuitively, the model checking problem for <br>judgment aggregation</br> logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical modal logic the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the <br>judgment aggregation</br> rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to <br>judgment aggregation</br> logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking <br>judgment aggregation</br> logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking <br>judgment aggregation</br> logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for <br>judgment aggregation</br> logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to <br>judgment aggregation</br> logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of <br>judgment aggregation</br> rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, <br>judgment aggregation</br> Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from modal logic: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary modal logic sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the modal logic S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in <br>judgment aggregation</br>.",
                "In this section we show that our <br>judgment aggregation</br> logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general <br>judgment aggregation</br> case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general <br>judgment aggregation</br> case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of <br>judgment aggregation</br> is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to <br>judgment aggregation</br> rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for <br>judgment aggregation</br> developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different <br>judgment aggregation</br> rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The modal logic arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about <br>judgment aggregation</br>. jal is expressive: it can express <br>judgment aggregation</br> rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about <br>judgment aggregation</br>.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of <br>judgment aggregation</br>, and can also be instantiated to reason about specific instances of <br>judgment aggregation</br>, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general <br>judgment aggregation</br> on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "Modal Logic.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in <br>judgment aggregation</br>.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-Modal Logic, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "The recently emerging field of <br>judgment aggregation</br> studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, <br>judgment aggregation</br> can be seen to subsume classical preference aggregation.",
                "We present a modal logic that is intended to support reasoning about <br>judgment aggregation</br> scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in <br>judgment aggregation</br> rules.",
                "The recently emerging field of <br>judgment aggregation</br> studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of <br>judgment aggregation</br> rules have been developed to this end."
            ],
            "translated_annotated_samples": [
                "El campo emergente de la <br>agregación de juicios</br> estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente.",
                "Como caso especial, la <br>agregación de juicios</br> puede considerarse como un subconjunto de la agregación de preferencias clásica.",
                "Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de <br>agregación de juicios</br> (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de <br>agregación de juicios</br>.",
                "El campo emergente de la <br>agregación de juicios</br> estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas.",
                "Se han desarrollado una variedad de reglas de <br>agregación de juicios</br> con este fin."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la <br>agregación de juicios</br> estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la <br>agregación de juicios</br> puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una lógica modal que está destinada a respaldar el razonamiento sobre escenarios de <br>agregación de juicios</br> (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de <br>agregación de juicios</br>. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-Lógica Modal Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la <br>agregación de juicios</br> estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de <br>agregación de juicios</br> con este fin. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        },
        "modal logic": {
            "translated_key": "lógica modal",
            "is_in_text": true,
            "original_annotated_sentences": [
                "Reasoning about Judgment and Preference Aggregation Thomas ◦ Agotnes Department of Computer Engineering, Bergen University College PB.",
                "7030, N-5020 Bergen, Norway tag@hib.no Wiebe van der Hoek Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK wiebe@csc.liv.ac.uk Michael Wooldridge Department of Computer Science, University of Liverpool Liverpool L69 7ZF, UK mjw@csc.liv.ac.uk ABSTRACT Agents that must reach agreements with other agents need to reason about how their preferences, judgments, and beliefs might be aggregated with those of others by the social choice mechanisms that govern their interactions.",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and considers how multiple sets of logical formulae can be aggregated to a single consistent set.",
                "As a special case, judgment aggregation can be seen to subsume classical preference aggregation.",
                "We present a <br>modal logic</br> that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "We present a sound and complete axiomatisation of such rules.",
                "We show that the logic can express aggregation rules such as majority voting; rule properties such as independence; and results such as the discursive paradox, Arrows theorem and Condorcets paradox - which are derivable as formal theorems of the logic.",
                "The logic is parameterised in such a way that it can be used as a general framework for comparing the logical properties of different types of aggregation - including classical preference aggregation.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-<br>modal logic</br> General Terms Theory 1.",
                "INTRODUCTION In this paper, we are interested in knowledge representation formalisms for systems in which agents need to aggregate their preferences, judgments, beliefs, etc.",
                "For example, an agent may need to reason about majority voting in a group he is a member of.",
                "Preference aggregation - combining individuals preference relations over some set of alternatives into a preference relation which represents the joint preferences of the group by so-called social welfare functions - has been extensively studied in social choice theory [2].",
                "The recently emerging field of judgment aggregation studies aggregation from a logical perspective, and discusses how, given a consistent set of logical formulae for each agent, representing the agents beliefs or judgments, we can aggregate these to a single consistent set of formulae.",
                "A variety of judgment aggregation rules have been developed to this end.",
                "As a special case, judgment aggregation can be seen to subsume preference aggregation [5].",
                "In this paper we present a logic, called Judgment Aggregation Logic (jal), for reasoning about judgment aggregation.",
                "The formulae of the logic are interpreted as statements about judgment aggregation rules, and we give a sound and complete axiomatisation of all such rules.",
                "The axiomatisation is parameterised in such a way that we can instantiate it to get a range of different judgment aggregation logics.",
                "For example, one instance is an axiomatisation, in our language, of all social welfare functions - thus we get a logic of classical preference aggregation as well.",
                "And this is one of the main contributions of this paper: we identify the logical properties of judgment aggregation, and we can compare the logical properties of different classes of judgment aggregation - and of general judgment aggregation and preference aggregation in particular.",
                "Of course, a logic is only interesting as long as it is expressive.",
                "One of the goals of this paper is to investigate the representational and logical capabilities an agent needs for judgment and preference aggregation; that is, what kind of logical language might be used to represent and reason about judgment aggregation?",
                "An agents knowledge representation language should be able to express: common aggregation rules such as majority voting; commonly discussed properties of judgment aggregation rules and social welfare functions such as independence; paradoxes commonly used to illustrate judgment aggregation and preference aggregation, viz. the discursive paradox and Condorcets paradox respectively; and other important properties such as Arrows theorem.",
                "In order to illustrate in more detail what such a language would need to be able to express, take the example of a potential property of social welfare functions (SWFs) called independence of irrelevant alternatives (IIA): given two preference profiles (each consisting of one preference relation for each agent) and two alternatives, if for each agent the two alternatives have the same order in the two preference profiles, then the two alternatives must have the same order in the two preference relations resulting from applying the SWF to the two preference profiles, respectively.",
                "From this example it seems that a formal language for SWFs should be able to express: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Quantification on several levels: over alternatives; over preference profiles, i.e., over relations over alternatives (secondorder quantification); and over agents. • Properties of preference relations for different agents, and properties of several different preference relations for the same agent in the same formula. • Comparison of different preference relations. • The preference relation resulting from applying a SWF to other preference relations.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional <br>modal logic</br>).",
                "Perhaps surprisingly, the language of jal is syntactically and semantically rather simple; and yet the language is, nevertheless, expressive enough to give elegant and succinct expressions of, e.g., IIA, majority voting, the discursive dilemma, Condorcets paradox and Arrows theorem.",
                "This means, for example, that Arrows theorem is a formal theorem of jal, i.e., a derivable formula; we thus have a formal proof theory for social choice.",
                "The structure of the rest of the paper is as follows.",
                "In the next section we review the basics of judgment aggregation as well as preference aggregation, and mention some commonly discussed properties of judgment aggregation rules and social welfare functions.",
                "In Section 3 we introduce the syntax and semantics of jal, and study the complexity of the model checking problem.",
                "Formulae of jal are interpreted directly by, and thus represent properties of, judgment aggregation rules.",
                "In Section 4 we demonstrate that the logic can express commonly discussed properties of judgment aggregation rules, such as the discursive paradox.",
                "We give a sound and complete axiomatisation of the logic in Section 5, under the assumption that the agenda the agents make judgments over is finite.",
                "As mentioned above, preference aggregation can be seen as a special case of judgment aggregation, and in Section 6 we introduce an alternative interpretation of jal formulae directly in social welfare functions.",
                "We obtain a sound and complete axiomatisation of the logic for preference aggregation as well.",
                "Sections 7 and 8 discusses related work and concludes. 2.",
                "JUDGMENT AND PREFERENCE AGGREGATION Judgment aggregation is concerned with judgment aggregation rules aggregating sets of logical formulae; preference aggregation is concerned with social welfare functions aggregating preferences over some set of alternatives.",
                "Let n be a number of agents; we write Σ for the set {1, . . . , n}. 2.1 Judgment Aggregation Rules Let L be a logic with language L(L).",
                "We require that the language has negation and material implication, with the usual semantics.",
                "We will sometimes refer to L as the underlying logic.",
                "An agenda over L is a non-empty set A ⊆ L(L), where for every formula φ that does not start with a negation, φ ∈ A iff ¬φ ∈ A.",
                "We sometimes call a member of A an agenda item.",
                "A subset A ⊆ A is consistent unless A entails both ¬φ and φ in L for some φ ∈ L(L); A is complete if either φ ∈ A or ¬φ ∈ A for every φ ∈ A which does not start with negation.",
                "An (admissible) individual judgment set is a complete and consistent subset Ai ⊆ A of the agenda.",
                "The idea here is that a judgment set Ai represents the choices from A made by agent i.",
                "Two rationality criteria demand that an agents choices at least be internally consistent, and that each agent makes a decision between every item and its negation.",
                "An (admissible) judgment profile is an n-tuple A1, . . . , An , where Ai is the individual judgment set of agent i. J(A, L) denotes the set of all individual (complete and L-consistent) judgment sets over A, and J(A, L)n the set of all judgment profiles over A.",
                "When γ ∈ J(A, L)n , we use γi to denote the ith element of γ, i.e., agent is individual judgment set in judgment profile γ.",
                "A judgment aggregation rule (JAR) is a function f that maps each judgment profile A1, . . . , An to a complete and consistent collective judgment set f(A1, . . . , An) ∈ J(A, L).",
                "Such a rule hence is a recipe to enforce a rational group decision, given an tuple of rational choices by the individual agents.",
                "Of course, such a rule should to a certain extent be fair.",
                "Some possible properties of a judgment aggregation rule f over an agenda A: Non-dictatorship (ND1) There is no agent i such that for every judgment profile A1, . . . , An , f(A1, . . . , An) = Ai Independence (IND) For any p ∈ A and judgment profiles A1, . . . , An and B1, . . . , Bn , if for all agents i (p ∈ Ai iff p ∈ Bi), then p ∈ f(A1, . . . , An) iff p ∈ f(B1, . . . , Bn) Unanimity (UNA) For any judgment profile A1, . . . , An and any p ∈ A, if p ∈ Ai for all agents i, then p ∈ f(A1, . . . , An) 2.2 Social Welfare Functions Social welfare functions (SWFs) are usually defined in terms of ordinal preference structures, rather than cardinal structures such as utility functions.",
                "An SWF takes a preference relation, a binary relation over some set of alternatives, for each agent, and outputs another preference relation representing the aggregated preferences.",
                "The most well known result about SWFs is Arrows theorem [1].",
                "Many variants of the theorem appear in the literature, differing in assumptions about the preference relations.",
                "In this paper, we take the assumption that all preference relations are linear orders, i.e., that neither agents nor the aggregated preference can be indifferent between distinct alternatives.",
                "This gives one of the simplest formulations of Arrows theorem (Theorem 1 below).",
                "Cf., e.g., [2] for a discussion and more general formulations.",
                "Formally, let K be a set of alternatives.",
                "We henceforth implicitly assume that there are always at least two alternatives.",
                "A preference relation (over K) is, here, a total (linear) order on K, i.e., a relation R over K which is antisymmetric (i.e., (a, b) ∈ R and (b, a) ∈ R implies that a = b), transitive (i.e., (a, b) ∈ R and (b, c) ∈ R implies that (a, c) ∈ R), and total (i.e., either (a, b) ∈ R or (b, a) ∈ R).",
                "We sometimes use the infix notation aRb for (a, b) ∈ R. The set of preference relations over alternatives K is denoted L(K).",
                "Alternatively, we can view L(K) as the set of all permutations of K. Thus, we shall sometimes use a permutation of K to denote a member of L(K).",
                "For example, when K = {a, b, c}, we will sometimes use the expression acb to denote the relation {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb means that b is preferred over a if a and b are different.",
                "Rs denotes the irreflexive version of R, i.e., Rs = R \\ {(a, a) : a ∈ K}. aRs b means that b is preferred over a and that a b.",
                "A preference profile for Σ over alternatives K is a tuple (R1, . . . , Rn) ∈ L(K)n , consisting of one preference relation Ri for each agent i.",
                "A social welfare function (SWF) is a function F : L(K)n → L(K) mapping each preference profile to an aggregated preference relation.",
                "The class of all SWFs over alternatives K is denoted F (K).",
                "Properties of SWFs F corresponding to the judgment aggregation rule properties discussed in Section 2.1 are: The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 567 Non-dictatorship (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponds to ND1) Independence of irrelevant alternatives (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponds to IND) Pareto Optimality (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponds to UNA) Arrows theorem says that the three properties above are inconsistent if there are more than two alternatives.",
                "Theorem 1 (Arrow).",
                "If there are more than two alternatives, no SWF has all the properties PO, ND2 and IIA. 3.",
                "JUDGMENT AGGREGATION LOGIC: SYNTAX AND SEMANTICS The language of Judgment Aggregation Logic (jal) is parameterised by a set of agents Σ = {1, 2, . . . , n} (we will assume that there are at least two agents) and an agenda A.",
                "The following atomic propositions are used: Π = {i, σ, hp | p ∈ A, i ∈ Σ} The language L(Σ, A) of jal is defined by the following grammar: φ ::= α | φ | φ | φ ∧ φ | ¬φ where α ∈ Π.",
                "This language will be formally interpreted in structures consisting of an agenda item, a judgment profile and a judgment aggregation function; informally, i means that the agenda item is in agent is judgment set in the current judgment profile; σ means that the agenda item is in the aggregated judgment set of the current judgment profile; hp means that the agenda item is p; φ means that φ is true in every judgment profile; φ means that φ is true in every agenda item.",
                "We define ψ = ¬ ¬ψ, intuitively meaning ψ is true for some judgment profile, and ψ = ¬ ¬ψ, intuitively meaning ψ is true for some agenda item, as usual, in addition to the usual derived propositional connectives.",
                "We now define the formal semantics of L(Σ, A).",
                "A model wrt.",
                "L(Σ, A) and underlying logic L is a judgment aggregation rule f over A.",
                "Recall that J(A, L)n denotes the set of complete and Lconsistent judgment profiles over A.",
                "A table is a tuple T = f, γ, p such that f is a model, γ ∈ J(A, L)n and p ∈ A.",
                "A formula is interpreted on a table as follows. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ and f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ So, e.g., we have that f, γ, p |=L i∈Σ i if everybody chooses p in γ.",
                "Example 1.",
                "A committee of three agents are voting on the following three propositions: the candidate is qualified (p), if the candidate is qualified he will get an offer (p → q), and the candidate will get an offer (q).",
                "One possible voting scenario is illustrated in the left part of Table 1.",
                "In the table, the results of proposition-wise majority voting, i.e., the JAR fmaj accepting a proposition iff it is accepted by a majority of the agents, are also p p → q q 1 yes yes yes 2 no yes yes 3 yes no no fmaj yes yes yes 1 mdc 2 mcd 3 cmd Fmaj mcd Table 1: Examples shown.",
                "This example can be modelled by taking the agenda to be A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recall that agendas are closed under single negation) and L to be propositional logic.",
                "The agents votes can be modelled by the following judgment profile: γ = γ1, γ2, γ3 , where γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}.",
                "We then have that: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (agents 1 and 3 judges p to be true in the profile γ, while agent 2 does not) • fmaj, γ, p |=L σ (majority voting on p given the preference profile γ leads to acceptance of p) • fmaj, γ, p |=L (1 ∧ 2) (agents 1 and 2 agree on some agenda item, under the judgment profile γ.",
                "Note that this formula does not depend on which agenda item is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on p. Note that this formula does not depend on which judgment profile is on the table.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (there is some judgment profile on which all agents agree on all agenda items.",
                "Note that this formula does not depend on any of the elements on the table.) • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the JAR fmaj implements majority voting) We write f |=L φ iff f, γ, p |=L φ for every γ over A and p ∈ A; |=L φ iff f |=L φ for all models f. Given a possible property of a JAR, such as, e.g., independence, we say that a formula expresses the property if the formula is true in an aggregation rule f iff f has the property.",
                "Note that when we are given a formula φ ∈ L(Σ, A), validity, i.e., |=L φ, is defined with respect to models of the particular language L(Σ, A) defined over the particular agenda A (and similar for validity with respect to a JAR, i.e., f |=L φ).",
                "The agenda, like the set of agents Σ, is given when we define the language, and is thus implicit in the interpretation of the language1 .",
                "Let an outcome o be a maximal conjunction of literals (¬)1, . . . , (¬)n. The set O is the set of all possible outcomes.",
                "Note that the decision of the society is not incorporated here: an outcome only collects votes of agents from Σ. 3.1 Model Checking Model checking is currently one of the most active areas of research with respect to reasoning in modal logics [4], and it is natural to investigate the complexity of this problem for judgment aggregation logic.",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical <br>modal logic</br> the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) While this problem is easy to understand mathematically, it presents some difficulties if we want to analyse it from a computational point of view.",
                "Specifically, the problem lies in the representation of the judgment aggregation rule, f. Recall that this function maps judgment profiles to complete and consistent judgment sets.",
                "A JAR must be defined for all judgment profiles over some agenda, i.e., it must produce an output for all these possible inputs.",
                "But how are we to represent such a rule?",
                "The simplest representation of a function f : X → Y is as the set of ordered pairs {(x, y) | x ∈ X & y = f(x)}.",
                "However, this is not a feasible representation for JARs, as there will be exponentially many judgment profiles in the size of the agenda, and so the representation would be unfeasibly large in practice.",
                "If we did assume this representation for JARs, then it is not hard to see that model checking for our logic would be decidable in polynomial time: the naive algorithm, derivable from semantics, serves this purpose.",
                "However, we emphasise that this result is of no practical significance, since it assumes an unreasonable representation for models - a representation that simply could not be used in practice for examples of anything other than trivial size.",
                "So, what is a more realistic representation for JARs?",
                "Let us say a representation Rf of a JAR f is reasonable if: (i) the size of Rf is polynomial in the size of the agenda; and (ii) there is a polynomial time algorithm A, which takes as input a representation Rf and a judgment profile γ, and produces as output f(γ).",
                "There are, of course, many such representations Rf for JARs f. Here, we will look at one very general one: where the JAR is represented as a polynomially bounded two-tape Turing machine Tf , which takes on its first tape a judgment profile, and writes on its second tape the resulting judgment set.",
                "The requirement that the Turing machine should be polynomially bounded roughly corresponds to the requirement that a JAR is reasonable to compute; if there is some JAR that cannot be represented by such a machine, then it is arguably of little value, since it could not be used in practice2 .",
                "With such a representation, we can investigate the complexity of our model checking problem.",
                "In modal logics, the usual source of complexity, over and above the classical logic connectives, is the modal operators.",
                "With respect to judgment aggregation logic, the operator quantifies over all judgment profiles, and hence over all consistent subsets of the agenda.",
                "It follows that this is a rather powerful operator: as we will see, it can be used as an np oracle [9, p.339].",
                "In contrast, the operator quantifies over members of the agenda, and is hence much weaker, from a computational perspective (we can think of it as a conjunction over elements of the agenda).",
                "The power of the quantifier suggests that the complexity of model checking judgment aggregation logic over relatively succinct representations of JAR is going to be relatively high; we now prove that the complexity of model checking judgment aggregation logic is as hard as solving a polynomial number of np-hard problems [9, pp.424-429].",
                "Theorem 2.",
                "The model checking problem for judgment aggregation logic, assuming the representation of JARs described above, is Δp 2-hard; it is np-hard even if the formula to be checked is of the form ψ, where ψ contains no further or operators.",
                "Proof.",
                "For Δp 2-hardness, we reduce snsat (sequentially nested 2 Of course, we have no general way of checking whether any given Turing machine is guaranteed to terminate in polynomial time; the problem is undecidable.",
                "As a consequence, we cannot always check whether a particular Turing machine representation of a JAR meets our requirements.",
                "However, this does not prevent specific JARs being so represented, with corresponding proofs that they terminate in polynomial time. satisfiability).",
                "An instance is given by a series of equations of the form z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) where X1, . . . , Xk are disjoint sets of variables, and each φi(Y) is a propositional logic formula over the variables Y; the idea is we first check whether φ1(X1) is satisfiable, and if it is, we assign z1 the value true, otherwise assign it false; we then check whether φ2 is satisfiable under the assumption that z1 takes the value just derived, and so on.",
                "Thus the result of each equation depends on the value of the previous one.",
                "The goal is to determine whether zk is true.",
                "To reduce this problem to judgment aggregation logic model checking, we first fix the JAR: this rule simply copies whatever agent 1s judgment set is. (Clearly this can be implemented by a polynomially bounded Turing machine.)",
                "The agenda is assumed to contain the variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} and their negations.",
                "We fix the initial judgment profile γ to be X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, and fix p = x1.",
                "Given a variable xi, define x∗ i to be (hxi ∧1).",
                "If φi is one of the formulae φ1, . . . , φk, define φ∗ i to be the formula obtained from φi by systematically substituting x∗ i for each variable xi and z∗ i similarly.",
                "Now, we define the function ξi for natural numbers i > 0 as: ξk = z∗ 1 ↔ (φ∗ 1) if i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) otherwise.",
                "And we define the formula to be model checked as: φ∗ k ∧k−1 j=1 ξj It is now straightforward from construction that this formula is true under the interpretation iff zk is true in the snsat instance.",
                "The proof of the latter half of the theorem is immediate from the special case where k = 1. 3.2 Some Properties We have thus defined a language which can be used to express properties of judgment aggregation rules.",
                "An interesting question is then: what are the universal properties of aggregation rules expressible in the language; which formulae are valid?",
                "Here, in order to illustrate the logic, we discuss some of these logical properties.",
                "In Section 5 we give a complete axiomatisation of all of them.",
                "Recall that we defined the set O of outcomes as the set of all conjunctions with exactly one, possibly negated, atom from Σ.",
                "Let P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P completely describes the decisions of the agents and the aggregation function.",
                "Let denote exclusive or.",
                "We have that: |=L p∈Pp - any agent and the JAR always have to make a decision |=L (i ∧ ¬j) → ¬i - if some agent can think differently about an item than i does, then also i can change his mind about it.",
                "In fact this principle can be strengthened to |=L ( i ∧ ¬j) → (¬i ∧ j) |=L x - for any x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - both the individual agents and the JAR will always judge some agenda item to be true, and conversely, some agenda item to be false |=L (i ∧ j) - there exist admissible judgment sets such that agents i and j agree on some judgment. |=L (i ↔ j) - there exist admissible judgment sets such that agents i and j always agree.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 569 The interpretation of formulae depends on the agenda A and the underlying logic L, in the quantification over the set J(A, L)n of admissible, e.g., complete and L-consistent, judgment profiles.",
                "Note that this means that some jal formula might be valid under one underlying logic, while not under another.",
                "For example, if the agenda contains some formula which is inconsistent in the underlying logic (and, by implication, some tautology), then the following hold: |=L (i ∧ σ) - for every judgment profile, there is some agenda item (take a tautology) which both agent i and the JAR judges to be true But this property does not hold when every agenda item is consistent with respect to the underlying logic.",
                "One such agenda and underlying logic will be discussed in Section 6. 4.",
                "EXPRESSIVITY EXAMPLES Non-dictatorship can be expressed as follows: ND = i∈Σ ¬(σ ↔ i) (1) Lemma 1. f |=L ND iff f has the property ND1.",
                "Independence can be expressed as follows: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lemma 2. f |=L IND iff f has the property IND.",
                "Unanimity can be expressed as follows: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lemma 3. f |=L UNA iff f has the property UNA. 4.1 The Discursive Paradox As illustrated in Example 1, the following formula expresses proposition-wise majority voting over some proposition p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) i.e., the following property of a JAR f and admissible profile A1, . . . , An : p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactly iff f has the above property for all judgment profiles and propositions.",
                "However, we have the following in our logic.",
                "Assume that the agenda contains at least two distinct formulae and their material implication (i.e., A contains p, q, p → q for some p, q ∈ L(L)).",
                "Proposition 1 (Discursive Paradox). |=L (( MV) → ⊥) when there are at least three agents and the agenda contains at least two distinct formulae and their material implication.",
                "Proof.",
                "Assume the opposite, e.g., that A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} and there exists an aggregation rule f over A such that f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i).",
                "Let γ be the judgment profile γ = A1, A2, A3 where A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} and A3 = {¬p, p → q, ¬q, . . . }.",
                "We have that f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) for any p , so f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i.",
                "Because f, γ, p |=L 1 ∧ 2, it follows that f, γ, p |=L σ.",
                "In a similar manner it follows that f, γ, p → q |=L σ and f, γ, q |=L ¬σ.",
                "In other words, p ∈ f(γ), p → q ∈ f(γ) and q f(γ).",
                "Since f(γ) is complete, ¬q ∈ f(γ).",
                "But that contradicts the fact that f(γ) is required to be consistent.",
                "Proposition 1 is a logical statement of a variant of the well-known discursive dilemma: if three agents are voting on propositions p, q and p → q, proposition-wise majority voting might not yield a consistent result. 5.",
                "AXIOMATISATION Given an underlying logic L, a finite agenda A over L, and a set of agents Σ, Judgment Aggregation Logic (jal(L), or just jal when L is understood) for the language L(Σ, A), is defined in Table 2. ¬(hp ∧ hq) if p q Atmost p∈A hp Atleast hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Once (hp ∧ x) ∨ (hp ∧ x) CpJS all instantiations of propositional tautologies taut (ψ1 → ψ2) → ( ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ ψ → ¬ ψ 5 ( i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) From p1, . . . pn L q infer (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Closure From ϕ → ψ and ϕ infer ψ MP From ψ infer ψ Nec Table 2: The logic jal(L) for the language L(Σ, A). p, pi, q range over the agenda A; φ,ψ,ψi over L(Σ, A); x over {σ, i : i ∈ Σ}; over { , }; i, j over Σ; o over the set of outcomes O. hp means hq when p = ¬q for some q, otherwise it means h¬p.",
                "L is the underlying logic.",
                "The first 5 axioms represent properties of a table and of judgment sets.",
                "Axiom Atmost says that there is at most one item on the table at a time, and Atleast says that we always have an item on the table.",
                "Axiom Agenda says that every agenda item will appear on the table, whereas Once says that every item of the agenda only appears on the table once.",
                "Note that a conjunction hp ∧ x reads: item p is on the agenda, and x is in favour of it, or x judges it true.",
                "Axiom CpJS corresponds to the requirement that judgment sets are complete.",
                "Note that from Agenda, CsJS and CpJS we derive the scheme x ∧ ¬x, which says that everybody should at least express one opinion in favour of something, and against something.",
                "The axioms taut − 5 are well familiar from <br>modal logic</br>: they directly reflect the unrestricted quantification in the truth definition of and .",
                "Axiom C says that for any agenda item for which it is possible to have opposing opinions, every possible outcome for that item should be achievable.",
                "COMM says that everything that is true for an arbitrary profile and item, is also true for an arbitrary item and profile.",
                "Closure guarantees that agents behave consistently with respect to consequence in the logic L. MP and Nec are standard.",
                "We use JAL(L) to denote derivability in jal(L).",
                "Theorem 3.",
                "If the agenda is finite, we have that for any formula ψ ∈ L(Σ, A), JAL(L) ψ iff |=L ψ.",
                "Proof.",
                "Soundness is straightforward.",
                "For completeness (we focus on the main idea here and leave out trivial details), we build a 570 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) jal table for a consistent formula ψ as follows.",
                "In fact, our axiomatisation completely determines a table, except for the behaviour of f. To be more precise, let a table description be a conjunction of the form hp ∧ o ∧ (¬)σ.",
                "It is easy to see that table descriptions are mutually exclusive, and, moreover, we can derive τ∈T τ, where T is the set of all table descriptions.",
                "Let D be the set of all maximal consistent sets Δ.",
                "We dont want all of those: it might well be that ψ requires σ to be in a certain way, which is incompatible with some Δs.",
                "We define two accessibility relations in the standard way: R Δ1Δ2 iff for all ψ: ψ ∈ Δ1 ⇒ ψ ∈ Δ2.",
                "Similarly for R with respect to .",
                "Both relations are equivalences (due to taut-5), and moreover, when R Δ1Δ2 and R Δ2Δ3 then for some Δ2, also R Δ1Δ2 and R Δ2Δ3 (because of axiom COMM).",
                "Let Δ0 be a MCS containing ψ.",
                "We now define the set Tables = {Δ0} ∪ {Δ1, Δ2 | (R Δ0Δ1 and R Δ1Δ2) or (R Δ0Δ1 and R Δ1Δ2)} Every Δ ∈ Tables can be conceived as a pair γ, p, since every Δ contains a unique (hq ∧ o ∧ (¬)σ) for every hq and a unique hp.",
                "It is then easy to verify that, for every Δ ∈ Tables, and every formula ϕ, Δ |= ϕ iff ϕ ∈ Δ, where |= here means truth in the ordinary <br>modal logic</br> sense when the set of states is taken to be Tables.",
                "Now, we extract an aggregation function f and pairs γ, p as follows: For every Δ ∈ Tables, find a conjunction hp ∧ o ∧ (¬)σ.",
                "There will be exactly one such p. This defines the p we are looking for.",
                "Furthermore, the γ is obtained, for every agent i, by finding all q for which (hq ∧ i) is currently true.",
                "Finally, the function f is a table of all tuples hp, o(p), σ for which (hp ∧ o(o) ∧ σ) is contained in some set in Tables.",
                "We point out that jal has all the axioms taut, K, T, 4, 5 and the rules MP and Nec of the <br>modal logic</br> S5.",
                "However, uniform substitution, a principle of all normal modal logics (cf., e.g., [3]), does not hold.",
                "A counter example is the fact that the following is valid: σ (5) - no matter what preferences the agents have, the JAR will always make some judgment - while this is not valid: (σ ∧ i) (6) - the JAR will not necessarily make the same judgments as agent i.",
                "So, for example, we have that the discursive paradox is provable in jal(L): JAL(L) (( MV) → ⊥).",
                "An example of a derivation of the less complicated (valid) property (i ∧ j) is shown in Table 3. 6.",
                "PREFERENCE AGGREGATION Recently, Dietrich and List [5] showed that preference aggregation can be embedded in judgment aggregation.",
                "In this section we show that our judgment aggregation logic also can be used to reason about preference aggregation.",
                "Given a set K of alternatives, [5] defines a simple predicate logic LK with language L(LK ) as follows: • L(LK ) has one constant a for each alternative a ∈ K, variables v1, v2, . . ., a binary identity predicate =, a binary predicate P for strict preference, and the usual propositional and first order connectives • Z is the collection of the following axioms: - ∀v1 ∀v2 (v1Pv2 → ¬v2Pv1) - ∀v1 ∀v2 ∀v3 ((v1Pv2 ∧ v2Pv3) → v1Pv3) - ∀v1 ∀v2 (¬v1 = v2 → (v1Pv2 ∨ v2Pv1)) • When Γ ⊆ L(LK ) and φ is a formula, Γ |= φ is defined to hold iff Γ ∪ Z entails φ in the standard sense of predicate logic 1 (hp ∧ i) ∨ (hp ∧ i) CpJS(i) 2 (hp ∧ j) ∨ (hp ∧ j) CpJS(j) 3 Call 1 A ∨ B and 2 C ∨ D abbreviation, 1, 2 4 (A ∧ C) ∨ (A ∧ D) ∨ (B ∧ C) ∨ (B ∧ D) taut, 3 5 derive (i ∧ j) from every disjunct of 4 strategy is ∨ elim 6 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ C 7 (hp → (i ∧ j)) Once, 6, K( ) 8 (i ∧ j) 7, Agenda 9 (i ∧ j) 8, T( ) 10 (hp ∧ i) ∧ (hp ∧ j) assume A ∧ D 11 (hp ∧ x) ↔ (hp ∧ ¬x) Agenda, Closure 12 (hp ∧ i) ∧ (hp ∧ ¬j) 10, 11 13 (hp ∧ i ∧ ¬j) 12, Once, K( ) 14 (i ∧ ¬j) 13, taut 15 (i ∧ ¬j) 14, K( ) 16 (i ∧ ¬j) 15, COMM 17 ( i ∧ D¬j) 16, K( ) 18 (i ∧ j) 17, C 19 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ D 20 goes as 6-9 21 (hp ∧ i) ∧ (hp ∧ j) assume B ∧ C 22 goes as 10 - 18 23 (i ∧ j) ∨-elim, 1, 2, 9, 18, 20, 22 Table 3: jar derivation of (i ∧ j) It is easy to see that there is an one-to-one correspondence between the set of preference relations (total linear orders) over K and the set of LK -consistent and complete judgment sets over the preference agenda AK = {aPb, ¬aPb : a, b ∈ K, a b} Given a SWF F over K, the corresponding JAR fF over the preference agenda AK is defined as follows fF (A1, . . . , An) = A, where A is the consistent and complete judgment set corresponding to F(L1, . . . , Ln) where Li is the preference relation corresponding to the consistent and complete judgment set Ai.",
                "Thus we can use jal to reason about preference aggregation as follows.",
                "Take the logical language L(Σ, AK ), for some set of agents Σ, and take the underlying logic to be LK .",
                "We can then interpret our formulae in an SWF F over K, a preference profile L ∈ L(K) and a pair (a, b) ⊆ K × K, a b, as follows: F, L, (a, b) |=swf φ ⇔ fF , γL , aPb |=LK φ where γL is the judgment profile corresponding to the preference profile L. While in the general judgment aggregation case a formula is interpreted in the context of an agenda item, in the preference aggregation case a formula is thus interpreted in the context of a pair of alternatives.",
                "Example 2.",
                "Three agents must decide between going to dinner (d), a movie (m) or a concert (c).",
                "Their individual preferences are illustrated on the right in Table 1 in Section 3, along with the result of a SWF Fmaj implementing pair-wise majority voting.",
                "Let L = mdc, mcd, cmd be the preference profile corresponding to the preferences in the example.",
                "We have the following: • Fmaj, L, (m, d) |=swf 1 ∧ 2 ∧ 3 (all agents agree, under the individual rankings L, on the relative ranking of m and dthey agree that d is better than m) • Fmaj, L, (m, d) |=swf ¬(1 ↔ 2) (under the individual rankings L, there is some pair of alternatives on which agents 1 and 2 disagree) The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 571 • Fmaj, L, (m, d) |=swf (1 ∧ 2) (agents 1 and 2 can choose their preferences such that they will agree on some pair of alternatives) • Fmaj, L, (m, d) |=swf σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (the SWF Fmaj implements pair-wise majority voting) As usual, we write F |=swf φ when F, L, (a, b) |=swf φ for any L and (a, b), and so on.",
                "Thus, our formulae can be seen as expressing properties of social welfare functions.",
                "Example 3.",
                "Take the formula (i ↔ σ).",
                "When this formula is interpreted as a statement about a social welfare function, it says that there exists a preference profile such that for all pairs (a, b) of alternatives, b is preferred over a in the aggregation (by the SWF) of the preference profile if and only if agent i prefers b over a. 6.1 Expressivity Examples We make precise the claim in Section 2.2 that the three mentioned SWF properties correspond to the three mentioned JAR properties, respectively.",
                "Recall the formulae defined in Section 4.",
                "Proposition 2.",
                "F |=swf ND iff F has the property ND2 F |=swf IND iff F has the property IIA F |=swf UNA iff F has the property PO The properties expressed above are properties of SWFs.",
                "Let us now look at properties of the set of alternatives K we can express.",
                "Properties involving cardinality is often of interest, for example in Arrows theorem.",
                "Let: MT2 = ( (1 ∧ 2) ∧ (1 ∧ ¬2)) Proposition 3.",
                "Let F ∈ F (K). |K| > 2 iff F |=swf MT2.",
                "Proof.",
                "For the direction to the left, let F |=swf MT2.",
                "Thus, there is a γ such that there exists (a1 , b1 ), (a2 , b2 ) ∈ K × K, where a1 b1 , and a2 b2 , such that (i) a1 Pb1 ∈ γ1, (ii) a1 Pb1 ∈ γ2, (iii) a2 Pb2 ∈ γ1 and (iv) a2 Pb2 γ2.",
                "From (ii) and (iv) we get that (a1 , b1 ) (a2 , b2 ), and from that and (i) and (iii) it follows that γ1 contains two different pairs a1 Pb1 and a2 Pb2 each having two different elements.",
                "But that is not possible if |K| = 2, because if K = {a, b} then AK = {aPb, ¬aPb, bPa, ¬bPa} and thus it is impossible that γ1 ⊆ AK since we cannot have aPb, bPa ∈ γ1.",
                "For the direction to the right, let |K| > 2; let a, b, c be three distinct elements of K. Let γ1 be the judgment set corresponding to the ranking abc and γ2 the judgment set corresponding to acb.",
                "Now, for any aggregation rule f, f, γ, aPb |= 1 ∧ 2 and f, γ, bPc |= 1 ∧ ¬2.",
                "Thus, F |=swf MT2, for any SWF F. We now have everything we need to express Arrows statement as a formula.",
                "It follows from his theorem that the formula is valid on the class of all social welfare functions.",
                "Theorem 4. |=swf MT2 → ¬(PO ∧ ND ∧ IIA) Proof.",
                "Note that MT2, PO, ND and IIA are true SWF properties, their truth value wrt. a table is determined solely by the SWF.",
                "For example, F, L, (a, b) |=swf MT2 iff F |= MT2, for any F, L, a, b.",
                "Let F ∈ F (K), and F, L, (a, b) |=swf MT2 for some L and a, b.",
                "By Proposition 3, K has more than two alternatives.",
                "By Arrows theorem, F cannot have all the properties PO, ND2 and IIA.",
                "W.l.o.g assume that F does not have the PO property.",
                "By Proposition 2, F |=swf PO.",
                "Since PO is a SWF property, this means that F, L, (a, b) |=swf PO (satisfaction of PO is independent of L, a, b), and thus that F, L, (a, b) |=swf ¬PO ∨ ¬ND ∨ ¬IIA.",
                "Note that the formula in Theorem 4 does not mention any agenda items (i.e., pairs of alternatives) such as haPb directly in an expression.",
                "This means that the formula is a member of L(Σ, AK ) for any set of alternatives K, and is valid no matter which set of alternatives we assume.",
                "The formula MV which in the general judgment aggregation case expresses proposition-wise majority voting, expresses in the preference aggregation case pair-wise majority voting, as illustrated in Example 2.",
                "The preference aggregation correspondent to the discursive paradox of judgment aggregation is the well known Condorcets voting paradox, stating that pair-wise majority voting can lead to aggregated preferences which are cyclic (even if the individual preferences are not).",
                "We can express Condorcets paradox as follows, again as a universally valid logical property of SWFs.",
                "Proposition 4. |=swf MT2 → ¬MV, when there are at least three agents.",
                "Proof.",
                "The proof is similar to the proof of the discursive paradox.",
                "Let fF , γ, aPb |=LK MT2; there are thus three distinct elements a, b, c ∈ K. Assume that fF , γ, aPb |=LK MV.",
                "Let γ be the judgment profile corresponding to the preference profile X = (abc, cab, bca).",
                "We have that fF , γ , aPb |=LK 1 ∧ 2 and, since fF , γ , aPb |=LK MV, we have that fF , γ , aPb |=LK σ and thus that aPb ∈ fF (γ ) and (a, b) ∈ F(X).",
                "In a similar manner we get that (c, a) ∈ F(X) and (b, c) ∈ F(X).",
                "But that is impossible, since by transitivity we would also have that (a, c) ∈ F(X) which contradicts the fact that F(X) is antisymmetric.",
                "Thus, it follows that fF , γ, aPb |=LK MV. 6.2 Axiomatisation and Logical Properties We immediately get, from Theorem 3, a sound and complete axiomatisation of preference aggregation over a finite set of alternatives.",
                "Corollary 1.",
                "If the set of alternatives K is finite, we have that for any formula ψ ∈ L(Σ, AK ), JAL(LK ) ψ iff |=swf ψ.",
                "Proof.",
                "Follows immediately from Theorem 3 and the fact that for any JAR f, there is a SWF F such that f = fF .",
                "So, for example, Arrows theorem is provable in jal(LK ): JAL(LK ) MT2 → ¬(PO ∧ ND ∧ IIA).",
                "Every formula which is valid with respect to judgment aggregation rules is also valid with respect to social welfare functions, so all general logical properties of JARs are also properties of SWFs.",
                "Depending on the agenda, SWFs may have additional properties, induced by the logic LK , which are not always shared by JARs with other underlying logics.",
                "One such property is i.",
                "While we have |=swf i, for other agendas there are underlying logics L such that |=L i To see the latter, take an agenda with a formula p which is inconsistent in the underlying logic L - p can never be included in a judgment set.",
                "To see the former, take an arbitrary pair of alternatives (a, b).",
                "There exists some preference profile in which agent i prefers b over a. Technically speaking, the formula i holds in SWFs because the agenda AK does not contain a formula which (alone) is inconsistent wrt. the underlying logic LK .",
                "By the same reason, the following properties also hold in SWFs but not in JARs in general. |=swf o∈O o 572 The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) - for any pair of alternatives (a, b), any possible combination of the relative ranking of a and b among the agents is possible. |=swf i → ¬i - given an alternative b which is preferred over some other alternative a by agent i, there is some other pair of alternatives c and d such that d is not preferred over c - namely (c, d) = (b, a). |=swf ( (i ∨ j) → (i ∧ ¬j)) - if, given preferences of agents and a SWF, for any two alternatives it is always the case that either agent i or agent j prefers the second alternative over the first, then there must exist a pair of alternatives for which the two agents disagree.",
                "A justification is that no single agent can prefer the second alternative over the first for every pair of alternatives, so in this case if i prefers b over a then j must prefer a over b.",
                "Again, this property does not necessarily hold for other agendas, because the agenda might contain an inconsistency the agents could not possibly disagree upon.",
                "Proof theoretically, these additional properties of SWFs are derived using the Closure rule. 7.",
                "RELATED WORK Formal logics related to social choice have focused mostly on the logical representation of preferences when the set of alternatives is large and on the computation properties of computing aggregated preferences for a given representation [6, 7, 8].",
                "A notable and recent exception is a logical framework for judgment aggregation developed by Marc Pauly in [10], in order to be able to characterise the logical relationships between different judgment aggregation rules.",
                "While the motivation is similar to the work in this paper, the approaches are fundamentally different: in [10], the possible results from applying a rule to some judgment profile are taken as primary and described axiomatically; in our approach the aggregation rule and its possible inputs, i.e., judgment profiles, are taken as primary and described axiomatically.",
                "The two approaches do not seem to be directly related to each other in the sense that one can be embedded in the other.",
                "The <br>modal logic</br> arrow logic [11] is designed to reason about any object that can be graphically represented as an arrow, and has various modal operators for expressing properties of and relationships between these arrows.",
                "In the preference aggregation logic jal(LK ) we interpreted formulae in pairs of alternatives - which can be seen as arrows.",
                "Thus, (at least) the preference aggregation variant of our logic is related to arrow logic.",
                "However, while the modal operators of arrow logic can express properties of preference relations such as transitivity, they cannot directly express most of the properties we have discussed in this paper.",
                "Nevertheless, the relationship to arrow logic could be investigated further in future work.",
                "In particular, arrow logics are usually proven complete wrt. an algebra.",
                "This could mean that it might be possible to use such algebras as the underlying structure to represent individual and collective preferences.",
                "Then, changing the preference profile takes us from one algebra to another, and a SWF determines the collective preference, in each of the algebras. 8.",
                "DISCUSSION We have presented a sound and complete logic jal for representing and reasoning about judgment aggregation. jal is expressive: it can express judgment aggregation rules such as majority voting; complicated properties such as independence; and important results such as the discursive paradox, Arrows theorem and Condorcets paradox.",
                "We argue that these results show exactly which logical capabilities an agent needs in order to be able to reason about judgment aggregation.",
                "It is perhaps surprising that a relatively simple language provides these capabilities. jal provides a proof theory, in which results such as those mentioned above can be derived3 .",
                "The axiomatisation describes the logical principles of judgment aggregation, and can also be instantiated to reason about specific instances of judgment aggregation, such as classical Arrovian preference aggregation.",
                "Thus our framework sheds light on the differences between the logical principles behind general judgment aggregation on the one hand and classical preference aggregation on the other.",
                "In future work it would be interesting to relax the completeness and consistency requirements of judgment sets, and try to characterise these in the logical language, as properties of general judgment sets, instead. 9.",
                "ACKNOWLEDGMENTS We thank the anonymous reviewers for their helpful remarks.",
                "Thomas Ågotnes work on this paper was supported by grants 166525/V30 and 176853/S10 from the Research Council of Norway. 10.",
                "REFERENCES [1] K. J. Arrow.",
                "Social Choice and Individual Values.",
                "Wiley, 1951. [2] K. J. Arrow, A. K. Sen, and K. Suzumura, eds.",
                "Handbook of Social Choice and Welfare, volume 1.",
                "North-Holland, 2002. [3] P. Blackburn, M. de Rijke, and Y. Venema.",
                "<br>modal logic</br>.",
                "Cambridge University Press, 2001. [4] E. M. Clarke, O. Grumberg, and D. A. Peled.",
                "Model Checking.",
                "The MIT Press: Cambridge, MA, 2000. [5] F. Dietrich and C. List.",
                "Arrows theorem in judgment aggregation.",
                "Social Choice and Welfare, 2006.",
                "Forthcoming. [6] C. Lafage and J. Lang.",
                "Logical representation of preferences for group decision making.",
                "In Proceedings of the Conference on Principles of Knowledge Representation and Reasoning (KR-00), pages 457-470.",
                "Morgan Kaufman, 2000. [7] J. Lang.",
                "From preference representation to combinatorial vote.",
                "Proceedings of the Eighth International Conference on Principles and Knowledge Representation and Reasoning (KR-02), pages 277-290.",
                "Morgan Kaufmann, 2002. [8] J. Lang.",
                "Logical preference representation and combinatorial vote.",
                "Ann.",
                "Math.",
                "Artif.",
                "Intell, 42(1-3):37-71, 2004. [9] C. H. Papadimitriou.",
                "Computational Complexity.",
                "Addison-Wesley: Reading, MA, 1994. [10] M. Pauly.",
                "Axiomatizing collective judgment sets in a minimal logical language, 2006.",
                "Manuscript. [11] Y. Venema.",
                "A crash course in arrow logic.",
                "In M. Marx, M. Masuch, and L. Polos, editors, Arrow Logic and Multi-<br>modal logic</br>, pages 3-34.",
                "CSLI Publications, Stanford, 1996. 3 Dietrich and List [5] prove a general version of Arrows theorem for JARs: for a strongly connected agenda, a JAR has the IND and UNA properties iff it does not have the ND1 property, where strong connectedness is an algebraic and logical condition on agendas.",
                "Thus, if we assume that the agenda is strongly connected then (ND ∧ UNA) ↔ ¬ND1 is valid, and derivable in jar.",
                "An interesting possibility for future work is to try to characterise conditions such as strong connectedness directly as a logical formula.",
                "The Sixth Intl.",
                "Joint Conf. on Autonomous Agents and Multi-Agent Systems (AAMAS 07) 573"
            ],
            "original_annotated_samples": [
                "We present a <br>modal logic</br> that is intended to support reasoning about judgment aggregation scenarios (and hence, as a special case, about preference aggregation): the logical language is interpreted directly in judgment aggregation rules.",
                "Categories and Subject Descriptors I.2.11 [Artificial Intelligence]: Distributed Artificial IntelligenceMultiagent systems; I.2.4 [Artificial Intelligence]: Knowledge Representation Formalisms and Methods-<br>modal logic</br> General Terms Theory 1.",
                "From these points it might seem that such a language would be rather complex (in particular, these requirements seem to rule out a standard propositional <br>modal logic</br>).",
                "Intuitively, the model checking problem for judgment aggregation logic is as follows: Given f, γ, p and formula φ of jal, is it the case that f, γ, p |= φ or not? 1 Likewise, in classical <br>modal logic</br> the language is parameterised with a set of primitive propositions, and validity is defined with respect to all models with valuations over that particular set. 568 The Sixth Intl.",
                "The axioms taut − 5 are well familiar from <br>modal logic</br>: they directly reflect the unrestricted quantification in the truth definition of and ."
            ],
            "translated_annotated_samples": [
                "Presentamos una <br>lógica modal</br> que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios.",
                "Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-<br>Lógica Modal</br> Términos Generales Teoría 1.",
                "A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una <br>lógica modal</br> proposicional estándar).",
                "De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la <br>lógica modal</br> clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional.",
                "Los axiomas taut − 5 son muy familiares en la <br>lógica modal</br>: reflejan directamente la cuantificación no restringida en la definición de verdad de y."
            ],
            "translated_text": "Razonamiento sobre la Agregación de Juicios y Preferencias Thomas Agotnes Departamento de Ingeniería Informática, Colegio Universitario de Bergen PB. Los agentes que deben llegar a acuerdos con otros agentes necesitan razonar sobre cómo sus preferencias, juicios y creencias podrían ser agregados con los de otros por los mecanismos de elección social que rigen sus interacciones. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y considera cómo múltiples conjuntos de fórmulas lógicas pueden ser agregados en un único conjunto consistente. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias clásica. Presentamos una <br>lógica modal</br> que está destinada a respaldar el razonamiento sobre escenarios de agregación de juicios (y, por lo tanto, como un caso especial, sobre la agregación de preferencias): el lenguaje lógico se interpreta directamente en las reglas de agregación de juicios. Presentamos una axiomatización sólida y completa de dichas reglas. Mostramos que la lógica puede expresar reglas de agregación como la votación mayoritaria; propiedades de reglas como la independencia; y resultados como el paradoja discursiva, el teorema de Arrow y la paradoja de Condorcet, que se pueden derivar como teoremas formales de la lógica. La lógica está parametrizada de tal manera que puede ser utilizada como un marco general para comparar las propiedades lógicas de diferentes tipos de agregación, incluida la agregación de preferencias clásica. Categorías y Descriptores de Asignaturas I.2.11 [Inteligencia Artificial]: Inteligencia Artificial DistribuidaSistemas Multiagente; I.2.4 [Inteligencia Artificial]: Formalismos y Métodos de Representación del Conocimiento-<br>Lógica Modal</br> Términos Generales Teoría 1. En este artículo, nos interesa los formalismos de representación del conocimiento para sistemas en los que los agentes necesitan agregar sus preferencias, juicios, creencias, etc. Por ejemplo, un agente puede necesitar razonar sobre la votación mayoritaria en un grupo del que es miembro. La agregación de preferencias, que consiste en combinar las relaciones de preferencia individuales sobre un conjunto de alternativas en una relación de preferencia que representa las preferencias conjuntas del grupo mediante las llamadas funciones de bienestar social, ha sido ampliamente estudiada en la teoría de la elección social. El campo emergente de la agregación de juicios estudia la agregación desde una perspectiva lógica, y discute cómo, dada un conjunto consistente de fórmulas lógicas para cada agente, que representan las creencias o juicios de los agentes, podemos agregarlos en un único conjunto consistente de fórmulas. Se han desarrollado una variedad de reglas de agregación de juicios con este fin. Como caso especial, la agregación de juicios puede considerarse como un subconjunto de la agregación de preferencias [5]. En este artículo presentamos una lógica, llamada Lógica de Agregación de Juicios (JAL), para razonar sobre la agregación de juicios. Las fórmulas de la lógica se interpretan como afirmaciones sobre reglas de agregación de juicios, y proporcionamos una axiomatización sólida y completa de todas esas reglas. La axiomatización está parametrizada de tal manera que podemos instanciarla para obtener una variedad de lógicas de agregación de juicios diferentes. Por ejemplo, una instancia es una axiomatización, en nuestro lenguaje, de todas las funciones de bienestar social, de esta manera obtenemos una lógica de agregación de preferencias clásica también. Y esta es una de las principales contribuciones de este artículo: identificamos las propiedades lógicas de la agregación de juicios, y podemos comparar las propiedades lógicas de diferentes clases de agregación de juicios, y en particular de la agregación de juicios generales y la agregación de preferencias. Por supuesto, una lógica solo es interesante mientras sea expresiva. Uno de los objetivos de este artículo es investigar las capacidades representacionales y lógicas que un agente necesita para la agregación de juicios y preferencias; es decir, ¿qué tipo de lenguaje lógico podría utilizarse para representar y razonar sobre la agregación de juicios? El lenguaje de representación del conocimiento de un agente debe ser capaz de expresar: reglas comunes de agregación como la votación mayoritaria; propiedades comúnmente discutidas de las reglas de agregación de juicios y funciones de bienestar social como la independencia; paradojas comúnmente utilizadas para ilustrar la agregación de juicios y preferencias, a saber, la paradoja discursiva y la paradoja de Condorcet respectivamente; y otras propiedades importantes como el teorema de Arrow. Para ilustrar con más detalle lo que una lengua así necesitaría poder expresar, tomemos el ejemplo de una propiedad potencial de las funciones de bienestar social (FBS) llamada independencia de alternativas irrelevantes (IAI): dados dos perfiles de preferencias (cada uno consistente en una relación de preferencia para cada agente) y dos alternativas, si para cada agente las dos alternativas tienen el mismo orden en los dos perfiles de preferencias, entonces las dos alternativas deben tener el mismo orden en las dos relaciones de preferencia resultantes de aplicar la FBS a los dos perfiles de preferencias, respectivamente. A partir de este ejemplo parece que un lenguaje formal para SWFs debería ser capaz de expresar: 566 978-81-904262-7-5 (RPS) c 2007 IFAAMAS • Cuantificación en varios niveles: sobre alternativas; sobre perfiles de preferencia, es decir, sobre relaciones sobre alternativas (cuantificación de segundo orden); y sobre agentes. • Propiedades de relaciones de preferencia para diferentes agentes, y propiedades de varias relaciones de preferencia diferentes para el mismo agente en la misma fórmula. • Comparación de diferentes relaciones de preferencia. • La relación de preferencia resultante de aplicar un SWF a otras relaciones de preferencia. A partir de estos puntos, podría parecer que tal lenguaje sería bastante complejo (en particular, estos requisitos parecen descartar una <br>lógica modal</br> proposicional estándar). Quizás sorprendentemente, el lenguaje de jal es sintáctica y semánticamente bastante simple; y sin embargo, el lenguaje es, no obstante, lo suficientemente expresivo como para dar expresiones elegantes y concisas de, por ejemplo, IIA, votación mayoritaria, el dilema discursivo, la paradoja de Condorcet y el teorema de Arrow. Esto significa, por ejemplo, que el teorema de Arrow es un teorema formal de jal, es decir, una fórmula derivable; por lo tanto, tenemos una teoría formal de la prueba para la elección social. La estructura del resto del documento es la siguiente. En la siguiente sección revisamos los conceptos básicos de la agregación de juicios, así como la agregación de preferencias, y mencionamos algunas propiedades comúnmente discutidas de las reglas de agregación de juicios y las funciones de bienestar social. En la Sección 3 introducimos la sintaxis y semántica de jal, y estudiamos la complejidad del problema de verificación del modelo. Las fórmulas de jal son interpretadas directamente por, y por lo tanto representan propiedades de, las reglas de agregación de juicios. En la Sección 4 demostramos que la lógica puede expresar propiedades comúnmente discutidas de las reglas de agregación de juicios, como el paradigma discursivo. Proporcionamos una axiomatización sólida y completa de la lógica en la Sección 5, bajo la suposición de que la agenda sobre la que los agentes emiten juicios es finita. Como se mencionó anteriormente, la agregación de preferencias puede ser vista como un caso especial de agregación de juicios, y en la Sección 6 presentamos una interpretación alternativa de las fórmulas jal directamente en funciones de bienestar social. Obtenemos una axiomatización sólida y completa de la lógica para la agregación de preferencias también. Las secciones 7 y 8 discuten el trabajo relacionado y concluyen. La agregación de juicios y preferencias se refiere a reglas de agregación de juicios que agregan conjuntos de fórmulas lógicas; la agregación de preferencias se refiere a funciones de bienestar social que agregan preferencias sobre un conjunto de alternativas. Sea n un número de agentes; escribimos Σ para el conjunto {1, . . . , n}. 2.1 Reglas de Agregación de Juicios Sea L una lógica con lenguaje L(L). Requerimos que el lenguaje tenga negación e implicación material, con la semántica habitual. A veces nos referiremos a L como la lógica subyacente. Una agenda sobre L es un conjunto no vacío A ⊆ L(L), donde para cada fórmula φ que no comienza con una negación, φ ∈ A si y solo si ¬φ ∈ A. A veces llamamos a un miembro de A un punto del orden del día. Un subconjunto A ⊆ A es consistente a menos que A implique tanto ¬φ como φ en L para algún φ ∈ L(L); A es completo si φ ∈ A o ¬φ ∈ A para cada φ ∈ A que no comience con una negación. Un conjunto de juicios individuales (admisible) es un subconjunto completo y consistente Ai ⊆ A de la agenda. La idea aquí es que un conjunto de juicios Ai representa las elecciones de A hechas por el agente i. Dos criterios de racionalidad exigen que las elecciones de un agente al menos sean internamente consistentes, y que cada agente tome una decisión entre cada ítem y su negación. Un perfil de juicio (admisible) es una n-tupla A1, . . . , An, donde Ai es el conjunto de juicios individuales del agente i. J(A, L) denota el conjunto de todos los conjuntos de juicios individuales (completos y L-coherentes) sobre A, y J(A, L)n el conjunto de todos los perfiles de juicio sobre A. Cuando γ ∈ J(A, L)n, usamos γi para denotar el i-ésimo elemento de γ, es decir, el agente es un conjunto de juicios individuales en el perfil de juicio γ. Una regla de agregación de juicios (RAJ) es una función f que asigna a cada perfil de juicios A1, . . . , An un conjunto de juicios colectivos completo y consistente f(A1, . . . , An) ∈ J(A, L). Una regla de este tipo es, por lo tanto, una receta para hacer cumplir una decisión de grupo racional, dada una tupla de elecciones racionales por parte de los agentes individuales. Por supuesto, tal regla debería ser justa hasta cierto punto. Algunas posibles propiedades de una regla de agregación de juicios f sobre una agenda A: No dictadura (ND1) No hay un agente i tal que para cada perfil de juicios A1, . . . , An, f(A1, . . . , An) = Ai Independencia (IND) Para cualquier p ∈ A y perfiles de juicios A1, . . . , An y B1, . . . , Bn, si para todos los agentes i (p ∈ Ai si y solo si p ∈ Bi), entonces p ∈ f(A1, . . . , An) si y solo si p ∈ f(B1, . . . , Bn) Unanimidad (UNA) Para cualquier perfil de juicios A1, . . . , An y cualquier p ∈ A, si p ∈ Ai para todos los agentes i, entonces p ∈ f(A1, . . . , An) 2.2 Funciones de Bienestar Social Las funciones de bienestar social (SWFs) suelen definirse en términos de estructuras de preferencia ordinal, en lugar de estructuras cardinales como funciones de utilidad. Un SWF toma una relación de preferencia, una relación binaria sobre un conjunto de alternativas, para cada agente, y produce otra relación de preferencia que representa las preferencias agregadas. El resultado más conocido sobre las SWFs es el teorema de Arrow [1]. Muchas variantes del teorema aparecen en la literatura, difiriendo en las suposiciones sobre las relaciones de preferencia. En este documento, asumimos que todas las relaciones de preferencia son órdenes lineales, es decir, que ni los agentes ni la preferencia agregada pueden ser indiferentes entre distintas alternativas. Esto proporciona una de las formulaciones más simples del teorema de Arrow (Teorema 1 a continuación). Cf., por ejemplo, [2] para una discusión y formulaciones más generales. Formalmente, sea K un conjunto de alternativas. Por lo tanto, asumimos implícitamente que siempre hay al menos dos alternativas. Una relación de preferencia (sobre K) es, aquí, un orden total (lineal) en K, es decir, una relación R sobre K que es antisimétrica (es decir, (a, b) ∈ R y (b, a) ∈ R implica que a = b), transitiva (es decir, (a, b) ∈ R y (b, c) ∈ R implica que (a, c) ∈ R), y total (es decir, o bien (a, b) ∈ R o (b, a) ∈ R). A veces usamos la notación de infijo aRb para (a, b) ∈ R. El conjunto de relaciones de preferencia sobre alternativas K se denota L(K). Alternativamente, podemos ver L(K) como el conjunto de todas las permutaciones de K. Por lo tanto, a veces usaremos una permutación de K para denotar un miembro de L(K). Por ejemplo, cuando K = {a, b, c}, a veces usaremos la expresión acb para denotar la relación {(a, c), (a, b), (c, b), (a, a), (b, b), (c, c)}. aRb significa que b es preferido sobre a si a y b son diferentes. Rs denota la versión irreflexiva de R, es decir, Rs = R \\ {(a, a) : a ∈ K}. aRs b significa que b es preferido sobre a y que a b. Un perfil de preferencias para Σ sobre las alternativas K es una tupla (R1, . . . , Rn) ∈ L(K)n, que consiste en una relación de preferencia Ri para cada agente i. Una función de bienestar social (SWF) es una función F: L(K)n → L(K) que asigna cada perfil de preferencias a una relación de preferencias agregadas. La clase de todas las SWFs sobre las alternativas K se denota F(K). Las propiedades de los SWFs F correspondientes a las propiedades de la regla de agregación de juicios discutidas en la Sección 2.1 son: La Sexta Internacional. La Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) 567 No-dictadura (ND2) ¬∃i∈Σ∀(R1, . . . , Rn) ∈ L(K)n F(R1, . . . , Rn) = Ri (corresponde a ND1) Independencia de alternativas irrelevantes (IIA) ∀(R1, . . . , Rn) ∈ L(K)n ∀(S1, . . . , Sn) ∈ L(K)n ∀a ∈ K∀b ∈ K((∀i ∈ Σ(aRib ⇔ aSib)) ⇒ (aF(R1, . . . , Rn)b ⇔ aF(S1, . . . , Sn)b)) (corresponde a IND) Optimalidad de Pareto (PO) ∀(R1, . . . , Rn) ∈ L(K)n ∀a ∈ K∀b ∈ K ((∀i ∈ ΣaRs i b) ⇒aF(R1, . . . , Rn)s b) (corresponde a UNA) El teorema de Arrow dice que las tres propiedades anteriores son inconsistentes si hay más de dos alternativas. Teorema 1 (Flecha). Si hay más de dos alternativas, ninguna SWF tiene todas las propiedades PO, ND2 e IIA. 3. La lógica de agregación de juicios (JAL) está parametrizada por un conjunto de agentes Σ = {1, 2, . . . , n} (asumiremos que hay al menos dos agentes) y un orden del día A. Las siguientes proposiciones atómicas son utilizadas: Π = {i, σ, hp | p ∈ A, i ∈ Σ}. El lenguaje L(Σ, A) de jal está definido por la siguiente gramática: φ ::= α | φ | φ | φ ∧ φ | ¬φ donde α ∈ Π. Este lenguaje será interpretado formalmente en estructuras que consisten en un ítem de agenda, un perfil de juicio y una función de agregación de juicios; informalmente, i significa que el ítem de agenda está en el conjunto de juicios del agente en el perfil de juicio actual; σ significa que el ítem de agenda está en el conjunto de juicios agregados del perfil de juicio actual; hp significa que el ítem de agenda es p; φ significa que φ es verdadero en cada perfil de juicio; φ significa que φ es verdadero en cada ítem de agenda. Definimos ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún perfil de juicio, y ψ = ¬ ¬ψ, significando intuitivamente que ψ es verdadero para algún tema de agenda, como es habitual, además de las habituales conectivas proposicionales derivadas. Ahora definimos la semántica formal de L(Σ, A). Un modelo con respecto a. L(Σ, A) y la lógica subyacente L es una regla de agregación de juicios f sobre A. Recuerde que J(A, L)n denota el conjunto de perfiles de juicio completos y L-coherentes sobre A. Una tabla es una tupla T = f, γ, p tal que f es un modelo, γ ∈ J(A, L)n y p ∈ A. Una fórmula se interpreta en una tabla de la siguiente manera. f, γ, p |=L hq ⇔ p = q f, γ, p |=L i ⇔ p ∈ γi f, γ, p |=L σ ⇔ p ∈ f(γ) f, γ, p |=L ψ ⇔ ∀γ ∈ J(A, L)n f, γ , p |=L ψ f, γ, p |=L ψ ⇔ ∀p ∈ A f, γ, p |=L ψ f, γ, p |=L φ ∧ ψ ⇔ f, γ, p |=L φ y f, γ, p |=L ψ f, γ, p |=L ¬φ ⇔ f, γ, p |=L φ Por lo tanto, por ejemplo, tenemos que f, γ, p |=L i∈Σ i si todos eligen p en γ. Ejemplo 1. Un comité de tres agentes está votando sobre las siguientes tres proposiciones: el candidato está calificado (p), si el candidato está calificado, recibirá una oferta (p → q), y el candidato recibirá una oferta (q). Un posible escenario de votación se ilustra en la parte izquierda de la Tabla 1. En la tabla, también se muestran los resultados de la votación mayoritaria proposicional, es decir, el JAR fmaj acepta una proposición si es aceptada por la mayoría de los agentes, también p p → q q 1 sí sí sí 2 no sí sí 3 sí no no fmaj sí sí sí 1 mdc 2 mcd 3 cmd Fmaj mcd Tabla 1: Ejemplos mostrados. Este ejemplo puede ser modelado tomando la agenda como A = {p, p → q, q, ¬p, ¬(p → q), ¬q} (recordemos que las agendas están cerradas bajo negación simple) y L como lógica proposicional. Los votos de los agentes pueden ser modelizados por el siguiente perfil de juicio: γ = γ1, γ2, γ3, donde γ1 = {p, p → q, q}, γ2 = {¬p, p → q, q}, γ3 = {p, ¬(p → q), ¬q}. Entonces tenemos que: • fmaj, γ, p |=L 1 ∧ ¬2 ∧ 3 (los agentes 1 y 3 juzgan que p es verdadero en el perfil γ, mientras que el agente 2 no lo hace) • fmaj, γ, p |=L σ (la votación mayoritaria sobre p dada la preferencia del perfil γ conduce a la aceptación de p) • fmaj, γ, p |=L (1 ∧ 2) (los agentes 1 y 2 están de acuerdo en algún tema de la agenda, bajo el perfil de juicio γ. Tenga en cuenta que esta fórmula no depende de qué punto del orden del día esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en p. Tenga en cuenta que esta fórmula no depende de qué perfil de juicio esté sobre la mesa.) • fmaj, γ, p |=L ((1 ↔ 2) ∧ (2 ↔ 3) ∧ (1 ↔ 3)) (hay algún perfil de juicio en el que todos los agentes estén de acuerdo en todos los puntos del orden del día. Ten en cuenta que esta fórmula no depende de ninguno de los elementos en la tabla. • fmaj, γ, p |=L σ ↔ G⊆{1,2,3},|G|≥2 i∈G i (el JAR fmaj implementa la votación mayoritaria) Escribimos f |=L φ si f, γ, p |=L φ para cada γ sobre A y p ∈ A; |=L φ si f |=L φ para todos los modelos f. Dada una posible propiedad de un JAR, como, por ejemplo, independencia, decimos que una fórmula expresa la propiedad si la fórmula es verdadera en una regla de agregación f si f tiene la propiedad. Ten en cuenta que cuando se nos da una fórmula φ ∈ L(Σ, A), la validez, es decir, |=L φ, se define con respecto a modelos del lenguaje particular L(Σ, A) definido sobre la agenda particular A (y de manera similar para la validez con respecto a un JAR, es decir, f |=L φ). La agenda, al igual que el conjunto de agentes Σ, se establece cuando definimos el lenguaje, y por lo tanto es implícita en la interpretación del lenguaje. Que un resultado o sea una conjunción máxima de literales (¬)1, . . . , (¬)n. El conjunto O es el conjunto de todos los resultados posibles. Se debe tener en cuenta que la decisión de la sociedad no está incorporada aquí: un resultado solo recopila los votos de los agentes de Σ. 3.1 Verificación de modelos La verificación de modelos es actualmente una de las áreas de investigación más activas en lo que respecta al razonamiento en lógicas modales [4], y es natural investigar la complejidad de este problema para la lógica de agregación de juicios. De manera intuitiva, el problema de verificación de modelos para la lógica de agregación de juicios es el siguiente: Dados f, γ, p y la fórmula φ de jal, ¿es el caso que f, γ, p |= φ o no? Del mismo modo, en la <br>lógica modal</br> clásica, el lenguaje se parametriza con un conjunto de proposiciones primitivas, y la validez se define con respecto a todos los modelos con valuaciones sobre ese conjunto particular. La Sexta Conferencia Internacional. Conferencia Conjunta sobre Agentes Autónomos y Sistemas Multiagente (AAMAS 07) Si bien este problema es fácil de entender matemáticamente, presenta algunas dificultades si queremos analizarlo desde un punto de vista computacional. Específicamente, el problema radica en la representación de la regla de agregación de juicios, f. Recuerde que esta función mapea perfiles de juicios a conjuntos de juicios completos y consistentes. Un JAR debe ser definido para todos los perfiles de juicio sobre alguna agenda, es decir, debe producir un resultado para todas estas posibles entradas. ¿Pero cómo representaremos tal regla? La representación más simple de una función f : X → Y es como el conjunto de pares ordenados {(x, y) | x ∈ X & y = f(x)}. Sin embargo, esta no es una representación factible para las JARs, ya que habría un número exponencial de perfiles de juicio en el tamaño de la agenda, por lo que la representación sería inmanejablemente grande en la práctica. Si asumiéramos esta representación para los JARs, entonces no sería difícil ver que la verificación de modelos para nuestra lógica sería decidible en tiempo polinómico: el algoritmo ingenuo, derivado de la semántica, cumple este propósito. Sin embargo, enfatizamos que este resultado no tiene ninguna relevancia práctica, ya que asume una representación poco razonable para los modelos, una representación que simplemente no podría ser utilizada en la práctica para ejemplos de tamaño no trivial. Entonces, ¿cuál es una representación más realista para los JARs? Digamos que una representación Rf de un JAR f es razonable si: (i) el tamaño de Rf es polinomial en el tamaño de la agenda; y (ii) existe un algoritmo de tiempo polinómico A, que toma como entrada una representación Rf y un perfil de juicio γ, y produce como salida f(γ). Por supuesto, hay muchas representaciones Rf para los JARs f. Aquí, examinaremos una muy general: donde el JAR se representa como una máquina de Turing de dos cintas acotada polinomialmente Tf, que recibe en su primera cinta un perfil de juicio y escribe en su segunda cinta el conjunto de juicios resultante. El requisito de que la máquina de Turing debe estar acotada polinomialmente corresponde aproximadamente al requisito de que un JAR sea razonable de calcular; si hay algún JAR que no pueda ser representado por tal máquina, entonces es discutiblemente de poco valor, ya que no podría ser utilizado en la práctica. Con una representación así, podemos investigar la complejidad de nuestro problema de verificación del modelo. En lógicas modales, la fuente habitual de complejidad, además de los conectivos lógicos clásicos, son los operadores modales. En lo que respecta a la lógica de agregación de juicios, el operador cuantifica sobre todos los perfiles de juicio, y por lo tanto sobre todos los subconjuntos consistentes de la agenda. Se deduce que este es un operador bastante potente: como veremos, se puede utilizar como un oráculo de np [9, p.339]. Por el contrario, el operador cuantifica sobre los miembros de la agenda, y por lo tanto es mucho más débil, desde una perspectiva computacional (podemos pensarlo como una conjunción sobre elementos de la agenda). El poder del cuantificador sugiere que la complejidad de la verificación de modelos de la lógica de agregación de juicios sobre representaciones relativamente concisas de JAR va a ser relativamente alta; ahora demostramos que la complejidad de la verificación de modelos de la lógica de agregación de juicios es tan difícil como resolver un número polinomial de problemas np-difíciles [9, pp.424-429]. Teorema 2. El problema de verificación de modelos para la lógica de agregación de juicios, asumiendo la representación de JARs descrita anteriormente, es Δp 2-difícil; es np-difícil incluso si la fórmula a verificar es de la forma ψ, donde ψ no contiene más operadores o. Prueba. Para la dureza Δp 2, reducimos snsat (secuencialmente anidado 2). Por supuesto, no tenemos una forma general de verificar si una máquina de Turing dada está garantizada para terminar en tiempo polinómico; el problema es indecidible. Como consecuencia, no siempre podemos verificar si una representación particular de una máquina de Turing de un JAR cumple con nuestros requisitos. Sin embargo, esto no impide que JARs específicos estén representados de esta manera, con pruebas correspondientes de que terminan en tiempo polinómico. satisfacibilidad). Una instancia está dada por una serie de ecuaciones de la forma z1 = ∃X1.φ1(X1) z2 = ∃X2.φ2(X2, z1) z3 = ∃X3.φ3(X3, z1, z2) . . . zk = ∃Xk.φk(Xk, z1, . . . , zk−1) donde X1, . . . , Xk son conjuntos disjuntos de variables, y cada φi(Y) es una fórmula de lógica proposicional sobre las variables Y; la idea es primero verificar si φ1(X1) es satisfacible, y si lo es, asignamos a z1 el valor verdadero, de lo contrario lo asignamos falso; luego verificamos si φ2 es satisfacible bajo la suposición de que z1 toma el valor recién derivado, y así sucesivamente. Por lo tanto, el resultado de cada ecuación depende del valor de la anterior. El objetivo es determinar si zk es verdadero. Para reducir este problema al modelo de lógica de agregación de juicios, primero fijamos el JAR: esta regla simplemente copia el conjunto de juicios del agente 1. (Claramente esto puede ser implementado por una máquina de Turing limitada polinomialmente). Se asume que la agenda contiene las variables X1 ∪ · · · ∪ Xk ∪ {z1, . . . , zk} y sus negaciones. Fijamos el perfil de juicio inicial γ como X1 ∪· · ·∪Xk ∪{z1, . . . , zk}, y fijamos p = x1. Dada una variable xi, define x∗ i como (hxi ∧1). Si φi es una de las fórmulas φ1, . . . , φk, define φ∗ i como la fórmula obtenida de φi al sustituir sistemáticamente x∗ i por cada variable xi y z∗ i de manera similar. Ahora, definimos la función ξi para números naturales i > 0 como: ξk = z∗ 1 ↔ (φ∗ 1) si i = 1 z∗ i ↔ (φ∗ i ∧i−1 j=1 ξj) en otro caso. Y definimos la fórmula a ser verificada como: φ∗ k ∧k−1 j=1 ξj. Ahora es evidente a partir de la construcción que esta fórmula es verdadera bajo la interpretación si y solo si zk es verdadero en la instancia snsat. La prueba de la segunda mitad del teorema es inmediata a partir del caso especial donde k = 1. 3.2 Algunas Propiedades Hemos definido un lenguaje que se puede utilizar para expresar propiedades de las reglas de agregación de juicios. Una pregunta interesante es entonces: ¿cuáles son las propiedades universales de las reglas de agregación expresables en el lenguaje; qué fórmulas son válidas? Aquí, para ilustrar la lógica, discutimos algunas de estas propiedades lógicas. En la Sección 5 damos una axiomatización completa de todos ellos. Recuerde que definimos el conjunto O de resultados como el conjunto de todas las conjunciones con exactamente un átomo, posiblemente negado, de Σ. Sea P = {o ∧ σ, o ∧ ¬σ : o ∈ O}; p ∈ P describe completamente las decisiones de los agentes y la función de agregación. Permitamos que denote la operación lógica de o exclusivo. Tenemos que: |=L p∈Pp - cualquier agente y el JAR siempre tienen que tomar una decisión |=L (i ∧ ¬j) → ¬i - si algún agente puede pensar de manera diferente sobre un ítem que i, entonces i también puede cambiar de opinión al respecto. De hecho, este principio puede fortalecerse a |=L (i ∧ ¬j) → (¬i ∧ j) |=L x - para cualquier x ∈ {i, ¬i, σ, ¬σ : i ∈ Σ} - tanto los agentes individuales como el JAR siempre juzgarán que algún tema de la agenda es verdadero, y viceversa, que algún tema de la agenda es falso |=L (i ∧ j) - existen conjuntos de juicios admisibles tales que los agentes i y j están de acuerdo en algún juicio. |=L (i ↔ j) - existen conjuntos de juicios admisibles tales que los agentes i y j siempre están de acuerdo. El Sexto Internacional. La interpretación de las fórmulas depende de la agenda A y la lógica subyacente L, en la cuantificación sobre el conjunto J(A, L)n de perfiles de juicio admisibles, por ejemplo, completos y L-coherentes. Ten en cuenta que esto significa que alguna fórmula de jal podría ser válida bajo una lógica subyacente, mientras que no lo sea bajo otra. Por ejemplo, si la agenda contiene alguna fórmula que es inconsistente en la lógica subyacente (y, por implicación, alguna tautología), entonces se cumple lo siguiente: |=L (i ∧ σ) - para cada perfil de juicio, hay algún ítem de la agenda (tomar una tautología) que tanto el agente i como los jueces de JAR consideran verdadero. Pero esta propiedad no se cumple cuando cada ítem de la agenda es consistente con respecto a la lógica subyacente. Una de esas agendas y la lógica subyacente se discutirán en la Sección 6.4. EJEMPLOS DE EXPRESIVIDAD La no dictadura puede expresarse de la siguiente manera: ND = i∈Σ ¬(σ ↔ i) (1) Lema 1. f |=L ND si y solo si f tiene la propiedad ND1. La independencia puede expresarse de la siguiente manera: IND = o∈O ((o ∧ σ) → (o → σ)) (2) Lema 2. f |=L IND si y solo si f tiene la propiedad IND. La unanimidad puede expresarse de la siguiente manera: UNA = ((1 ∧ · · · ∧ n) → σ) (3) Lema 3. f |=L UNA si y solo si f tiene la propiedad UNA. 4.1 La Paradoja Discursiva Como se ilustra en el Ejemplo 1, la siguiente fórmula expresa la votación mayoritaria proposicional sobre alguna proposición p MV = σ ↔ G⊆Σ,|G|> n 2 i∈G i (4) es decir, la siguiente propiedad de un JAR f y un perfil admisible A1, . . . , An: p ∈ f(A1, . . . , An) ⇔ |{i : p ∈ Ai}| > |{i : p Ai}| f |= MV exactamente si f tiene la propiedad anterior para todos los perfiles de juicio y proposiciones. Sin embargo, tenemos lo siguiente en nuestra lógica. Suponga que la agenda contiene al menos dos fórmulas distintas y su implicación material (es decir, A contiene p, q, p → q para algunos p, q ∈ L(L)). Proposición 1 (Paradoja discursiva). |=L (( MV) → ⊥) cuando hay al menos tres agentes y la agenda contiene al menos dos fórmulas distintas y su implicación material. Prueba. Suponga lo contrario, por ejemplo, que A = {p, p → q, q, ¬p, ¬(p → q), ¬q, . . .} y existe una regla de agregación f sobre A tal que f |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i). Sea γ el perfil de juicio γ = A1, A2, A3 donde A1 = {p, p → q, q, . . . }, A2 = {p, ¬(p → q), ¬q, . . .} y A3 = {¬p, p → q, ¬q, . . . }. Tenemos que f, γ, p |=L (σ ↔ G⊆Σ,|G|> n 2 i∈G i) para cualquier p, entonces f, γ, p |=L σ ↔ G⊆Σ,|G|> n 2 i∈G i. Dado que f, γ, p |=L 1 ∧ 2, se sigue que f, γ, p |=L σ. De manera similar, se sigue que f, γ, p → q |=L σ y f, γ, q |=L ¬σ. En otras palabras, p ∈ f(γ), p → q ∈ f(γ) y q ∈ f(γ). Dado que f(γ) es completo, ¬q ∈ f(γ). Pero eso contradice el hecho de que f(γ) debe ser coherente. La Proposición 1 es una afirmación lógica de una variante del conocido dilema discursivo: si tres agentes están votando sobre las proposiciones p, q y p → q, la votación mayoritaria por proposición podría no arrojar un resultado consistente. 5. AXIOMATIZACIÓN Dada una lógica subyacente L, una agenda finita A sobre L y un conjunto de agentes Σ, la Lógica de Agregación de Juicios (jal(L), o simplemente jal cuando L se entiende) para el lenguaje L(Σ, A), se define en la Tabla 2. ¬(hp ∧ hq) si p q A lo sumo p∈A hp Al menos hp p ∈ A Agenda (hp ∧ ϕ) → (hp → ϕ) Una vez (hp ∧ x) ∨ (hp ∧ x) CpJS todas las instanciaciones de tautologías proposicionales taut (ψ1 → ψ2) → (ψ1 → ψ2) K ψ → ψ T ψ → ψ 4 ¬ψ → ¬ψ 5 (i ∧ ¬j) → o∈O o C ψ ↔ ψ (COMM) De p1, . . . pn L q inferir (hp1 ∧ x) ∧ · · · ∧ (hpn ∧ x) → (hq → x) ∧ (hq → ¬x) Clausura De ϕ → ψ y ϕ inferir ψ MP De ψ inferir ψ Nec Tabla 2: La lógica jal(L) para el lenguaje L(Σ, A). p, pi, q varían sobre la agenda A; φ,ψ,ψi sobre L(Σ, A); x sobre {σ, i : i ∈ Σ}; sobre { , }; i, j sobre Σ; o sobre el conjunto de resultados O. hp significa hq cuando p = ¬q para algún q, de lo contrario significa h¬p. L es la lógica subyacente. Los primeros 5 axiomas representan propiedades de una tabla y de conjuntos de juicios. El axioma \"A lo sumo\" dice que hay como máximo un objeto en la mesa a la vez, y \"Al menos\" dice que siempre tenemos un objeto en la mesa. Axiom Agenda dice que cada punto del orden del día aparecerá en la mesa, mientras que Once dice que cada punto del orden del día solo aparece en la mesa una vez. Se debe tener en cuenta que la conjunción hp ∧ x se lee de la siguiente manera: el ítem p está en la agenda, y x está a favor de ello, o x lo considera verdadero. El axioma CpJS corresponde al requisito de que los conjuntos de juicios sean completos. Se debe tener en cuenta que a partir de Agenda, CsJS y CpJS se deriva el esquema x ∧ ¬x, que indica que todos deben expresar al menos una opinión a favor de algo y en contra de algo. Los axiomas taut − 5 son muy familiares en la <br>lógica modal</br>: reflejan directamente la cuantificación no restringida en la definición de verdad de y. ",
            "candidates": [],
            "error": [
                [
                    ""
                ]
            ]
        }
    }
}